{
  "name": "WorkspaceTypeaheadSearch",
  "fully_qualified_name": "AsanaApi.WorkspaceTypeaheadSearch@0.1.0",
  "description": "Retrieve workspace objects using a typeahead search.\n\nThis tool fetches objects within a workspace via a typeahead search, providing quick, but not exhaustive or highly accurate results. It's useful for implementing auto-completion features by obtaining a compact representation of workspace objects, such as user, project, task, or project_template, ordered by relevance criteria specific to each type.",
  "toolkit": {
    "name": "AsanaApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "search_result_resource_type",
        "required": true,
        "description": "Specify the type of objects to return in the typeahead search. Options: custom_field, goal, project, project_template, portfolio, tag, task, team, user. Only one type can be used at a time.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "custom_field",
            "goal",
            "project",
            "project_template",
            "portfolio",
            "tag",
            "task",
            "team",
            "user"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The type of values the typeahead should return. You can choose from one of the following: `custom_field`, `goal`, `project`, `project_template`, `portfolio`, `tag`, `task`, `team`, and `user`. Note that unlike in the names of endpoints, the types listed here are in singular form (e.g. `task`). Using multiple types is not yet supported."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "resource_type"
      },
      {
        "name": "workspace_id",
        "required": true,
        "description": "Globally unique identifier for the workspace or organization.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Globally unique identifier for the workspace or organization."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "workspace_gid"
      },
      {
        "name": "resource_type",
        "required": false,
        "description": "Specify the type of workspace objects to return, such as 'custom_field', 'portfolio', 'project', 'tag', 'task', or 'user'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "custom_field",
            "portfolio",
            "project",
            "tag",
            "task",
            "user"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "*Deprecated: new integrations should prefer the resource_type field.*"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "type"
      },
      {
        "name": "search_query",
        "required": false,
        "description": "String to search for relevant workspace objects. An empty string will return results.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The string that will be used to search for relevant objects. If an empty string is passed in, the API will return results."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "query"
      },
      {
        "name": "results_count",
        "required": false,
        "description": "The number of results to return, ranging from 1 to 100. Default is 20.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results to return. The default is 20 if this parameter is omitted, with a minimum of 1 and a maximum of 100. If there are fewer results found than requested, all will be returned."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "count"
      },
      {
        "name": "include_optional_fields",
        "required": false,
        "description": "A list of properties to include in the response, set as a comma-separated list to include optional fields in the result.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "opt_fields"
      },
      {
        "name": "enable_pretty_output",
        "required": false,
        "description": "Enable pretty format for the response with proper indentation. Use for debugging due to increased response size, but not recommended for production.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "opt_pretty"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'typeaheadForWorkspace'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-asana",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "workspace.typeahead:read"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the asana API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://app.asana.com/api/1.0/workspaces/{workspace_gid}/typeahead",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "resource_type",
        "tool_parameter_name": "search_result_resource_type",
        "description": "The type of values the typeahead should return. You can choose from one of the following: `custom_field`, `goal`, `project`, `project_template`, `portfolio`, `tag`, `task`, `team`, and `user`. Note that unlike in the names of endpoints, the types listed here are in singular form (e.g. `task`). Using multiple types is not yet supported.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "custom_field",
            "goal",
            "project",
            "project_template",
            "portfolio",
            "tag",
            "task",
            "team",
            "user"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The type of values the typeahead should return. You can choose from one of the following: `custom_field`, `goal`, `project`, `project_template`, `portfolio`, `tag`, `task`, `team`, and `user`. Note that unlike in the names of endpoints, the types listed here are in singular form (e.g. `task`). Using multiple types is not yet supported."
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": "user",
        "documentation_urls": []
      },
      {
        "name": "type",
        "tool_parameter_name": "resource_type",
        "description": "*Deprecated: new integrations should prefer the resource_type field.*",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "custom_field",
            "portfolio",
            "project",
            "tag",
            "task",
            "user"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "*Deprecated: new integrations should prefer the resource_type field.*"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "user",
        "documentation_urls": []
      },
      {
        "name": "query",
        "tool_parameter_name": "search_query",
        "description": "The string that will be used to search for relevant objects. If an empty string is passed in, the API will return results.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The string that will be used to search for relevant objects. If an empty string is passed in, the API will return results."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "count",
        "tool_parameter_name": "results_count",
        "description": "The number of results to return. The default is 20 if this parameter is omitted, with a minimum of 1 and a maximum of 100. If there are fewer results found than requested, all will be returned.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results to return. The default is 20 if this parameter is omitted, with a minimum of 1 and a maximum of 100. If there are fewer results found than requested, all will be returned."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "opt_pretty",
        "tool_parameter_name": "enable_pretty_output",
        "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "opt_fields",
        "tool_parameter_name": "include_optional_fields",
        "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "workspace_gid",
        "tool_parameter_name": "workspace_id",
        "description": "Globally unique identifier for the workspace or organization.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Globally unique identifier for the workspace or organization."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
