{
  "name": "AddItemToPortfolio",
  "fully_qualified_name": "AsanaApi.AddItemToPortfolio@0.1.0",
  "description": "Add an item to a portfolio in Asana.\n\nUse this tool to add an item to a specified portfolio in Asana. Requires 'portfolios:write' permission.",
  "toolkit": {
    "name": "AsanaApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "portfolio_unique_id",
        "required": true,
        "description": "Globally unique identifier for the portfolio to which the item will be added.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Globally unique identifier for the portfolio."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "portfolio_gid"
      },
      {
        "name": "item_to_add_to_portfolio",
        "required": false,
        "description": "The ID of the item to be added to the Asana portfolio.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The item to add to the portfolio."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.item"
      },
      {
        "name": "insert_item_before_id",
        "required": false,
        "description": "ID of an existing portfolio item. The new item will be placed before this item. Cannot be used with `insert_after_id`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An id of an item in this portfolio. The new item will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.insert_before"
      },
      {
        "name": "add_after_item_id",
        "required": false,
        "description": "ID of an item in the portfolio where the new item will be added after. Cannot be used with 'add_before_item_id'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An id of an item in this portfolio. The new item will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.insert_after"
      },
      {
        "name": "enable_pretty_output",
        "required": false,
        "description": "Enable pretty JSON formatting for debugging. This increases response size and processing time.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "opt_pretty"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'addItemForPortfolio'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-asana",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "portfolios:write"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the asana API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://app.asana.com/api/1.0/portfolios/{portfolio_gid}/addItem",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "opt_pretty",
        "tool_parameter_name": "enable_pretty_output",
        "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "portfolio_gid",
        "tool_parameter_name": "portfolio_unique_id",
        "description": "Globally unique identifier for the portfolio.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Globally unique identifier for the portfolio."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.item",
        "tool_parameter_name": "item_to_add_to_portfolio",
        "description": "The item to add to the portfolio.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The item to add to the portfolio."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.insert_before",
        "tool_parameter_name": "insert_item_before_id",
        "description": "An id of an item in this portfolio. The new item will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An id of an item in this portfolio. The new item will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.insert_after",
        "tool_parameter_name": "add_after_item_id",
        "description": "An id of an item in this portfolio. The new item will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An id of an item in this portfolio. The new item will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"description\": \"Information about the item being inserted.\",\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"item\"\n            ],\n            \"properties\": {\n              \"item\": {\n                \"description\": \"The item to add to the portfolio.\",\n                \"type\": \"string\",\n                \"example\": \"1331\"\n              },\n              \"insert_before\": {\n                \"description\": \"An id of an item in this portfolio. The new item will be added before the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.\",\n                \"type\": \"string\",\n                \"example\": \"1331\"\n              },\n              \"insert_after\": {\n                \"description\": \"An id of an item in this portfolio. The new item will be added after the one specified here. `insert_before` and `insert_after` parameters cannot both be specified.\",\n                \"type\": \"string\",\n                \"example\": \"1331\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
