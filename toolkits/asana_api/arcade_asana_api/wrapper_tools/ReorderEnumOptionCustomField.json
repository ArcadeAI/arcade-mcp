{
  "name": "ReorderEnumOptionCustomField",
  "fully_qualified_name": "AsanaApi.ReorderEnumOptionCustomField@0.1.0",
  "description": "Reorder enum options in a custom field.\n\nMoves an enum option within a custom field to a specified position relative to another option. Locked fields can only be edited by the locker.",
  "toolkit": {
    "name": "AsanaApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "custom_field_id",
        "required": true,
        "description": "Globally unique identifier for the custom field to be modified.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Globally unique identifier for the custom field."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "custom_field_gid"
      },
      {
        "name": "include_optional_properties",
        "required": false,
        "description": "A list of resource properties to include in the response, which are excluded by default. This should be a list of strings.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "opt_fields"
      },
      {
        "name": "enum_option_gid_to_relocate",
        "required": false,
        "description": "The globally unique identifier (GID) of the enum option to relocate within the custom field.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The gid of the enum option to relocate."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.enum_option"
      },
      {
        "name": "insert_before_enum_option_gid",
        "required": false,
        "description": "GID of an existing enum option before which the new option should be inserted. Cannot be used with after_enum_option.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.before_enum_option"
      },
      {
        "name": "insert_after_enum_option",
        "required": false,
        "description": "The ID of an existing enum option after which the new option should be inserted. Cannot be used with 'insert_before_enum_option'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "data.after_enum_option"
      },
      {
        "name": "enable_pretty_output",
        "required": false,
        "description": "Enable pretty output for a more readable JSON response format, useful for debugging.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "opt_pretty"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'insertEnumOptionForCustomField'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-asana",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "custom_fields:write"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the asana API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://app.asana.com/api/1.0/custom_fields/{custom_field_gid}/enum_options/insert",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "opt_pretty",
        "tool_parameter_name": "enable_pretty_output",
        "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "opt_fields",
        "tool_parameter_name": "include_optional_properties",
        "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "custom_field_gid",
        "tool_parameter_name": "custom_field_id",
        "description": "Globally unique identifier for the custom field.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Globally unique identifier for the custom field."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.enum_option",
        "tool_parameter_name": "enum_option_gid_to_relocate",
        "description": "The gid of the enum option to relocate.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The gid of the enum option to relocate."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.before_enum_option",
        "tool_parameter_name": "insert_before_enum_option_gid",
        "description": "An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "data.after_enum_option",
        "tool_parameter_name": "insert_after_enum_option",
        "description": "An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"description\": \"The enum option object to create.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"enum_option\"\n            ],\n            \"properties\": {\n              \"enum_option\": {\n                \"type\": \"string\",\n                \"description\": \"The gid of the enum option to relocate.\",\n                \"example\": \"97285\"\n              },\n              \"before_enum_option\": {\n                \"type\": \"string\",\n                \"description\": \"An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option.\",\n                \"example\": \"12345\"\n              },\n              \"after_enum_option\": {\n                \"type\": \"string\",\n                \"description\": \"An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option.\",\n                \"example\": \"12345\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
