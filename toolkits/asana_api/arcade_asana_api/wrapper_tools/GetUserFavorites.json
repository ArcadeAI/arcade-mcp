{
  "name": "GetUserFavorites",
  "fully_qualified_name": "AsanaApi.GetUserFavorites@0.1.0",
  "description": "Retrieve a user's favorites from a specified Asana workspace.\n\nThis tool retrieves all of a user's favorites within a specified Asana workspace and of a given type. The results are ordered as they appear in the user's Asana sidebar and are limited to the current user associated with the authentication token.",
  "toolkit": {
    "name": "AsanaApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "favorites_resource_type",
        "required": true,
        "description": "Specifies the type of favorites to return (e.g., 'portfolio', 'project').",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "portfolio",
            "project",
            "tag",
            "task",
            "user",
            "project_template"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The resource type of favorites to be returned."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "resource_type"
      },
      {
        "name": "workspace_id",
        "required": true,
        "description": "The unique identifier of the Asana workspace to retrieve favorites from.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The workspace in which to get favorites."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "workspace"
      },
      {
        "name": "user_identifier",
        "required": true,
        "description": "String to identify a user: 'me', an email, or a user GID.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "user_gid"
      },
      {
        "name": "results_per_page",
        "required": false,
        "description": "Specifies the number of objects to return per page, between 1 and 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Results per page.\nThe number of objects to return per page. The value must be between 1 and 100."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "pagination_offset",
        "required": false,
        "description": "An offset token for pagination. Use a token returned from a previous request to navigate pages. If not provided, the first page is returned.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Offset token.\nAn offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results.\n*Note: You can only pass in an offset that was returned to you via a previously paginated request.*"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "offset"
      },
      {
        "name": "include_optional_fields",
        "required": false,
        "description": "Specify a list of optional properties to include in the response, separated by commas.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "opt_fields"
      },
      {
        "name": "pretty_output",
        "required": false,
        "description": "Set to true for readable, formatted output with line breaks and indentation, ideal for debugging.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "opt_pretty"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'getFavoritesForUser'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-asana",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "users:read"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the asana API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://app.asana.com/api/1.0/users/{user_gid}/favorites",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "opt_pretty",
        "tool_parameter_name": "pretty_output",
        "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Provides \u201cpretty\u201d output.\nProvides the response in a \u201cpretty\u201d format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "limit",
        "tool_parameter_name": "results_per_page",
        "description": "Results per page.\nThe number of objects to return per page. The value must be between 1 and 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Results per page.\nThe number of objects to return per page. The value must be between 1 and 100."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "offset",
        "tool_parameter_name": "pagination_offset",
        "description": "Offset token.\nAn offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results.\n*Note: You can only pass in an offset that was returned to you via a previously paginated request.*",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Offset token.\nAn offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results.\n*Note: You can only pass in an offset that was returned to you via a previously paginated request.*"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "resource_type",
        "tool_parameter_name": "favorites_resource_type",
        "description": "The resource type of favorites to be returned.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "portfolio",
            "project",
            "tag",
            "task",
            "user",
            "project_template"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The resource type of favorites to be returned."
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": "project",
        "documentation_urls": []
      },
      {
        "name": "workspace",
        "tool_parameter_name": "workspace_id",
        "description": "The workspace in which to get favorites.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The workspace in which to get favorites."
        },
        "accepted_as": "query",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "opt_fields",
        "tool_parameter_name": "include_optional_fields",
        "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "This endpoint returns a resource which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "user_gid",
        "tool_parameter_name": "user_identifier",
        "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A string identifying a user. This can either be the string \"me\", an email, or the gid of a user."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
