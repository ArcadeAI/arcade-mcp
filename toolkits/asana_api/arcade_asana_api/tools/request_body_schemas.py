"""Request Body Schemas for API Tools

DO NOT EDIT THIS MODULE DIRECTLY.

THIS MODULE WAS AUTO-GENERATED AND CONTAINS OpenAPI REQUEST BODY SCHEMAS
FOR TOOLS WITH COMPLEX REQUEST BODIES. ANY CHANGES TO THIS MODULE WILL
BE OVERWRITTEN BY THE TRANSPILER.
"""

from typing import Any

REQUEST_BODY_SCHEMAS: dict[str, Any] = {
    "UPDATEALLOCATION": '{"type": "object", "properties": {"data": {"allOf": [{"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "allocation", "x-insert-after": "gid"}, "start_date": {"type": "string", "format": "date", "description": "The localized day on which the allocation starts.", "example": "2024-02-28"}, "end_date": {"type": "string", "format": "date", "description": "The localized day on which the allocation ends.", "example": "2024-02-28"}, "effort": {"type": "object", "nullable": true, "description": "The amount of time associated with the allocation, represented as a percentage or number of hours", "properties": {"type": {"type": "string", "description": "The units used for tracking effort on an allocation, either "hours" or "percent".", "enum": ["hours", "percent"]}, "value": {"type": "number", "description": "The numeric effort value on the allocation.", "example": 50}}}}}, {"type": "object", "properties": {"assignee": {"type": "string", "description": "Globally unique identifier for the user or placeholder assigned to the allocation."}, "parent": {"type": "string", "description": "Globally unique identifier for the project the allocation is on."}}}]}}}',  # noqa: E501
    "CREATEALLOCATION": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "allocation", "x-insert-after": "gid"}, "start_date": {"type": "string", "format": "date", "description": "The localized day on which the allocation starts.", "example": "2024-02-28"}, "end_date": {"type": "string", "format": "date", "description": "The localized day on which the allocation ends.", "example": "2024-02-28"}, "effort": {"type": "object", "nullable": true, "description": "The amount of time associated with the allocation, represented as a percentage or number of hours", "properties": {"type": {"type": "string", "description": "The units used for tracking effort on an allocation, either "hours" or "percent".", "enum": ["hours", "percent"]}, "value": {"type": "number", "description": "The numeric effort value on the allocation.", "example": 50}}}}}, {"type": "object", "properties": {"assignee": {"type": "string", "description": "Globally unique identifier for the user or placeholder assigned to the allocation."}, "parent": {"type": "string", "description": "Globally unique identifier for the project the allocation is on."}}}]}, {"type": "object", "required": ["assignee", "end_date", "parent", "start_date"]}]}}}',  # noqa: E501
    "CREATEPARALLELREQUESTSASANA": '{"type": "object", "properties": {"data": {"description": "A request object for use in a batch request.", "type": "object", "properties": {"actions": {"type": "array", "items": {"description": "An action object for use in a batch request.", "type": "object", "properties": {"relative_path": {"description": "The path of the desired endpoint relative to the API\u2019s base URL. Query parameters are not accepted here; put them in `data` instead.", "type": "string", "example": "/tasks/123"}, "method": {"description": "The HTTP method you wish to emulate for the action.", "type": "string", "enum": ["get", "post", "put", "delete", "patch", "head"], "example": "get"}, "data": {"description": "For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.", "type": "object", "example": {"assignee": "me", "workspace": "1337"}}, "options": {"description": "Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. \u201cPretty\u201d JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.", "type": "object", "properties": {"limit": {"description": "Pagination limit for the request.", "type": "integer", "example": 50}, "offset": {"description": "Pagination offset for the request.", "type": "integer", "example": "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9"}, "fields": {"description": "The fields to retrieve in the request.", "type": "array", "items": {"type": "string"}, "example": ["name", "gid", "notes", "completed"]}}, "example": {"limit": 3, "fields": ["name", "notes", "completed"]}}}, "required": ["relative_path", "method"]}}}}}}',  # noqa: E501
    "CREATECUSTOMFIELDINWORKSPACE": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"allOf": [{"description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\n\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field", "x-insert-after": "gid"}, "name": {"description": "The name of the custom field.", "type": "string", "example": "Status"}, "type": {"description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people"]}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "enabled": {"description": "*Conditional*. This field applies only to [custom field values](/docs/custom-fields-guide#/accessing-custom-field-values-on-tasks-or-projects) and is not available for [custom field definitions](/docs/custom-fields-guide#/accessing-custom-field-definitions).\nDetermines if the custom field is enabled or not. For more details, see the [Custom Fields documentation](/docs/custom-fields-guide#/enabled-and-disabled-values).", "type": "boolean", "readOnly": true, "example": true}, "representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "date_value": {"description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.", "type": "object", "nullable": true, "properties": {"date": {"type": "string", "description": "A string representing the date in YYYY-MM-DD format.", "example": "2024-08-23"}, "date_time": {"type": "string", "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.", "example": "2024-08-23T22:00:00.000Z"}}}, "enum_value": {"allOf": [{"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}, {"type": "object", "nullable": true, "description": "*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an `enum` custom field."}]}, "multi_enum_values": {"description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "number_value": {"description": "*Conditional*. This number is the value of a `number` custom field.", "type": "number", "nullable": true, "example": 5.2}, "text_value": {"description": "*Conditional*. This string is the value of a `text` custom field.", "type": "string", "nullable": true, "example": "Some Value"}, "display_value": {"description": "A string representation for the value of the custom field. Integrations that don\'t require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.", "type": "string", "readOnly": true, "example": "blue", "nullable": true}}}, {"type": "object", "properties": {"description": {"description": "[Opt In](/docs/inputoutput-options). The description of the custom field.", "type": "string", "example": "Development team priority"}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "precision": {"description": "Only relevant for custom fields of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\nThe identifier format will always have a precision of 0.", "type": "integer", "example": 2}, "format": {"description": "The format of this custom field.", "type": "string", "enum": ["currency", "identifier", "percentage", "custom", "duration", "none"], "example": "custom"}, "currency_code": {"description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.", "type": "string", "nullable": true, "example": "EUR"}, "custom_label": {"description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "example": "gold pieces"}, "custom_label_position": {"description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "enum": ["prefix", "suffix", null], "example": "suffix"}, "is_global_to_workspace": {"description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.", "type": "boolean", "example": true, "readOnly": true}, "has_notifications_enabled": {"description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.", "type": "boolean", "example": true}, "asana_created_field": {"description": "*Conditional*. A unique identifier to associate this field with the template source of truth.", "type": "string", "readOnly": true, "nullable": true, "enum": ["a_v_requirements", "account_name", "actionable", "align_shipping_link", "align_status", "allotted_time", "appointment", "approval_stage", "approved", "article_series", "board_committee", "browser", "campaign_audience", "campaign_project_status", "campaign_regions", "channel_primary", "client_topic_type", "complete_by", "contact", "contact_email_address", "content_channels", "content_channels_needed", "content_stage", "content_type", "contract", "contract_status", "cost", "creation_stage", "creative_channel", "creative_needed", "creative_needs", "data_sensitivity", "deal_size", "delivery_appt", "delivery_appt_date", "department", "department_responsible", "design_request_needed", "design_request_type", "discussion_category", "do_this_task", "editorial_content_status", "editorial_content_tag", "editorial_content_type", "effort", "effort_level", "est_completion_date", "estimated_time", "estimated_value", "expected_cost", "external_steps_needed", "favorite_idea", "feedback_type", "financial", "funding_amount", "grant_application_process", "hiring_candidate_status", "idea_status", "ids_link", "ids_patient_link", "implementation_stage", "insurance", "interview_area", "interview_question_score", "itero_scan_link", "job_s_applied_to", "lab", "launch_status", "lead_status", "localization_language", "localization_market_team", "localization_status", "meeting_minutes", "meeting_needed", "minutes", "mrr", "must_localize", "name_of_foundation", "need_to_follow_up", "next_appointment", "next_steps_sales", "num_people", "number_of_user_reports", "office_location", "onboarding_activity", "owner", "participants_needed", "patient_date_of_birth", "patient_email", "patient_phone", "patient_status", "phone_number", "planning_category", "point_of_contact", "position", "post_format", "prescription", "priority", "priority_level", "product", "product_stage", "progress", "project_size", "project_status", "proposed_budget", "publish_status", "reason_for_scan", "referral", "request_type", "research_status", "responsible_department", "responsible_team", "risk_assessment_status", "room_name", "sales_counterpart", "sentiment", "shipping_link", "social_channels", "stage", "status", "status_design", "status_of_initiative", "system_setup", "task_progress", "team", "team_marketing", "team_responsible", "time_it_takes_to_complete_tasks", "timeframe", "treatment_type", "type_work_requests_it", "use_agency", "user_name", "vendor_category", "vendor_type", "word_count", null], "example": "priority"}}}]}, {"type": "object", "required": ["workspace"], "properties": {"workspace": {"type": "string", "description": "*Create-Only* The workspace to create a custom field in.", "example": "1331"}, "owned_by_app": {"type": "boolean", "description": "*Allow-listed*. Instructs the API that this Custom Field is app-owned. This parameter is allow-listed to specific apps at this point in time. For apps that are not allow-listed, providing this parameter will result in a `403 Forbidden`."}, "people_value": {"description": "*Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.", "type": "array", "items": {"type": "string", "description": "The GID of a user."}, "example": ["12345"]}, "reference_value": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of GIDs reflects the objects to be written to a `reference` custom field. Note that *write* operations will replace existing objects (if any) in the custom field with the objects specified in this array.", "type": "array", "items": {"type": "string", "description": "The GID of an object."}, "example": ["12345"]}}}]}, {"type": "object", "required": ["resource_subtype"], "properties": {"resource_subtype": {"description": "The type of the custom field. Must be one of the given values.", "type": "string", "example": "text", "enum": ["text", "enum", "multi_enum", "number", "date", "people", "reference"]}}}]}}}',  # noqa: E501
    "UPDATEASANACUSTOMFIELD": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\n\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field", "x-insert-after": "gid"}, "name": {"description": "The name of the custom field.", "type": "string", "example": "Status"}, "type": {"description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people"]}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "enabled": {"description": "*Conditional*. This field applies only to [custom field values](/docs/custom-fields-guide#/accessing-custom-field-values-on-tasks-or-projects) and is not available for [custom field definitions](/docs/custom-fields-guide#/accessing-custom-field-definitions).\nDetermines if the custom field is enabled or not. For more details, see the [Custom Fields documentation](/docs/custom-fields-guide#/enabled-and-disabled-values).", "type": "boolean", "readOnly": true, "example": true}, "representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "date_value": {"description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.", "type": "object", "nullable": true, "properties": {"date": {"type": "string", "description": "A string representing the date in YYYY-MM-DD format.", "example": "2024-08-23"}, "date_time": {"type": "string", "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.", "example": "2024-08-23T22:00:00.000Z"}}}, "enum_value": {"allOf": [{"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}, {"type": "object", "nullable": true, "description": "*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an `enum` custom field."}]}, "multi_enum_values": {"description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "number_value": {"description": "*Conditional*. This number is the value of a `number` custom field.", "type": "number", "nullable": true, "example": 5.2}, "text_value": {"description": "*Conditional*. This string is the value of a `text` custom field.", "type": "string", "nullable": true, "example": "Some Value"}, "display_value": {"description": "A string representation for the value of the custom field. Integrations that don\'t require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.", "type": "string", "readOnly": true, "example": "blue", "nullable": true}}}, {"type": "object", "properties": {"description": {"description": "[Opt In](/docs/inputoutput-options). The description of the custom field.", "type": "string", "example": "Development team priority"}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "precision": {"description": "Only relevant for custom fields of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\nThe identifier format will always have a precision of 0.", "type": "integer", "example": 2}, "format": {"description": "The format of this custom field.", "type": "string", "enum": ["currency", "identifier", "percentage", "custom", "duration", "none"], "example": "custom"}, "currency_code": {"description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.", "type": "string", "nullable": true, "example": "EUR"}, "custom_label": {"description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "example": "gold pieces"}, "custom_label_position": {"description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "enum": ["prefix", "suffix", null], "example": "suffix"}, "is_global_to_workspace": {"description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.", "type": "boolean", "example": true, "readOnly": true}, "has_notifications_enabled": {"description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.", "type": "boolean", "example": true}, "asana_created_field": {"description": "*Conditional*. A unique identifier to associate this field with the template source of truth.", "type": "string", "readOnly": true, "nullable": true, "enum": ["a_v_requirements", "account_name", "actionable", "align_shipping_link", "align_status", "allotted_time", "appointment", "approval_stage", "approved", "article_series", "board_committee", "browser", "campaign_audience", "campaign_project_status", "campaign_regions", "channel_primary", "client_topic_type", "complete_by", "contact", "contact_email_address", "content_channels", "content_channels_needed", "content_stage", "content_type", "contract", "contract_status", "cost", "creation_stage", "creative_channel", "creative_needed", "creative_needs", "data_sensitivity", "deal_size", "delivery_appt", "delivery_appt_date", "department", "department_responsible", "design_request_needed", "design_request_type", "discussion_category", "do_this_task", "editorial_content_status", "editorial_content_tag", "editorial_content_type", "effort", "effort_level", "est_completion_date", "estimated_time", "estimated_value", "expected_cost", "external_steps_needed", "favorite_idea", "feedback_type", "financial", "funding_amount", "grant_application_process", "hiring_candidate_status", "idea_status", "ids_link", "ids_patient_link", "implementation_stage", "insurance", "interview_area", "interview_question_score", "itero_scan_link", "job_s_applied_to", "lab", "launch_status", "lead_status", "localization_language", "localization_market_team", "localization_status", "meeting_minutes", "meeting_needed", "minutes", "mrr", "must_localize", "name_of_foundation", "need_to_follow_up", "next_appointment", "next_steps_sales", "num_people", "number_of_user_reports", "office_location", "onboarding_activity", "owner", "participants_needed", "patient_date_of_birth", "patient_email", "patient_phone", "patient_status", "phone_number", "planning_category", "point_of_contact", "position", "post_format", "prescription", "priority", "priority_level", "product", "product_stage", "progress", "project_size", "project_status", "proposed_budget", "publish_status", "reason_for_scan", "referral", "request_type", "research_status", "responsible_department", "responsible_team", "risk_assessment_status", "room_name", "sales_counterpart", "sentiment", "shipping_link", "social_channels", "stage", "status", "status_design", "status_of_initiative", "system_setup", "task_progress", "team", "team_marketing", "team_responsible", "time_it_takes_to_complete_tasks", "timeframe", "treatment_type", "type_work_requests_it", "use_agency", "user_name", "vendor_category", "vendor_type", "word_count", null], "example": "priority"}}}]}, {"type": "object", "required": ["workspace"], "properties": {"workspace": {"type": "string", "description": "*Create-Only* The workspace to create a custom field in.", "example": "1331"}, "owned_by_app": {"type": "boolean", "description": "*Allow-listed*. Instructs the API that this Custom Field is app-owned. This parameter is allow-listed to specific apps at this point in time. For apps that are not allow-listed, providing this parameter will result in a `403 Forbidden`."}, "people_value": {"description": "*Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.", "type": "array", "items": {"type": "string", "description": "The GID of a user."}, "example": ["12345"]}, "reference_value": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of GIDs reflects the objects to be written to a `reference` custom field. Note that *write* operations will replace existing objects (if any) in the custom field with the objects specified in this array.", "type": "array", "items": {"type": "string", "description": "The GID of an object."}, "example": ["12345"]}}}]}}}',  # noqa: E501
    "ADDENUMOPTIONTOCUSTOMFIELD": '{"type": "object", "properties": {"data": {"allOf": [{"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}, {"type": "object", "properties": {"insert_before": {"type": "string", "description": "An existing enum option within this custom field before which the new enum option should be inserted. Cannot be provided together with after_enum_option.", "example": "12345"}, "insert_after": {"type": "string", "description": "An existing enum option within this custom field after which the new enum option should be inserted. Cannot be provided together with before_enum_option.", "example": "12345"}}}]}}}',  # noqa: E501
    "INITIATEBULKRESOURCEEXPORT": '{"type": "object", "properties": {"data": {"type": "object", "description": "A *resource_export* request starts a job to bulk export objects for one or more resources.", "properties": {"workspace": {"type": "string", "description": "Gid of a workspace.", "example": "12345"}, "export_request_parameters": {"type": "array", "description": "An object containing the parameters for the export request. The keys of this object are the GIDs of the resources to be exported. The values are objects with additional parameters for each resource.", "items": {"type": "object", "properties": {"resource_type": {"type": "string", "description": "The type of the resource to be exported. This can be a task, team, or message.", "example": "task"}, "filters": {"type": "object", "description": "Filters to apply to a resource that will be exported. These filters can be used to narrow down the resources that are included in the export.", "properties": {"assigned_by.any": {"description": "Filter by the users who assigned the resource. This array accepts a list of user GIDs. This is only applicable to tasks.", "type": "array", "items": {"type": "string", "example": "12345"}}, "assignee.any": {"description": "Filter by the users who are assigned to the resource. This array accepts a list of user GIDs. This is only applicable to tasks.", "type": "array", "items": {"type": "string", "example": "12345"}}, "commented_on_by.any": {"description": "Filter by the users who commented on the resource. This array accepts a list of user GIDs.", "type": "array", "items": {"type": "string", "example": "12345"}}, "created_at.after": {"description": "Filter results to resources created after a specified date and time.", "type": "string", "format": "date-time", "example": "2023-01-01T00:00:00Z"}, "created_at.before": {"description": "Filter results to resources created before a specified date and time.", "type": "string", "format": "date-time", "example": "2023-01-01T00:00:00Z"}, "created_by.any": {"description": "Filter by the users who created the resource. This array accepts a list of user GIDs.", "type": "array", "items": {"type": "string", "example": "12345"}}, "followers.any": {"description": "Filter by the users who are following the resource. This array accepts a list of user GIDs.", "type": "array", "items": {"type": "string", "example": "12345"}}, "liked_by.any": {"description": "Filter by the users who liked the resource. This array accepts a list of user GIDs.", "type": "array", "items": {"type": "string", "example": "12345"}}, "modified_at.after": {"description": "Filter results to resources modified after a specified date and time.", "type": "string", "format": "date-time", "example": "2023-01-01T00:00:00Z"}, "modified_at.before": {"description": "Filter results to resources modified before a specified date and time.", "type": "string", "format": "date-time", "example": "2023-01-01T00:00:00Z"}}}, "fields": {"type": "array", "description": "An array of fields to include for the resource type. If not provided, all non-optional fields for the resource type will be included. This conforms to the fields optional parameter available for all Asana endpoints which is documented [here](https://developers.asana.com/docs/inputoutput-options)", "items": {"type": "string", "example": "gid"}}}}}}}}}',  # noqa: E501
    "UPDATEGOALRELATIONSHIP": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *goal relationship* is an object representing the relationship between a goal and another goal, a project, a task, or a portfolio.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "goal_relationship", "x-insert-after": "gid"}, "resource_subtype": {"description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.", "type": "string", "readOnly": true, "example": "subgoal", "enum": ["subgoal", "supporting_work"]}, "supporting_resource": {"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "readOnly": true, "description": "The supporting resource that supports the goal. This can be either a project, task, portfolio, or goal."}]}, "contribution_weight": {"description": "The weight that the supporting resource\'s progress contributes to the supported goal\'s progress. This can be 0, 1, or any value in between.", "type": "number", "example": 1.0}}}, {"type": "object", "properties": {"supported_goal": {"allOf": [{"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "goal", "x-insert-after": "gid"}, "name": {"type": "string", "description": "The name of the goal.", "example": "Grow web traffic by 30%"}, "owner": {"allOf": [{"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, {"type": "object", "nullable": true}]}}}, {"type": "object", "readOnly": true, "description": "The goal that the supporting resource supports."}]}}}]}, {"type": "object"}]}}}',  # noqa: E501
    "UPDATEASANAGOAL": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "goal", "x-insert-after": "gid"}, "name": {"type": "string", "description": "The name of the goal.", "example": "Grow web traffic by 30%"}, "html_notes": {"type": "string", "description": "The notes of the goal with formatting as HTML.", "example": "<body>Start building brand awareness.</body>"}, "notes": {"type": "string", "description": "Free-form textual information associated with the goal (i.e. its description).", "example": "Start building brand awareness."}, "due_on": {"type": "string", "description": "The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.", "example": "2019-09-15", "nullable": true}, "start_on": {"type": "string", "description": "The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date.", "example": "2019-09-14", "nullable": true}, "is_workspace_level": {"type": "boolean", "description": "*Conditional*. This property is only present when the `workspace` provided is an organization. Whether the goal belongs to the `workspace` (and is listed as part of the workspace\u2019s goals) or not. If it isn\u2019t a workspace-level goal, it is a team-level goal, and is associated with the goal\u2019s team.", "example": true}, "liked": {"type": "boolean", "description": "True if the goal is liked by the authorized user, false if not.", "example": false}}}, {"type": "object", "properties": {"team": {"type": "string", "description": "*Conditional*. This property is only present when the `workspace` provided is an organization.", "example": "12345", "nullable": true}, "workspace": {"type": "string", "description": "The `gid` of a workspace.", "example": "12345"}, "time_period": {"type": "string", "description": "The `gid` of a time period.", "example": "12345", "nullable": true}, "owner": {"type": "string", "description": "The `gid` of a user.", "example": "12345", "nullable": true}}}]}, {"type": "object", "properties": {"status": {"type": "string", "description": "The current status of this goal. When the goal is open, its status can be `green`, `yellow`, and `red` to reflect "On Track", "At Risk", and "Off Track", respectively. When the goal is closed, the value can be `missed`, `achieved`, `partial`, or `dropped`.\n*Note* you can only write to this property if `metric` is set.", "example": "green", "nullable": true}}}]}}}',  # noqa: E501
    "CREATEASANAGOAL": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "goal", "x-insert-after": "gid"}, "name": {"type": "string", "description": "The name of the goal.", "example": "Grow web traffic by 30%"}, "html_notes": {"type": "string", "description": "The notes of the goal with formatting as HTML.", "example": "<body>Start building brand awareness.</body>"}, "notes": {"type": "string", "description": "Free-form textual information associated with the goal (i.e. its description).", "example": "Start building brand awareness."}, "due_on": {"type": "string", "description": "The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.", "example": "2019-09-15", "nullable": true}, "start_on": {"type": "string", "description": "The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date.", "example": "2019-09-14", "nullable": true}, "is_workspace_level": {"type": "boolean", "description": "*Conditional*. This property is only present when the `workspace` provided is an organization. Whether the goal belongs to the `workspace` (and is listed as part of the workspace\u2019s goals) or not. If it isn\u2019t a workspace-level goal, it is a team-level goal, and is associated with the goal\u2019s team.", "example": true}, "liked": {"type": "boolean", "description": "True if the goal is liked by the authorized user, false if not.", "example": false}}}, {"type": "object", "properties": {"team": {"type": "string", "description": "*Conditional*. This property is only present when the `workspace` provided is an organization.", "example": "12345", "nullable": true}, "workspace": {"type": "string", "description": "The `gid` of a workspace.", "example": "12345"}, "time_period": {"type": "string", "description": "The `gid` of a time period.", "example": "12345", "nullable": true}, "owner": {"type": "string", "description": "The `gid` of a user.", "example": "12345", "nullable": true}}}]}, {"type": "object", "properties": {"followers": {"type": "array", "items": {"type": "string", "description": "The `gid` of a user."}, "example": ["12345"]}}}]}}}',  # noqa: E501
    "CREATEGOALMETRIC": '{"type": "object", "properties": {"data": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}, "resource_subtype": {"description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.", "type": "string", "readOnly": true, "example": "number", "enum": ["number"]}, "precision": {"description": "*Conditional*. Only relevant for goal metrics of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.", "type": "integer", "example": 2}, "unit": {"description": "A supported unit of measure for the goal metric, or none.", "type": "string", "enum": ["none", "currency", "percentage"]}, "currency_code": {"description": "ISO 4217 currency code to format this custom field. This will be null if the `unit` is not `currency`.", "type": "string", "nullable": true, "example": "EUR"}, "initial_number_value": {"description": "This number is the start value of a goal metric of type number.", "type": "number", "example": 5.2}, "target_number_value": {"description": "This number is the end value of a goal metric of type number. This number cannot equal `initial_number_value`.", "type": "number", "example": 10.2}, "current_number_value": {"description": "This number is the current value of a goal metric of type number.", "type": "number", "example": 8.12}, "current_display_value": {"description": "This string is the current value of a goal metric of type string.", "type": "string", "readOnly": true, "example": "8.12"}, "progress_source": {"description": "This field defines how the progress value of a goal metric is being calculated. A goal\'s progress can be provided manually by the user, calculated automatically from contributing subgoals, projects, or tasks, or managed by an integration with an external data source, such as Salesforce.", "type": "string", "enum": ["manual", "subgoal_progress", "project_task_completion", "project_milestone_completion", "task_completion", "external"], "example": "manual"}, "is_custom_weight": {"description": "*Conditional*. Only relevant if `metric.progress_source` is one of `subgoal_progress`, `project_task_completion`, `project_milestone_completion`, or `task_completion`. If true, we use the supporting object\'s custom weight to calculate the goal\'s progress. If false, we treat all supporting objects as equally weighted", "type": "boolean", "example": false}}}}}',  # noqa: E501
    "CREATEASANAMEMBERSHIP": '{"type": "object", "properties": {"data": {"allOf": [{"type": "object", "properties": {"access_level": {"description": "Sets the access level for the member. Goals can have access levels `viewer`, `commenter`, `editor` or `admin` (`viewer` and `admin` are currently only available for Goals when you include the `Asana-Enable: goal_sals_api` change flag header). Projects can have access levels `admin`, `editor` or `commenter`. Portfolios can have access levels `admin`, `editor` or `viewer`. Custom Fields can have access levels `admin`, `editor` or `user`.", "type": "string", "example": "editor"}}}, {"type": "object", "properties": {"member": {"description": "The gid of the user or team.", "type": "string", "example": 12345}, "parent": {"description": "The gid of the `goal`, `project`, or `portfolio` to add the member to.", "type": "string", "example": "987654"}, "role": {"description": "*Deprecated: new integrations should use access_level* The role given to the member. Optional argument, will default to `commenter` for goals and the default project role for projects. Can be `editor` or `commenter` for goals. Can be `admin`,`editor` or `commenter` for projects.", "type": "string", "deprecated": true, "example": "editor"}}}]}}}',  # noqa: E501
    "CREATEASANAPORTFOLIO": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *portfolio* gives a high-level overview of the status of multiple initiatives in Asana. Portfolios provide a dashboard overview of the state of multiple projects, including a progress report and the most recent [project status](/reference/project-statuses) update.\nPortfolios have some restrictions on size. Each portfolio has a max of 1500 items and, like projects, a max of 20 custom fields.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "portfolio", "x-insert-after": "gid"}, "name": {"description": "The name of the portfolio.", "type": "string", "example": "Bug Portfolio"}}}, {"type": "object", "properties": {"archived": {"description": "[Opt In](/docs/inputoutput-options). True if the portfolio is archived, false if not. Archived portfolios do not show in the UI by default and may be treated differently for queries.", "type": "boolean", "example": false}, "color": {"description": "Color of the portfolio.", "type": "string", "enum": ["dark-pink", "dark-green", "dark-blue", "dark-red", "dark-teal", "dark-brown", "dark-orange", "dark-purple", "dark-warm-gray", "light-pink", "light-green", "light-blue", "light-red", "light-teal", "light-brown", "light-orange", "light-purple", "light-warm-gray"], "example": "light-green"}, "start_on": {"description": "The day on which work for this portfolio begins, or null if the portfolio has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-14"}, "due_on": {"description": "The day on which this portfolio is due. This takes a date with format YYYY-MM-DD.", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "default_access_level": {"description": "The default access level when inviting new members to the portfolio", "type": "string", "enum": ["admin", "editor", "viewer"], "example": "viewer"}}}]}, {"type": "object", "properties": {"workspace": {"type": "string", "description": "*Create-only*. The workspace or organization that the portfolio belongs to.", "example": "167589"}, "public": {"description": "*Deprecated:* new integrations use `privacy_setting` instead.", "type": "boolean", "deprecated": true, "example": false}}}]}}}',  # noqa: E501
    "UPDATEPORTFOLIO": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *portfolio* gives a high-level overview of the status of multiple initiatives in Asana. Portfolios provide a dashboard overview of the state of multiple projects, including a progress report and the most recent [project status](/reference/project-statuses) update.\nPortfolios have some restrictions on size. Each portfolio has a max of 1500 items and, like projects, a max of 20 custom fields.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "portfolio", "x-insert-after": "gid"}, "name": {"description": "The name of the portfolio.", "type": "string", "example": "Bug Portfolio"}}}, {"type": "object", "properties": {"archived": {"description": "[Opt In](/docs/inputoutput-options). True if the portfolio is archived, false if not. Archived portfolios do not show in the UI by default and may be treated differently for queries.", "type": "boolean", "example": false}, "color": {"description": "Color of the portfolio.", "type": "string", "enum": ["dark-pink", "dark-green", "dark-blue", "dark-red", "dark-teal", "dark-brown", "dark-orange", "dark-purple", "dark-warm-gray", "light-pink", "light-green", "light-blue", "light-red", "light-teal", "light-brown", "light-orange", "light-purple", "light-warm-gray"], "example": "light-green"}, "start_on": {"description": "The day on which work for this portfolio begins, or null if the portfolio has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-14"}, "due_on": {"description": "The day on which this portfolio is due. This takes a date with format YYYY-MM-DD.", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "default_access_level": {"description": "The default access level when inviting new members to the portfolio", "type": "string", "enum": ["admin", "editor", "viewer"], "example": "viewer"}}}]}, {"type": "object", "properties": {"custom_fields": {"description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, or object (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.", "type": "object", "additionalProperties": {"type": "string", "description": ""{custom_field_gid}" => Value (can be text, enum GID, a number, etc.). For date, use format "YYYY-MM-DD" (e.g., 2019-09-15). For date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."}, "example": {"5678904321": "On Hold", "4578152156": "Not Started"}}}}]}}}',  # noqa: E501
    "ADDCUSTOMFIELDTOPORTFOLIO": '{"type": "object", "properties": {"data": {"type": "object", "required": ["custom_field"], "properties": {"custom_field": {"oneOf": [{"type": "string", "description": "The custom field to associate with this container.", "example": "14916"}, {"allOf": [{"allOf": [{"allOf": [{"description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\n\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field", "x-insert-after": "gid"}, "name": {"description": "The name of the custom field.", "type": "string", "example": "Status"}, "type": {"description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people"]}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "enabled": {"description": "*Conditional*. This field applies only to [custom field values](/docs/custom-fields-guide#/accessing-custom-field-values-on-tasks-or-projects) and is not available for [custom field definitions](/docs/custom-fields-guide#/accessing-custom-field-definitions).\nDetermines if the custom field is enabled or not. For more details, see the [Custom Fields documentation](/docs/custom-fields-guide#/enabled-and-disabled-values).", "type": "boolean", "readOnly": true, "example": true}, "representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "date_value": {"description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.", "type": "object", "nullable": true, "properties": {"date": {"type": "string", "description": "A string representing the date in YYYY-MM-DD format.", "example": "2024-08-23"}, "date_time": {"type": "string", "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.", "example": "2024-08-23T22:00:00.000Z"}}}, "enum_value": {"allOf": [{"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}, {"type": "object", "nullable": true, "description": "*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an `enum` custom field."}]}, "multi_enum_values": {"description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "number_value": {"description": "*Conditional*. This number is the value of a `number` custom field.", "type": "number", "nullable": true, "example": 5.2}, "text_value": {"description": "*Conditional*. This string is the value of a `text` custom field.", "type": "string", "nullable": true, "example": "Some Value"}, "display_value": {"description": "A string representation for the value of the custom field. Integrations that don\'t require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.", "type": "string", "readOnly": true, "example": "blue", "nullable": true}}}, {"type": "object", "properties": {"description": {"description": "[Opt In](/docs/inputoutput-options). The description of the custom field.", "type": "string", "example": "Development team priority"}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "precision": {"description": "Only relevant for custom fields of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\nThe identifier format will always have a precision of 0.", "type": "integer", "example": 2}, "format": {"description": "The format of this custom field.", "type": "string", "enum": ["currency", "identifier", "percentage", "custom", "duration", "none"], "example": "custom"}, "currency_code": {"description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.", "type": "string", "nullable": true, "example": "EUR"}, "custom_label": {"description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "example": "gold pieces"}, "custom_label_position": {"description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "enum": ["prefix", "suffix", null], "example": "suffix"}, "is_global_to_workspace": {"description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.", "type": "boolean", "example": true, "readOnly": true}, "has_notifications_enabled": {"description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.", "type": "boolean", "example": true}, "asana_created_field": {"description": "*Conditional*. A unique identifier to associate this field with the template source of truth.", "type": "string", "readOnly": true, "nullable": true, "enum": ["a_v_requirements", "account_name", "actionable", "align_shipping_link", "align_status", "allotted_time", "appointment", "approval_stage", "approved", "article_series", "board_committee", "browser", "campaign_audience", "campaign_project_status", "campaign_regions", "channel_primary", "client_topic_type", "complete_by", "contact", "contact_email_address", "content_channels", "content_channels_needed", "content_stage", "content_type", "contract", "contract_status", "cost", "creation_stage", "creative_channel", "creative_needed", "creative_needs", "data_sensitivity", "deal_size", "delivery_appt", "delivery_appt_date", "department", "department_responsible", "design_request_needed", "design_request_type", "discussion_category", "do_this_task", "editorial_content_status", "editorial_content_tag", "editorial_content_type", "effort", "effort_level", "est_completion_date", "estimated_time", "estimated_value", "expected_cost", "external_steps_needed", "favorite_idea", "feedback_type", "financial", "funding_amount", "grant_application_process", "hiring_candidate_status", "idea_status", "ids_link", "ids_patient_link", "implementation_stage", "insurance", "interview_area", "interview_question_score", "itero_scan_link", "job_s_applied_to", "lab", "launch_status", "lead_status", "localization_language", "localization_market_team", "localization_status", "meeting_minutes", "meeting_needed", "minutes", "mrr", "must_localize", "name_of_foundation", "need_to_follow_up", "next_appointment", "next_steps_sales", "num_people", "number_of_user_reports", "office_location", "onboarding_activity", "owner", "participants_needed", "patient_date_of_birth", "patient_email", "patient_phone", "patient_status", "phone_number", "planning_category", "point_of_contact", "position", "post_format", "prescription", "priority", "priority_level", "product", "product_stage", "progress", "project_size", "project_status", "proposed_budget", "publish_status", "reason_for_scan", "referral", "request_type", "research_status", "responsible_department", "responsible_team", "risk_assessment_status", "room_name", "sales_counterpart", "sentiment", "shipping_link", "social_channels", "stage", "status", "status_design", "status_of_initiative", "system_setup", "task_progress", "team", "team_marketing", "team_responsible", "time_it_takes_to_complete_tasks", "timeframe", "treatment_type", "type_work_requests_it", "use_agency", "user_name", "vendor_category", "vendor_type", "word_count", null], "example": "priority"}}}]}, {"type": "object", "required": ["workspace"], "properties": {"workspace": {"type": "string", "description": "*Create-Only* The workspace to create a custom field in.", "example": "1331"}, "owned_by_app": {"type": "boolean", "description": "*Allow-listed*. Instructs the API that this Custom Field is app-owned. This parameter is allow-listed to specific apps at this point in time. For apps that are not allow-listed, providing this parameter will result in a `403 Forbidden`."}, "people_value": {"description": "*Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.", "type": "array", "items": {"type": "string", "description": "The GID of a user."}, "example": ["12345"]}, "reference_value": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of GIDs reflects the objects to be written to a `reference` custom field. Note that *write* operations will replace existing objects (if any) in the custom field with the objects specified in this array.", "type": "array", "items": {"type": "string", "description": "The GID of an object."}, "example": ["12345"]}}}]}, {"type": "object", "required": ["resource_subtype"], "properties": {"resource_subtype": {"description": "The type of the custom field. Must be one of the given values.", "type": "string", "example": "text", "enum": ["text", "enum", "multi_enum", "number", "date", "people", "reference"]}}}]}]}, "is_important": {"description": "Whether this field should be considered important to this container (for instance, to display in the list view of items in the container).", "type": "boolean", "example": true}, "insert_before": {"description": "A gid of a Custom Field Setting on this container, before which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.", "type": "string", "example": "1331"}, "insert_after": {"description": "A gid of a Custom Field Setting on this container, after which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.", "type": "string", "example": "1331"}}}}}',  # noqa: E501
    "UPDATEPROJECTBRIEFASANA": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *Project Brief* allows you to explain the what and why of the project to your team.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project_brief", "x-insert-after": "gid"}}}, {"type": "object", "properties": {"title": {"description": "The title of the project brief.", "type": "string", "example": "Stuff to buy \u2014 Project Brief"}, "html_text": {"description": "HTML formatted text for the project brief.", "type": "string", "example": "<body>This is a <strong>project brief</strong>.</body>"}}}]}, {"type": "object", "properties": {"text": {"description": "The plain text of the project brief. When writing to a project brief, you can specify either `html_text` (preferred) or `text`, but not both.", "type": "string", "example": "This is a project brief."}}}]}}}',  # noqa: E501
    "CREATEPROJECTBRIEF": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *Project Brief* allows you to explain the what and why of the project to your team.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project_brief", "x-insert-after": "gid"}}}, {"type": "object", "properties": {"title": {"description": "The title of the project brief.", "type": "string", "example": "Stuff to buy \u2014 Project Brief"}, "html_text": {"description": "HTML formatted text for the project brief.", "type": "string", "example": "<body>This is a <strong>project brief</strong>.</body>"}}}]}, {"type": "object", "properties": {"text": {"description": "The plain text of the project brief. When writing to a project brief, you can specify either `html_text` (preferred) or `text`, but not both.", "type": "string", "example": "This is a project brief."}}}]}}}',  # noqa: E501
    "CREATEPROJECTSTATUSUPDATE": '{"type": "object", "properties": {"data": {"allOf": [{"description": "*Deprecated: new integrations should prefer the `status_update` resource.*\nA *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: "green" for projects that are on track, "yellow" for projects at risk, and "red" for projects that are behind.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project_status", "x-insert-after": "gid"}, "title": {"description": "The title of the project status update.", "type": "string", "example": "Status Update - Jun 15"}}}, {"type": "object", "properties": {"text": {"description": "The text content of the status update.", "type": "string", "example": "The project is moving forward according to plan..."}, "html_text": {"description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.", "type": "string", "example": "<body>The project <strong>is</strong> moving forward according to plan...</body>"}, "color": {"description": "The color associated with the status update.", "type": "string", "enum": ["green", "yellow", "red", "blue", "complete"]}}}]}}}',  # noqa: E501
    "INSTANTIATEPROJECTFROMTEMPLATE": '{"type": "object", "properties": {"data": {"type": "object", "required": ["name"], "properties": {"name": {"description": "The name of the new project.", "type": "string", "example": "New Project Name"}, "team": {"description": "*Optional*. Sets the team of the new project. If the project template exists in an _organization_, you may specify a value for `team`. If no value is provided then it defaults to the same team as the project template.", "type": "string", "example": "12345"}, "public": {"description": "*Deprecated:* new integrations use `privacy_setting` instead.", "deprecated": true, "type": "boolean", "example": true}, "privacy_setting": {"description": "The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*", "type": "string", "enum": ["public_to_workspace", "private_to_team", "private"], "example": "public_to_workspace"}, "is_strict": {"description": "*Optional*. If set to `true`, the endpoint returns an "Unprocessable Entity" error if you fail to provide a calendar date value for any date variable. If set to `false`, a default date is used for each unfulfilled date variable (e.g., the current date is used as the Start Date of a project).", "type": "boolean", "example": true}, "requested_dates": {"description": "*Conditional*. Array of mappings of date variables to calendar dates. This property is required in the instantiation request if the project template includes dates (e.g., a start date on a task).", "type": "array", "items": {"type": "object", "properties": {"gid": {"description": "Globally unique identifier of the date field in the project template. A value of `1` refers to the project start date, while `2` refers to the project due date.", "type": "string", "example": "1"}, "value": {"description": "The date with which the date variable should be replaced when instantiating a project. This takes a date with `YYYY-MM-DD` format.", "type": "string", "nullable": true, "format": "date-time", "example": "2022-01-01"}}}}, "requested_roles": {"description": "Array of mappings of template roles to user ids", "type": "array", "items": {"type": "object", "properties": {"gid": {"description": "Globally unique identifier of the template role in the project template.", "type": "string", "example": "1"}, "value": {"description": "The user id that should be assigned to the template role.", "type": "string", "example": "123"}}}}}}}}',  # noqa: E501
    "CREATENEWASANAPROJECT": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "properties": {"archived": {"description": "True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.", "type": "boolean", "example": false}, "color": {"description": "Color of the project.", "type": "string", "nullable": true, "enum": ["dark-pink", "dark-green", "dark-blue", "dark-red", "dark-teal", "dark-brown", "dark-orange", "dark-purple", "dark-warm-gray", "light-pink", "light-green", "light-blue", "light-red", "light-teal", "light-brown", "light-orange", "light-purple", "light-warm-gray", "none", null], "example": "light-green"}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "current_status": {"allOf": [{"allOf": [{"allOf": [{"description": "*Deprecated: new integrations should prefer the `status_update` resource.*\nA *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: "green" for projects that are on track, "yellow" for projects at risk, and "red" for projects that are behind.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project_status", "x-insert-after": "gid"}, "title": {"description": "The title of the project status update.", "type": "string", "example": "Status Update - Jun 15"}}}, {"type": "object", "properties": {"text": {"description": "The text content of the status update.", "type": "string", "example": "The project is moving forward according to plan..."}, "html_text": {"description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.", "type": "string", "example": "<body>The project <strong>is</strong> moving forward according to plan...</body>"}, "color": {"description": "The color associated with the status update.", "type": "string", "enum": ["green", "yellow", "red", "blue", "complete"]}}}]}, {"type": "object", "properties": {"author": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "created_by": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "modified_at": {"description": "The time at which this project status was last modified.\n*Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}}}]}, {"type": "object", "nullable": true, "description": "*Deprecated: new integrations should prefer the `current_status_update` resource.*"}]}, "current_status_update": {"allOf": [{"description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent\'s followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "status_update", "x-insert-after": "gid"}, "title": {"description": "The title of the status update.", "type": "string", "example": "Status Update - Jun 15"}, "resource_subtype": {"type": "string", "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\nThe `resource_subtype`s for `status` objects represent the type of their parent.", "enum": ["project_status_update", "portfolio_status_update", "goal_status_update"], "example": "project_status_update", "readOnly": true}}}, {"type": "object", "nullable": true, "description": "The latest `status_update` posted to this project."}]}, "custom_field_settings": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>custom_fields:read</code></p>\n\nArray of Custom Field Settings (in compact form).", "readOnly": true, "type": "array", "items": {"allOf": [{"description": "Custom Fields Settings objects represent the many-to-many join of the Custom Field and Project as well as stores information that is relevant to that particular pairing.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field_setting", "x-insert-after": "gid"}}}, {"type": "object", "properties": {"project": {"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "description": "*Deprecated: new integrations should prefer the `parent` field.* The id of the project that this custom field settings refers to.", "readOnly": true}]}, "is_important": {"description": "`is_important` is used in the Asana web application to determine if this custom field is displayed in the list/grid view of a project or portfolio.", "type": "boolean", "readOnly": true, "example": false}, "parent": {"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "description": "The parent to which the custom field is applied. This can be a project or portfolio and indicates that the tasks or projects that the parent contains may be given custom field values for this custom field.", "readOnly": true}]}, "custom_field": {"allOf": [{"allOf": [{"allOf": [{"description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\n\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field", "x-insert-after": "gid"}, "name": {"description": "The name of the custom field.", "type": "string", "example": "Status"}, "type": {"description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people"]}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "enabled": {"description": "*Conditional*. This field applies only to [custom field values](/docs/custom-fields-guide#/accessing-custom-field-values-on-tasks-or-projects) and is not available for [custom field definitions](/docs/custom-fields-guide#/accessing-custom-field-definitions).\nDetermines if the custom field is enabled or not. For more details, see the [Custom Fields documentation](/docs/custom-fields-guide#/enabled-and-disabled-values).", "type": "boolean", "readOnly": true, "example": true}, "representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "date_value": {"description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.", "type": "object", "nullable": true, "properties": {"date": {"type": "string", "description": "A string representing the date in YYYY-MM-DD format.", "example": "2024-08-23"}, "date_time": {"type": "string", "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.", "example": "2024-08-23T22:00:00.000Z"}}}, "enum_value": {"allOf": [{"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}, {"type": "object", "nullable": true, "description": "*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an `enum` custom field."}]}, "multi_enum_values": {"description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "number_value": {"description": "*Conditional*. This number is the value of a `number` custom field.", "type": "number", "nullable": true, "example": 5.2}, "text_value": {"description": "*Conditional*. This string is the value of a `text` custom field.", "type": "string", "nullable": true, "example": "Some Value"}, "display_value": {"description": "A string representation for the value of the custom field. Integrations that don\'t require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.", "type": "string", "readOnly": true, "example": "blue", "nullable": true}}}, {"type": "object", "properties": {"description": {"description": "[Opt In](/docs/inputoutput-options). The description of the custom field.", "type": "string", "example": "Development team priority"}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "precision": {"description": "Only relevant for custom fields of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\nThe identifier format will always have a precision of 0.", "type": "integer", "example": 2}, "format": {"description": "The format of this custom field.", "type": "string", "enum": ["currency", "identifier", "percentage", "custom", "duration", "none"], "example": "custom"}, "currency_code": {"description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.", "type": "string", "nullable": true, "example": "EUR"}, "custom_label": {"description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "example": "gold pieces"}, "custom_label_position": {"description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "enum": ["prefix", "suffix", null], "example": "suffix"}, "is_global_to_workspace": {"description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.", "type": "boolean", "example": true, "readOnly": true}, "has_notifications_enabled": {"description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.", "type": "boolean", "example": true}, "asana_created_field": {"description": "*Conditional*. A unique identifier to associate this field with the template source of truth.", "type": "string", "readOnly": true, "nullable": true, "enum": ["a_v_requirements", "account_name", "actionable", "align_shipping_link", "align_status", "allotted_time", "appointment", "approval_stage", "approved", "article_series", "board_committee", "browser", "campaign_audience", "campaign_project_status", "campaign_regions", "channel_primary", "client_topic_type", "complete_by", "contact", "contact_email_address", "content_channels", "content_channels_needed", "content_stage", "content_type", "contract", "contract_status", "cost", "creation_stage", "creative_channel", "creative_needed", "creative_needs", "data_sensitivity", "deal_size", "delivery_appt", "delivery_appt_date", "department", "department_responsible", "design_request_needed", "design_request_type", "discussion_category", "do_this_task", "editorial_content_status", "editorial_content_tag", "editorial_content_type", "effort", "effort_level", "est_completion_date", "estimated_time", "estimated_value", "expected_cost", "external_steps_needed", "favorite_idea", "feedback_type", "financial", "funding_amount", "grant_application_process", "hiring_candidate_status", "idea_status", "ids_link", "ids_patient_link", "implementation_stage", "insurance", "interview_area", "interview_question_score", "itero_scan_link", "job_s_applied_to", "lab", "launch_status", "lead_status", "localization_language", "localization_market_team", "localization_status", "meeting_minutes", "meeting_needed", "minutes", "mrr", "must_localize", "name_of_foundation", "need_to_follow_up", "next_appointment", "next_steps_sales", "num_people", "number_of_user_reports", "office_location", "onboarding_activity", "owner", "participants_needed", "patient_date_of_birth", "patient_email", "patient_phone", "patient_status", "phone_number", "planning_category", "point_of_contact", "position", "post_format", "prescription", "priority", "priority_level", "product", "product_stage", "progress", "project_size", "project_status", "proposed_budget", "publish_status", "reason_for_scan", "referral", "request_type", "research_status", "responsible_department", "responsible_team", "risk_assessment_status", "room_name", "sales_counterpart", "sentiment", "shipping_link", "social_channels", "stage", "status", "status_design", "status_of_initiative", "system_setup", "task_progress", "team", "team_marketing", "team_responsible", "time_it_takes_to_complete_tasks", "timeframe", "treatment_type", "type_work_requests_it", "use_agency", "user_name", "vendor_category", "vendor_type", "word_count", null], "example": "priority"}}}]}, {"type": "object", "properties": {"representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id", "reference"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "is_value_read_only": {"description": "*Conditional*. This flag describes whether a custom field is read only.", "type": "boolean", "example": false}, "created_by": {"allOf": [{"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, {"nullable": true}]}, "people_value": {"description": "*Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/reference/users) objects reflects the values of a `people` custom field.", "type": "array", "items": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}, "reference_value": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of objects reflects the values of a `reference` custom field.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}, "name": {"description": "The name of the object.", "type": "string", "example": "Bug Task"}}}}, "privacy_setting": {"description": "The privacy setting of the custom field. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*", "type": "string", "enum": ["public_with_guests", "public", "private"], "example": "public_with_guests"}, "default_access_level": {"description": "The default access level when inviting new members to the custom field. This isn\'t applied when the `privacy_setting` is `private`, or the user is a guest. For local fields in a project or portfolio, the user must additionally have permission to modify the container itself.", "type": "string", "enum": ["admin", "editor", "user"], "example": "user"}, "resource_subtype": {"description": "The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "example": "text", "enum": ["text", "enum", "multi_enum", "number", "date", "people", "reference"]}}}]}, {"type": "object", "description": "The custom field that is applied to the `parent`.", "readOnly": true}]}}}]}}, "default_view": {"description": "The default view (list, board, calendar, or timeline) of a project.", "type": "string", "enum": ["list", "board", "calendar", "timeline"], "example": "calendar"}, "due_date": {"description": "*Deprecated: new integrations should prefer the `due_on` field.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "due_on": {"description": "The day on which this project is due. This takes a date with format YYYY-MM-DD.", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "html_notes": {"description": "[Opt In](/docs/inputoutput-options). The notes of the project with formatting as HTML.", "type": "string", "example": "<body>These are things we need to purchase.</body>"}, "members": {"description": "Array of users who are members of this project.", "type": "array", "items": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "readOnly": true}, "modified_at": {"description": "The time at which this project was last modified.\n*Note: This does not currently reflect any changes in associations such as tasks or comments that may have been added or removed from the project.*", "type": "string", "readOnly": true, "format": "date-time", "example": "2012-02-22T02:06:58.147Z"}, "notes": {"description": "Free-form textual information associated with the project (ie., its description).", "type": "string", "example": "These are things we need to purchase."}, "public": {"description": "*Deprecated:* new integrations use `privacy_setting` instead.", "type": "boolean", "deprecated": true, "example": false}, "privacy_setting": {"description": "The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*", "type": "string", "enum": ["public_to_workspace", "private_to_team", "private"], "example": "public_to_workspace"}, "start_on": {"description": "The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-14"}, "default_access_level": {"description": "The default access for users or teams who join or are added as members to the project.", "type": "string", "enum": ["admin", "editor", "commenter", "viewer"], "example": "admin"}, "minimum_access_level_for_customization": {"description": "The minimum access level needed for project members to modify this project\'s workflow and appearance.", "type": "string", "enum": ["admin", "editor"], "example": "admin"}, "minimum_access_level_for_sharing": {"description": "The minimum access level needed for project members to share the project and manage project memberships.", "type": "string", "enum": ["admin", "editor"], "example": "admin"}}}]}, {"type": "object", "properties": {"custom_fields": {"description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, or object (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.", "type": "object", "additionalProperties": {"type": "string", "description": ""{custom_field_gid}" => Value (can be text, a number, etc.). For date, use format "YYYY-MM-DD" (e.g., 2019-09-15). For date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."}, "example": {"5678904321": "On Hold", "4578152156": "Not Started"}}, "followers": {"description": "*Create-only*. Comma separated string of users. Followers are a subset of members who have opted in to receive "tasks added" notifications for a project.", "type": "string", "example": "12345,23456"}, "owner": {"description": "The current owner of the project, may be null.", "nullable": true, "type": "string", "example": "12345"}, "team": {"description": "The team that this project is shared with.", "type": "string", "example": "12345"}, "workspace": {"type": "string", "description": "The `gid` of a workspace.", "example": "12345"}}}]}}}',  # noqa: E501
    "UPDATEPROJECTDETAILS": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "properties": {"archived": {"description": "True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.", "type": "boolean", "example": false}, "color": {"description": "Color of the project.", "type": "string", "nullable": true, "enum": ["dark-pink", "dark-green", "dark-blue", "dark-red", "dark-teal", "dark-brown", "dark-orange", "dark-purple", "dark-warm-gray", "light-pink", "light-green", "light-blue", "light-red", "light-teal", "light-brown", "light-orange", "light-purple", "light-warm-gray", "none", null], "example": "light-green"}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "current_status": {"allOf": [{"allOf": [{"allOf": [{"description": "*Deprecated: new integrations should prefer the `status_update` resource.*\nA *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: "green" for projects that are on track, "yellow" for projects at risk, and "red" for projects that are behind.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project_status", "x-insert-after": "gid"}, "title": {"description": "The title of the project status update.", "type": "string", "example": "Status Update - Jun 15"}}}, {"type": "object", "properties": {"text": {"description": "The text content of the status update.", "type": "string", "example": "The project is moving forward according to plan..."}, "html_text": {"description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.", "type": "string", "example": "<body>The project <strong>is</strong> moving forward according to plan...</body>"}, "color": {"description": "The color associated with the status update.", "type": "string", "enum": ["green", "yellow", "red", "blue", "complete"]}}}]}, {"type": "object", "properties": {"author": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "created_by": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "modified_at": {"description": "The time at which this project status was last modified.\n*Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}}}]}, {"type": "object", "nullable": true, "description": "*Deprecated: new integrations should prefer the `current_status_update` resource.*"}]}, "current_status_update": {"allOf": [{"description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent\'s followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "status_update", "x-insert-after": "gid"}, "title": {"description": "The title of the status update.", "type": "string", "example": "Status Update - Jun 15"}, "resource_subtype": {"type": "string", "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\nThe `resource_subtype`s for `status` objects represent the type of their parent.", "enum": ["project_status_update", "portfolio_status_update", "goal_status_update"], "example": "project_status_update", "readOnly": true}}}, {"type": "object", "nullable": true, "description": "The latest `status_update` posted to this project."}]}, "custom_field_settings": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>custom_fields:read</code></p>\n\nArray of Custom Field Settings (in compact form).", "readOnly": true, "type": "array", "items": {"allOf": [{"description": "Custom Fields Settings objects represent the many-to-many join of the Custom Field and Project as well as stores information that is relevant to that particular pairing.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field_setting", "x-insert-after": "gid"}}}, {"type": "object", "properties": {"project": {"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "description": "*Deprecated: new integrations should prefer the `parent` field.* The id of the project that this custom field settings refers to.", "readOnly": true}]}, "is_important": {"description": "`is_important` is used in the Asana web application to determine if this custom field is displayed in the list/grid view of a project or portfolio.", "type": "boolean", "readOnly": true, "example": false}, "parent": {"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "description": "The parent to which the custom field is applied. This can be a project or portfolio and indicates that the tasks or projects that the parent contains may be given custom field values for this custom field.", "readOnly": true}]}, "custom_field": {"allOf": [{"allOf": [{"allOf": [{"description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\n\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field", "x-insert-after": "gid"}, "name": {"description": "The name of the custom field.", "type": "string", "example": "Status"}, "type": {"description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people"]}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "enabled": {"description": "*Conditional*. This field applies only to [custom field values](/docs/custom-fields-guide#/accessing-custom-field-values-on-tasks-or-projects) and is not available for [custom field definitions](/docs/custom-fields-guide#/accessing-custom-field-definitions).\nDetermines if the custom field is enabled or not. For more details, see the [Custom Fields documentation](/docs/custom-fields-guide#/enabled-and-disabled-values).", "type": "boolean", "readOnly": true, "example": true}, "representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "date_value": {"description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.", "type": "object", "nullable": true, "properties": {"date": {"type": "string", "description": "A string representing the date in YYYY-MM-DD format.", "example": "2024-08-23"}, "date_time": {"type": "string", "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.", "example": "2024-08-23T22:00:00.000Z"}}}, "enum_value": {"allOf": [{"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}, {"type": "object", "nullable": true, "description": "*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an `enum` custom field."}]}, "multi_enum_values": {"description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "number_value": {"description": "*Conditional*. This number is the value of a `number` custom field.", "type": "number", "nullable": true, "example": 5.2}, "text_value": {"description": "*Conditional*. This string is the value of a `text` custom field.", "type": "string", "nullable": true, "example": "Some Value"}, "display_value": {"description": "A string representation for the value of the custom field. Integrations that don\'t require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.", "type": "string", "readOnly": true, "example": "blue", "nullable": true}}}, {"type": "object", "properties": {"description": {"description": "[Opt In](/docs/inputoutput-options). The description of the custom field.", "type": "string", "example": "Development team priority"}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "precision": {"description": "Only relevant for custom fields of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\nThe identifier format will always have a precision of 0.", "type": "integer", "example": 2}, "format": {"description": "The format of this custom field.", "type": "string", "enum": ["currency", "identifier", "percentage", "custom", "duration", "none"], "example": "custom"}, "currency_code": {"description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.", "type": "string", "nullable": true, "example": "EUR"}, "custom_label": {"description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "example": "gold pieces"}, "custom_label_position": {"description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "enum": ["prefix", "suffix", null], "example": "suffix"}, "is_global_to_workspace": {"description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.", "type": "boolean", "example": true, "readOnly": true}, "has_notifications_enabled": {"description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.", "type": "boolean", "example": true}, "asana_created_field": {"description": "*Conditional*. A unique identifier to associate this field with the template source of truth.", "type": "string", "readOnly": true, "nullable": true, "enum": ["a_v_requirements", "account_name", "actionable", "align_shipping_link", "align_status", "allotted_time", "appointment", "approval_stage", "approved", "article_series", "board_committee", "browser", "campaign_audience", "campaign_project_status", "campaign_regions", "channel_primary", "client_topic_type", "complete_by", "contact", "contact_email_address", "content_channels", "content_channels_needed", "content_stage", "content_type", "contract", "contract_status", "cost", "creation_stage", "creative_channel", "creative_needed", "creative_needs", "data_sensitivity", "deal_size", "delivery_appt", "delivery_appt_date", "department", "department_responsible", "design_request_needed", "design_request_type", "discussion_category", "do_this_task", "editorial_content_status", "editorial_content_tag", "editorial_content_type", "effort", "effort_level", "est_completion_date", "estimated_time", "estimated_value", "expected_cost", "external_steps_needed", "favorite_idea", "feedback_type", "financial", "funding_amount", "grant_application_process", "hiring_candidate_status", "idea_status", "ids_link", "ids_patient_link", "implementation_stage", "insurance", "interview_area", "interview_question_score", "itero_scan_link", "job_s_applied_to", "lab", "launch_status", "lead_status", "localization_language", "localization_market_team", "localization_status", "meeting_minutes", "meeting_needed", "minutes", "mrr", "must_localize", "name_of_foundation", "need_to_follow_up", "next_appointment", "next_steps_sales", "num_people", "number_of_user_reports", "office_location", "onboarding_activity", "owner", "participants_needed", "patient_date_of_birth", "patient_email", "patient_phone", "patient_status", "phone_number", "planning_category", "point_of_contact", "position", "post_format", "prescription", "priority", "priority_level", "product", "product_stage", "progress", "project_size", "project_status", "proposed_budget", "publish_status", "reason_for_scan", "referral", "request_type", "research_status", "responsible_department", "responsible_team", "risk_assessment_status", "room_name", "sales_counterpart", "sentiment", "shipping_link", "social_channels", "stage", "status", "status_design", "status_of_initiative", "system_setup", "task_progress", "team", "team_marketing", "team_responsible", "time_it_takes_to_complete_tasks", "timeframe", "treatment_type", "type_work_requests_it", "use_agency", "user_name", "vendor_category", "vendor_type", "word_count", null], "example": "priority"}}}]}, {"type": "object", "properties": {"representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id", "reference"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "is_value_read_only": {"description": "*Conditional*. This flag describes whether a custom field is read only.", "type": "boolean", "example": false}, "created_by": {"allOf": [{"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, {"nullable": true}]}, "people_value": {"description": "*Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/reference/users) objects reflects the values of a `people` custom field.", "type": "array", "items": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}, "reference_value": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of objects reflects the values of a `reference` custom field.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}, "name": {"description": "The name of the object.", "type": "string", "example": "Bug Task"}}}}, "privacy_setting": {"description": "The privacy setting of the custom field. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*", "type": "string", "enum": ["public_with_guests", "public", "private"], "example": "public_with_guests"}, "default_access_level": {"description": "The default access level when inviting new members to the custom field. This isn\'t applied when the `privacy_setting` is `private`, or the user is a guest. For local fields in a project or portfolio, the user must additionally have permission to modify the container itself.", "type": "string", "enum": ["admin", "editor", "user"], "example": "user"}, "resource_subtype": {"description": "The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "example": "text", "enum": ["text", "enum", "multi_enum", "number", "date", "people", "reference"]}}}]}, {"type": "object", "description": "The custom field that is applied to the `parent`.", "readOnly": true}]}}}]}}, "default_view": {"description": "The default view (list, board, calendar, or timeline) of a project.", "type": "string", "enum": ["list", "board", "calendar", "timeline"], "example": "calendar"}, "due_date": {"description": "*Deprecated: new integrations should prefer the `due_on` field.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "due_on": {"description": "The day on which this project is due. This takes a date with format YYYY-MM-DD.", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "html_notes": {"description": "[Opt In](/docs/inputoutput-options). The notes of the project with formatting as HTML.", "type": "string", "example": "<body>These are things we need to purchase.</body>"}, "members": {"description": "Array of users who are members of this project.", "type": "array", "items": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "readOnly": true}, "modified_at": {"description": "The time at which this project was last modified.\n*Note: This does not currently reflect any changes in associations such as tasks or comments that may have been added or removed from the project.*", "type": "string", "readOnly": true, "format": "date-time", "example": "2012-02-22T02:06:58.147Z"}, "notes": {"description": "Free-form textual information associated with the project (ie., its description).", "type": "string", "example": "These are things we need to purchase."}, "public": {"description": "*Deprecated:* new integrations use `privacy_setting` instead.", "type": "boolean", "deprecated": true, "example": false}, "privacy_setting": {"description": "The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*", "type": "string", "enum": ["public_to_workspace", "private_to_team", "private"], "example": "public_to_workspace"}, "start_on": {"description": "The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-14"}, "default_access_level": {"description": "The default access for users or teams who join or are added as members to the project.", "type": "string", "enum": ["admin", "editor", "commenter", "viewer"], "example": "admin"}, "minimum_access_level_for_customization": {"description": "The minimum access level needed for project members to modify this project\'s workflow and appearance.", "type": "string", "enum": ["admin", "editor"], "example": "admin"}, "minimum_access_level_for_sharing": {"description": "The minimum access level needed for project members to share the project and manage project memberships.", "type": "string", "enum": ["admin", "editor"], "example": "admin"}}}]}, {"type": "object", "properties": {"custom_fields": {"description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, or object (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.", "type": "object", "additionalProperties": {"type": "string", "description": ""{custom_field_gid}" => Value (can be text, a number, etc.). For date, use format "YYYY-MM-DD" (e.g., 2019-09-15). For date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."}, "example": {"5678904321": "On Hold", "4578152156": "Not Started"}}, "followers": {"description": "*Create-only*. Comma separated string of users. Followers are a subset of members who have opted in to receive "tasks added" notifications for a project.", "type": "string", "example": "12345,23456"}, "owner": {"description": "The current owner of the project, may be null.", "nullable": true, "type": "string", "example": "12345"}, "team": {"description": "The team that this project is shared with.", "type": "string", "example": "12345"}}}]}}}',  # noqa: E501
    "CREATEASANAPROJECTFORTEAM": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "properties": {"archived": {"description": "True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.", "type": "boolean", "example": false}, "color": {"description": "Color of the project.", "type": "string", "nullable": true, "enum": ["dark-pink", "dark-green", "dark-blue", "dark-red", "dark-teal", "dark-brown", "dark-orange", "dark-purple", "dark-warm-gray", "light-pink", "light-green", "light-blue", "light-red", "light-teal", "light-brown", "light-orange", "light-purple", "light-warm-gray", "none", null], "example": "light-green"}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "current_status": {"allOf": [{"allOf": [{"allOf": [{"description": "*Deprecated: new integrations should prefer the `status_update` resource.*\nA *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: "green" for projects that are on track, "yellow" for projects at risk, and "red" for projects that are behind.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project_status", "x-insert-after": "gid"}, "title": {"description": "The title of the project status update.", "type": "string", "example": "Status Update - Jun 15"}}}, {"type": "object", "properties": {"text": {"description": "The text content of the status update.", "type": "string", "example": "The project is moving forward according to plan..."}, "html_text": {"description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.", "type": "string", "example": "<body>The project <strong>is</strong> moving forward according to plan...</body>"}, "color": {"description": "The color associated with the status update.", "type": "string", "enum": ["green", "yellow", "red", "blue", "complete"]}}}]}, {"type": "object", "properties": {"author": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "created_by": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "modified_at": {"description": "The time at which this project status was last modified.\n*Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}}}]}, {"type": "object", "nullable": true, "description": "*Deprecated: new integrations should prefer the `current_status_update` resource.*"}]}, "current_status_update": {"allOf": [{"description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent\'s followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "status_update", "x-insert-after": "gid"}, "title": {"description": "The title of the status update.", "type": "string", "example": "Status Update - Jun 15"}, "resource_subtype": {"type": "string", "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\nThe `resource_subtype`s for `status` objects represent the type of their parent.", "enum": ["project_status_update", "portfolio_status_update", "goal_status_update"], "example": "project_status_update", "readOnly": true}}}, {"type": "object", "nullable": true, "description": "The latest `status_update` posted to this project."}]}, "custom_field_settings": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>custom_fields:read</code></p>\n\nArray of Custom Field Settings (in compact form).", "readOnly": true, "type": "array", "items": {"allOf": [{"description": "Custom Fields Settings objects represent the many-to-many join of the Custom Field and Project as well as stores information that is relevant to that particular pairing.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field_setting", "x-insert-after": "gid"}}}, {"type": "object", "properties": {"project": {"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "description": "*Deprecated: new integrations should prefer the `parent` field.* The id of the project that this custom field settings refers to.", "readOnly": true}]}, "is_important": {"description": "`is_important` is used in the Asana web application to determine if this custom field is displayed in the list/grid view of a project or portfolio.", "type": "boolean", "readOnly": true, "example": false}, "parent": {"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "description": "The parent to which the custom field is applied. This can be a project or portfolio and indicates that the tasks or projects that the parent contains may be given custom field values for this custom field.", "readOnly": true}]}, "custom_field": {"allOf": [{"allOf": [{"allOf": [{"description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\n\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field", "x-insert-after": "gid"}, "name": {"description": "The name of the custom field.", "type": "string", "example": "Status"}, "type": {"description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people"]}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "enabled": {"description": "*Conditional*. This field applies only to [custom field values](/docs/custom-fields-guide#/accessing-custom-field-values-on-tasks-or-projects) and is not available for [custom field definitions](/docs/custom-fields-guide#/accessing-custom-field-definitions).\nDetermines if the custom field is enabled or not. For more details, see the [Custom Fields documentation](/docs/custom-fields-guide#/enabled-and-disabled-values).", "type": "boolean", "readOnly": true, "example": true}, "representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "date_value": {"description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.", "type": "object", "nullable": true, "properties": {"date": {"type": "string", "description": "A string representing the date in YYYY-MM-DD format.", "example": "2024-08-23"}, "date_time": {"type": "string", "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.", "example": "2024-08-23T22:00:00.000Z"}}}, "enum_value": {"allOf": [{"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}, {"type": "object", "nullable": true, "description": "*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an `enum` custom field."}]}, "multi_enum_values": {"description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "number_value": {"description": "*Conditional*. This number is the value of a `number` custom field.", "type": "number", "nullable": true, "example": 5.2}, "text_value": {"description": "*Conditional*. This string is the value of a `text` custom field.", "type": "string", "nullable": true, "example": "Some Value"}, "display_value": {"description": "A string representation for the value of the custom field. Integrations that don\'t require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.", "type": "string", "readOnly": true, "example": "blue", "nullable": true}}}, {"type": "object", "properties": {"description": {"description": "[Opt In](/docs/inputoutput-options). The description of the custom field.", "type": "string", "example": "Development team priority"}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "precision": {"description": "Only relevant for custom fields of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\nThe identifier format will always have a precision of 0.", "type": "integer", "example": 2}, "format": {"description": "The format of this custom field.", "type": "string", "enum": ["currency", "identifier", "percentage", "custom", "duration", "none"], "example": "custom"}, "currency_code": {"description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.", "type": "string", "nullable": true, "example": "EUR"}, "custom_label": {"description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "example": "gold pieces"}, "custom_label_position": {"description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "enum": ["prefix", "suffix", null], "example": "suffix"}, "is_global_to_workspace": {"description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.", "type": "boolean", "example": true, "readOnly": true}, "has_notifications_enabled": {"description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.", "type": "boolean", "example": true}, "asana_created_field": {"description": "*Conditional*. A unique identifier to associate this field with the template source of truth.", "type": "string", "readOnly": true, "nullable": true, "enum": ["a_v_requirements", "account_name", "actionable", "align_shipping_link", "align_status", "allotted_time", "appointment", "approval_stage", "approved", "article_series", "board_committee", "browser", "campaign_audience", "campaign_project_status", "campaign_regions", "channel_primary", "client_topic_type", "complete_by", "contact", "contact_email_address", "content_channels", "content_channels_needed", "content_stage", "content_type", "contract", "contract_status", "cost", "creation_stage", "creative_channel", "creative_needed", "creative_needs", "data_sensitivity", "deal_size", "delivery_appt", "delivery_appt_date", "department", "department_responsible", "design_request_needed", "design_request_type", "discussion_category", "do_this_task", "editorial_content_status", "editorial_content_tag", "editorial_content_type", "effort", "effort_level", "est_completion_date", "estimated_time", "estimated_value", "expected_cost", "external_steps_needed", "favorite_idea", "feedback_type", "financial", "funding_amount", "grant_application_process", "hiring_candidate_status", "idea_status", "ids_link", "ids_patient_link", "implementation_stage", "insurance", "interview_area", "interview_question_score", "itero_scan_link", "job_s_applied_to", "lab", "launch_status", "lead_status", "localization_language", "localization_market_team", "localization_status", "meeting_minutes", "meeting_needed", "minutes", "mrr", "must_localize", "name_of_foundation", "need_to_follow_up", "next_appointment", "next_steps_sales", "num_people", "number_of_user_reports", "office_location", "onboarding_activity", "owner", "participants_needed", "patient_date_of_birth", "patient_email", "patient_phone", "patient_status", "phone_number", "planning_category", "point_of_contact", "position", "post_format", "prescription", "priority", "priority_level", "product", "product_stage", "progress", "project_size", "project_status", "proposed_budget", "publish_status", "reason_for_scan", "referral", "request_type", "research_status", "responsible_department", "responsible_team", "risk_assessment_status", "room_name", "sales_counterpart", "sentiment", "shipping_link", "social_channels", "stage", "status", "status_design", "status_of_initiative", "system_setup", "task_progress", "team", "team_marketing", "team_responsible", "time_it_takes_to_complete_tasks", "timeframe", "treatment_type", "type_work_requests_it", "use_agency", "user_name", "vendor_category", "vendor_type", "word_count", null], "example": "priority"}}}]}, {"type": "object", "properties": {"representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id", "reference"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "is_value_read_only": {"description": "*Conditional*. This flag describes whether a custom field is read only.", "type": "boolean", "example": false}, "created_by": {"allOf": [{"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, {"nullable": true}]}, "people_value": {"description": "*Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/reference/users) objects reflects the values of a `people` custom field.", "type": "array", "items": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}, "reference_value": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of objects reflects the values of a `reference` custom field.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}, "name": {"description": "The name of the object.", "type": "string", "example": "Bug Task"}}}}, "privacy_setting": {"description": "The privacy setting of the custom field. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*", "type": "string", "enum": ["public_with_guests", "public", "private"], "example": "public_with_guests"}, "default_access_level": {"description": "The default access level when inviting new members to the custom field. This isn\'t applied when the `privacy_setting` is `private`, or the user is a guest. For local fields in a project or portfolio, the user must additionally have permission to modify the container itself.", "type": "string", "enum": ["admin", "editor", "user"], "example": "user"}, "resource_subtype": {"description": "The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "example": "text", "enum": ["text", "enum", "multi_enum", "number", "date", "people", "reference"]}}}]}, {"type": "object", "description": "The custom field that is applied to the `parent`.", "readOnly": true}]}}}]}}, "default_view": {"description": "The default view (list, board, calendar, or timeline) of a project.", "type": "string", "enum": ["list", "board", "calendar", "timeline"], "example": "calendar"}, "due_date": {"description": "*Deprecated: new integrations should prefer the `due_on` field.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "due_on": {"description": "The day on which this project is due. This takes a date with format YYYY-MM-DD.", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "html_notes": {"description": "[Opt In](/docs/inputoutput-options). The notes of the project with formatting as HTML.", "type": "string", "example": "<body>These are things we need to purchase.</body>"}, "members": {"description": "Array of users who are members of this project.", "type": "array", "items": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "readOnly": true}, "modified_at": {"description": "The time at which this project was last modified.\n*Note: This does not currently reflect any changes in associations such as tasks or comments that may have been added or removed from the project.*", "type": "string", "readOnly": true, "format": "date-time", "example": "2012-02-22T02:06:58.147Z"}, "notes": {"description": "Free-form textual information associated with the project (ie., its description).", "type": "string", "example": "These are things we need to purchase."}, "public": {"description": "*Deprecated:* new integrations use `privacy_setting` instead.", "type": "boolean", "deprecated": true, "example": false}, "privacy_setting": {"description": "The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*", "type": "string", "enum": ["public_to_workspace", "private_to_team", "private"], "example": "public_to_workspace"}, "start_on": {"description": "The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-14"}, "default_access_level": {"description": "The default access for users or teams who join or are added as members to the project.", "type": "string", "enum": ["admin", "editor", "commenter", "viewer"], "example": "admin"}, "minimum_access_level_for_customization": {"description": "The minimum access level needed for project members to modify this project\'s workflow and appearance.", "type": "string", "enum": ["admin", "editor"], "example": "admin"}, "minimum_access_level_for_sharing": {"description": "The minimum access level needed for project members to share the project and manage project memberships.", "type": "string", "enum": ["admin", "editor"], "example": "admin"}}}]}, {"type": "object", "properties": {"custom_fields": {"description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, or object (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.", "type": "object", "additionalProperties": {"type": "string", "description": ""{custom_field_gid}" => Value (can be text, a number, etc.). For date, use format "YYYY-MM-DD" (e.g., 2019-09-15). For date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."}, "example": {"5678904321": "On Hold", "4578152156": "Not Started"}}, "followers": {"description": "*Create-only*. Comma separated string of users. Followers are a subset of members who have opted in to receive "tasks added" notifications for a project.", "type": "string", "example": "12345,23456"}, "owner": {"description": "The current owner of the project, may be null.", "nullable": true, "type": "string", "example": "12345"}, "team": {"description": "The team that this project is shared with.", "type": "string", "example": "12345"}, "workspace": {"type": "string", "description": "The `gid` of a workspace.", "example": "12345"}}}]}}}',  # noqa: E501
    "CREATEPROJECTINWORKSPACE": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "properties": {"archived": {"description": "True if the project is archived, false if not. Archived projects do not show in the UI by default and may be treated differently for queries.", "type": "boolean", "example": false}, "color": {"description": "Color of the project.", "type": "string", "nullable": true, "enum": ["dark-pink", "dark-green", "dark-blue", "dark-red", "dark-teal", "dark-brown", "dark-orange", "dark-purple", "dark-warm-gray", "light-pink", "light-green", "light-blue", "light-red", "light-teal", "light-brown", "light-orange", "light-purple", "light-warm-gray", "none", null], "example": "light-green"}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "current_status": {"allOf": [{"allOf": [{"allOf": [{"description": "*Deprecated: new integrations should prefer the `status_update` resource.*\nA *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: "green" for projects that are on track, "yellow" for projects at risk, and "red" for projects that are behind.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project_status", "x-insert-after": "gid"}, "title": {"description": "The title of the project status update.", "type": "string", "example": "Status Update - Jun 15"}}}, {"type": "object", "properties": {"text": {"description": "The text content of the status update.", "type": "string", "example": "The project is moving forward according to plan..."}, "html_text": {"description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.", "type": "string", "example": "<body>The project <strong>is</strong> moving forward according to plan...</body>"}, "color": {"description": "The color associated with the status update.", "type": "string", "enum": ["green", "yellow", "red", "blue", "complete"]}}}]}, {"type": "object", "properties": {"author": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "created_by": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "modified_at": {"description": "The time at which this project status was last modified.\n*Note: This does not currently reflect any changes in associations such as comments that may have been added or removed from the project status.*", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}}}]}, {"type": "object", "nullable": true, "description": "*Deprecated: new integrations should prefer the `current_status_update` resource.*"}]}, "current_status_update": {"allOf": [{"description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent\'s followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "status_update", "x-insert-after": "gid"}, "title": {"description": "The title of the status update.", "type": "string", "example": "Status Update - Jun 15"}, "resource_subtype": {"type": "string", "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\nThe `resource_subtype`s for `status` objects represent the type of their parent.", "enum": ["project_status_update", "portfolio_status_update", "goal_status_update"], "example": "project_status_update", "readOnly": true}}}, {"type": "object", "nullable": true, "description": "The latest `status_update` posted to this project."}]}, "custom_field_settings": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>custom_fields:read</code></p>\n\nArray of Custom Field Settings (in compact form).", "readOnly": true, "type": "array", "items": {"allOf": [{"description": "Custom Fields Settings objects represent the many-to-many join of the Custom Field and Project as well as stores information that is relevant to that particular pairing.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field_setting", "x-insert-after": "gid"}}}, {"type": "object", "properties": {"project": {"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "description": "*Deprecated: new integrations should prefer the `parent` field.* The id of the project that this custom field settings refers to.", "readOnly": true}]}, "is_important": {"description": "`is_important` is used in the Asana web application to determine if this custom field is displayed in the list/grid view of a project or portfolio.", "type": "boolean", "readOnly": true, "example": false}, "parent": {"allOf": [{"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "description": "The parent to which the custom field is applied. This can be a project or portfolio and indicates that the tasks or projects that the parent contains may be given custom field values for this custom field.", "readOnly": true}]}, "custom_field": {"allOf": [{"allOf": [{"allOf": [{"description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\n\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field", "x-insert-after": "gid"}, "name": {"description": "The name of the custom field.", "type": "string", "example": "Status"}, "type": {"description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people"]}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "enabled": {"description": "*Conditional*. This field applies only to [custom field values](/docs/custom-fields-guide#/accessing-custom-field-values-on-tasks-or-projects) and is not available for [custom field definitions](/docs/custom-fields-guide#/accessing-custom-field-definitions).\nDetermines if the custom field is enabled or not. For more details, see the [Custom Fields documentation](/docs/custom-fields-guide#/enabled-and-disabled-values).", "type": "boolean", "readOnly": true, "example": true}, "representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "date_value": {"description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.", "type": "object", "nullable": true, "properties": {"date": {"type": "string", "description": "A string representing the date in YYYY-MM-DD format.", "example": "2024-08-23"}, "date_time": {"type": "string", "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.", "example": "2024-08-23T22:00:00.000Z"}}}, "enum_value": {"allOf": [{"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}, {"type": "object", "nullable": true, "description": "*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an `enum` custom field."}]}, "multi_enum_values": {"description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "number_value": {"description": "*Conditional*. This number is the value of a `number` custom field.", "type": "number", "nullable": true, "example": 5.2}, "text_value": {"description": "*Conditional*. This string is the value of a `text` custom field.", "type": "string", "nullable": true, "example": "Some Value"}, "display_value": {"description": "A string representation for the value of the custom field. Integrations that don\'t require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.", "type": "string", "readOnly": true, "example": "blue", "nullable": true}}}, {"type": "object", "properties": {"description": {"description": "[Opt In](/docs/inputoutput-options). The description of the custom field.", "type": "string", "example": "Development team priority"}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "precision": {"description": "Only relevant for custom fields of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\nThe identifier format will always have a precision of 0.", "type": "integer", "example": 2}, "format": {"description": "The format of this custom field.", "type": "string", "enum": ["currency", "identifier", "percentage", "custom", "duration", "none"], "example": "custom"}, "currency_code": {"description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.", "type": "string", "nullable": true, "example": "EUR"}, "custom_label": {"description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "example": "gold pieces"}, "custom_label_position": {"description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "enum": ["prefix", "suffix", null], "example": "suffix"}, "is_global_to_workspace": {"description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.", "type": "boolean", "example": true, "readOnly": true}, "has_notifications_enabled": {"description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.", "type": "boolean", "example": true}, "asana_created_field": {"description": "*Conditional*. A unique identifier to associate this field with the template source of truth.", "type": "string", "readOnly": true, "nullable": true, "enum": ["a_v_requirements", "account_name", "actionable", "align_shipping_link", "align_status", "allotted_time", "appointment", "approval_stage", "approved", "article_series", "board_committee", "browser", "campaign_audience", "campaign_project_status", "campaign_regions", "channel_primary", "client_topic_type", "complete_by", "contact", "contact_email_address", "content_channels", "content_channels_needed", "content_stage", "content_type", "contract", "contract_status", "cost", "creation_stage", "creative_channel", "creative_needed", "creative_needs", "data_sensitivity", "deal_size", "delivery_appt", "delivery_appt_date", "department", "department_responsible", "design_request_needed", "design_request_type", "discussion_category", "do_this_task", "editorial_content_status", "editorial_content_tag", "editorial_content_type", "effort", "effort_level", "est_completion_date", "estimated_time", "estimated_value", "expected_cost", "external_steps_needed", "favorite_idea", "feedback_type", "financial", "funding_amount", "grant_application_process", "hiring_candidate_status", "idea_status", "ids_link", "ids_patient_link", "implementation_stage", "insurance", "interview_area", "interview_question_score", "itero_scan_link", "job_s_applied_to", "lab", "launch_status", "lead_status", "localization_language", "localization_market_team", "localization_status", "meeting_minutes", "meeting_needed", "minutes", "mrr", "must_localize", "name_of_foundation", "need_to_follow_up", "next_appointment", "next_steps_sales", "num_people", "number_of_user_reports", "office_location", "onboarding_activity", "owner", "participants_needed", "patient_date_of_birth", "patient_email", "patient_phone", "patient_status", "phone_number", "planning_category", "point_of_contact", "position", "post_format", "prescription", "priority", "priority_level", "product", "product_stage", "progress", "project_size", "project_status", "proposed_budget", "publish_status", "reason_for_scan", "referral", "request_type", "research_status", "responsible_department", "responsible_team", "risk_assessment_status", "room_name", "sales_counterpart", "sentiment", "shipping_link", "social_channels", "stage", "status", "status_design", "status_of_initiative", "system_setup", "task_progress", "team", "team_marketing", "team_responsible", "time_it_takes_to_complete_tasks", "timeframe", "treatment_type", "type_work_requests_it", "use_agency", "user_name", "vendor_category", "vendor_type", "word_count", null], "example": "priority"}}}]}, {"type": "object", "properties": {"representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id", "reference"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "is_value_read_only": {"description": "*Conditional*. This flag describes whether a custom field is read only.", "type": "boolean", "example": false}, "created_by": {"allOf": [{"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, {"nullable": true}]}, "people_value": {"description": "*Conditional*. Only relevant for custom fields of type `people`. This array of [compact user](/reference/users) objects reflects the values of a `people` custom field.", "type": "array", "items": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}, "reference_value": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of objects reflects the values of a `reference` custom field.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}, "name": {"description": "The name of the object.", "type": "string", "example": "Bug Task"}}}}, "privacy_setting": {"description": "The privacy setting of the custom field. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*", "type": "string", "enum": ["public_with_guests", "public", "private"], "example": "public_with_guests"}, "default_access_level": {"description": "The default access level when inviting new members to the custom field. This isn\'t applied when the `privacy_setting` is `private`, or the user is a guest. For local fields in a project or portfolio, the user must additionally have permission to modify the container itself.", "type": "string", "enum": ["admin", "editor", "user"], "example": "user"}, "resource_subtype": {"description": "The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "example": "text", "enum": ["text", "enum", "multi_enum", "number", "date", "people", "reference"]}}}]}, {"type": "object", "description": "The custom field that is applied to the `parent`.", "readOnly": true}]}}}]}}, "default_view": {"description": "The default view (list, board, calendar, or timeline) of a project.", "type": "string", "enum": ["list", "board", "calendar", "timeline"], "example": "calendar"}, "due_date": {"description": "*Deprecated: new integrations should prefer the `due_on` field.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "due_on": {"description": "The day on which this project is due. This takes a date with format YYYY-MM-DD.", "type": "string", "nullable": true, "format": "date", "example": "2019-09-15"}, "html_notes": {"description": "[Opt In](/docs/inputoutput-options). The notes of the project with formatting as HTML.", "type": "string", "example": "<body>These are things we need to purchase.</body>"}, "members": {"description": "Array of users who are members of this project.", "type": "array", "items": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, "readOnly": true}, "modified_at": {"description": "The time at which this project was last modified.\n*Note: This does not currently reflect any changes in associations such as tasks or comments that may have been added or removed from the project.*", "type": "string", "readOnly": true, "format": "date-time", "example": "2012-02-22T02:06:58.147Z"}, "notes": {"description": "Free-form textual information associated with the project (ie., its description).", "type": "string", "example": "These are things we need to purchase."}, "public": {"description": "*Deprecated:* new integrations use `privacy_setting` instead.", "type": "boolean", "deprecated": true, "example": false}, "privacy_setting": {"description": "The privacy setting of the project. *Note: Administrators in your organization may restrict the values of `privacy_setting`.*", "type": "string", "enum": ["public_to_workspace", "private_to_team", "private"], "example": "public_to_workspace"}, "start_on": {"description": "The day on which work for this project begins, or null if the project has no start date. This takes a date with `YYYY-MM-DD` format. *Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter. Additionally, `start_on` and `due_on` cannot be the same date.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-14"}, "default_access_level": {"description": "The default access for users or teams who join or are added as members to the project.", "type": "string", "enum": ["admin", "editor", "commenter", "viewer"], "example": "admin"}, "minimum_access_level_for_customization": {"description": "The minimum access level needed for project members to modify this project\'s workflow and appearance.", "type": "string", "enum": ["admin", "editor"], "example": "admin"}, "minimum_access_level_for_sharing": {"description": "The minimum access level needed for project members to share the project and manage project memberships.", "type": "string", "enum": ["admin", "editor"], "example": "admin"}}}]}, {"type": "object", "properties": {"custom_fields": {"description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, or object (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.", "type": "object", "additionalProperties": {"type": "string", "description": ""{custom_field_gid}" => Value (can be text, a number, etc.). For date, use format "YYYY-MM-DD" (e.g., 2019-09-15). For date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."}, "example": {"5678904321": "On Hold", "4578152156": "Not Started"}}, "followers": {"description": "*Create-only*. Comma separated string of users. Followers are a subset of members who have opted in to receive "tasks added" notifications for a project.", "type": "string", "example": "12345,23456"}, "owner": {"description": "The current owner of the project, may be null.", "nullable": true, "type": "string", "example": "12345"}, "team": {"description": "The team that this project is shared with.", "type": "string", "example": "12345"}, "workspace": {"type": "string", "description": "The `gid` of a workspace.", "example": "12345"}}}]}}}',  # noqa: E501
    "ADDCUSTOMFIELDSETTINGTOPROJECT": '{"type": "object", "properties": {"data": {"type": "object", "required": ["custom_field"], "properties": {"custom_field": {"oneOf": [{"type": "string", "description": "The custom field to associate with this container.", "example": "14916"}, {"allOf": [{"allOf": [{"allOf": [{"description": "Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [custom fields](/reference/custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.\n\nUsers in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "custom_field", "x-insert-after": "gid"}, "name": {"description": "The name of the custom field.", "type": "string", "example": "Status"}, "type": {"description": "*Deprecated: new integrations should prefer the resource_subtype field.* The type of the custom field. Must be one of the given values.\n", "type": "string", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people"]}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "enabled": {"description": "*Conditional*. This field applies only to [custom field values](/docs/custom-fields-guide#/accessing-custom-field-values-on-tasks-or-projects) and is not available for [custom field definitions](/docs/custom-fields-guide#/accessing-custom-field-definitions).\nDetermines if the custom field is enabled or not. For more details, see the [Custom Fields documentation](/docs/custom-fields-guide#/enabled-and-disabled-values).", "type": "boolean", "readOnly": true, "example": true}, "representation_type": {"description": "This field tells the type of the custom field.", "type": "string", "example": "number", "readOnly": true, "enum": ["text", "enum", "multi_enum", "number", "date", "people", "formula", "custom_id"]}, "id_prefix": {"description": "This field is the unique custom ID string for the custom field.", "type": "string", "nullable": true, "example": "ID"}, "input_restrictions": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of strings reflects the allowed types of objects that can be written to a `reference` custom field value.", "type": "array", "items": {"type": "string"}, "example": "task"}, "is_formula_field": {"description": "*Conditional*. This flag describes whether a custom field is a formula custom field.", "type": "boolean", "example": false}, "date_value": {"description": "*Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.", "type": "object", "nullable": true, "properties": {"date": {"type": "string", "description": "A string representing the date in YYYY-MM-DD format.", "example": "2024-08-23"}, "date_time": {"type": "string", "description": "A string representing the date in ISO 8601 format. If no time value is selected, the value of `date-time` will be `null`.", "example": "2024-08-23T22:00:00.000Z"}}}, "enum_value": {"allOf": [{"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}, {"type": "object", "nullable": true, "description": "*Conditional*. Only relevant for custom fields of type `enum`. This object is the chosen value of an `enum` custom field."}]}, "multi_enum_values": {"description": "*Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "number_value": {"description": "*Conditional*. This number is the value of a `number` custom field.", "type": "number", "nullable": true, "example": 5.2}, "text_value": {"description": "*Conditional*. This string is the value of a `text` custom field.", "type": "string", "nullable": true, "example": "Some Value"}, "display_value": {"description": "A string representation for the value of the custom field. Integrations that don\'t require the underlying type should use this field to read values. Using this field will future-proof an app against new custom field types.", "type": "string", "readOnly": true, "example": "blue", "nullable": true}}}, {"type": "object", "properties": {"description": {"description": "[Opt In](/docs/inputoutput-options). The description of the custom field.", "type": "string", "example": "Development team priority"}, "enum_options": {"description": "*Conditional*. Only relevant for custom fields of type `enum` or `multi_enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/reference/createenumoptionforcustomfield).", "type": "array", "items": {"description": "Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.\n\nYou can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.\n\n**It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.\n\nOn creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.\n\nEnum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.\n\nAn enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "enum_option", "x-insert-after": "gid"}, "name": {"description": "The name of the enum option.", "type": "string", "example": "Low"}, "enabled": {"description": "Whether or not the enum option is a selectable value for the custom field.", "type": "boolean", "example": true}, "color": {"description": "The color of the enum option. Defaults to `none`.", "type": "string", "example": "blue"}}}}, "precision": {"description": "Only relevant for custom fields of type `Number`. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.\nFor percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.\nThe identifier format will always have a precision of 0.", "type": "integer", "example": 2}, "format": {"description": "The format of this custom field.", "type": "string", "enum": ["currency", "identifier", "percentage", "custom", "duration", "none"], "example": "custom"}, "currency_code": {"description": "ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.", "type": "string", "nullable": true, "example": "EUR"}, "custom_label": {"description": "This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "example": "gold pieces"}, "custom_label_position": {"description": "Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.", "type": "string", "nullable": true, "enum": ["prefix", "suffix", null], "example": "suffix"}, "is_global_to_workspace": {"description": "This flag describes whether this custom field is available to every container in the workspace. Before project-specific custom fields, this field was always true.", "type": "boolean", "example": true, "readOnly": true}, "has_notifications_enabled": {"description": "*Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.", "type": "boolean", "example": true}, "asana_created_field": {"description": "*Conditional*. A unique identifier to associate this field with the template source of truth.", "type": "string", "readOnly": true, "nullable": true, "enum": ["a_v_requirements", "account_name", "actionable", "align_shipping_link", "align_status", "allotted_time", "appointment", "approval_stage", "approved", "article_series", "board_committee", "browser", "campaign_audience", "campaign_project_status", "campaign_regions", "channel_primary", "client_topic_type", "complete_by", "contact", "contact_email_address", "content_channels", "content_channels_needed", "content_stage", "content_type", "contract", "contract_status", "cost", "creation_stage", "creative_channel", "creative_needed", "creative_needs", "data_sensitivity", "deal_size", "delivery_appt", "delivery_appt_date", "department", "department_responsible", "design_request_needed", "design_request_type", "discussion_category", "do_this_task", "editorial_content_status", "editorial_content_tag", "editorial_content_type", "effort", "effort_level", "est_completion_date", "estimated_time", "estimated_value", "expected_cost", "external_steps_needed", "favorite_idea", "feedback_type", "financial", "funding_amount", "grant_application_process", "hiring_candidate_status", "idea_status", "ids_link", "ids_patient_link", "implementation_stage", "insurance", "interview_area", "interview_question_score", "itero_scan_link", "job_s_applied_to", "lab", "launch_status", "lead_status", "localization_language", "localization_market_team", "localization_status", "meeting_minutes", "meeting_needed", "minutes", "mrr", "must_localize", "name_of_foundation", "need_to_follow_up", "next_appointment", "next_steps_sales", "num_people", "number_of_user_reports", "office_location", "onboarding_activity", "owner", "participants_needed", "patient_date_of_birth", "patient_email", "patient_phone", "patient_status", "phone_number", "planning_category", "point_of_contact", "position", "post_format", "prescription", "priority", "priority_level", "product", "product_stage", "progress", "project_size", "project_status", "proposed_budget", "publish_status", "reason_for_scan", "referral", "request_type", "research_status", "responsible_department", "responsible_team", "risk_assessment_status", "room_name", "sales_counterpart", "sentiment", "shipping_link", "social_channels", "stage", "status", "status_design", "status_of_initiative", "system_setup", "task_progress", "team", "team_marketing", "team_responsible", "time_it_takes_to_complete_tasks", "timeframe", "treatment_type", "type_work_requests_it", "use_agency", "user_name", "vendor_category", "vendor_type", "word_count", null], "example": "priority"}}}]}, {"type": "object", "required": ["workspace"], "properties": {"workspace": {"type": "string", "description": "*Create-Only* The workspace to create a custom field in.", "example": "1331"}, "owned_by_app": {"type": "boolean", "description": "*Allow-listed*. Instructs the API that this Custom Field is app-owned. This parameter is allow-listed to specific apps at this point in time. For apps that are not allow-listed, providing this parameter will result in a `403 Forbidden`."}, "people_value": {"description": "*Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.", "type": "array", "items": {"type": "string", "description": "The GID of a user."}, "example": ["12345"]}, "reference_value": {"description": "*Conditional*. Only relevant for custom fields of type `reference`. This array of GIDs reflects the objects to be written to a `reference` custom field. Note that *write* operations will replace existing objects (if any) in the custom field with the objects specified in this array.", "type": "array", "items": {"type": "string", "description": "The GID of an object."}, "example": ["12345"]}}}]}, {"type": "object", "required": ["resource_subtype"], "properties": {"resource_subtype": {"description": "The type of the custom field. Must be one of the given values.", "type": "string", "example": "text", "enum": ["text", "enum", "multi_enum", "number", "date", "people", "reference"]}}}]}]}, "is_important": {"description": "Whether this field should be considered important to this container (for instance, to display in the list view of items in the container).", "type": "boolean", "example": true}, "insert_before": {"description": "A gid of a Custom Field Setting on this container, before which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.", "type": "string", "example": "1331"}, "insert_after": {"description": "A gid of a Custom Field Setting on this container, after which the new Custom Field Setting will be added.  `insert_before` and `insert_after` parameters cannot both be specified.", "type": "string", "example": "1331"}}}}}',  # noqa: E501
    "TRIGGERASANARULE": '{"type": "object", "properties": {"data": {"type": "object", "properties": {"resource": {"description": "The ID of the resource. For the duration of the beta, this resource is always a task, and this task must exist in the project in which the rule is created.", "type": "string", "example": "12345"}, "action_data": {"type": "object", "additionalProperties": true, "description": "The dynamic keys and values of the request. These fields are intended to be used in the action for the rule associated with this trigger.", "example": {"jira_ticket_name": "Test", "jira_ticket_id": "123"}}}, "required": ["resource", "action_data"]}}}',  # noqa: E501
    "CREATESTATUSUPDATE": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent\'s followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "status_update", "x-insert-after": "gid"}, "title": {"description": "The title of the status update.", "type": "string", "example": "Status Update - Jun 15"}, "resource_subtype": {"type": "string", "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\nThe `resource_subtype`s for `status` objects represent the type of their parent.", "enum": ["project_status_update", "portfolio_status_update", "goal_status_update"], "example": "project_status_update", "readOnly": true}}}, {"type": "object", "required": ["text", "status_type"], "properties": {"text": {"description": "The text content of the status update.", "type": "string", "example": "The project is moving forward according to plan..."}, "html_text": {"description": "[Opt In](/docs/inputoutput-options). The text content of the status update with formatting as HTML.", "type": "string", "example": "<body>The project <strong>is</strong> moving forward according to plan...</body>"}, "status_type": {"description": "The type associated with the status update. This represents the current state of the object this object is on.", "type": "string", "enum": ["on_track", "at_risk", "off_track", "on_hold", "complete", "achieved", "partial", "missed", "dropped"]}}}]}, {"type": "object", "required": ["parent"], "properties": {"parent": {"allOf": [{"type": "string", "description": "The id of parent to send this status update to. This can be a project, goal or portfolio."}]}}}]}}}',  # noqa: E501
    "UPDATEASANASTORY": '{"type": "object", "properties": {"data": {"description": "A story represents an activity associated with an object in the Asana system.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "story", "x-insert-after": "gid"}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "resource_subtype": {"description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.", "type": "string", "readOnly": true, "example": "comment_added"}, "text": {"description": "The plain text of the comment to add. Cannot be used with html_text.", "type": "string", "example": "This is a comment."}, "html_text": {"description": "[Opt In](/docs/inputoutput-options). HTML formatted text for a comment. This will not include the name of the creator.", "type": "string", "example": "<body>This is a comment.</body>"}, "is_pinned": {"description": "*Conditional*. Whether the story should be pinned on the resource.", "type": "boolean", "example": false}, "sticker_name": {"description": "The name of the sticker in this story. `null` if there is no sticker.", "type": "string", "enum": ["green_checkmark", "people_dancing", "dancing_unicorn", "heart", "party_popper", "people_waving_flags", "splashing_narwhal", "trophy", "yeti_riding_unicorn", "celebrating_people", "determined_climbers", "phoenix_spreading_love"], "example": "dancing_unicorn"}}}}}',  # noqa: E501
    "ADDTASKCOMMENT": '{"type": "object", "properties": {"data": {"description": "A story represents an activity associated with an object in the Asana system.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "story", "x-insert-after": "gid"}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "resource_subtype": {"description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.", "type": "string", "readOnly": true, "example": "comment_added"}, "text": {"description": "The plain text of the comment to add. Cannot be used with html_text.", "type": "string", "example": "This is a comment."}, "html_text": {"description": "[Opt In](/docs/inputoutput-options). HTML formatted text for a comment. This will not include the name of the creator.", "type": "string", "example": "<body>This is a comment.</body>"}, "is_pinned": {"description": "*Conditional*. Whether the story should be pinned on the resource.", "type": "boolean", "example": false}, "sticker_name": {"description": "The name of the sticker in this story. `null` if there is no sticker.", "type": "string", "enum": ["green_checkmark", "people_dancing", "dancing_unicorn", "heart", "party_popper", "people_waving_flags", "splashing_narwhal", "trophy", "yeti_riding_unicorn", "celebrating_people", "determined_climbers", "phoenix_spreading_love"], "example": "dancing_unicorn"}}}}}',  # noqa: E501
    "CREATENEWASANATAG": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *tag* is a label that can be attached to any task in Asana. It exists in a single workspace or organization.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "tag", "x-insert-after": "gid"}, "name": {"description": "Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "properties": {"color": {"type": "string", "description": "Color of the tag.", "nullable": true, "enum": ["dark-pink", "dark-green", "dark-blue", "dark-red", "dark-teal", "dark-brown", "dark-orange", "dark-purple", "dark-warm-gray", "light-pink", "light-green", "light-blue", "light-red", "light-teal", "light-brown", "light-orange", "light-purple", "light-warm-gray", null], "example": "light-green"}, "notes": {"description": "Free-form textual information associated with the tag (i.e. its description).", "type": "string", "example": "Mittens really likes the stuff from Humboldt."}}}]}, {"type": "object", "properties": {"followers": {"type": "array", "description": "An array of strings identifying users. These can either be the string "me", an email, or the gid of a user.", "items": {"type": "string"}, "example": ["12345", "42563"]}, "workspace": {"type": "string", "x-env-variable": true, "description": "Gid of an object.", "example": "12345"}}}]}}}',  # noqa: E501
    "UPDATEASANATAG": '{"type": "object", "properties": {"data": {"allOf": [{"description": "A *tag* is a label that can be attached to any task in Asana. It exists in a single workspace or organization.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "tag", "x-insert-after": "gid"}, "name": {"description": "Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "properties": {"color": {"type": "string", "description": "Color of the tag.", "nullable": true, "enum": ["dark-pink", "dark-green", "dark-blue", "dark-red", "dark-teal", "dark-brown", "dark-orange", "dark-purple", "dark-warm-gray", "light-pink", "light-green", "light-blue", "light-red", "light-teal", "light-brown", "light-orange", "light-purple", "light-warm-gray", null], "example": "light-green"}, "notes": {"description": "Free-form textual information associated with the tag (i.e. its description).", "type": "string", "example": "Mittens really likes the stuff from Humboldt."}}}]}}}',  # noqa: E501
    "CREATEWORKSPACETAG": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "A *tag* is a label that can be attached to any task in Asana. It exists in a single workspace or organization.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "tag", "x-insert-after": "gid"}, "name": {"description": "Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, {"type": "object", "properties": {"color": {"type": "string", "description": "Color of the tag.", "nullable": true, "enum": ["dark-pink", "dark-green", "dark-blue", "dark-red", "dark-teal", "dark-brown", "dark-orange", "dark-purple", "dark-warm-gray", "light-pink", "light-green", "light-blue", "light-red", "light-teal", "light-brown", "light-orange", "light-purple", "light-warm-gray", null], "example": "light-green"}, "notes": {"description": "Free-form textual information associated with the tag (i.e. its description).", "type": "string", "example": "Mittens really likes the stuff from Humboldt."}}}]}, {"type": "object", "properties": {"followers": {"type": "array", "description": "An array of strings identifying users. These can either be the string "me", an email, or the gid of a user.", "items": {"type": "string"}, "example": ["12345", "42563"]}}}]}}}',  # noqa: E501
    "ADDASANATASK": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "The *task* is the basic object around which many operations in Asana are centered.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}, "name": {"description": "The name of the task.", "type": "string", "example": "Bug Task"}, "resource_subtype": {"type": "string", "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\nThe resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.", "enum": ["default_task", "milestone", "approval"], "example": "default_task"}, "created_by": {"type": "object", "readOnly": true, "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "properties": {"gid": {"description": "Globally unique identifier of the resource.", "type": "string", "example": "1111"}, "resource_type": {"description": "The type of resource.", "type": "string", "example": "user"}}}}}, {"type": "object", "properties": {"approval_status": {"type": "string", "description": "*Conditional* Reflects the approval status of this task. This field is kept in sync with `completed`, meaning `pending` translates to false while `approved`, `rejected`, and `changes_requested` translate to true. If you set completed to true, this field will be set to `approved`.", "enum": ["pending", "approved", "rejected", "changes_requested"], "example": "pending"}, "assignee_status": {"description": "*Deprecated* Scheduling status of this task for the user it is assigned to. This field can only be set if the assignee is non-null. Setting this field to "inbox" or "upcoming" inserts it at the top of the section, while the other options will insert at the bottom.", "type": "string", "enum": ["today", "upcoming", "later", "new", "inbox"], "example": "upcoming"}, "completed": {"description": "True if the task is currently marked complete, false if not.", "type": "boolean", "example": false}, "completed_at": {"description": "The time at which this task was completed, or null if the task is incomplete.", "type": "string", "format": "date-time", "readOnly": true, "nullable": true, "example": "2012-02-22T02:06:58.147Z"}, "completed_by": {"allOf": [{"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, {"readOnly": true, "nullable": true}]}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "dependencies": {"description": "[Opt In](/docs/inputoutput-options). Array of resources referencing tasks that this task depends on. The objects contain only the gid of the dependency.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}}}, "readOnly": true}, "dependents": {"description": "[Opt In](/docs/inputoutput-options). Array of resources referencing tasks that depend on this task. The objects contain only the ID of the dependent.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}}}, "readOnly": true}, "due_at": {"description": "The UTC date and time on which this task is due, or null if the task has no due time. This takes an ISO 8601 date string in UTC and should not be used together with `due_on`.", "type": "string", "format": "date-time", "example": "2019-09-15T02:06:58.147Z", "nullable": true}, "due_on": {"description": "The localized date on which this task is due, or null if the task has no due date. This takes a date with `YYYY-MM-DD` format and should not be used together with `due_at`.", "type": "string", "format": "date", "example": "2019-09-15", "nullable": true}, "external": {"description": "*OAuth Required*. *Conditional*. This field is returned only if external values are set or included by using [Opt In] (/docs/inputoutput-options).\nThe external field allows you to store app-specific metadata on tasks, including a gid that can be used to retrieve tasks and a data blob that can store app-specific character strings. Note that you will need to authenticate with Oauth to access or modify this data. Once an external gid is set, you can use the notation `external:custom_gid` to reference your object anywhere in the API where you may use the original object gid. See the page on Custom External Data for more details.", "type": "object", "properties": {"gid": {"type": "string", "example": "1234"}, "data": {"type": "string", "example": "A blob of information."}}, "example": {"gid": "my_gid", "data": "A blob of information"}}, "html_notes": {"description": "[Opt In](/docs/inputoutput-options). The notes of the text with formatting as HTML.", "type": "string", "example": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>"}, "hearted": {"description": "*Deprecated - please use liked instead* True if the task is hearted by the authorized user, false if not.", "type": "boolean", "example": true, "readOnly": true}, "hearts": {"description": "*Deprecated - please use likes instead* Array of likes for users who have hearted this task.", "type": "array", "items": {"type": "object", "description": "An object to represent a user\'s like.", "properties": {"gid": {"description": "Globally unique identifier of the object, as a string.", "type": "string", "readOnly": true, "example": "12345"}, "user": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}}, "readOnly": true}, "is_rendered_as_separator": {"description": "[Opt In](/docs/inputoutput-options). In some contexts tasks can be rendered as a visual separator; for instance, subtasks can appear similar to [sections](/reference/sections) without being true `section` objects. If a `task` object is rendered this way in any context it will have the property `is_rendered_as_separator` set to `true`. This parameter only applies to regular tasks with `resource_subtype` of `default_task`. Tasks with `resource_subtype` of `milestone`, `approval`, or custom task types will not have this property and cannot be rendered as separators.", "type": "boolean", "example": false, "readOnly": true}, "liked": {"description": "True if the task is liked by the authorized user, false if not.", "type": "boolean", "example": true}, "likes": {"description": "Array of likes for users who have liked this task.", "type": "array", "items": {"type": "object", "description": "An object to represent a user\'s like.", "properties": {"gid": {"description": "Globally unique identifier of the object, as a string.", "type": "string", "readOnly": true, "example": "12345"}, "user": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}}, "readOnly": true}, "memberships": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>projects:read</code>, <code>project_sections:read</code></p>\n\n*Create-only*. Array of projects this task is associated with and the section it is in. At task creation time, this array can be used to add the task to specific sections. After task creation, these associations can be modified using the `addProject` and `removeProject` endpoints. Note that over time, more types of memberships may be added to this property.", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"project": {"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, "section": {"description": "A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "section", "x-insert-after": "gid"}, "name": {"description": "The name of the section (i.e. the text displayed as the section header).", "type": "string", "example": "Next Actions"}}}}}}, "modified_at": {"description": "The time at which this task was last modified.\n\nThe following conditions will change `modified_at`:\n\n- story is created on a task\n- story is trashed on a task\n- attachment is trashed on a task\n- task is assigned or unassigned\n- custom field value is changed\n- the task itself is trashed\n- Or if any of the following fields are updated:\n  - completed\n  - name\n  - due_date\n  - description\n  - attachments\n  - items\n  - schedule_status\n\nThe following conditions will _not_ change `modified_at`:\n\n- moving to a new container (project, portfolio, etc)\n- comments being added to the task (but the stories they generate\n  _will_ affect `modified_at`)", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "name": {"description": "Name of the task. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Buy catnip"}, "notes": {"description": "Free-form textual information associated with the task (i.e. its description).", "type": "string", "example": "Mittens really likes the stuff from Humboldt."}, "num_hearts": {"description": "*Deprecated - please use likes instead* The number of users who have hearted this task.", "type": "integer", "example": 5, "readOnly": true}, "num_likes": {"description": "The number of users who have liked this task.", "type": "integer", "example": 5, "readOnly": true}, "num_subtasks": {"description": "[Opt In](/docs/inputoutput-options). The number of subtasks on this task.\n", "type": "integer", "example": 3, "readOnly": true}, "start_at": {"description": "Date and time on which work begins for the task, or null if the task has no start time. This takes an ISO 8601 date string in UTC and should not be used together with `start_on`.\n*Note: `due_at` must be present in the request when setting or unsetting the `start_at` parameter.*", "type": "string", "nullable": true, "format": "date-time", "example": "2019-09-14T02:06:58.147Z"}, "start_on": {"description": "The day on which work begins for the task , or null if the task has no start date. This takes a date with `YYYY-MM-DD` format and should not be used together with `start_at`.\n*Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-14"}, "actual_time_minutes": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>time_tracking_entries:read</code></p>\n\nThis value represents the sum of all the Time Tracking entries in the Actual Time field on a given Task. It is represented as a nullable long value.", "type": "number", "example": 200, "readOnly": true, "nullable": true}}}]}, {"type": "object", "properties": {"assignee": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "Gid of a user.", "example": "12345", "nullable": true}, "assignee_section": {"nullable": true, "type": "string", "description": "The *assignee section* is a subdivision of a project that groups tasks together in the assignee\'s "My tasks" list. It can either be a header above a list of tasks in a list view or a column in a board view of "My tasks."\nThe `assignee_section` property will be returned in the response only if the request was sent by the user who is the assignee of the task. Note that you can only write to `assignee_section` with the gid of an existing section visible in the user\'s "My tasks" list.", "example": "12345"}, "custom_fields": {"description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, object, or array (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.", "type": "object", "additionalProperties": {"type": "string", "description": ""{custom_field_gid}" => Value (can be text, a number, etc.). For date, use format "YYYY-MM-DD" (e.g., 2019-09-15). For date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."}, "example": {"5678904321": "On Hold", "4578152156": "Not Started"}}, "followers": {"type": "array", "description": "*Create-Only* An array of strings identifying users. These can either be the string "me", an email, or the gid of a user. In order to change followers on an existing task use `addFollowers` and `removeFollowers`.", "items": {"type": "string", "description": "Gid of a user."}, "example": ["12345"]}, "parent": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "Gid of a task.", "example": "12345", "nullable": true}, "projects": {"type": "array", "description": "*Create-Only* Array of project gids. In order to change projects on an existing task use `addProject` and `removeProject`.", "items": {"type": "string", "description": "Gid of a project."}, "example": ["12345"]}, "tags": {"type": "array", "description": "*Create-Only* Array of tag gids. In order to change tags on an existing task use `addTag` and `removeTag`.", "items": {"type": "string", "description": "Gid of a tag."}, "example": ["12345"]}, "workspace": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "Gid of a workspace.", "example": "12345"}, "custom_type": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "GID or globally-unique identifier of a custom_type.", "example": "12345", "nullable": true}, "custom_type_status_option": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "GID or globally-unique identifier of a custom_type_status_option", "example": "12345", "nullable": true}}}]}}}',  # noqa: E501
    "UPDATETASK": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "The *task* is the basic object around which many operations in Asana are centered.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}, "name": {"description": "The name of the task.", "type": "string", "example": "Bug Task"}, "resource_subtype": {"type": "string", "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\nThe resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.", "enum": ["default_task", "milestone", "approval"], "example": "default_task"}, "created_by": {"type": "object", "readOnly": true, "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "properties": {"gid": {"description": "Globally unique identifier of the resource.", "type": "string", "example": "1111"}, "resource_type": {"description": "The type of resource.", "type": "string", "example": "user"}}}}}, {"type": "object", "properties": {"approval_status": {"type": "string", "description": "*Conditional* Reflects the approval status of this task. This field is kept in sync with `completed`, meaning `pending` translates to false while `approved`, `rejected`, and `changes_requested` translate to true. If you set completed to true, this field will be set to `approved`.", "enum": ["pending", "approved", "rejected", "changes_requested"], "example": "pending"}, "assignee_status": {"description": "*Deprecated* Scheduling status of this task for the user it is assigned to. This field can only be set if the assignee is non-null. Setting this field to "inbox" or "upcoming" inserts it at the top of the section, while the other options will insert at the bottom.", "type": "string", "enum": ["today", "upcoming", "later", "new", "inbox"], "example": "upcoming"}, "completed": {"description": "True if the task is currently marked complete, false if not.", "type": "boolean", "example": false}, "completed_at": {"description": "The time at which this task was completed, or null if the task is incomplete.", "type": "string", "format": "date-time", "readOnly": true, "nullable": true, "example": "2012-02-22T02:06:58.147Z"}, "completed_by": {"allOf": [{"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, {"readOnly": true, "nullable": true}]}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "dependencies": {"description": "[Opt In](/docs/inputoutput-options). Array of resources referencing tasks that this task depends on. The objects contain only the gid of the dependency.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}}}, "readOnly": true}, "dependents": {"description": "[Opt In](/docs/inputoutput-options). Array of resources referencing tasks that depend on this task. The objects contain only the ID of the dependent.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}}}, "readOnly": true}, "due_at": {"description": "The UTC date and time on which this task is due, or null if the task has no due time. This takes an ISO 8601 date string in UTC and should not be used together with `due_on`.", "type": "string", "format": "date-time", "example": "2019-09-15T02:06:58.147Z", "nullable": true}, "due_on": {"description": "The localized date on which this task is due, or null if the task has no due date. This takes a date with `YYYY-MM-DD` format and should not be used together with `due_at`.", "type": "string", "format": "date", "example": "2019-09-15", "nullable": true}, "external": {"description": "*OAuth Required*. *Conditional*. This field is returned only if external values are set or included by using [Opt In] (/docs/inputoutput-options).\nThe external field allows you to store app-specific metadata on tasks, including a gid that can be used to retrieve tasks and a data blob that can store app-specific character strings. Note that you will need to authenticate with Oauth to access or modify this data. Once an external gid is set, you can use the notation `external:custom_gid` to reference your object anywhere in the API where you may use the original object gid. See the page on Custom External Data for more details.", "type": "object", "properties": {"gid": {"type": "string", "example": "1234"}, "data": {"type": "string", "example": "A blob of information."}}, "example": {"gid": "my_gid", "data": "A blob of information"}}, "html_notes": {"description": "[Opt In](/docs/inputoutput-options). The notes of the text with formatting as HTML.", "type": "string", "example": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>"}, "hearted": {"description": "*Deprecated - please use liked instead* True if the task is hearted by the authorized user, false if not.", "type": "boolean", "example": true, "readOnly": true}, "hearts": {"description": "*Deprecated - please use likes instead* Array of likes for users who have hearted this task.", "type": "array", "items": {"type": "object", "description": "An object to represent a user\'s like.", "properties": {"gid": {"description": "Globally unique identifier of the object, as a string.", "type": "string", "readOnly": true, "example": "12345"}, "user": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}}, "readOnly": true}, "is_rendered_as_separator": {"description": "[Opt In](/docs/inputoutput-options). In some contexts tasks can be rendered as a visual separator; for instance, subtasks can appear similar to [sections](/reference/sections) without being true `section` objects. If a `task` object is rendered this way in any context it will have the property `is_rendered_as_separator` set to `true`. This parameter only applies to regular tasks with `resource_subtype` of `default_task`. Tasks with `resource_subtype` of `milestone`, `approval`, or custom task types will not have this property and cannot be rendered as separators.", "type": "boolean", "example": false, "readOnly": true}, "liked": {"description": "True if the task is liked by the authorized user, false if not.", "type": "boolean", "example": true}, "likes": {"description": "Array of likes for users who have liked this task.", "type": "array", "items": {"type": "object", "description": "An object to represent a user\'s like.", "properties": {"gid": {"description": "Globally unique identifier of the object, as a string.", "type": "string", "readOnly": true, "example": "12345"}, "user": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}}, "readOnly": true}, "memberships": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>projects:read</code>, <code>project_sections:read</code></p>\n\n*Create-only*. Array of projects this task is associated with and the section it is in. At task creation time, this array can be used to add the task to specific sections. After task creation, these associations can be modified using the `addProject` and `removeProject` endpoints. Note that over time, more types of memberships may be added to this property.", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"project": {"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, "section": {"description": "A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "section", "x-insert-after": "gid"}, "name": {"description": "The name of the section (i.e. the text displayed as the section header).", "type": "string", "example": "Next Actions"}}}}}}, "modified_at": {"description": "The time at which this task was last modified.\n\nThe following conditions will change `modified_at`:\n\n- story is created on a task\n- story is trashed on a task\n- attachment is trashed on a task\n- task is assigned or unassigned\n- custom field value is changed\n- the task itself is trashed\n- Or if any of the following fields are updated:\n  - completed\n  - name\n  - due_date\n  - description\n  - attachments\n  - items\n  - schedule_status\n\nThe following conditions will _not_ change `modified_at`:\n\n- moving to a new container (project, portfolio, etc)\n- comments being added to the task (but the stories they generate\n  _will_ affect `modified_at`)", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "name": {"description": "Name of the task. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Buy catnip"}, "notes": {"description": "Free-form textual information associated with the task (i.e. its description).", "type": "string", "example": "Mittens really likes the stuff from Humboldt."}, "num_hearts": {"description": "*Deprecated - please use likes instead* The number of users who have hearted this task.", "type": "integer", "example": 5, "readOnly": true}, "num_likes": {"description": "The number of users who have liked this task.", "type": "integer", "example": 5, "readOnly": true}, "num_subtasks": {"description": "[Opt In](/docs/inputoutput-options). The number of subtasks on this task.\n", "type": "integer", "example": 3, "readOnly": true}, "start_at": {"description": "Date and time on which work begins for the task, or null if the task has no start time. This takes an ISO 8601 date string in UTC and should not be used together with `start_on`.\n*Note: `due_at` must be present in the request when setting or unsetting the `start_at` parameter.*", "type": "string", "nullable": true, "format": "date-time", "example": "2019-09-14T02:06:58.147Z"}, "start_on": {"description": "The day on which work begins for the task , or null if the task has no start date. This takes a date with `YYYY-MM-DD` format and should not be used together with `start_at`.\n*Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-14"}, "actual_time_minutes": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>time_tracking_entries:read</code></p>\n\nThis value represents the sum of all the Time Tracking entries in the Actual Time field on a given Task. It is represented as a nullable long value.", "type": "number", "example": 200, "readOnly": true, "nullable": true}}}]}, {"type": "object", "properties": {"assignee": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "Gid of a user.", "example": "12345", "nullable": true}, "assignee_section": {"nullable": true, "type": "string", "description": "The *assignee section* is a subdivision of a project that groups tasks together in the assignee\'s "My tasks" list. It can either be a header above a list of tasks in a list view or a column in a board view of "My tasks."\nThe `assignee_section` property will be returned in the response only if the request was sent by the user who is the assignee of the task. Note that you can only write to `assignee_section` with the gid of an existing section visible in the user\'s "My tasks" list.", "example": "12345"}, "custom_fields": {"description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, object, or array (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.", "type": "object", "additionalProperties": {"type": "string", "description": ""{custom_field_gid}" => Value (can be text, a number, etc.). For date, use format "YYYY-MM-DD" (e.g., 2019-09-15). For date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."}, "example": {"5678904321": "On Hold", "4578152156": "Not Started"}}, "followers": {"type": "array", "description": "*Create-Only* An array of strings identifying users. These can either be the string "me", an email, or the gid of a user. In order to change followers on an existing task use `addFollowers` and `removeFollowers`.", "items": {"type": "string", "description": "Gid of a user."}, "example": ["12345"]}, "parent": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "Gid of a task.", "example": "12345", "nullable": true}, "projects": {"type": "array", "description": "*Create-Only* Array of project gids. In order to change projects on an existing task use `addProject` and `removeProject`.", "items": {"type": "string", "description": "Gid of a project."}, "example": ["12345"]}, "tags": {"type": "array", "description": "*Create-Only* Array of tag gids. In order to change tags on an existing task use `addTag` and `removeTag`.", "items": {"type": "string", "description": "Gid of a tag."}, "example": ["12345"]}, "workspace": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "Gid of a workspace.", "example": "12345"}, "custom_type": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "GID or globally-unique identifier of a custom_type.", "example": "12345", "nullable": true}, "custom_type_status_option": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "GID or globally-unique identifier of a custom_type_status_option", "example": "12345", "nullable": true}}}]}}}',  # noqa: E501
    "CREATESUBTASKFORTASK": '{"type": "object", "properties": {"data": {"allOf": [{"allOf": [{"description": "The *task* is the basic object around which many operations in Asana are centered.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}, "name": {"description": "The name of the task.", "type": "string", "example": "Bug Task"}, "resource_subtype": {"type": "string", "description": "The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.\nThe resource_subtype `milestone` represent a single moment in time. This means tasks with this subtype cannot have a start_date.", "enum": ["default_task", "milestone", "approval"], "example": "default_task"}, "created_by": {"type": "object", "readOnly": true, "description": "[Opt In](/docs/inputoutput-options). A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "properties": {"gid": {"description": "Globally unique identifier of the resource.", "type": "string", "example": "1111"}, "resource_type": {"description": "The type of resource.", "type": "string", "example": "user"}}}}}, {"type": "object", "properties": {"approval_status": {"type": "string", "description": "*Conditional* Reflects the approval status of this task. This field is kept in sync with `completed`, meaning `pending` translates to false while `approved`, `rejected`, and `changes_requested` translate to true. If you set completed to true, this field will be set to `approved`.", "enum": ["pending", "approved", "rejected", "changes_requested"], "example": "pending"}, "assignee_status": {"description": "*Deprecated* Scheduling status of this task for the user it is assigned to. This field can only be set if the assignee is non-null. Setting this field to "inbox" or "upcoming" inserts it at the top of the section, while the other options will insert at the bottom.", "type": "string", "enum": ["today", "upcoming", "later", "new", "inbox"], "example": "upcoming"}, "completed": {"description": "True if the task is currently marked complete, false if not.", "type": "boolean", "example": false}, "completed_at": {"description": "The time at which this task was completed, or null if the task is incomplete.", "type": "string", "format": "date-time", "readOnly": true, "nullable": true, "example": "2012-02-22T02:06:58.147Z"}, "completed_by": {"allOf": [{"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}, {"readOnly": true, "nullable": true}]}, "created_at": {"description": "The time at which this resource was created.", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "dependencies": {"description": "[Opt In](/docs/inputoutput-options). Array of resources referencing tasks that this task depends on. The objects contain only the gid of the dependency.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}}}, "readOnly": true}, "dependents": {"description": "[Opt In](/docs/inputoutput-options). Array of resources referencing tasks that depend on this task. The objects contain only the ID of the dependent.", "type": "array", "items": {"description": "A generic Asana Resource, containing a globally unique identifier.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "task", "x-insert-after": "gid"}}}, "readOnly": true}, "due_at": {"description": "The UTC date and time on which this task is due, or null if the task has no due time. This takes an ISO 8601 date string in UTC and should not be used together with `due_on`.", "type": "string", "format": "date-time", "example": "2019-09-15T02:06:58.147Z", "nullable": true}, "due_on": {"description": "The localized date on which this task is due, or null if the task has no due date. This takes a date with `YYYY-MM-DD` format and should not be used together with `due_at`.", "type": "string", "format": "date", "example": "2019-09-15", "nullable": true}, "external": {"description": "*OAuth Required*. *Conditional*. This field is returned only if external values are set or included by using [Opt In] (/docs/inputoutput-options).\nThe external field allows you to store app-specific metadata on tasks, including a gid that can be used to retrieve tasks and a data blob that can store app-specific character strings. Note that you will need to authenticate with Oauth to access or modify this data. Once an external gid is set, you can use the notation `external:custom_gid` to reference your object anywhere in the API where you may use the original object gid. See the page on Custom External Data for more details.", "type": "object", "properties": {"gid": {"type": "string", "example": "1234"}, "data": {"type": "string", "example": "A blob of information."}}, "example": {"gid": "my_gid", "data": "A blob of information"}}, "html_notes": {"description": "[Opt In](/docs/inputoutput-options). The notes of the text with formatting as HTML.", "type": "string", "example": "<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>"}, "hearted": {"description": "*Deprecated - please use liked instead* True if the task is hearted by the authorized user, false if not.", "type": "boolean", "example": true, "readOnly": true}, "hearts": {"description": "*Deprecated - please use likes instead* Array of likes for users who have hearted this task.", "type": "array", "items": {"type": "object", "description": "An object to represent a user\'s like.", "properties": {"gid": {"description": "Globally unique identifier of the object, as a string.", "type": "string", "readOnly": true, "example": "12345"}, "user": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}}, "readOnly": true}, "is_rendered_as_separator": {"description": "[Opt In](/docs/inputoutput-options). In some contexts tasks can be rendered as a visual separator; for instance, subtasks can appear similar to [sections](/reference/sections) without being true `section` objects. If a `task` object is rendered this way in any context it will have the property `is_rendered_as_separator` set to `true`. This parameter only applies to regular tasks with `resource_subtype` of `default_task`. Tasks with `resource_subtype` of `milestone`, `approval`, or custom task types will not have this property and cannot be rendered as separators.", "type": "boolean", "example": false, "readOnly": true}, "liked": {"description": "True if the task is liked by the authorized user, false if not.", "type": "boolean", "example": true}, "likes": {"description": "Array of likes for users who have liked this task.", "type": "array", "items": {"type": "object", "description": "An object to represent a user\'s like.", "properties": {"gid": {"description": "Globally unique identifier of the object, as a string.", "type": "string", "readOnly": true, "example": "12345"}, "user": {"description": "A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "user", "x-insert-after": "gid"}, "name": {"type": "string", "description": "*Read-only except when same user as requester*. The user\'s name.", "example": "Greg Sanchez"}}}}}, "readOnly": true}, "memberships": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>projects:read</code>, <code>project_sections:read</code></p>\n\n*Create-only*. Array of projects this task is associated with and the section it is in. At task creation time, this array can be used to add the task to specific sections. After task creation, these associations can be modified using the `addProject` and `removeProject` endpoints. Note that over time, more types of memberships may be added to this property.", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"project": {"description": "A *project* represents a prioritized list of tasks in Asana or a board with columns of tasks represented as cards. It exists in a single workspace or organization and is accessible to a subset of users in that workspace or organization, depending on its permissions.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "project", "x-insert-after": "gid"}, "name": {"description": "Name of the project. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Stuff to buy"}}}, "section": {"description": "A *section* is a subdivision of a project that groups tasks together. It can either be a header above a list of tasks in a list view or a column in a board view of a project.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "section", "x-insert-after": "gid"}, "name": {"description": "The name of the section (i.e. the text displayed as the section header).", "type": "string", "example": "Next Actions"}}}}}}, "modified_at": {"description": "The time at which this task was last modified.\n\nThe following conditions will change `modified_at`:\n\n- story is created on a task\n- story is trashed on a task\n- attachment is trashed on a task\n- task is assigned or unassigned\n- custom field value is changed\n- the task itself is trashed\n- Or if any of the following fields are updated:\n  - completed\n  - name\n  - due_date\n  - description\n  - attachments\n  - items\n  - schedule_status\n\nThe following conditions will _not_ change `modified_at`:\n\n- moving to a new container (project, portfolio, etc)\n- comments being added to the task (but the stories they generate\n  _will_ affect `modified_at`)", "type": "string", "format": "date-time", "readOnly": true, "example": "2012-02-22T02:06:58.147Z"}, "name": {"description": "Name of the task. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.", "type": "string", "example": "Buy catnip"}, "notes": {"description": "Free-form textual information associated with the task (i.e. its description).", "type": "string", "example": "Mittens really likes the stuff from Humboldt."}, "num_hearts": {"description": "*Deprecated - please use likes instead* The number of users who have hearted this task.", "type": "integer", "example": 5, "readOnly": true}, "num_likes": {"description": "The number of users who have liked this task.", "type": "integer", "example": 5, "readOnly": true}, "num_subtasks": {"description": "[Opt In](/docs/inputoutput-options). The number of subtasks on this task.\n", "type": "integer", "example": 3, "readOnly": true}, "start_at": {"description": "Date and time on which work begins for the task, or null if the task has no start time. This takes an ISO 8601 date string in UTC and should not be used together with `start_on`.\n*Note: `due_at` must be present in the request when setting or unsetting the `start_at` parameter.*", "type": "string", "nullable": true, "format": "date-time", "example": "2019-09-14T02:06:58.147Z"}, "start_on": {"description": "The day on which work begins for the task , or null if the task has no start date. This takes a date with `YYYY-MM-DD` format and should not be used together with `start_at`.\n*Note: `due_on` or `due_at` must be present in the request when setting or unsetting the `start_on` parameter.*", "type": "string", "nullable": true, "format": "date", "example": "2019-09-14"}, "actual_time_minutes": {"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>time_tracking_entries:read</code></p>\n\nThis value represents the sum of all the Time Tracking entries in the Actual Time field on a given Task. It is represented as a nullable long value.", "type": "number", "example": 200, "readOnly": true, "nullable": true}}}]}, {"type": "object", "properties": {"assignee": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "Gid of a user.", "example": "12345", "nullable": true}, "assignee_section": {"nullable": true, "type": "string", "description": "The *assignee section* is a subdivision of a project that groups tasks together in the assignee\'s "My tasks" list. It can either be a header above a list of tasks in a list view or a column in a board view of "My tasks."\nThe `assignee_section` property will be returned in the response only if the request was sent by the user who is the assignee of the task. Note that you can only write to `assignee_section` with the gid of an existing section visible in the user\'s "My tasks" list.", "example": "12345"}, "custom_fields": {"description": "An object where each key is the GID of a custom field and its corresponding value is either an enum GID, string, number, object, or array (depending on the custom field type). See the [custom fields guide](/docs/custom-fields-guide) for details on creating and updating custom field values.", "type": "object", "additionalProperties": {"type": "string", "description": ""{custom_field_gid}" => Value (can be text, a number, etc.). For date, use format "YYYY-MM-DD" (e.g., 2019-09-15). For date-time, use ISO 8601 date string in UTC (e.g., 2019-09-15T02:06:58.147Z)."}, "example": {"5678904321": "On Hold", "4578152156": "Not Started"}}, "followers": {"type": "array", "description": "*Create-Only* An array of strings identifying users. These can either be the string "me", an email, or the gid of a user. In order to change followers on an existing task use `addFollowers` and `removeFollowers`.", "items": {"type": "string", "description": "Gid of a user."}, "example": ["12345"]}, "parent": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "Gid of a task.", "example": "12345", "nullable": true}, "projects": {"type": "array", "description": "*Create-Only* Array of project gids. In order to change projects on an existing task use `addProject` and `removeProject`.", "items": {"type": "string", "description": "Gid of a project."}, "example": ["12345"]}, "tags": {"type": "array", "description": "*Create-Only* Array of tag gids. In order to change tags on an existing task use `addTag` and `removeTag`.", "items": {"type": "string", "description": "Gid of a tag."}, "example": ["12345"]}, "workspace": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "Gid of a workspace.", "example": "12345"}, "custom_type": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "GID or globally-unique identifier of a custom_type.", "example": "12345", "nullable": true}, "custom_type_status_option": {"type": "string", "readOnly": false, "x-env-variable": true, "description": "GID or globally-unique identifier of a custom_type_status_option", "example": "12345", "nullable": true}}}]}}}',  # noqa: E501
    "ASANACREATETEAM": '{"type": "object", "properties": {"data": {"allOf": [{"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>teams:read</code></p>\n\nA *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "team", "x-insert-after": "gid"}, "name": {"description": "The name of the team.", "type": "string", "example": "Marketing"}}}, {"type": "object", "properties": {"description": {"description": "The description of the team.\n", "type": "string", "example": "All developers should be members of this team."}, "html_description": {"description": "The description of the team with formatting as HTML.\n", "type": "string", "example": "<body><em>All</em> developers should be members of this team.</body>"}, "organization": {"type": "string", "description": "The organization/workspace the team belongs to. This must be the same organization you are in and cannot be changed once set.\n", "example": "123456789"}, "visibility": {"description": "The visibility of the team to users in the same organization\n", "type": "string", "enum": ["secret", "request_to_join", "public"]}, "edit_team_name_or_description_access_level": {"description": "Controls who can edit team name and description\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "edit_team_visibility_or_trash_team_access_level": {"description": "Controls who can edit team visibility and trash teams\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "member_invite_management_access_level": {"description": "Controls who can accept or deny member invites for a given team\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "guest_invite_management_access_level": {"description": "Controls who can accept or deny guest invites for a given team\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "join_request_management_access_level": {"description": "Controls who can accept or deny join team requests for a Membership by Request team. This field can only be updated when the team\'s `visibility` field is `request_to_join`.\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "team_member_removal_access_level": {"description": "Controls who can remove team members\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "team_content_management_access_level": {"description": "Controls who can create and share content with the team\n", "type": "string", "enum": ["no_restriction", "only_team_admins"]}, "endorsed": {"description": "Whether the team has been endorsed\n", "type": "boolean", "example": false}}}]}}}',  # noqa: E501
    "UPDATETEAMINWORKSPACE": '{"type": "object", "properties": {"data": {"allOf": [{"description": "<p><strong style={{ color: "#4573D2" }}>Full object requires scope: </strong><code>teams:read</code></p>\n\nA *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.", "type": "object", "properties": {"gid": {"description": "Globally unique identifier of the resource, as a string.", "type": "string", "readOnly": true, "example": "12345", "x-insert-after": false}, "resource_type": {"description": "The base type of this resource.", "type": "string", "readOnly": true, "example": "team", "x-insert-after": "gid"}, "name": {"description": "The name of the team.", "type": "string", "example": "Marketing"}}}, {"type": "object", "properties": {"description": {"description": "The description of the team.\n", "type": "string", "example": "All developers should be members of this team."}, "html_description": {"description": "The description of the team with formatting as HTML.\n", "type": "string", "example": "<body><em>All</em> developers should be members of this team.</body>"}, "organization": {"type": "string", "description": "The organization/workspace the team belongs to. This must be the same organization you are in and cannot be changed once set.\n", "example": "123456789"}, "visibility": {"description": "The visibility of the team to users in the same organization\n", "type": "string", "enum": ["secret", "request_to_join", "public"]}, "edit_team_name_or_description_access_level": {"description": "Controls who can edit team name and description\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "edit_team_visibility_or_trash_team_access_level": {"description": "Controls who can edit team visibility and trash teams\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "member_invite_management_access_level": {"description": "Controls who can accept or deny member invites for a given team\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "guest_invite_management_access_level": {"description": "Controls who can accept or deny guest invites for a given team\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "join_request_management_access_level": {"description": "Controls who can accept or deny join team requests for a Membership by Request team. This field can only be updated when the team\'s `visibility` field is `request_to_join`.\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "team_member_removal_access_level": {"description": "Controls who can remove team members\n", "type": "string", "enum": ["all_team_members", "only_team_admins"]}, "team_content_management_access_level": {"description": "Controls who can create and share content with the team\n", "type": "string", "enum": ["no_restriction", "only_team_admins"]}, "endorsed": {"description": "Whether the team has been endorsed\n", "type": "boolean", "example": false}}}]}}}',  # noqa: E501
    "CREATEASANAWEBHOOK": '{"type": "object", "properties": {"data": {"type": "object", "properties": {"resource": {"description": "A resource ID to subscribe to. Many Asana resources are valid to create webhooks on, but higher-level resources require filters.", "type": "string", "example": "12345"}, "target": {"description": "The URL to receive the HTTP POST. The full URL will be used to deliver events from this webhook (including parameters) which allows encoding of application-specific state when the webhook is created.", "type": "string", "format": "uri", "example": "https://example.com/receive-webhook/7654?app_specific_param=app_specific_value"}, "filters": {"type": "array", "description": "An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.", "items": {"allOf": [{"type": "object", "description": "A WebhookFilter can be passed on creation of a webhook in order to filter the types of actions that trigger delivery of an [event](/reference/events)", "properties": {"resource_type": {"type": "string", "description": "The type of the resource which created the event when modified; for example, to filter to changes on regular tasks this field should be set to `task`.", "example": "task"}, "resource_subtype": {"description": "The resource subtype of the resource that the filter applies to. This should be set to the same value as is returned on the `resource_subtype` field on the resources themselves.", "type": "string", "example": "milestone"}, "action": {"type": "string", "description": "The type of change on the **resource** to pass through the filter. For more information refer to `Event.action` in the [event](/reference/events) schema. This can be one of `changed`, `added`, `removed`, `deleted`, and `undeleted` depending on the nature of what has occurred on the resource.", "example": "changed"}, "fields": {"type": "array", "description": "*Conditional.* A whitelist of fields for events which will pass the filter when the resource is changed. These can be any combination of the fields on the resources themselves. This field is only valid for `action` of type `changed`\n*Note: Subscriptions created on higher-level resources such as a Workspace, Team, or Portfolio do not support fields.*", "items": {"type": "string"}, "example": ["due_at", "due_on", "dependencies"]}}}, {"description": "A set of filters to specify a whitelist for what types of events will be delivered."}, {"type": "object"}]}}}, "required": ["resource", "target"]}}}',  # noqa: E501
    "ASANAUPDATEWEBHOOKFILTERS": '{"type": "object", "properties": {"data": {"type": "object", "properties": {"filters": {"type": "array", "description": "An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.", "items": {"allOf": [{"type": "object", "description": "A WebhookFilter can be passed on creation of a webhook in order to filter the types of actions that trigger delivery of an [event](/reference/events)", "properties": {"resource_type": {"type": "string", "description": "The type of the resource which created the event when modified; for example, to filter to changes on regular tasks this field should be set to `task`.", "example": "task"}, "resource_subtype": {"description": "The resource subtype of the resource that the filter applies to. This should be set to the same value as is returned on the `resource_subtype` field on the resources themselves.", "type": "string", "example": "milestone"}, "action": {"type": "string", "description": "The type of change on the **resource** to pass through the filter. For more information refer to `Event.action` in the [event](/reference/events) schema. This can be one of `changed`, `added`, `removed`, `deleted`, and `undeleted` depending on the nature of what has occurred on the resource.", "example": "changed"}, "fields": {"type": "array", "description": "*Conditional.* A whitelist of fields for events which will pass the filter when the resource is changed. These can be any combination of the fields on the resources themselves. This field is only valid for `action` of type `changed`\n*Note: Subscriptions created on higher-level resources such as a Workspace, Team, or Portfolio do not support fields.*", "items": {"type": "string"}, "example": ["due_at", "due_on", "dependencies"]}}}, {"description": "A set of filters to specify a whitelist for what types of events will be delivered."}, {"type": "object"}]}}}}}}',  # noqa: E501
}
