{
  "name": "ListUsers",
  "fully_qualified_name": "RampApi.ListUsers@0.1.0",
  "description": "Retrieve a paginated list of users.\n\nThis tool is used to fetch a list of users from the service. It supports pagination to manage large sets of user data efficiently.",
  "toolkit": {
    "name": "RampApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "filter_by_employee_id",
        "required": false,
        "description": "Filter users by their employee ID to narrow down the user list.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by user employee_id"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "employee_id"
      },
      {
        "name": "user_role_filter",
        "required": false,
        "description": "Specify the role to filter users. Valid roles include: AUDITOR, BUSINESS_ADMIN, BUSINESS_BOOKKEEPER, BUSINESS_OWNER, BUSINESS_USER, GUEST_USER, IT_ADMIN.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "AUDITOR",
            "BUSINESS_ADMIN",
            "BUSINESS_BOOKKEEPER",
            "BUSINESS_OWNER",
            "BUSINESS_USER",
            "GUEST_USER",
            "IT_ADMIN"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Filter by user role"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "role"
      },
      {
        "name": "pagination_start_id",
        "required": false,
        "description": "The ID of the last entity from the previous page for pagination.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "start"
      },
      {
        "name": "results_per_page",
        "required": false,
        "description": "The number of results returned per page. Must be between 2 and 100. Defaults to 20 if not specified.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results to be returned in each page. The value must be between 2 and 100. If not specified, the default value 20 will be used."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page_size"
      },
      {
        "name": "business_entity_id",
        "required": false,
        "description": "Filter the list of users by specifying a business entity ID.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "filter by business entity"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "entity_id"
      },
      {
        "name": "filter_by_department_id",
        "required": false,
        "description": "Filter the user list by a specific department ID to narrow down the results.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "filter by department"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "department_id"
      },
      {
        "name": "filter_by_email",
        "required": false,
        "description": "Filter users by their email address for precise retrieval.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "filter by email"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "email"
      },
      {
        "name": "filter_by_location_id",
        "required": false,
        "description": "Specify a location ID to filter users by their location.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "filter by location"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "location_id"
      },
      {
        "name": "include_deleted_users",
        "required": false,
        "description": "Set to true to include deleted users in the response. Defaults to false.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Include deleted users in the response. Defaults to False"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "include_deleted"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get_user_list_with_pagination'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-ramp",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "users:read"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the ramp API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.ramp.com/developer/v1/users",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "employee_id",
        "tool_parameter_name": "filter_by_employee_id",
        "description": "Filter by user employee_id",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by user employee_id"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "role",
        "tool_parameter_name": "user_role_filter",
        "description": "Filter by user role",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "AUDITOR",
            "BUSINESS_ADMIN",
            "BUSINESS_BOOKKEEPER",
            "BUSINESS_OWNER",
            "BUSINESS_USER",
            "GUEST_USER",
            "IT_ADMIN"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Filter by user role"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "include_deleted",
        "tool_parameter_name": "include_deleted_users",
        "description": "Include deleted users in the response. Defaults to False",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Include deleted users in the response. Defaults to False"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": false,
        "documentation_urls": []
      },
      {
        "name": "start",
        "tool_parameter_name": "pagination_start_id",
        "description": "The ID of the last entity of the previous page, used for pagination to get the next page.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "page_size",
        "tool_parameter_name": "results_per_page",
        "description": "The number of results to be returned in each page. The value must be between 2 and 100. If not specified, the default value 20 will be used.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results to be returned in each page. The value must be between 2 and 100. If not specified, the default value 20 will be used."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 20,
        "documentation_urls": []
      },
      {
        "name": "entity_id",
        "tool_parameter_name": "business_entity_id",
        "description": "filter by business entity",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "filter by business entity"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "department_id",
        "tool_parameter_name": "filter_by_department_id",
        "description": "filter by department",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "filter by department"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "email",
        "tool_parameter_name": "filter_by_email",
        "description": "filter by email",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "filter by email"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "location_id",
        "tool_parameter_name": "filter_by_location_id",
        "description": "filter by location",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "filter by location"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
