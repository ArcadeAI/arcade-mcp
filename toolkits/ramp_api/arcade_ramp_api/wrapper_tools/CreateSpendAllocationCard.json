{
  "name": "CreateSpendAllocationCard",
  "fully_qualified_name": "RampApi.CreateSpendAllocationCard@0.1.0",
  "description": "Create a new spend allocation and retrieve card details.\n\nThis tool creates a new spend allocation and provides sensitive card details. It should be used when there is a need to generate a card vault in the Ramp system.",
  "toolkit": {
    "name": "RampApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "spend_allocation_card_details",
        "required": true,
        "description": "JSON object providing details for card vault creation, including accounting rules, display name, spend program ID, spending restrictions, and user ID.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "accounting_rules": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {
                "field_id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "UUID of the tracking category"
                },
                "field_option_id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "UUID of the tracking category option"
                }
              },
              "description": "Set accounting rules for the Spend Limit and Card"
            },
            "display_name": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Cosmetic display name of the limit."
            },
            "spend_program_id": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the associated spend program."
            },
            "spending_restrictions": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Specifies the spending restrictions. If spend_program_id is passed, this field is ignored and the limit will inherit the spending restrictions of the spend program."
            },
            "user_id": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Unique identifier of the card owner."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'post_card_vault_creation'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-ramp",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "cards:read_vault",
          "limits:write"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the ramp API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.ramp.com/developer/v1/vault/cards",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "requestBody",
        "tool_parameter_name": "spend_allocation_card_details",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "accounting_rules": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {
                "field_id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "UUID of the tracking category"
                },
                "field_option_id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "UUID of the tracking category option"
                }
              },
              "description": "Set accounting rules for the Spend Limit and Card"
            },
            "display_name": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Cosmetic display name of the limit."
            },
            "spend_program_id": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the associated spend program."
            },
            "spending_restrictions": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Specifies the spending restrictions. If spend_program_id is passed, this field is ignored and the limit will inherit the spending restrictions of the spend program."
            },
            "user_id": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Unique identifier of the card owner."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"example\": {\n          \"accounting_rules\": [\n            {\n              \"field_id\": \"3f30896b-cd22-47af-b48a-c6c3068bc780\",\n              \"field_option_id\": \"d062e221-9c95-47b5-8dc6-d6c881693caf\"\n            }\n          ],\n          \"display_name\": \"Travel Hotel Booking Purchase\",\n          \"spending_restrictions\": {\n            \"allowed_categories\": [\n              18,\n              20\n            ],\n            \"auto_lock_date\": null,\n            \"interval\": \"TOTAL\",\n            \"limit\": {\n              \"amount\": 500000,\n              \"currency_code\": \"USD\"\n            }\n          },\n          \"user_id\": \"d8135cfe-0396-4b2d-b2cf-ad809fb04731\"\n        },\n        \"properties\": {\n          \"accounting_rules\": {\n            \"description\": \"Set accounting rules for the Spend Limit and Card\",\n            \"items\": {\n              \"properties\": {\n                \"field_id\": {\n                  \"description\": \"UUID of the tracking category\",\n                  \"format\": \"uuid\",\n                  \"type\": \"string\"\n                },\n                \"field_option_id\": {\n                  \"description\": \"UUID of the tracking category option\",\n                  \"format\": \"uuid\",\n                  \"type\": \"string\"\n                }\n              },\n              \"required\": [\n                \"field_id\",\n                \"field_option_id\"\n              ],\n              \"type\": \"object\"\n            },\n            \"type\": \"array\"\n          },\n          \"display_name\": {\n            \"description\": \"Cosmetic display name of the limit.\",\n            \"type\": \"string\"\n          },\n          \"spend_program_id\": {\n            \"description\": \"The id of the associated spend program.\",\n            \"format\": \"uuid\",\n            \"type\": \"string\"\n          },\n          \"spending_restrictions\": {\n            \"allOf\": [\n              {\n                \"properties\": {\n                  \"allowed_categories\": {\n                    \"description\": \" List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) allowed for the limit.\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  \"allowed_vendors\": {\n                    \"description\": \"List of merchants allowed for the limit.\",\n                    \"items\": {\n                      \"format\": \"uuid\",\n                      \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  \"blocked_categories\": {\n                    \"description\": \"List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) blocked for the limit.\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  \"blocked_mcc_codes\": {\n                    \"items\": {\n                      \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  \"blocked_vendors\": {\n                    \"description\": \"List of merchants  blocked for the limit.\",\n                    \"items\": {\n                      \"format\": \"uuid\",\n                      \"type\": \"string\"\n                    },\n                    \"type\": \"array\"\n                  },\n                  \"interval\": {\n                    \"description\": \"Time interval to apply limit to.\",\n                    \"enum\": [\n                      \"ANNUAL\",\n                      \"DAILY\",\n                      \"MONTHLY\",\n                      \"QUARTERLY\",\n                      \"TERTIARY\",\n                      \"TOTAL\",\n                      \"WEEKLY\",\n                      \"YEARLY\"\n                    ],\n                    \"type\": \"string\"\n                  },\n                  \"limit\": {\n                    \"allOf\": [\n                      {\n                        \"properties\": {\n                          \"amount\": {\n                            \"description\": \"the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.\",\n                            \"type\": \"integer\"\n                          },\n                          \"currency_code\": {\n                            \"default\": \"USD\",\n                            \"description\": \"The type of currency, in ISO 4217 format. e.g. USD for US dollars\",\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"required\": [\n                          \"amount\"\n                        ],\n                        \"type\": \"object\"\n                      }\n                    ],\n                    \"description\": \"Total amount limit per interval. Currently we expect the currency to be USD and the amount need to be denominated in cents.\"\n                  },\n                  \"lock_date\": {\n                    \"description\": \"Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card.\",\n                    \"format\": \"date-time\",\n                    \"type\": \"string\"\n                  },\n                  \"transaction_amount_limit\": {\n                    \"allOf\": [\n                      {\n                        \"properties\": {\n                          \"amount\": {\n                            \"description\": \"the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.\",\n                            \"type\": \"integer\"\n                          },\n                          \"currency_code\": {\n                            \"default\": \"USD\",\n                            \"description\": \"The type of currency, in ISO 4217 format. e.g. USD for US dollars\",\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"required\": [\n                          \"amount\"\n                        ],\n                        \"type\": \"object\"\n                      }\n                    ],\n                    \"description\": \"Max amount per transaction. Currently we expect the currency to be USD and the amount need to be denominated in cents.\"\n                  }\n                },\n                \"required\": [\n                  \"interval\",\n                  \"limit\"\n                ],\n                \"type\": \"object\"\n              }\n            ],\n            \"description\": \"Specifies the spending restrictions. If spend_program_id is passed, this field is ignored and the limit will inherit the spending restrictions of the spend program.\"\n          },\n          \"user_id\": {\n            \"description\": \"Unique identifier of the card owner.\",\n            \"format\": \"uuid\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"user_id\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
