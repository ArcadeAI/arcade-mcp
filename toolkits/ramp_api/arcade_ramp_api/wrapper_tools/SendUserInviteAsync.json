{
  "name": "SendUserInviteAsync",
  "fully_qualified_name": "RampApi.SendUserInviteAsync@0.1.0",
  "description": "Initiate an async task to send a user invite email.\n\nUse this tool to start an asynchronous task for sending a user invitation via email. This is part of the onboarding process where users need to accept the invite to continue. Assign the user to a specific entity by providing a location_id.",
  "toolkit": {
    "name": "RampApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "employee_email_address",
        "required": true,
        "description": "The email address of the employee to whom the invite will be sent.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The employee's email address"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "email"
      },
      {
        "name": "employee_first_name",
        "required": true,
        "description": "The first name of the employee receiving the invite.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "First name of the employee"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "first_name"
      },
      {
        "name": "unique_idempotency_key",
        "required": true,
        "description": "A unique identifier for the request, used to recognize and manage retries. Use a randomly generated UUID to avoid collisions.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "an idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. To avoid collisions, we encourage clients to use random generated UUIDs."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "idempotency_key"
      },
      {
        "name": "employee_last_name",
        "required": true,
        "description": "Provide the last name of the employee to be invited.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Last name of the employee"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "last_name"
      },
      {
        "name": "employee_role",
        "required": true,
        "description": "The employee's role. Options: Admin, Cardholder, Bookkeeper. Note: Owner is not invitable.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "AUDITOR",
            "BUSINESS_ADMIN",
            "BUSINESS_BOOKKEEPER",
            "BUSINESS_OWNER",
            "BUSINESS_USER",
            "GUEST_USER",
            "IT_ADMIN"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The employee's role; It could be one of the following values: Admin, Cardholder, Bookkeeper; Note that Owner is not a invitable role."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "role"
      },
      {
        "name": "employee_department_identifier",
        "required": false,
        "description": "Unique identifier of the employee's department. Required for assigning the user to the correct department.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier of the employee's department"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "department_id"
      },
      {
        "name": "direct_manager_identifier",
        "required": false,
        "description": "Unique identifier of the employee's direct manager.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier of the employee's direct manager"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "direct_manager_id"
      },
      {
        "name": "employee_location_identifier",
        "required": false,
        "description": "Unique identifier for the employee's location, mapped to a specific entity.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier of the employee's location"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "location_id"
      },
      {
        "name": "is_manager",
        "required": false,
        "description": "Indicate whether the employee is a manager.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether the employee is a manager"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "is_manager"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'post_user_creation_deferred_task'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-ramp",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "users:write"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the ramp API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.ramp.com/developer/v1/users/deferred",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "department_id",
        "tool_parameter_name": "employee_department_identifier",
        "description": "Unique identifier of the employee's department",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier of the employee's department"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "direct_manager_id",
        "tool_parameter_name": "direct_manager_identifier",
        "description": "Unique identifier of the employee's direct manager",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier of the employee's direct manager"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "email",
        "tool_parameter_name": "employee_email_address",
        "description": "The employee's email address",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The employee's email address"
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "first_name",
        "tool_parameter_name": "employee_first_name",
        "description": "First name of the employee",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "First name of the employee"
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "idempotency_key",
        "tool_parameter_name": "unique_idempotency_key",
        "description": "an idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. To avoid collisions, we encourage clients to use random generated UUIDs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "an idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. To avoid collisions, we encourage clients to use random generated UUIDs."
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "is_manager",
        "tool_parameter_name": "is_manager",
        "description": "Whether the employee is a manager",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Whether the employee is a manager"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "last_name",
        "tool_parameter_name": "employee_last_name",
        "description": "Last name of the employee",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Last name of the employee"
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "location_id",
        "tool_parameter_name": "employee_location_identifier",
        "description": "Unique identifier of the employee's location",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Unique identifier of the employee's location"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "role",
        "tool_parameter_name": "employee_role",
        "description": "The employee's role; It could be one of the following values: Admin, Cardholder, Bookkeeper; Note that Owner is not a invitable role.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "AUDITOR",
            "BUSINESS_ADMIN",
            "BUSINESS_BOOKKEEPER",
            "BUSINESS_OWNER",
            "BUSINESS_USER",
            "GUEST_USER",
            "IT_ADMIN"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The employee's role; It could be one of the following values: Admin, Cardholder, Bookkeeper; Note that Owner is not a invitable role."
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"example\": {\n          \"department_id\": \"2d68eb67-f6eb-4284-8683-7d530c77a5a6\",\n          \"direct_manager_id\": \"ccc5d4cc-337f-49a5-86b3-5df128233f2c\",\n          \"email\": \"cardholder_7@company.com\",\n          \"first_name\": \"Linda\",\n          \"idempotency_key\": \"d471d830-2e73-4082-8a75-68540f83e86e\",\n          \"is_manager\": false,\n          \"last_name\": \"Gu\",\n          \"location_id\": \"f4efe11c-221f-4b49-a1e4-33eaf96a49ee\",\n          \"role\": \"BUSINESS_USER\"\n        },\n        \"properties\": {\n          \"department_id\": {\n            \"description\": \"Unique identifier of the employee's department\",\n            \"format\": \"uuid\",\n            \"type\": \"string\"\n          },\n          \"direct_manager_id\": {\n            \"description\": \"Unique identifier of the employee's direct manager\",\n            \"format\": \"uuid\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"description\": \"The employee's email address\",\n            \"format\": \"email\",\n            \"type\": \"string\"\n          },\n          \"first_name\": {\n            \"description\": \"First name of the employee\",\n            \"maxLength\": 255,\n            \"type\": \"string\"\n          },\n          \"idempotency_key\": {\n            \"description\": \"an idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. To avoid collisions, we encourage clients to use random generated UUIDs.\",\n            \"type\": \"string\"\n          },\n          \"is_manager\": {\n            \"description\": \"Whether the employee is a manager\",\n            \"type\": \"boolean\"\n          },\n          \"last_name\": {\n            \"description\": \"Last name of the employee\",\n            \"maxLength\": 255,\n            \"type\": \"string\"\n          },\n          \"location_id\": {\n            \"description\": \"Unique identifier of the employee's location\",\n            \"format\": \"uuid\",\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"description\": \"The employee's role; It could be one of the following values: Admin, Cardholder, Bookkeeper; Note that Owner is not a invitable role.\",\n            \"enum\": [\n              \"AUDITOR\",\n              \"BUSINESS_ADMIN\",\n              \"BUSINESS_BOOKKEEPER\",\n              \"BUSINESS_OWNER\",\n              \"BUSINESS_USER\",\n              \"GUEST_USER\",\n              \"IT_ADMIN\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"email\",\n          \"first_name\",\n          \"idempotency_key\",\n          \"last_name\",\n          \"role\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
