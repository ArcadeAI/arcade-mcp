{
  "name": "GetAuditLogEvents",
  "fully_qualified_name": "RampApi.GetAuditLogEvents@0.1.0",
  "description": "Retrieve a list of audit log events for analysis.\n\nThis tool retrieves a list of audit log events from the ramp service. It should be called when there is a need to analyze or review audit logs for security or compliance purposes.",
  "toolkit": {
    "name": "RampApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "filter_user_ids",
        "required": false,
        "description": "Filter by audit log events attributed to these specific user IDs, provided as an array of strings.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events attributed to these user IDs"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "user_ids"
      },
      {
        "name": "filter_by_start_date",
        "required": false,
        "description": "Filter audit log events by those created on or after this date. Format should be YYYY-MM-DD.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events created at or after this date"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "from_date"
      },
      {
        "name": "filter_end_date",
        "required": false,
        "description": "Filter audit log events created on or before this date. Use format YYYY-MM-DD.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events created at or before this date"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "to_date"
      },
      {
        "name": "actor_type_filters",
        "required": false,
        "description": "Filter audit log events by specifying actor types. Provide an array of strings representing the actor types to include.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events of these actor types"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "event_actor_types"
      },
      {
        "name": "filter_event_types",
        "required": false,
        "description": "An array of event types to filter audit log events by. Supply event type identifiers as strings to specify the criteria for filtering results.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events of these types"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "event_types"
      },
      {
        "name": "pagination_start_id",
        "required": false,
        "description": "The ID of the last entity from the previous page to fetch the next page of results.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "start"
      },
      {
        "name": "results_per_page",
        "required": false,
        "description": "Number of results returned per page. Must be between 2 and 100. Defaults to 20 if not specified.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results to be returned in each page. The value must be between 2 and 100. If not specified, the default value 20 will be used."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page_size"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'get_audit_log_events_list_resource'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-ramp",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "audit_logs:read"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the ramp API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "https://api.ramp.com/developer/v1/audit-logs/events",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "user_ids",
        "tool_parameter_name": "filter_user_ids",
        "description": "Filter by audit log events attributed to these user IDs",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events attributed to these user IDs"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "from_date",
        "tool_parameter_name": "filter_by_start_date",
        "description": "Filter by audit log events created at or after this date",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events created at or after this date"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "to_date",
        "tool_parameter_name": "filter_end_date",
        "description": "Filter by audit log events created at or before this date",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events created at or before this date"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "event_actor_types",
        "tool_parameter_name": "actor_type_filters",
        "description": "Filter by audit log events of these actor types",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events of these actor types"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "event_types",
        "tool_parameter_name": "filter_event_types",
        "description": "Filter by audit log events of these types",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Filter by audit log events of these types"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "start",
        "tool_parameter_name": "pagination_start_id",
        "description": "The ID of the last entity of the previous page, used for pagination to get the next page.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "page_size",
        "tool_parameter_name": "results_per_page",
        "description": "The number of results to be returned in each page. The value must be between 2 and 100. If not specified, the default value 20 will be used.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results to be returned in each page. The value must be between 2 and 100. If not specified, the default value 20 will be used."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 20,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
