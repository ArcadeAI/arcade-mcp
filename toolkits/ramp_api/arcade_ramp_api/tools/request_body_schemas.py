"""Request Body Schemas for API Tools

DO NOT EDIT THIS MODULE DIRECTLY.

THIS MODULE WAS AUTO-GENERATED AND CONTAINS OpenAPI REQUEST BODY SCHEMAS
FOR TOOLS WITH COMPLEX REQUEST BODIES. ANY CHANGES TO THIS MODULE WILL
BE OVERWRITTEN BY THE TRANSPILER.
"""

from typing import Any

REQUEST_BODY_SCHEMAS: dict[str, Any] = {
    "UPLOADACCOUNTINGFIELDOPTIONS": '{"example": {"accounting_connection_id": null, "field_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795", "options": [{"id": "418", "value": "Engineering & Design"}, {"id": "514", "value": "Sales & Marketing"}]}, "properties": {"field_id": {"description": "id to uniquely identify a custom accounting field within Ramp system", "format": "uuid", "type": "string"}, "options": {"description": "A list of field options for a given custom accounting field.", "items": {"example": {"code": "400-100", "id": "514", "value": "Employees:Salaries & Wages"}, "properties": {"code": {"description": "Code of the custom accounting field option; e.g. 400-100.", "type": "string"}, "id": {"description": "Remote/external ID of custom accounting field option from ERP system.", "type": "string"}, "value": {"description": "e.g. Employees:Salaries & Wages", "type": "string"}}, "required": ["id", "value"], "type": "object"}, "maxItems": 500, "minItems": 1, "type": "array"}}, "required": ["field_id", "options"], "type": "object"}',  # noqa: E501
    "DELETECUSTOMACCOUNTINGFIELDOPTION": '{"properties": {}, "type": "object"}',  # noqa: E501
    "DELETECUSTOMACCOUNTINGFIELD": '{"properties": {}, "type": "object"}',  # noqa: E501
    "UPLOADGLACCOUNTS": '{"example": {"accounting_connection_id": null, "gl_accounts": [{"classification": "EXPENSE", "code": "6410", "id": "514", "name": "Employees:Salaries & Wages"}, {"classification": "EXPENSE", "id": "418", "name": "Office/Admin:Phone & Internet"}, {"classification": "REVENUE", "id": "425", "name": "Sales"}]}, "properties": {"gl_accounts": {"description": "A list of general ledger accounts that you want to use to classify your Ramp transactions.", "items": {"example": {"classification": "EXPENSE", "code": "6410", "id": "514", "name": "Employees:Salaries & Wages"}, "properties": {"classification": {"enum": ["ANY", "ASSET", "CREDCARD", "EQUITY", "EXPENSE", "LIABILITY", "REVENUE", "UNKNOWN"], "type": "string"}, "code": {"description": "e.g. 400-100.", "type": "string"}, "id": {"description": "Remote/external ID of GL account in ERP system.", "type": "string"}, "name": {"description": "e.g. Travel : Travel - Lodging.", "type": "string"}}, "required": ["classification", "id", "name"], "type": "object"}, "maxItems": 500, "minItems": 1, "type": "array"}}, "required": ["gl_accounts"], "type": "object"}',  # noqa: E501
    "DELETEGENERALLEDGERACCOUNT": '{"properties": {}, "type": "object"}',  # noqa: E501
    "NOTIFYSYNCRESULTS": '{"example": {"failed_syncs": [{"error": {"message": "The account period has closed and the account books cannot be updated."}, "id": "d471d830-2e73-4082-8a75-68540f83e86e"}], "idempotency_key": "d471d830-2e73-4082-8a75-68540f83e86e", "successful_syncs": [{"id": "5a58eb94-a583-458f-810d-c794f32f2f90", "reference_id": "d8573713-a97d-4119-bdd7-b69c318df9bb"}, {"id": "bb037f47-c664-46f9-afa7-cc68cbcf5a23", "reference_id": "83283a15-c0a0-4105-9724-2fcfefa9924f"}], "sync_type": "TRANSACTION_SYNC"}, "properties": {"failed_syncs": {"description": "A list of objects that failed to be synced.", "items": {"example": {"error": {"message": "The account period has closed and the account books cannot be updated."}, "id": "bb037f47-c664-46f9-afa7-cc68cbcf5a23"}, "properties": {"error": {"allOf": [{"example": {"message": "The account period has closed and the account books cannot be updated."}, "properties": {"message": {"description": "an error message that explains the reason of the sync failure.", "type": "string"}}, "required": ["message"], "type": "object"}], "description": "describes the reason why the sync object failed to sync."}, "id": {"description": "ID that uniquely identifies a transaction/reimbursement in Ramp systems.", "format": "uuid", "type": "string"}}, "required": ["error", "id"], "type": "object"}, "maxItems": 5000, "minItems": 1, "type": "array"}, "idempotency_key": {"description": "An idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. To avoid collisions, we encourage clients to use random generated UUIDs.", "type": "string"}, "successful_syncs": {"description": "A list of successfully synced objects.", "items": {"example": {"id": "bb037f47-c664-46f9-afa7-cc68cbcf5a23", "reference_id": "83283a15-c0a0-4105-9724-2fcfefa9924f"}, "properties": {"deep_link_url": {"description": "URL that links to the object in the remote ERP system. Only applicable for bills.", "format": "url", "type": "string"}, "id": {"description": "ID that uniquely identifies the object to sync in Ramp systems.", "format": "uuid", "type": "string"}, "reference_id": {"description": "ID that uniquely identifies the object to sync in remote ERP systems.", "type": "string"}}, "required": ["id", "reference_id"], "type": "object"}, "maxItems": 5000, "minItems": 1, "type": "array"}, "sync_type": {"description": "The type of object to sync.", "enum": ["ACCRUAL_SYNC", "AMORTIZATION_ENTRY_SYNC", "BANKING_TRANSACTION_SYNC", "BILL_PAYMENT_SYNC", "BILL_SYNC", "BROKERAGE_ORDER_SYNC", "PAYEE_SYNC", "REIMBURSEMENT_SYNC", "STATEMENT_CREDIT_SYNC", "TRACKING_CATEGORY_OPTION_SYNC", "TRANSACTION_SYNC", "TRANSFER_SYNC", "WALLET_TRANSFER_SYNC"], "type": "string"}}, "required": ["idempotency_key", "sync_type"], "type": "object"}',  # noqa: E501
    "UPLOADVENDORLIST": '{"example": {"vendors": [{"id": "V-5500-0130", "name": "AirTable"}, {"id": "V-5500-0135", "name": "Slack Technologies, LLC"}, {"id": "V-5500-0142", "name": "Microsoft"}]}, "properties": {"vendors": {"description": "A list of vendors that you want to use to classify your Ramp transactions.", "items": {"example": {"id": "V-5500-0135", "name": "Slack Technologies, LLC"}, "properties": {"id": {"description": "Remote/external ID of accounting vendor in ERP system.", "type": "string"}, "name": {"description": "name of the vendor", "type": "string"}}, "required": ["id", "name"], "type": "object"}, "maxItems": 500, "minItems": 1, "type": "array"}}, "required": ["vendors"], "type": "object"}',  # noqa: E501
    "CREATEBILLSWITHPAGINATION": '{"example": {"accounting_field_selections": [{"field_external_id": "b3B0aW9uX2lk", "field_option_external_id": "aln2l3B0aW9uX2lk"}], "due_at": "2024-10-15", "entity_id": "1cc4b57c-fe4a-4425-90f1-9019d06376b3", "inventory_line_items": [{"accounting_field_selections": [{"field_external_id": "aa73laMazi2", "field_option_external_id": "abk3Rkfnls25"}], "memo": "Pens", "unit_price": 55, "unit_quantity": 2}], "invoice_currency": "USD", "invoice_number": "123", "issued_at": "2024-08-15", "line_items": [{"accounting_field_selections": [], "amount": 100, "memo": "Printing services"}], "memo": "Office supplies", "payment_details": {"manual_payment_method": "CASH", "payment_date": "2024-08-15"}, "payment_method": "ONE_TIME_CARD_DELIVERY", "posting_date": null, "remote_id": "bo2f1lAnkf3llL", "vendor_contact_id": "12f55361-8c7f-42dc-8667-64926d330b80", "vendor_id": "c0c89fa8-976e-428d-938d-a5ec89838474"}, "properties": {"accounting_field_selections": {"description": "List of accounting field options selected to code the bill.", "items": {"properties": {"field_external_id": {"description": "Remote ID of accounting field. This is the external ID, likely from ERP system.", "type": "string"}, "field_option_external_id": {"description": "Remote ID of accounting field option. This is the external ID, likely from ERP system.", "type": "string"}}, "required": ["field_external_id", "field_option_external_id"], "type": "object"}, "type": "array"}, "due_at": {"description": "Due date of the bill.", "format": "date", "type": "string"}, "entity_id": {"description": "Associated business entity.", "format": "uuid", "type": "string"}, "inventory_line_items": {"description": "List of inventory line items related to the bill.", "items": {"properties": {"accounting_field_selections": {"items": {"properties": {"field_external_id": {"description": "Remote ID of accounting field. This is the external ID, likely from ERP system.", "type": "string"}, "field_option_external_id": {"description": "Remote ID of accounting field option. This is the external ID, likely from ERP system.", "type": "string"}}, "required": ["field_external_id", "field_option_external_id"], "type": "object"}, "type": "array"}, "memo": {"default": null, "nullable": true, "type": "string"}, "unit_price": {"minimum": 0, "oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "unit_quantity": {"minimum": 0, "type": "integer"}}, "required": ["unit_price", "unit_quantity"], "type": "object"}, "nullable": true, "type": "array"}, "invoice_currency": {"description": "Currency of the invoice.", "enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "EURC", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLE", "SLL", "SOS", "SRD", "SSP", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USDC", "USN", "UYI", "UYU", "UYW", "UZS", "VED", "VES", "VND", "VUV", "WST", "XAD", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWG", "ZWL"], "type": "string"}, "invoice_number": {"description": "The invoice number on the bill.", "maxLength": 20, "type": "string"}, "issued_at": {"description": "Issued date of the bill.", "format": "date", "type": "string"}, "line_items": {"description": "List of line items related to the bill.", "items": {"properties": {"accounting_field_selections": {"items": {"properties": {"field_external_id": {"description": "Remote ID of accounting field. This is the external ID, likely from ERP system.", "type": "string"}, "field_option_external_id": {"description": "Remote ID of accounting field option. This is the external ID, likely from ERP system.", "type": "string"}}, "required": ["field_external_id", "field_option_external_id"], "type": "object"}, "type": "array"}, "amount": {"oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "memo": {"default": null, "nullable": true, "type": "string"}}, "required": ["amount"], "type": "object"}, "nullable": true, "type": "array"}, "memo": {"default": null, "description": "Memo of the bill.", "maxLength": 1000, "nullable": true, "type": "string"}, "payment_details": {"allOf": [{"discriminator": {"mapping": {"ACH": "#/components/schemas/ApiCreateBankAccountPaymentParamsRequestBody", "CARD": "#/components/schemas/ApiCreateCardBillPaymentParamsRequestBody", "CHECK": "#/components/schemas/ApiCreateBillVendorPaymentParamsRequestBody", "DOMESTIC_WIRE": "#/components/schemas/ApiCreateBankAccountPaymentParamsRequestBody", "INTERNATIONAL": "#/components/schemas/ApiCreateBankAccountPaymentParamsRequestBody", "PAID_MANUALLY": "#/components/schemas/ApiCreateManualBillPaymentParamsRequestBody", "SWIFT": "#/components/schemas/ApiCreateBankAccountPaymentParamsRequestBody"}, "propertyName": "payment_method"}, "oneOf": [{"properties": {"payment_arrival_date": {"description": "\nThe expected date the payment will arrive in the vendor\'s bank account.\n\nThe required time and fee to process the payment depends on the payment method. See the [Ramp Help Center](https://support.ramp.com/hc/en-us/articles/4417836454419-Bill-payment-methods-and-timelines) for more information on payment speeds. An error will be thrown if selected date is invalid.\n", "format": "date", "type": "string"}, "source_bank_account_id": {"description": "Unique identifier of the bank account to pay the bill from. Must be associated with the passed business entity and have usage_type=BILL_PAY_BANK_ACCOUNT.", "format": "uuid", "type": "string"}, "vendor_account_id": {"description": "Unique identifier of the vendor account to pay the bill to.", "format": "uuid", "type": "string"}}, "required": ["payment_arrival_date", "source_bank_account_id", "vendor_account_id"], "type": "object"}, {"properties": {"payment_arrival_date": {"description": "\nThe expected date the payment will arrive in the vendor\'s bank account.\n\nThe required time and fee to process the payment depends on the payment method. See the [Ramp Help Center](https://support.ramp.com/hc/en-us/articles/4417836454419-Bill-payment-methods-and-timelines) for more information on payment speeds. An error will be thrown if selected date is invalid.\n", "format": "date", "type": "string"}, "source_bank_account_id": {"description": "Unique identifier of the bank account to pay the bill from. Must be associated with the passed business entity and have usage_type=BILL_PAY_BANK_ACCOUNT.", "format": "uuid", "type": "string"}}, "required": ["payment_arrival_date", "source_bank_account_id"], "type": "object"}, {"properties": {"spend_limit_id": {"description": "Unique identifier of the spend limit associated with the matched transaction.", "format": "uuid", "type": "string"}, "transaction_id": {"default": null, "description": "If already paid, the unique identifier of the bill payment transaction. The bill will be marked as paid with this transaction once approved.", "format": "uuid", "nullable": true, "type": "string"}}, "required": ["spend_limit_id"], "type": "object"}, {"properties": {"manual_payment_method": {"description": "Manual payment method of the bill. If passed, payment_date must also be passed and the bill will be marked as paid.", "enum": ["CASH", "CHECK", "CROSS_BORDER_PAYMENT", "CRYPTO_WALLET_TRANSFER", "DIRECT_DEBIT", "DOMESTIC_WIRE_TRANSFER", "NON_RAMP_CREDIT_CARD", "OTHER", "PAID_IN_ERP"], "type": "string"}, "payment_date": {"description": "The date the bill is paid. This field is not relevant for one-time card delivery, as limits are created immediately and sent out to the vendor on the due date.", "format": "date", "type": "string"}}, "required": ["manual_payment_method", "payment_date"], "type": "object"}]}], "default": null, "description": "Payment details of the bill. Expected schema depends on payment method.", "nullable": true}, "payment_method": {"description": "Payment method of the bill.", "enum": ["ACH", "AUTOMATIC_CARD_PAYMENT", "CARD", "CHECK", "CRYPTO_WALLET_TRANSFER", "DOMESTIC_WIRE", "INTERNATIONAL", "LOCAL_BANK_TRANSFER", "ONE_TIME_CARD", "ONE_TIME_CARD_DELIVERY", "PAID_MANUALLY", "SWIFT", "UNSPECIFIED", "VENDOR_CREDIT"], "type": "string"}, "posting_date": {"default": null, "description": "The date the bill is posted to the accounting system.", "format": "date", "nullable": true, "type": "string"}, "remote_id": {"default": null, "description": "An ID that identifies the bill on client\'s side.", "nullable": true, "type": "string"}, "vendor_contact_id": {"description": "Unique identifier of vendor contact, must be associated with passed vendor.", "format": "uuid", "type": "string"}, "vendor_id": {"description": "Unique identifier of bill vendor.", "format": "uuid", "type": "string"}}, "required": ["due_at", "entity_id", "invoice_currency", "invoice_number", "issued_at", "payment_method", "vendor_contact_id", "vendor_id"], "type": "object"}',  # noqa: E501
    "UPDATEBILL": '{"example": {"accounting_field_selections": [{"field_external_id": "b3B0aW9uX2lk", "field_option_external_id": "aln2l3B0aW9uX2lk"}], "due_at": "2024-10-15", "entity_id": "1cc4b57c-fe4a-4425-90f1-9019d06376b3", "inventory_line_items": [{"accounting_field_selections": [{"field_external_id": "aa73laMazi2", "field_option_external_id": "abk3Rkfnls25"}], "memo": "Pens", "unit_price": 55, "unit_quantity": 2}], "invoice_number": "123", "issued_at": "2024-08-15", "line_items": [{"accounting_field_selections": [], "amount": 100, "memo": "Printing services"}], "memo": "Office supplies", "payment_method": "ONE_TIME_CARD_DELIVERY", "posting_date": null, "remote_id": "bo2f1lAnkf3llL", "vendor_contact_id": "12f55361-8c7f-42dc-8667-64926d330b80", "vendor_id": "c0c89fa8-976e-428d-938d-a5ec89838474"}, "properties": {"accounting_field_selections": {"description": "List of accounting field options selected to code the bill.", "items": {"properties": {"field_external_id": {"description": "Remote ID of accounting field. This is the external ID, likely from ERP system.", "type": "string"}, "field_option_external_id": {"description": "Remote ID of accounting field option. This is the external ID, likely from ERP system.", "type": "string"}}, "required": ["field_external_id", "field_option_external_id"], "type": "object"}, "type": "array"}, "due_at": {"description": "Due date of the bill.", "format": "date", "type": "string"}, "entity_id": {"description": "Associated business entity.", "format": "uuid", "type": "string"}, "inventory_line_items": {"description": "List of inventory line items related to the bill.", "items": {"properties": {"accounting_field_selections": {"items": {"properties": {"field_external_id": {"description": "Remote ID of accounting field. This is the external ID, likely from ERP system.", "type": "string"}, "field_option_external_id": {"description": "Remote ID of accounting field option. This is the external ID, likely from ERP system.", "type": "string"}}, "required": ["field_external_id", "field_option_external_id"], "type": "object"}, "type": "array"}, "memo": {"default": null, "nullable": true, "type": "string"}, "unit_price": {"minimum": 0, "oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "unit_quantity": {"minimum": 0, "type": "integer"}}, "required": ["unit_price", "unit_quantity"], "type": "object"}, "nullable": true, "type": "array"}, "invoice_number": {"description": "The invoice number on the bill.", "maxLength": 20, "type": "string"}, "issued_at": {"description": "Issued date of the bill.", "format": "date", "type": "string"}, "line_items": {"description": "List of line items related to the bill.", "items": {"properties": {"accounting_field_selections": {"items": {"properties": {"field_external_id": {"description": "Remote ID of accounting field. This is the external ID, likely from ERP system.", "type": "string"}, "field_option_external_id": {"description": "Remote ID of accounting field option. This is the external ID, likely from ERP system.", "type": "string"}}, "required": ["field_external_id", "field_option_external_id"], "type": "object"}, "type": "array"}, "amount": {"oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "memo": {"default": null, "nullable": true, "type": "string"}}, "required": ["amount"], "type": "object"}, "nullable": true, "type": "array"}, "memo": {"description": "Memo of the bill.", "maxLength": 1000, "nullable": true, "type": "string"}, "payment_method": {"description": "Payment method of the bill.", "enum": ["ACH", "AUTOMATIC_CARD_PAYMENT", "CARD", "CHECK", "CRYPTO_WALLET_TRANSFER", "DOMESTIC_WIRE", "INTERNATIONAL", "LOCAL_BANK_TRANSFER", "ONE_TIME_CARD", "ONE_TIME_CARD_DELIVERY", "PAID_MANUALLY", "SWIFT", "UNSPECIFIED", "VENDOR_CREDIT"], "type": "string"}, "posting_date": {"description": "The date the bill is posted to the accounting system.", "format": "date", "nullable": true, "type": "string"}, "purchase_order_id": {"description": "Unique identifier of the purchase order to match this bill to. Set to null to remove the link to the purchase order from the bill.", "format": "uuid", "nullable": true, "type": "string"}, "remote_id": {"description": "An ID that identifies the bill on client\'s side.", "nullable": true, "type": "string"}, "vendor_contact_id": {"description": "Unique identifier of vendor contact, must be associated with passed vendor.", "format": "uuid", "type": "string"}, "vendor_id": {"description": "Unique identifier of bill vendor.", "format": "uuid", "type": "string"}}, "type": "object"}',  # noqa: E501
    "REQUESTPHYSICALCARD": '{"example": {"display_name": "T&E", "fulfillment": {"shipping": {"recipient_address": {"address1": "123 Main St", "city": "New York City", "country": "US", "first_name": "Cardholder\'s first name", "last_name": "Cardholder\'s last name", "postal_code": "10003", "state": "NY"}}}, "idempotency_key": "3a5b1f62-988f-4190-bf31-b7ae87c5df42", "spending_restrictions": {"amount": 5000, "categories": [], "currency": "USD", "interval": "MONTHLY", "transaction_amount_limit": 100}, "user_id": "d8135cfe-0396-4b2d-b2cf-ad809fb04731"}, "properties": {"card_program_id": {"description": "Alternative method to create a card using a card program. One of spending_restrictions or card_program_id must be provided. If this value is given, no other attributes (other than idempotency_key) may be given.", "format": "uuid", "type": "string"}, "display_name": {"description": "Cosmetic display name of the card.", "type": "string"}, "entity_id": {"description": "Create card associated with business entity. If not provided, defaults to entity associated with user\'s location.", "format": "uuid", "type": "string"}, "fulfillment": {"allOf": [{"properties": {"card_personalization": {"properties": {"text": {"properties": {"name_line_1": {"properties": {"value": {"nullable": true, "type": "string"}}, "type": "object"}, "name_line_2": {"properties": {"value": {"nullable": true, "type": "string"}}, "type": "object"}}, "type": "object"}}, "type": "object"}, "cardholder_uuid": {"format": "uuid", "nullable": true, "type": "string"}, "shipping": {"properties": {"method": {"nullable": true, "type": "string"}, "recipient_address": {"properties": {"address1": {"maxLength": 50, "minLength": 1, "type": "string"}, "address2": {"maxLength": 50, "minLength": 0, "nullable": true, "type": "string"}, "city": {"type": "string"}, "country": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "phone": {"nullable": true, "type": "string"}, "postal_code": {"type": "string"}, "state": {"nullable": true, "type": "string"}}, "required": ["address1", "city", "country", "first_name", "last_name", "postal_code"], "type": "object"}, "recipient_address_verification_state": {"enum": ["NOT_VERIFIED", "OVERRIDEN", "VERIFIED"], "nullable": true, "type": "string"}, "return_address": {"allOf": [{"properties": {"address1": {"maxLength": 50, "minLength": 1, "type": "string"}, "address2": {"maxLength": 50, "minLength": 0, "nullable": true, "type": "string"}, "city": {"type": "string"}, "country": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "phone": {"nullable": true, "type": "string"}, "postal_code": {"type": "string"}, "state": {"nullable": true, "type": "string"}}, "required": ["address1", "city", "country", "first_name", "last_name", "postal_code"], "type": "object"}], "nullable": true}}, "type": "object"}}, "type": "object"}], "description": "Fulfillment details of a Ramp card. For physical cards only."}, "idempotency_key": {"description": "An idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. To avoid collisions, we encourage clients to use random generated UUIDs.", "type": "string"}, "is_temporary": {"default": false, "description": "Set to true to create a temporary card", "type": "boolean"}, "spending_restrictions": {"allOf": [{"properties": {"amount": {"description": "Amount limit total per interval.", "minimum": 0, "oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "blocked_mcc_codes": {"items": {"type": "string"}, "type": "array"}, "card_accounting_rules": {"items": {"properties": {"tracking_category_id": {"format": "uuid", "type": "string"}, "tracking_category_option_id": {"format": "uuid", "type": "string"}, "tracking_category_option_remote_name": {"type": "string"}}, "required": ["tracking_category_id", "tracking_category_option_id", "tracking_category_option_remote_name"], "type": "object"}, "type": "array"}, "categories": {"description": "List of [Ramp Category Codes](/developer-api/v1/overview/conventions#ramp-category-codes) this card is restricted to.", "items": {"type": "integer"}, "type": "array"}, "categories_blacklist": {"items": {"type": "integer"}, "type": "array"}, "categories_whitelist": {"items": {"type": "integer"}, "type": "array"}, "currency": {"description": "Currency in which the amount is specified.", "type": "string"}, "interval": {"description": "Time interval to apply limit to.", "enum": ["ANNUAL", "DAILY", "MONTHLY", "QUARTERLY", "TERTIARY", "TOTAL", "WEEKLY", "YEARLY"], "type": "string"}, "lock_date": {"description": "Date to automatically lock the card. If `lock_date` has passed, set to a future date or to null to unlock the card. Note that this is different from the actual card expiration date. This date need to conforms to ISO8601 format.", "format": "date-time", "type": "string"}, "policy_id": {"type": "string"}, "transaction_amount_limit": {"description": "Max amount limit per transaction.", "minimum": 0, "oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "vendor_blacklist": {"items": {"format": "uuid", "type": "string"}, "type": "array"}, "vendor_whitelist": {"items": {"format": "uuid", "type": "string"}, "type": "array"}}, "required": ["amount", "interval"], "type": "object"}], "description": "Specifies the spend restrictions on a Ramp card. One of `spending_restrictions` or `card_program_id` must be provided."}, "user_id": {"description": "Unique identifier of the card owner.", "format": "uuid", "type": "string"}}, "required": ["idempotency_key", "user_id"], "type": "object"}',  # noqa: E501
    "CREATEVIRTUALCARDREQUEST": '{"example": {"display_name": "T&E", "entity_id": "7051bc66-a8cb-4e68-81c4-caf6459ac168", "idempotency_key": "3a5b1f62-988f-4190-bf31-b7ae87c5df42", "spending_restrictions": {"amount": 5000, "categories": [], "currency": "USD", "interval": "MONTHLY", "transaction_amount_limit": 100}, "user_id": "d8135cfe-0396-4b2d-b2cf-ad809fb04731"}, "properties": {"card_program_id": {"description": "Alternative method to create a card using a card program. One of spending_restrictions or card_program_id must be provided. If this value is given, no other attributes (other than idempotency_key) may be given.", "format": "uuid", "type": "string"}, "display_name": {"description": "Cosmetic display name of the card.", "type": "string"}, "entity_id": {"description": "Create card associated with business entity. If not provided, defaults to entity associated with user\'s location.", "format": "uuid", "type": "string"}, "idempotency_key": {"description": "An idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. To avoid collisions, we encourage clients to use random generated UUIDs.", "type": "string"}, "is_temporary": {"default": false, "description": "Set to true to create a temporary card", "type": "boolean"}, "spending_restrictions": {"allOf": [{"properties": {"amount": {"description": "Amount limit total per interval.", "minimum": 0, "oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "blocked_mcc_codes": {"items": {"type": "string"}, "type": "array"}, "card_accounting_rules": {"items": {"properties": {"tracking_category_id": {"format": "uuid", "type": "string"}, "tracking_category_option_id": {"format": "uuid", "type": "string"}, "tracking_category_option_remote_name": {"type": "string"}}, "required": ["tracking_category_id", "tracking_category_option_id", "tracking_category_option_remote_name"], "type": "object"}, "type": "array"}, "categories": {"description": "List of [Ramp Category Codes](/developer-api/v1/overview/conventions#ramp-category-codes) this card is restricted to.", "items": {"type": "integer"}, "type": "array"}, "categories_blacklist": {"items": {"type": "integer"}, "type": "array"}, "categories_whitelist": {"items": {"type": "integer"}, "type": "array"}, "currency": {"description": "Currency in which the amount is specified.", "type": "string"}, "interval": {"description": "Time interval to apply limit to.", "enum": ["ANNUAL", "DAILY", "MONTHLY", "QUARTERLY", "TERTIARY", "TOTAL", "WEEKLY", "YEARLY"], "type": "string"}, "lock_date": {"description": "Date to automatically lock the card. If `lock_date` has passed, set to a future date or to null to unlock the card. Note that this is different from the actual card expiration date. This date need to conforms to ISO8601 format.", "format": "date-time", "type": "string"}, "policy_id": {"type": "string"}, "transaction_amount_limit": {"description": "Max amount limit per transaction.", "minimum": 0, "oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "vendor_blacklist": {"items": {"format": "uuid", "type": "string"}, "type": "array"}, "vendor_whitelist": {"items": {"format": "uuid", "type": "string"}, "type": "array"}}, "required": ["amount", "interval"], "type": "object"}], "description": "Specifies the spend restrictions on a Ramp card. One of `spending_restrictions` or `card_program_id` must be provided."}, "user_id": {"description": "Unique identifier of the card owner.", "format": "uuid", "type": "string"}}, "required": ["idempotency_key", "user_id"], "type": "object"}',  # noqa: E501
    "UPDATECARDINFO": '{"example": {"card_program_id": "ebe71e80-84d3-4e4b-be4d-70d05fb20934", "display_name": "WFH Spending Card", "entity_id": "a7cb9187-4dc8-412a-b5ca-0974d7f07a0b", "has_notifications_enabled": true, "new_user_id": "506a7096-98c0-4ab5-86ef-20c884a78e74", "spending_restrictions": {"amount": 500, "interval": "DAILY"}}, "properties": {"card_program_id": {"description": "Specify a card program to link with.\nThis will override the card\'s spending restrictions with those of the card program.\nPass `card_program_id = None` to detach the card\'s current card program.\n\nIf the `card_program_id` field is specified, then the card program\'s changes will override any other changes.\nFor example, if both `spending_restrictions` and `card_program_id` are passed, then the new spending restrictions\nwill match those of the card program (not the passed spending restrictions).\n", "format": "uuid", "nullable": true, "type": "string"}, "display_name": {"description": "Cosmetic display name of the card.", "type": "string"}, "entity_id": {"description": "Specify id to update associated business entity.", "format": "uuid", "nullable": true, "type": "string"}, "has_notifications_enabled": {"description": "Flag to set to enable or disable notifications.", "type": "boolean"}, "new_user_id": {"description": "Specify id for new card owner.", "format": "uuid", "nullable": true, "type": "string"}, "spending_restrictions": {"allOf": [{"properties": {"amount": {"description": "Amount limit total per interval.", "minimum": 0, "oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "blocked_mcc_codes": {"items": {"type": "string"}, "type": "array"}, "categories": {"description": "List of [Ramp Category Codes](/developer-api/v1/overview/conventions#ramp-category-codes) this card is restricted to.", "items": {"type": "integer"}, "type": "array"}, "categories_blacklist": {"items": {"type": "integer"}, "type": "array"}, "categories_whitelist": {"items": {"type": "integer"}, "type": "array"}, "currency": {"description": "Currency in which the amount is specified.", "type": "string"}, "interval": {"description": "Time interval to apply limit to.", "enum": ["ANNUAL", "DAILY", "MONTHLY", "QUARTERLY", "TERTIARY", "TOTAL", "WEEKLY", "YEARLY"], "type": "string"}, "lock_date": {"description": "Date to automatically lock the card. If `lock_date` has passed, set to a future date or to null to unlock the card.", "format": "date-time", "nullable": true, "type": "string"}, "policy_id": {"type": "string"}, "transaction_amount_limit": {"description": "Max amount limit per transaction.", "minimum": 0, "oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "vendor_blacklist": {"items": {"format": "uuid", "type": "string"}, "type": "array"}, "vendor_whitelist": {"items": {"format": "uuid", "type": "string"}, "type": "array"}}, "type": "object", "x-resource-name": "card_spending_restrictions_update"}], "description": "Modify spending restrictions. Only the fields to be modified need to be passed (so fields that will stay the same do not have to be passed)."}}, "type": "object"}',  # noqa: E501
    "CREATECUSTOMTABLECOLUMN": '{"discriminator": {"mapping": {"boolean": "#/components/schemas/DeveloperApiCreatePrimitiveColumnRequestBody", "custom_reference": "#/components/schemas/DeveloperApiCreateReferenceColumnRequestBody", "native_reference": "#/components/schemas/DeveloperApiCreateReferenceColumnRequestBody", "text": "#/components/schemas/DeveloperApiCreatePrimitiveColumnRequestBody"}, "propertyName": "column_type_name"}, "oneOf": [{"example": {"column_type_name": "text", "label": "Project Name", "name": "project_name"}, "properties": {"column_type_name": {"description": "The type of the primitive column.", "enum": ["boolean", "text"], "type": "string"}, "label": {"description": "The display name of the column", "type": "string"}, "name": {"description": "The API name of the column, to be used when writing to this column", "type": "string"}}, "required": ["column_type_name", "label", "name"], "type": "object"}, {"example": {"column_type_name": "custom_reference", "label": "Cost Center", "name": "cost_center", "reference_args": {"cardinality": "many_to_one", "corresponding_column_label": "Members", "corresponding_column_name": "members", "foreign_table": {"table_name": "cost_center", "type": "custom_table"}}}, "properties": {"column_type_name": {"description": "The type of the reference column.", "enum": ["custom_reference", "native_reference"], "type": "string"}, "label": {"description": "The display name of the column", "type": "string"}, "name": {"description": "The API name of the column, to be used when writing to this column", "type": "string"}, "reference_args": {"allOf": [{"example": {"cardinality": "many_to_one", "corresponding_column_label": "Members", "corresponding_column_name": "members", "foreign_table": {"table_name": "cost_center", "type": "custom_table"}}, "properties": {"cardinality": {"description": "The cardinality of the reference.", "enum": ["many_to_many", "many_to_one"], "type": "string"}, "corresponding_column_label": {"default": null, "description": "The label of the corresponding column. Will be generated if not provided.", "nullable": true, "type": "string"}, "corresponding_column_name": {"description": "The API name of the corresponding column.", "type": "string"}, "foreign_table": {"description": "The table that this column references.", "oneOf": [{"example": {"table_name": "business_regions", "type": "custom_table"}, "properties": {"table_name": {"description": "The name of the custom table", "type": "string"}, "type": {"default": "custom_table", "enum": ["custom_table"], "type": "string"}}, "required": ["table_name"], "type": "object"}, {"example": {"table_name": "users", "type": "native_table"}, "properties": {"table_name": {"description": "The name of the native Ramp table", "enum": ["accounting_field_options", "bills", "business_entities", "cards", "departments", "limits", "locations", "purchase_orders", "reimbursements", "transactions", "users"], "type": "string"}, "type": {"default": "native_table", "enum": ["native_table"], "type": "string"}}, "required": ["table_name"], "type": "object"}]}}, "required": ["cardinality", "corresponding_column_name", "foreign_table"], "type": "object"}], "description": "Arguments for creating a reference column."}}, "required": ["column_type_name", "label", "name", "reference_args"], "type": "object"}]}',  # noqa: E501
    "CREATENATIVETABLEFIELD": '{"discriminator": {"mapping": {"boolean": "#/components/schemas/DeveloperApiCreatePrimitiveColumnRequestBody", "custom_reference": "#/components/schemas/DeveloperApiCreateReferenceColumnRequestBody", "native_reference": "#/components/schemas/DeveloperApiCreateReferenceColumnRequestBody", "text": "#/components/schemas/DeveloperApiCreatePrimitiveColumnRequestBody"}, "propertyName": "column_type_name"}, "oneOf": [{"example": {"column_type_name": "text", "label": "Project Name", "name": "project_name"}, "properties": {"column_type_name": {"description": "The type of the primitive column.", "enum": ["boolean", "text"], "type": "string"}, "label": {"description": "The display name of the column", "type": "string"}, "name": {"description": "The API name of the column, to be used when writing to this column", "type": "string"}}, "required": ["column_type_name", "label", "name"], "type": "object"}, {"example": {"column_type_name": "custom_reference", "label": "Cost Center", "name": "cost_center", "reference_args": {"cardinality": "many_to_one", "corresponding_column_label": "Members", "corresponding_column_name": "members", "foreign_table": {"table_name": "cost_center", "type": "custom_table"}}}, "properties": {"column_type_name": {"description": "The type of the reference column.", "enum": ["custom_reference", "native_reference"], "type": "string"}, "label": {"description": "The display name of the column", "type": "string"}, "name": {"description": "The API name of the column, to be used when writing to this column", "type": "string"}, "reference_args": {"allOf": [{"example": {"cardinality": "many_to_one", "corresponding_column_label": "Members", "corresponding_column_name": "members", "foreign_table": {"table_name": "cost_center", "type": "custom_table"}}, "properties": {"cardinality": {"description": "The cardinality of the reference.", "enum": ["many_to_many", "many_to_one"], "type": "string"}, "corresponding_column_label": {"default": null, "description": "The label of the corresponding column. Will be generated if not provided.", "nullable": true, "type": "string"}, "corresponding_column_name": {"description": "The API name of the corresponding column.", "type": "string"}, "foreign_table": {"description": "The table that this column references.", "oneOf": [{"example": {"table_name": "business_regions", "type": "custom_table"}, "properties": {"table_name": {"description": "The name of the custom table", "type": "string"}, "type": {"default": "custom_table", "enum": ["custom_table"], "type": "string"}}, "required": ["table_name"], "type": "object"}, {"example": {"table_name": "users", "type": "native_table"}, "properties": {"table_name": {"description": "The name of the native Ramp table", "enum": ["accounting_field_options", "bills", "business_entities", "cards", "departments", "limits", "locations", "purchase_orders", "reimbursements", "transactions", "users"], "type": "string"}, "type": {"default": "native_table", "enum": ["native_table"], "type": "string"}}, "required": ["table_name"], "type": "object"}]}}, "required": ["cardinality", "corresponding_column_name", "foreign_table"], "type": "object"}], "description": "Arguments for creating a reference column."}}, "required": ["column_type_name", "label", "name", "reference_args"], "type": "object"}]}',  # noqa: E501
    "SETCUSTOMTABLEROWS": '{"example": {"data": [{"cells": [{"contents": "United States", "name": "country"}, {"contents": {"column_name": "email", "value": "<existing_ramp_user_email>"}, "name": "regional_director"}], "external_key": "Southwest"}, {"cells": [{"contents": "United States", "name": "country"}, {"contents": {"column_name": "email", "value": "<existing_ramp_user_email>"}, "name": "regional_directors"}, {"contents": {"column_name": "id", "value": "<existing_ramp_user_uuid>"}, "name": "regional_directors"}], "external_key": "Northeast"}]}, "properties": {"data": {"description": "List of rows to insert or update. All entries must have the same set of column names, with `null` provided to indicate that a value should not be set.", "items": {"properties": {"cells": {"description": "The contents of the cells in the row. The column name should be the name of the column, and the contents should be the value to insert into the cell. When setting a cell to reference many rows, each reference must be a separate entry in the list.", "items": {"properties": {"contents": {"nullable": true, "oneOf": [{"properties": {"column_name": {"title": "Column Name", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["column_name", "value"], "title": "NativeRowIdentifier", "type": "object"}, {"type": "boolean"}, {"type": "string"}], "title": "Contents"}, "name": {"title": "Name", "type": "string"}}, "required": ["contents", "name"], "title": "ColumnNameAndContents", "type": "object"}, "title": "Cells", "type": "array"}, "external_key": {"description": "The external key of the row.", "title": "External Key", "type": "string"}}, "required": ["cells", "external_key"], "title": "CustomRowColumnContentsByColumnName", "type": "object"}, "title": "Data", "type": "array"}}, "required": ["data"], "title": "PutCustomRow", "type": "object"}',  # noqa: E501
    "DELETECUSTOMTABLEROW": '{"example": {"data": [{"external_key": "Northeast"}, {"external_key": "Southwest"}]}, "properties": {"data": {"description": "List of the external keys of rows to delete.", "items": {"properties": {"external_key": {"title": "External Key", "type": "string"}}, "required": ["external_key"], "title": "CustomRowExternalKey", "type": "object"}, "title": "Data", "type": "array"}}, "required": ["data"], "title": "DeleteCustomRow", "type": "object"}',  # noqa: E501
    "APPENDCELLSTOCUSTOMTABLE": '{"example": {"data": [{"cells": [{"contents": "United States", "name": "country"}, {"contents": {"column_name": "email", "value": "<existing_ramp_user_email>"}, "name": "regional_director"}], "external_key": "Southwest"}, {"cells": [{"contents": "United States", "name": "country"}, {"contents": {"column_name": "email", "value": "<existing_ramp_user_email>"}, "name": "regional_directors"}, {"contents": {"column_name": "id", "value": "<existing_ramp_user_uuid>"}, "name": "regional_directors"}], "external_key": "Northeast"}]}, "properties": {"data": {"description": "List of rows to insert or update. All entries must have the same set of column names, with `null` provided to indicate that a value should not be set.", "items": {"properties": {"cells": {"description": "The contents of the cells in the row. The column name should be the name of the column, and the contents should be the value to insert into the cell. When setting a cell to reference many rows, each reference must be a separate entry in the list.", "items": {"properties": {"contents": {"nullable": true, "oneOf": [{"properties": {"column_name": {"title": "Column Name", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["column_name", "value"], "title": "NativeRowIdentifier", "type": "object"}, {"type": "boolean"}, {"type": "string"}], "title": "Contents"}, "name": {"title": "Name", "type": "string"}}, "required": ["contents", "name"], "title": "ColumnNameAndContents", "type": "object"}, "title": "Cells", "type": "array"}, "external_key": {"description": "The external key of the row.", "title": "External Key", "type": "string"}}, "required": ["cells", "external_key"], "title": "CustomRowColumnContentsByColumnName", "type": "object"}, "title": "Data", "type": "array"}}, "required": ["data"], "title": "PutCustomRow", "type": "object"}',  # noqa: E501
    "REMOVECUSTOMTABLECELLS": '{"example": {"data": [{"cells": [{"contents": "United States", "name": "country"}, {"contents": {"column_name": "email", "value": "<existing_ramp_user_email>"}, "name": "regional_director"}], "external_key": "Southwest"}, {"cells": [{"contents": "United States", "name": "country"}, {"contents": {"column_name": "email", "value": "<existing_ramp_user_email>"}, "name": "regional_directors"}, {"contents": {"column_name": "id", "value": "<existing_ramp_user_uuid>"}, "name": "regional_directors"}], "external_key": "Northeast"}]}, "properties": {"data": {"description": "List of rows to insert or update. All entries must have the same set of column names, with `null` provided to indicate that a value should not be set.", "items": {"properties": {"cells": {"description": "The contents of the cells in the row. The column name should be the name of the column, and the contents should be the value to insert into the cell. When setting a cell to reference many rows, each reference must be a separate entry in the list.", "items": {"properties": {"contents": {"nullable": true, "oneOf": [{"properties": {"column_name": {"title": "Column Name", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["column_name", "value"], "title": "NativeRowIdentifier", "type": "object"}, {"type": "boolean"}, {"type": "string"}], "title": "Contents"}, "name": {"title": "Name", "type": "string"}}, "required": ["contents", "name"], "title": "ColumnNameAndContents", "type": "object"}, "title": "Cells", "type": "array"}, "external_key": {"description": "The external key of the row.", "title": "External Key", "type": "string"}}, "required": ["cells", "external_key"], "title": "CustomRowColumnContentsByColumnName", "type": "object"}, "title": "Data", "type": "array"}}, "required": ["data"], "title": "PutCustomRow", "type": "object"}',  # noqa: E501
    "UPDATERAMPTABLEROWS": '{"example": {"data": [{"cells": [{"contents": "California", "name": "home_state"}, {"contents": {"column_name": "email", "value": "<another_existing_ramp_user_email>"}, "name": "budget_managers"}, {"contents": {"column_name": "email", "value": "<existing_ramp_user_email>"}, "name": "budget_managers"}], "row": {"column_name": "email", "value": "<existing_ramp_user_email>"}}, {"cells": [{"contents": "New York", "name": "home_state"}, {"contents": null, "name": "budget_managers"}], "row": {"column_name": "id", "value": "<existing_ramp_user_uuid>"}}]}, "properties": {"data": {"description": "List of rows to insert or update. All entries must have the same set of column names, with `null` provided to indicate that a value should not be set.", "items": {"properties": {"cells": {"description": "The contents of the cells in the row. The column name should be the name of the column, and the contents should be the value to insert into the cell. When setting a cell to reference many rows, each reference must be a separate entry in the list.", "items": {"properties": {"contents": {"nullable": true, "oneOf": [{"properties": {"column_name": {"title": "Column Name", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["column_name", "value"], "title": "NativeRowIdentifier", "type": "object"}, {"type": "boolean"}, {"type": "string"}], "title": "Contents"}, "name": {"title": "Name", "type": "string"}}, "required": ["contents", "name"], "title": "ColumnNameAndContents", "type": "object"}, "title": "Cells", "type": "array"}, "row": {"allOf": [{"properties": {"column_name": {"title": "Column Name", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["column_name", "value"], "title": "NativeRowIdentifier", "type": "object"}], "description": "An identifier for the Ramp object"}}, "required": ["cells", "row"], "title": "NativeRowColumnContentsByColumnName", "type": "object"}, "title": "Data", "type": "array"}}, "required": ["data"], "title": "PutNativeRow", "type": "object"}',  # noqa: E501
    "APPENDCELLSTONATIVETABLE": '{"example": {"data": [{"cells": [{"contents": "California", "name": "home_state"}, {"contents": {"column_name": "email", "value": "<another_existing_ramp_user_email>"}, "name": "budget_managers"}, {"contents": {"column_name": "email", "value": "<existing_ramp_user_email>"}, "name": "budget_managers"}], "row": {"column_name": "email", "value": "<existing_ramp_user_email>"}}, {"cells": [{"contents": "New York", "name": "home_state"}, {"contents": null, "name": "budget_managers"}], "row": {"column_name": "id", "value": "<existing_ramp_user_uuid>"}}]}, "properties": {"data": {"description": "List of rows to insert or update. All entries must have the same set of column names, with `null` provided to indicate that a value should not be set.", "items": {"properties": {"cells": {"description": "The contents of the cells in the row. The column name should be the name of the column, and the contents should be the value to insert into the cell. When setting a cell to reference many rows, each reference must be a separate entry in the list.", "items": {"properties": {"contents": {"nullable": true, "oneOf": [{"properties": {"column_name": {"title": "Column Name", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["column_name", "value"], "title": "NativeRowIdentifier", "type": "object"}, {"type": "boolean"}, {"type": "string"}], "title": "Contents"}, "name": {"title": "Name", "type": "string"}}, "required": ["contents", "name"], "title": "ColumnNameAndContents", "type": "object"}, "title": "Cells", "type": "array"}, "row": {"allOf": [{"properties": {"column_name": {"title": "Column Name", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["column_name", "value"], "title": "NativeRowIdentifier", "type": "object"}], "description": "An identifier for the Ramp object"}}, "required": ["cells", "row"], "title": "NativeRowColumnContentsByColumnName", "type": "object"}, "title": "Data", "type": "array"}}, "required": ["data"], "title": "PutNativeRow", "type": "object"}',  # noqa: E501
    "REMOVECELLSFROMTABLE": '{"example": {"data": [{"cells": [{"contents": "California", "name": "home_state"}, {"contents": {"column_name": "email", "value": "<another_existing_ramp_user_email>"}, "name": "budget_managers"}, {"contents": {"column_name": "email", "value": "<existing_ramp_user_email>"}, "name": "budget_managers"}], "row": {"column_name": "email", "value": "<existing_ramp_user_email>"}}, {"cells": [{"contents": "New York", "name": "home_state"}, {"contents": null, "name": "budget_managers"}], "row": {"column_name": "id", "value": "<existing_ramp_user_uuid>"}}]}, "properties": {"data": {"description": "List of rows to insert or update. All entries must have the same set of column names, with `null` provided to indicate that a value should not be set.", "items": {"properties": {"cells": {"description": "The contents of the cells in the row. The column name should be the name of the column, and the contents should be the value to insert into the cell. When setting a cell to reference many rows, each reference must be a separate entry in the list.", "items": {"properties": {"contents": {"nullable": true, "oneOf": [{"properties": {"column_name": {"title": "Column Name", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["column_name", "value"], "title": "NativeRowIdentifier", "type": "object"}, {"type": "boolean"}, {"type": "string"}], "title": "Contents"}, "name": {"title": "Name", "type": "string"}}, "required": ["contents", "name"], "title": "ColumnNameAndContents", "type": "object"}, "title": "Cells", "type": "array"}, "row": {"allOf": [{"properties": {"column_name": {"title": "Column Name", "type": "string"}, "value": {"title": "Value", "type": "string"}}, "required": ["column_name", "value"], "title": "NativeRowIdentifier", "type": "object"}], "description": "An identifier for the Ramp object"}}, "required": ["cells", "row"], "title": "NativeRowColumnContentsByColumnName", "type": "object"}, "title": "Data", "type": "array"}}, "required": ["data"], "title": "PutNativeRow", "type": "object"}',  # noqa: E501
    "CREATEITEMRECEIPT": '{"example": {"item_receipt_line_items": [{"purchase_order_line_item_id": "39786dab-ce04-4033-84f1-913016a90b9d"}, {"purchase_order_line_item_id": "7736417a-6a9f-4989-96ad-720b320d0afa", "unit_quantity": 2}], "item_receipt_number": "IR-1234", "memo": "my item receipt", "purchase_order_id": "0a6c6475-94c6-4556-b45e-10f5360f3c60", "receieved_at": "2025-03-20"}, "properties": {"item_receipt_line_items": {"description": "Item receipt line items.", "items": {"properties": {"purchase_order_line_item_id": {"description": "Unique identifier of the purchase order line item being received.", "format": "uuid", "type": "string"}, "unit_quantity": {"default": null, "description": "The number of units of an item recieved; required for purchase order line items with inventory item accounting field selections.", "nullable": true, "type": "integer"}}, "required": ["purchase_order_line_item_id"], "type": "object"}, "type": "array"}, "item_receipt_number": {"description": "Item receipt number.", "type": "string"}, "memo": {"default": null, "description": "Memo for the item receipt.", "nullable": true, "type": "string"}, "purchase_order_id": {"description": "Unique identifier of the purchase order this item receipt is attached to.", "format": "uuid", "type": "string"}, "received_at": {"description": "The date the vendor will deliver the goods or services.", "format": "date", "type": "string"}}, "required": ["item_receipt_line_items", "item_receipt_number", "purchase_order_id", "received_at"], "type": "object"}',  # noqa: E501
    "CREATESALESLEAD": '{"example": {"business_info": {"business_description": "We are in the empire business", "business_name_dba": "White & Pinkman Inc.", "business_name_legal": "White & Pinkman Inc.", "business_name_website": "www.whiteandpinkman.com", "date_of_incorporation": "2004-01-01", "ein_number": "12-3456789", "entity_type": "CORPORATION", "estimated_monthly_spend": "10,000", "industry": "Food Products", "industry_group": "Food, Beverage & Tobacco", "office_address": {"office_city": "Albuquerque", "office_country": "US", "office_postal_code": "100022", "office_state": "New Mexico", "office_street_address": "100 Main Street"}, "sector": "Consumer Staples", "state_of_incorporation": "New Mexico"}, "email": "lead@whiteandpinkman.com", "external_id": "f26bfdb5-beei-4875-a9b5-a29f8af6f381", "first_name": "Walter", "last_name": "White", "redirect_uri": "https://app.whiteandpinkman.com/ramp/callback", "source": "White & Pinkman", "state": "f26bfdb5-7ecf-4875-a9b5-a29f8af6f381"}, "properties": {"business_info": {"allOf": [{"example": {"business_description": "We are in the empire business", "business_name_dba": "White & Pinkman Inc.", "business_name_legal": "White & Pinkman Inc.", "business_name_website": "www.whiteandpinkman.com", "date_of_incorporation": "2004-01-01", "ein_number": "12-3456789", "entity_type": "CORPORATION", "estimated_monthly_spend": "10,000", "industry": "Food Products", "industry_group": "Food, Beverage & Tobacco", "office_address": {"office_city": "Albuquerque", "office_country": "US", "office_postal_code": "100022", "office_state": "New Mexico", "office_street_address": "100 Main Street"}, "sector": "Consumer Staples", "state_of_incorporation": "New Mexico"}, "properties": {"business_description": {"description": "A short description of the business.", "type": "string"}, "business_name_dba": {"description": "Doing business as (DBA)", "maxLength": 255, "type": "string"}, "business_name_legal": {"description": "Legal name of the business.", "maxLength": 255, "type": "string"}, "business_name_website": {"description": "Business\'s website.", "type": "string"}, "date_of_incorporation": {"description": "Business\'s incorporation date.", "format": "date", "type": "string"}, "ein_number": {"description": "Employer Identification Number (EIN).", "type": "string"}, "entity_type": {"description": "Type of incorporation.", "enum": ["COOPERATIVE", "CORPORATION", "LLC", "NON_PROFIT_CORPORATION", "OTHER", "PARTNERSHIP", "SOLE_PROPRIETORSHIP"], "type": "string"}, "estimated_monthly_spend": {"description": "Estimated monthly spend.", "type": "string"}, "industry": {"description": "Business\'s industry", "type": "string"}, "industry_group": {"description": "Business\'s industry group", "type": "string"}, "office_address": {"allOf": [{"properties": {"office_apt_suite": {"type": "string"}, "office_city": {"type": "string"}, "office_country": {"type": "string"}, "office_postal_code": {"type": "string"}, "office_state": {"type": "string"}, "office_street_address": {"type": "string"}}, "type": "object"}], "description": "Office\'s address."}, "office_phone_number": {"description": "Office phone number. Must include country code.", "type": "string"}, "sector": {"description": "Business\'s sector", "type": "string"}, "state_of_incorporation": {"description": "The state in which the business is incorporated.", "type": "string"}, "sub_industry": {"description": "Business\'s subindustry", "type": "string"}}, "required": ["business_name_dba", "business_name_legal"], "type": "object"}], "description": ""}, "email": {"description": "", "type": "string"}, "external_id": {"description": "", "type": "string"}, "first_name": {"description": "", "maxLength": 40, "type": "string"}, "last_name": {"description": "", "maxLength": 40, "type": "string"}, "phone": {"description": "", "type": "string"}, "redirect_uri": {"description": "", "type": "string"}, "source": {"description": "", "enum": ["AngelList", "Quanta"], "type": "string"}, "state": {"type": "string"}}, "required": ["email", "external_id", "first_name", "last_name", "redirect_uri", "source", "state"], "type": "object"}',  # noqa: E501
    "CREATESPENDLIMIT": '{"example": {"accounting_rules": [{"field_id": "3f30896b-cd22-47af-b48a-c6c3068bc780", "field_option_id": "d062e221-9c95-47b5-8dc6-d6c881693caf"}], "display_name": "T&E", "idempotency_key": "3a5b1f62-988f-4190-bf31-b7ae87c5df42", "is_shareable": false, "permitted_spend_types": {"primary_card_enabled": false, "reimbursements_enabled": false}, "spending_restrictions": {"allowed_categories": [18, 20], "auto_lock_date": null, "interval": "MONTHLY", "limit": {"amount": 500000, "currency_code": "USD"}, "transaction_amount_limit": {"amount": 10000, "currency_code": "USD"}}, "user_id": "d8135cfe-0396-4b2d-b2cf-ad809fb04731"}, "properties": {"accounting_rules": {"description": "Set accounting rules for Spend Limit", "items": {"properties": {"field_id": {"description": "UUID of the tracking category", "format": "uuid", "type": "string"}, "field_option_id": {"description": "UUID of the tracking category option", "format": "uuid", "type": "string"}}, "required": ["field_id", "field_option_id"], "type": "object"}, "type": "array"}, "display_name": {"description": "Cosmetic display name of the limit.", "type": "string"}, "idempotency_key": {"description": "An idempotency key is a unique value generated by the client which the server uses to recognize subsequent retries of the same request. To avoid collisions, we encourage clients to use random generated UUIDs.", "type": "string"}, "is_shareable": {"description": "Dictates whether the spend limit is shareable among multiple users.", "type": "boolean"}, "permitted_spend_types": {"allOf": [{"properties": {"primary_card_enabled": {"description": "Dictates whether the user\'s physical card can be linked to this limit.", "type": "boolean"}, "reimbursements_enabled": {"description": "Dictates whether reimbursements can be submitted against this limit.", "type": "boolean"}}, "required": ["primary_card_enabled", "reimbursements_enabled"], "type": "object"}], "description": "Specifies the permitted spend types."}, "spend_program_id": {"description": "The id of the associated spend program.", "format": "uuid", "type": "string"}, "spending_restrictions": {"allOf": [{"properties": {"allowed_categories": {"description": " List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) allowed for the limit.", "items": {"type": "integer"}, "type": "array"}, "allowed_vendors": {"description": "List of merchants allowed for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "blocked_categories": {"description": "List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) blocked for the limit.", "items": {"type": "integer"}, "type": "array"}, "blocked_mcc_codes": {"items": {"type": "string"}, "type": "array"}, "blocked_vendors": {"description": "List of merchants  blocked for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "interval": {"description": "Time interval to apply limit to.", "enum": ["ANNUAL", "DAILY", "MONTHLY", "QUARTERLY", "TERTIARY", "TOTAL", "WEEKLY", "YEARLY"], "type": "string"}, "limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Total amount limit per interval. Currently we expect the currency to be USD and the amount need to be denominated in cents."}, "lock_date": {"description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card.", "format": "date-time", "type": "string"}, "transaction_amount_limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Max amount per transaction. Currently we expect the currency to be USD and the amount need to be denominated in cents."}}, "required": ["interval", "limit"], "type": "object"}], "description": "Specifies the spending restrictions. If spend_program_id is passed, this field is ignored and the limit will inherit the spending restrictions of the spend program."}, "user_id": {"description": "Unique identifier of the limit owner.", "format": "uuid", "type": "string"}}, "required": ["idempotency_key", "user_id"], "type": "object"}',  # noqa: E501
    "UPDATESPENDINGLIMIT": '{"example": {"accounting_rules": [{"field_id": "3f30896b-cd22-47af-b48a-c6c3068bc780", "field_option_id": "d062e221-9c95-47b5-8dc6-d6c881693caf"}], "display_name": "New Display Name", "is_shareable": true, "new_user_id": "b9627abf-6b7e-47bc-a475-7493a8fa9cb4", "permitted_spend_types": {"primary_card_enabled": false, "reimbursements_enabled": true}, "spending_restrictions": {"amount": 500, "interval": "DAILY"}}, "properties": {"accounting_rules": {"description": "Set accounting rules for all card transactions and reimbursements (if applicable) for the given spend limit", "items": {"properties": {"field_id": {"description": "UUID of the tracking category", "format": "uuid", "type": "string"}, "field_option_id": {"description": "UUID of the tracking category option", "format": "uuid", "type": "string"}}, "required": ["field_id", "field_option_id"], "type": "object"}, "type": "array"}, "display_name": {"description": "Change the display name of the limit", "type": "string"}, "is_shareable": {"description": "Dictates whether the spend limit is shareable among multiple users.", "type": "boolean"}, "new_user_id": {"description": "Change the user of the limit", "format": "uuid", "type": "string"}, "permitted_spend_types": {"allOf": [{"properties": {"primary_card_enabled": {"description": "Dictates whether the user\'s physical card can be linked to this limit.", "type": "boolean"}, "reimbursements_enabled": {"description": "Dictates whether reimbursements can be submitted against this limit.", "type": "boolean"}}, "required": ["primary_card_enabled", "reimbursements_enabled"], "type": "object"}], "description": "Modify permitted spend types. All fields of permitted_spend_types must be given."}, "spend_program_id": {"description": "Specify a spend program to link with.\n            This will override the limit\'s spending restrictions and permitted spend types with those of the spend program.\n            Pass spend_program_id = None to detach the limit\'s current spend program.\n            If the spend_program_id field is specified, no other fields may be passed.\n            ", "format": "uuid", "nullable": true, "type": "string"}, "spending_restrictions": {"allOf": [{"properties": {"allowed_categories": {"description": " List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) allowed for the limit.", "items": {"type": "integer"}, "type": "array"}, "allowed_vendors": {"description": "List of merchants allowed for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "blocked_categories": {"description": "List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) blocked for the limit.", "items": {"type": "integer"}, "type": "array"}, "blocked_mcc_codes": {"items": {"type": "string"}, "type": "array"}, "blocked_vendors": {"description": "List of merchants  blocked for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "interval": {"description": "Time interval to apply limit to.", "enum": ["ANNUAL", "DAILY", "MONTHLY", "QUARTERLY", "TERTIARY", "TOTAL", "WEEKLY", "YEARLY"], "type": "string"}, "is_one_time_edit": {"description": "Dictates whether the spend restriction update is only applicable for the current period. Set to true for a temporary limit increase. Default is false.", "type": "boolean"}, "limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Total amount limit per interval. Currently we expect the currency to be USD and the amount need to be denominated in cents."}, "lock_date": {"description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card.", "format": "date-time", "type": "string"}, "transaction_amount_limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Max amount per transaction. Currently we expect the currency to be USD and the amount need to be denominated in cents."}}, "required": ["interval", "limit"], "type": "object"}], "description": "Modify spending restrictions. If this field is passed, the entire set of new spending restrictions must be passed (i.e. the given spending restrictions will override all existing spending restrictions)."}}, "type": "object", "x-resource-name": "spend_limits"}',  # noqa: E501
    "UPDATESPENDLIMIT": '{"example": {"accounting_rules": [{"field_id": "3f30896b-cd22-47af-b48a-c6c3068bc780", "field_option_id": "d062e221-9c95-47b5-8dc6-d6c881693caf"}], "display_name": "New Display Name", "is_shareable": true, "new_user_id": "b9627abf-6b7e-47bc-a475-7493a8fa9cb4", "permitted_spend_types": {"primary_card_enabled": false, "reimbursements_enabled": true}, "spending_restrictions": {"amount": 500, "interval": "DAILY"}}, "properties": {"accounting_rules": {"description": "Set accounting rules for all card transactions and reimbursements (if applicable) for the given spend limit", "items": {"properties": {"field_id": {"description": "UUID of the tracking category", "format": "uuid", "type": "string"}, "field_option_id": {"description": "UUID of the tracking category option", "format": "uuid", "type": "string"}}, "required": ["field_id", "field_option_id"], "type": "object"}, "type": "array"}, "display_name": {"description": "Change the display name of the limit", "type": "string"}, "is_shareable": {"description": "Dictates whether the spend limit is shareable among multiple users.", "type": "boolean"}, "new_user_id": {"description": "Change the user of the limit", "format": "uuid", "type": "string"}, "permitted_spend_types": {"allOf": [{"properties": {"primary_card_enabled": {"description": "Dictates whether the user\'s physical card can be linked to this limit.", "type": "boolean"}, "reimbursements_enabled": {"description": "Dictates whether reimbursements can be submitted against this limit.", "type": "boolean"}}, "required": ["primary_card_enabled", "reimbursements_enabled"], "type": "object"}], "description": "Modify permitted spend types. All fields of permitted_spend_types must be given."}, "spend_program_id": {"description": "Specify a spend program to link with.\n            This will override the limit\'s spending restrictions and permitted spend types with those of the spend program.\n            Pass spend_program_id = None to detach the limit\'s current spend program.\n            If the spend_program_id field is specified, no other fields may be passed.\n            ", "format": "uuid", "nullable": true, "type": "string"}, "spending_restrictions": {"allOf": [{"properties": {"allowed_categories": {"description": " List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) allowed for the limit.", "items": {"type": "integer"}, "type": "array"}, "allowed_vendors": {"description": "List of merchants allowed for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "blocked_categories": {"description": "List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) blocked for the limit.", "items": {"type": "integer"}, "type": "array"}, "blocked_mcc_codes": {"items": {"type": "string"}, "type": "array"}, "blocked_vendors": {"description": "List of merchants  blocked for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "interval": {"description": "Time interval to apply limit to.", "enum": ["ANNUAL", "DAILY", "MONTHLY", "QUARTERLY", "TERTIARY", "TOTAL", "WEEKLY", "YEARLY"], "type": "string"}, "is_one_time_edit": {"description": "Dictates whether the spend restriction update is only applicable for the current period. Set to true for a temporary limit increase. Default is false.", "type": "boolean"}, "limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Total amount limit per interval. Currently we expect the currency to be USD and the amount need to be denominated in cents."}, "lock_date": {"description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card.", "format": "date-time", "type": "string"}, "transaction_amount_limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Max amount per transaction. Currently we expect the currency to be USD and the amount need to be denominated in cents."}}, "required": ["interval", "limit"], "type": "object"}], "description": "Modify spending restrictions. If this field is passed, the entire set of new spending restrictions must be passed (i.e. the given spending restrictions will override all existing spending restrictions)."}}, "type": "object", "x-resource-name": "spend_limits"}',  # noqa: E501
    "CREATEPURCHASEORDER": '{"example": {"accounting_field_selections": [], "currency": "USD", "entity_id": "7b96a1f2-4b86-45f8-943a-f1ca6b5194d4", "line_items": [{"accounting_field_selections": [], "description": "my line item", "unit_price": 100, "unit_quantity": 1}], "memo": "Purchase order for general software services", "net_payment_terms": 30, "promise_date": "2024-05-10", "purchase_order_number": "PO-1234", "spend_end_date": "2024-05-10", "spend_start_date": "2024-05-01", "three_way_match_enabled": false, "vendor_id": "b901afe8-46d7-4f30-b7b5-3c8af127e5a0"}, "properties": {"accounting_field_selections": {"description": "List of accounting field options selected to code the purchase order. Generally, only a single vendor accounting field is supported.", "items": {"properties": {"field_external_id": {"description": "Remote ID of accounting field. This is the external ID, likely from ERP system.", "type": "string"}, "field_option_external_id": {"description": "Remote ID of accounting field option. This is the external ID, likely from ERP system.", "type": "string"}}, "required": ["field_external_id", "field_option_external_id"], "type": "object"}, "type": "array"}, "currency": {"description": "Currency of the purchase order.", "enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHE", "CHF", "CHW", "CLF", "CLP", "CNY", "COP", "COU", "CRC", "CUC", "CUP", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "EURC", "FJD", "FKP", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MUR", "MVR", "MWK", "MXN", "MXV", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SHP", "SLE", "SLL", "SOS", "SRD", "SSP", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "USDC", "USN", "UYI", "UYU", "UYW", "UZS", "VED", "VES", "VND", "VUV", "WST", "XAD", "XAF", "XAG", "XAU", "XBA", "XBB", "XBC", "XBD", "XCD", "XCG", "XDR", "XOF", "XPD", "XPF", "XPT", "XSU", "XTS", "XUA", "XXX", "YER", "ZAR", "ZMW", "ZWG", "ZWL"], "type": "string"}, "entity_id": {"description": "Unique identifier of associated business entity.", "format": "uuid", "type": "string"}, "line_items": {"description": "List of purchase order line items.", "items": {"properties": {"accounting_field_selections": {"description": "List of accounting field options selected to code the line item.", "items": {"properties": {"field_external_id": {"description": "Remote ID of accounting field. This is the external ID, likely from ERP system.", "type": "string"}, "field_option_external_id": {"description": "Remote ID of accounting field option. This is the external ID, likely from ERP system.", "type": "string"}}, "required": ["field_external_id", "field_option_external_id"], "type": "object"}, "type": "array"}, "description": {"default": null, "description": "Description of the line item.", "nullable": true, "type": "string"}, "unit_price": {"description": "Unit price of the line item.", "oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "unit_quantity": {"description": "Quantity of the line item.", "type": "integer"}}, "required": ["unit_price", "unit_quantity"], "type": "object"}, "type": "array"}, "memo": {"default": null, "description": "Memo for the purchase order.", "nullable": true, "type": "string"}, "net_payment_terms": {"default": null, "description": "The required time an invoice needs to be paid after receipt in days.", "nullable": true, "type": "integer"}, "promise_date": {"default": null, "description": "The date the vendor will deliver the goods or services.", "format": "date", "nullable": true, "type": "string"}, "purchase_order_number": {"default": null, "description": "Unique purchase order number with format <prefix>-<number>. Prefixes must only contain numbers, uppercase letters, and dashes. Invalid characters will be filtered out automatically. If not provided, one will be auto-generated using a prefix specified in procurement settings, if it exists.", "nullable": true, "type": "string"}, "spend_end_date": {"default": null, "description": "The date when spending for this purchase order ends.", "format": "date", "nullable": true, "type": "string"}, "spend_start_date": {"default": null, "description": "The date when spending for this purchase order begins.", "format": "date", "nullable": true, "type": "string"}, "three_way_match_enabled": {"description": "Whether three-way match is enabled for the purchase order. I.e. whether an item receipt will be attached to indicate goods were received.", "type": "boolean"}, "vendor_id": {"default": null, "description": "Unique identifier for the vendor.", "format": "uuid", "nullable": true, "type": "string"}}, "required": ["currency", "entity_id", "line_items", "three_way_match_enabled"], "type": "object"}',  # noqa: E501
    "CREATEMILEAGEREIMBURSEMENT": '{"example": {"distance": 125.5, "distance_units": "MILES", "end_location": "456 Business Ave, Philadelphia, PA 19103", "memo": "Client meeting in downtown office", "reimbursee_id": "7979392e-8d41-4f97-815b-ccd7584802bf", "start_location": "123 Main St, Scranton, PA 18503", "trip_date": "2023-08-19", "waypoints": ["321 Rest Area Dr, King of Prussia, PA 19406", "789 Highway Stop, Allentown, PA 18101"]}, "properties": {"distance": {"oneOf": [{"format": "decimal", "type": "string"}, {"type": "number"}]}, "distance_units": {"enum": ["KILOMETERS", "MILES"], "type": "string"}, "end_location": {"type": "string"}, "memo": {"type": "string"}, "reimbursee_id": {"format": "uuid", "type": "string"}, "start_location": {"type": "string"}, "trip_date": {"format": "date", "type": "string"}, "waypoints": {"items": {"type": "string"}, "type": "array"}}, "required": ["distance", "reimbursee_id", "trip_date"], "type": "object"}',  # noqa: E501
    "CREATESPENDPROGRAM": '{"properties": {"description": {"description": "Description of the spend program.", "type": "string"}, "display_name": {"description": "Display name of the spend program.", "type": "string"}, "icon": {"description": "The template icon for the spend program.", "enum": ["AccountingServicesIcon", "AdvertisingIcon", "CONTRACTORS_AND_PROFESSIONAL_SERVICES", "CUSTOM", "CardIcon", "EducationStipendIcon", "EmployeeRewardsIcon", "GroundTransportationIcon", "LegalFeesIcon", "LodgingIcon", "LunchOrderingIcon", "OnboardingIcon", "PerDiemCardIcon", "SOFTWARE", "SaasSubscriptionIcon", "SoftwareTrialIcon", "SuppliesIcon", "TeamSocialIcon", "TravelExpensesIcon", "VirtualEventIcon", "WellnessIcon", "WorkFromHomeIcon", "advertising", "airlines", "bills", "business", "car_services", "contractor", "education", "entertainment", "event_balloons", "event_virtual", "food", "fuel_and_gas", "general_expense", "general_merchandise", "gift", "government_services", "internet_and_phone", "legal", "lodging", "lodging_room", "newspaper", "office", "physical_card", "procurement_checklist", "procurement_intake", "professional_services", "restaurants", "reward", "saas_software", "shipping", "travel_misc", "wellness"], "type": "string"}, "is_shareable": {"default": false, "description": "Dictates whether the spend program is shareable among multiple users.", "type": "boolean"}, "issuance_rules": {"allOf": [{"properties": {"automatic": {"allOf": [{"properties": {"applies_to_all": {"default": false, "description": "Dictates whether this rule should apply to all employees or not (if True, location_ids, department_ids, and user_custom_field_ids should be null).", "type": "boolean"}, "department_ids": {"description": "List of departments whose users are able to request or be issued this spend program.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "location_ids": {"description": "List of locations whose users are able to request or be issued this spend program.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "user_custom_field_ids": {"items": {"format": "uuid", "type": "string"}, "type": "array"}}, "type": "object"}], "description": "Set of rules for having spend programs issued by default to users", "nullable": true}, "requestable": {"allOf": [{"properties": {"applies_to_all": {"default": false, "description": "Dictates whether this rule should apply to all employees or not (if True, location_ids, department_ids, and user_custom_field_ids should be null).", "type": "boolean"}, "department_ids": {"description": "List of departments whose users are able to request or be issued this spend program.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "location_ids": {"description": "List of locations whose users are able to request or be issued this spend program.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "user_custom_field_ids": {"items": {"format": "uuid", "type": "string"}, "type": "array"}}, "type": "object"}], "description": "Set of rules for users requesting spend programs.", "nullable": true}}, "type": "object"}], "default": null, "description": "Spend Program Issuance Rules can be set for requests or default issuance of Limits from a program. Set whether a program is requestable or issued by default for a given set of users and their attributes (department, locations, and custom fields). If you\'d like to give these permissions to all employees, you can set `applies_to_all` to `True`. Feel free to ignore this if you don\'t want any custom requestability or issuance logic.", "nullable": true}, "issue_physical_card_if_needed": {"default": false, "description": "Dictates whether the spend program should issue a physical card if the user does not have one.", "type": "boolean"}, "permitted_spend_types": {"allOf": [{"properties": {"primary_card_enabled": {"description": "Dictates whether the user\'s physical card can be linked to this limit.", "type": "boolean"}, "reimbursements_enabled": {"description": "Dictates whether reimbursements can be submitted against this limit.", "type": "boolean"}}, "required": ["primary_card_enabled", "reimbursements_enabled"], "type": "object"}], "description": "Specifies the permitted spend types for the spend program."}, "spending_restrictions": {"allOf": [{"properties": {"allowed_categories": {"description": " List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) allowed for the limit.", "items": {"type": "integer"}, "type": "array"}, "allowed_vendors": {"description": "List of merchants allowed for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "blocked_categories": {"description": "List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) blocked for the limit.", "items": {"type": "integer"}, "type": "array"}, "blocked_mcc_codes": {"items": {"type": "string"}, "type": "array"}, "blocked_vendors": {"description": "List of merchants  blocked for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "interval": {"description": "Time interval to apply limit to.", "enum": ["ANNUAL", "DAILY", "MONTHLY", "QUARTERLY", "TERTIARY", "TOTAL", "WEEKLY", "YEARLY"], "type": "string"}, "limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Total amount limit per interval. Currently we expect the currency to be USD and the amount need to be denominated in cents."}, "lock_date": {"description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card.", "format": "date-time", "type": "string"}, "transaction_amount_limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Max amount per transaction. Currently we expect the currency to be USD and the amount need to be denominated in cents."}}, "required": ["interval", "limit"], "type": "object"}], "description": "A set of restrictions imposed on the spend program."}}, "required": ["description", "display_name", "icon", "permitted_spend_types", "spending_restrictions"], "type": "object"}',  # noqa: E501
    "CREATESPENDALLOCATIONCARD": '{"example": {"accounting_rules": [{"field_id": "3f30896b-cd22-47af-b48a-c6c3068bc780", "field_option_id": "d062e221-9c95-47b5-8dc6-d6c881693caf"}], "display_name": "Travel Hotel Booking Purchase", "spending_restrictions": {"allowed_categories": [18, 20], "auto_lock_date": null, "interval": "TOTAL", "limit": {"amount": 500000, "currency_code": "USD"}}, "user_id": "d8135cfe-0396-4b2d-b2cf-ad809fb04731"}, "properties": {"accounting_rules": {"description": "Set accounting rules for the Spend Limit and Card", "items": {"properties": {"field_id": {"description": "UUID of the tracking category", "format": "uuid", "type": "string"}, "field_option_id": {"description": "UUID of the tracking category option", "format": "uuid", "type": "string"}}, "required": ["field_id", "field_option_id"], "type": "object"}, "type": "array"}, "display_name": {"description": "Cosmetic display name of the limit.", "type": "string"}, "spend_program_id": {"description": "The id of the associated spend program.", "format": "uuid", "type": "string"}, "spending_restrictions": {"allOf": [{"properties": {"allowed_categories": {"description": " List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) allowed for the limit.", "items": {"type": "integer"}, "type": "array"}, "allowed_vendors": {"description": "List of merchants allowed for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "blocked_categories": {"description": "List of [Ramp category codes](/developer-api/v1/overview/conventions#ramp-category-codes) blocked for the limit.", "items": {"type": "integer"}, "type": "array"}, "blocked_mcc_codes": {"items": {"type": "string"}, "type": "array"}, "blocked_vendors": {"description": "List of merchants  blocked for the limit.", "items": {"format": "uuid", "type": "string"}, "type": "array"}, "interval": {"description": "Time interval to apply limit to.", "enum": ["ANNUAL", "DAILY", "MONTHLY", "QUARTERLY", "TERTIARY", "TOTAL", "WEEKLY", "YEARLY"], "type": "string"}, "limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Total amount limit per interval. Currently we expect the currency to be USD and the amount need to be denominated in cents."}, "lock_date": {"description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card.", "format": "date-time", "type": "string"}, "transaction_amount_limit": {"allOf": [{"properties": {"amount": {"description": "the amount of money represented in the smallest denomination of the currency. For example, when the currency is USD, then the amount is expressed in cents.", "type": "integer"}, "currency_code": {"default": "USD", "description": "The type of currency, in ISO 4217 format. e.g. USD for US dollars", "type": "string"}}, "required": ["amount"], "type": "object"}], "description": "Max amount per transaction. Currently we expect the currency to be USD and the amount need to be denominated in cents."}}, "required": ["interval", "limit"], "type": "object"}], "description": "Specifies the spending restrictions. If spend_program_id is passed, this field is ignored and the limit will inherit the spending restrictions of the spend program."}, "user_id": {"description": "Unique identifier of the card owner.", "format": "uuid", "type": "string"}}, "required": ["user_id"], "type": "object"}',  # noqa: E501
    "CREATEVENDOR": '{"example": {"business_vendor_contacts": {"email": "vendor@ramp.com", "first_name": "John", "last_name": "Doe", "phone": "+13525342357"}, "country": "US", "name": "Ramp", "request_payment_details": true, "request_tax_details": true, "state": "NY", "vendor_owner_id": "6b864472-294e-4fc9-91ab-158d684c8886", "vendor_tracking_category_option_id": "60a1a5c9-9b2d-4658-9024-cc4baebf819a"}, "properties": {"accounting_vendor_remote_id": {"description": "The accounting remote id of the vendor. At most one of `accounting_vendor_remote_id` or `vendor_tracking_category_option_id` should be provided.", "type": "string"}, "address": {"allOf": [{"properties": {"address_line_1": {"description": "Primary address line of the vendor.", "type": "string"}, "address_line_2": {"description": "Secondary address line or suite number of the vendor.", "nullable": true, "type": "string"}, "city": {"description": "City of the vendor address.", "type": "string"}, "country": {"description": "Country of the vendor address.", "nullable": true, "type": "string"}, "postal_code": {"description": "Postal or ZIP code of the vendor address.", "type": "string"}, "state": {"description": "The state if country is US. Note that this field is ignored for non-US countries.", "nullable": true, "type": "string"}}, "required": ["address_line_1", "city", "postal_code"], "type": "object"}], "description": "The address of the vendor."}, "business_vendor_contacts": {"allOf": [{"properties": {"email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "phone": {"type": "string"}}, "required": ["email"], "type": "object"}], "description": "Detailed information about the vendor contact."}, "country": {"description": "The country of the vendor.", "type": "string"}, "name": {"description": "Name of the new vendor to be created.", "type": "string"}, "request_payment_details": {"default": false, "description": "Whether to request payment details from the vendor (ACH bank account, international wire transfer, and check mailing address). Requires a contact email.", "type": "boolean"}, "request_tax_details": {"default": false, "description": "Whether to request tax information from the vendor (Tax Identification Number, federal tax classification, and tax address). Requires a contact email.", "type": "boolean"}, "state": {"default": null, "description": "The state if country is US. Note that this field is ignored for non-US countries.", "nullable": true, "type": "string"}, "vendor_owner_id": {"description": "Unique identifier of the user that will own this vendor.", "format": "uuid", "type": "string"}, "vendor_tracking_category_option_id": {"description": "Ramp unique identifier of the accounting vendor to link to this vendor. At most one of `accounting_vendor_remote_id` or `vendor_tracking_category_option_id` should be provided.", "format": "uuid", "type": "string"}}, "required": ["business_vendor_contacts", "country", "vendor_owner_id"], "type": "object"}',  # noqa: E501
    "UPDATEVENDOR": '{"example": {"address": {"address_line_1": "442 Good St", "address_line_2": null, "city": "Allentown", "country": "US", "postal_code": "18102", "state": "Pennsylvania"}, "country": "US", "description": "Some description", "is_active": true, "state": "NY", "vendor_tracking_category_option_id": "60a1a5c9-9b2d-4658-9024-cc4baebf819a"}, "properties": {"accounting_vendor_remote_id": {"description": "The accounting remote id of the vendor. At most one of `accounting_vendor_remote_id` or `vendor_tracking_category_option_id` should be provided.", "type": "string"}, "address": {"allOf": [{"properties": {"address_line_1": {"description": "Primary address line of the vendor.", "type": "string"}, "address_line_2": {"description": "Secondary address line or suite number of the vendor.", "nullable": true, "type": "string"}, "city": {"description": "City of the vendor address.", "type": "string"}, "country": {"description": "Country of the vendor address.", "nullable": true, "type": "string"}, "postal_code": {"description": "Postal or ZIP code of the vendor address.", "type": "string"}, "state": {"description": "The state if country is US. Note that this field is ignored for non-US countries.", "nullable": true, "type": "string"}}, "required": ["address_line_1", "city", "postal_code"], "type": "object"}], "description": "The address of the vendor."}, "country": {"description": "The country of the vendor.", "type": "string"}, "description": {"description": "Name of the vendor.", "type": "string"}, "is_active": {"description": "Whether this vendor is active.", "type": "boolean"}, "state": {"default": null, "description": "The state if country is US. Note that this field is ignored for non-US countries.", "nullable": true, "type": "string"}, "vendor_tracking_category_option_id": {"description": "Unique identifier of the vendor. At most one of `accounting_vendor_remote_id` or `vendor_tracking_category_option_id` should be provided.", "format": "uuid", "type": "string"}}, "type": "object"}',  # noqa: E501
    "UPDATEVENDORPAYMENTDETAILS": '{"example": {"account_nickname": "Primary Business Account", "ach_details": {"account_name": "Business Account", "account_number": "123456789", "account_owner_type": "BUSINESS", "account_type": "Checking", "routing_number": "021000021"}, "is_default": false}, "properties": {"account_nickname": {"description": "Optional nickname for the payment account", "type": "string"}, "ach_details": {"allOf": [{"properties": {"account_name": {"default": "Business Account", "description": "Account name", "type": "string"}, "account_number": {"description": "ACH account number", "type": "string"}, "account_owner_type": {"default": "BUSINESS", "description": "Account owner type", "enum": ["BUSINESS", "INDIVIDUAL"], "type": "string"}, "account_type": {"default": "Checking", "description": "Account type", "enum": ["Checking", "Savings"], "type": "string"}, "routing_number": {"description": "ACH routing number", "type": "string"}}, "required": ["account_number", "routing_number"], "type": "object"}], "description": "ACH payment details"}, "is_default": {"default": false, "description": "Whether this should be the default payment method", "type": "boolean"}, "wire_details": {"allOf": [{"properties": {"account_name": {"default": "Business Account", "description": "Account name", "type": "string"}, "account_number": {"description": "Wire account number", "type": "string"}, "routing_number": {"description": "Wire routing number", "type": "string"}}, "required": ["account_number", "routing_number"], "type": "object"}], "description": "Wire payment details"}}, "type": "object"}',  # noqa: E501
    "REGISTERWEBHOOKSUBSCRIPTION": '{"example": {"additional_headers": {"Authorization": "Bearer token123", "X-Custom-Header": "value"}, "endpoint_url": "https://example.com/webhook", "event_types": ["TRANSACTION_REFUNDED", "USER_INVITED"]}, "properties": {"additional_headers": {"additionalProperties": {"maxLength": 1000, "minLength": 1, "type": "string"}, "description": "Optional headers to include with webhook requests. Max 5 headers, header names max 100 chars, values max 1000 chars.", "maxLength": 5, "type": "object"}, "endpoint_url": {"description": "URL where webhook events will be sent", "format": "url", "type": "string"}, "event_types": {"description": "Events that this subscription will receive", "items": {"enum": ["bills.approved", "bills.created", "bills.paid", "bills.rejected", "purchase_orders.created", "purchase_orders.updated", "reimbursements.ready_for_review", "reimbursements.ready_to_sync", "tests.test_event", "transactions.authorized", "transactions.cleared", "transactions.ready_for_review", "transactions.ready_to_sync", "unified_requests.external_approval_request", "vendors.activated", "webhooks.verification"], "type": "string"}, "type": "array"}}, "required": ["endpoint_url", "event_types"], "type": "object"}',  # noqa: E501
}
