{
  "name": "UpdateSecretScanningAlertStatus",
  "fully_qualified_name": "GithubApi.UpdateSecretScanningAlertStatus@0.1.0",
  "description": "Update the status of a secret scanning alert on GitHub.\n\nUse this tool to update the status of a secret scanning alert in a GitHub repository. Requires admin access and a personal access token with the `repo`, `security_events`, or `public_repo` scopes, or a GitHub App with `secret_scanning_alerts` write permission.",
  "toolkit": {
    "name": "ArcadeGithubApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "repository_owner",
        "required": true,
        "description": "The GitHub username or organization name that owns the repository. It is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "owner"
      },
      {
        "name": "repository_name",
        "required": true,
        "description": "The name of the repository. Not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the repository. The name is not case sensitive."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "repo"
      },
      {
        "name": "alert_identifier",
        "required": true,
        "description": "The unique number identifying the secret scanning alert. Found in the alert URL or the response of `GET /repos/{owner}/{repo}/code-scanning/alerts`.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "alert_number"
      },
      {
        "name": "alert_state",
        "required": true,
        "description": "Set the state of the secret scanning alert to 'open' or 'resolved'. 'Resolution' is required if set to 'resolved'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "open",
            "resolved"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "state"
      },
      {
        "name": "resolution_reason_for_secret_scanning_alert",
        "required": false,
        "description": "Specifies the reason for resolving the alert when the state is set to 'resolved'. Possible values: 'None', 'false_positive', 'wont_fix', 'revoked', 'used_in_tests'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "None",
            "false_positive",
            "wont_fix",
            "revoked",
            "used_in_tests"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "resolution"
      },
      {
        "name": "alert_resolution_comment",
        "required": false,
        "description": "An optional comment when closing an alert. Set to `null` if changing the alert state to `open`. Cannot be updated or deleted.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An optional comment when closing an alert. Cannot be updated or deleted. Must be `null` when changing `state` to `open`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "resolution_comment"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'secret-scanning/update-alert'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-github",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": [
      {
        "key": "GIT_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the GitHub API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{git_server_url}/api/v3/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}",
    "http_method": "PATCH",
    "headers": {},
    "parameters": [
      {
        "name": "owner",
        "tool_parameter_name": "repository_owner",
        "description": "The account owner of the repository. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "repo",
        "tool_parameter_name": "repository_name",
        "description": "The name of the repository. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the repository. The name is not case sensitive."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "alert_number",
        "tool_parameter_name": "alert_identifier",
        "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "resolution",
        "tool_parameter_name": "resolution_reason_for_secret_scanning_alert",
        "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "None",
            "false_positive",
            "wont_fix",
            "revoked",
            "used_in_tests"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "resolution_comment",
        "tool_parameter_name": "alert_resolution_comment",
        "description": "An optional comment when closing an alert. Cannot be updated or deleted. Must be `null` when changing `state` to `open`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "An optional comment when closing an alert. Cannot be updated or deleted. Must be `null` when changing `state` to `open`."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "state",
        "tool_parameter_name": "alert_state",
        "description": "Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "open",
            "resolved"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`."
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "GIT_SERVER_URL",
        "parameter_name": "git_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"examples\": {\n        \"default\": {\n          \"value\": {\n            \"resolution\": \"false_positive\",\n            \"state\": \"resolved\"\n          }\n        }\n      },\n      \"schema\": {\n        \"properties\": {\n          \"resolution\": {\n            \"description\": \"**Required when the `state` is `resolved`.** The reason for resolving the alert.\",\n            \"enum\": [\n              null,\n              \"false_positive\",\n              \"wont_fix\",\n              \"revoked\",\n              \"used_in_tests\"\n            ],\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"resolution_comment\": {\n            \"description\": \"An optional comment when closing an alert. Cannot be updated or deleted. Must be `null` when changing `state` to `open`.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"description\": \"Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`.\",\n            \"enum\": [\n              \"open\",\n              \"resolved\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"state\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
