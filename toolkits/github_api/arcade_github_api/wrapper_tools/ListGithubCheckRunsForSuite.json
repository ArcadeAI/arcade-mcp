{
  "name": "ListGithubCheckRunsForSuite",
  "fully_qualified_name": "GithubApi.ListGithubCheckRunsForSuite@0.1.0",
  "description": "List check runs for a GitHub check suite using its ID.\n\nThis tool retrieves a list of check runs for a specified check suite in a GitHub repository. It requires appropriate permissions or scopes depending on the repository type.",
  "toolkit": {
    "name": "ArcadeGithubApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "repository_owner",
        "required": true,
        "description": "The account owner's username of the repository. Case insensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "owner"
      },
      {
        "name": "repository_name",
        "required": true,
        "description": "The name of the GitHub repository to query. It is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the repository. The name is not case sensitive."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "repo"
      },
      {
        "name": "check_suite_identifier",
        "required": true,
        "description": "The unique identifier of the check suite to list its check runs.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The unique identifier of the check suite."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "check_suite_id"
      },
      {
        "name": "check_run_name",
        "required": false,
        "description": "Returns check runs with the specified name.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Returns check runs with the specified `name`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "check_name"
      },
      {
        "name": "check_run_status",
        "required": false,
        "description": "Specify the status of the check runs to be returned. Options: 'queued', 'in_progress', 'completed'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Returns check runs with the specified `status`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "status"
      },
      {
        "name": "filter_by_completion_time",
        "required": false,
        "description": "Filters check runs by their `completed_at` timestamp. Use 'latest' for the most recent runs or 'all' for all runs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "latest",
            "all"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Filters check runs by their `completed_at` timestamp. `latest` returns the most recent check runs."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter"
      },
      {
        "name": "results_per_page",
        "required": false,
        "description": "Sets the number of results to return per page, with a maximum of 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page (max 100)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "per_page"
      },
      {
        "name": "result_page_number",
        "required": false,
        "description": "Specifies which page of the results to fetch, for paginated data.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number of the results to fetch."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'checks/list-for-suite'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-github",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": [
      {
        "key": "GIT_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the GitHub API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{git_server_url}/api/v3/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "check_name",
        "tool_parameter_name": "check_run_name",
        "description": "Returns check runs with the specified `name`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Returns check runs with the specified `name`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "status",
        "tool_parameter_name": "check_run_status",
        "description": "Returns check runs with the specified `status`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "queued",
            "in_progress",
            "completed"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Returns check runs with the specified `status`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "filter",
        "tool_parameter_name": "filter_by_completion_time",
        "description": "Filters check runs by their `completed_at` timestamp. `latest` returns the most recent check runs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "latest",
            "all"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Filters check runs by their `completed_at` timestamp. `latest` returns the most recent check runs."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "latest",
        "documentation_urls": []
      },
      {
        "name": "per_page",
        "tool_parameter_name": "results_per_page",
        "description": "The number of results per page (max 100).",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page (max 100)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 30,
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "result_page_number",
        "description": "Page number of the results to fetch.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number of the results to fetch."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 1,
        "documentation_urls": []
      },
      {
        "name": "owner",
        "tool_parameter_name": "repository_owner",
        "description": "The account owner of the repository. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "repo",
        "tool_parameter_name": "repository_name",
        "description": "The name of the repository. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the repository. The name is not case sensitive."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "check_suite_id",
        "tool_parameter_name": "check_suite_identifier",
        "description": "The unique identifier of the check suite.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The unique identifier of the check suite."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "GIT_SERVER_URL",
        "parameter_name": "git_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
