{
  "name": "ListUserRepositories",
  "fully_qualified_name": "GithubApi.ListUserRepositories@0.1.0",
  "description": "Retrieve repositories accessible to the authenticated user.\n\nThis tool lists repositories that the authenticated user can access with explicit permissions like `:read`, `:write`, or `:admin`. It includes repositories owned by the user, those where they are collaborators, and those accessible through organization membership.",
  "toolkit": {
    "name": "ArcadeGithubApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "repository_visibility",
        "required": false,
        "description": "Limit results to repositories with the specified visibility: 'all', 'public', or 'private'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "public",
            "private"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Limit results to repositories with the specified visibility."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "visibility"
      },
      {
        "name": "repository_affiliation_filter",
        "required": false,
        "description": "Specify affiliations for repositories to list. Options: `owner`, `collaborator`, `organization_member`. Provide as a comma-separated string.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of values. Can include:  \n * `owner`: Repositories that are owned by the authenticated user.  \n * `collaborator`: Repositories that the user has been added to as a collaborator.  \n * `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "affiliation"
      },
      {
        "name": "repository_type",
        "required": false,
        "description": "Limit results to repositories of the specified type: 'all', 'owner', 'public', 'private', or 'member'. Avoid using with 'visibility' or 'affiliation'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "owner",
            "public",
            "private",
            "member"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Limit results to repositories of the specified type. Will cause a `422` error if used in the same request as **visibility** or **affiliation**."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "type"
      },
      {
        "name": "sort_property",
        "required": false,
        "description": "Property by which to sort repositories, such as `created`, `updated`, `pushed`, or `full_name`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The property to sort the results by."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort"
      },
      {
        "name": "sort_order",
        "required": false,
        "description": "Specify the order to sort repositories. Use 'asc' for ascending or 'desc' for descending. Default is 'asc' for 'full_name' sort and 'desc' otherwise.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "asc",
            "desc"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "direction"
      },
      {
        "name": "results_per_page",
        "required": false,
        "description": "The maximum number of repositories to display per page. Accepts an integer up to 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page (max 100)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "per_page"
      },
      {
        "name": "results_page_number",
        "required": false,
        "description": "Specify the page number of the results to fetch.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number of the results to fetch."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      },
      {
        "name": "updated_after_timestamp",
        "required": false,
        "description": "Filter repositories updated after the specified ISO 8601 timestamp (YYYY-MM-DDTHH:MM:SSZ).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "since"
      },
      {
        "name": "filter_repositories_before_timestamp",
        "required": false,
        "description": "Only show repositories updated before the specified timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "before"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'repos/list-for-authenticated-user'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-github",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": [
      {
        "key": "GIT_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the GitHub API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{git_server_url}/api/v3/user/repos",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "visibility",
        "tool_parameter_name": "repository_visibility",
        "description": "Limit results to repositories with the specified visibility.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "public",
            "private"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Limit results to repositories with the specified visibility."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "all",
        "documentation_urls": []
      },
      {
        "name": "affiliation",
        "tool_parameter_name": "repository_affiliation_filter",
        "description": "Comma-separated list of values. Can include:  \n * `owner`: Repositories that are owned by the authenticated user.  \n * `collaborator`: Repositories that the user has been added to as a collaborator.  \n * `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Comma-separated list of values. Can include:  \n * `owner`: Repositories that are owned by the authenticated user.  \n * `collaborator`: Repositories that the user has been added to as a collaborator.  \n * `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "owner,collaborator,organization_member",
        "documentation_urls": []
      },
      {
        "name": "type",
        "tool_parameter_name": "repository_type",
        "description": "Limit results to repositories of the specified type. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "all",
            "owner",
            "public",
            "private",
            "member"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Limit results to repositories of the specified type. Will cause a `422` error if used in the same request as **visibility** or **affiliation**."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "all",
        "documentation_urls": []
      },
      {
        "name": "sort",
        "tool_parameter_name": "sort_property",
        "description": "The property to sort the results by.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "created",
            "updated",
            "pushed",
            "full_name"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The property to sort the results by."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "full_name",
        "documentation_urls": []
      },
      {
        "name": "direction",
        "tool_parameter_name": "sort_order",
        "description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "asc",
            "desc"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "per_page",
        "tool_parameter_name": "results_per_page",
        "description": "The number of results per page (max 100).",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page (max 100)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 30,
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "results_page_number",
        "description": "Page number of the results to fetch.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number of the results to fetch."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 1,
        "documentation_urls": []
      },
      {
        "name": "since",
        "tool_parameter_name": "updated_after_timestamp",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "before",
        "tool_parameter_name": "filter_repositories_before_timestamp",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "GIT_SERVER_URL",
        "parameter_name": "git_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
