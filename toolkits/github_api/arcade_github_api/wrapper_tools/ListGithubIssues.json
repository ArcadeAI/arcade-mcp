{
  "name": "ListGithubIssues",
  "fully_qualified_name": "GithubApi.ListGithubIssues@0.1.0",
  "description": "Get issues assigned to you across all GitHub repositories.\n\nThis tool retrieves a list of issues that are assigned to the authenticated user from all visible repositories on GitHub, including owned, member, and organization repositories. It can be used to monitor workload and track tasks across projects. Note that the results may include pull requests as well, identified by a `pull_request` key.",
  "toolkit": {
    "name": "ArcadeGithubApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "issue_filter_type",
        "required": false,
        "description": "Specifies the type of issues to return: assigned, created, mentioned, subscribed, repos, or all.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "repos",
            "all"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by you. `mentioned` means issues mentioning you. `subscribed` means issues you're subscribed to updates for. `all` or `repos` means all issues you can see, regardless of participation or creation."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filter"
      },
      {
        "name": "issue_state",
        "required": false,
        "description": "Specifies the state of issues to retrieve: `open`, `closed`, or `all`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Indicates the state of the issues to return."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "state"
      },
      {
        "name": "issue_labels",
        "required": false,
        "description": "Comma-separated list of label names to filter issues. Example: 'bug,ui,@high'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A list of comma separated label names. Example: `bug,ui,@high`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "labels"
      },
      {
        "name": "sort_issues_by",
        "required": false,
        "description": "Specify the criteria to sort issues by: 'created', 'updated', or 'comments'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "What to sort results by."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort"
      },
      {
        "name": "sort_direction",
        "required": false,
        "description": "Specifies the order of sorting for the results. Use 'asc' for ascending and 'desc' for descending.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "asc",
            "desc"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The direction to sort the results by."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "direction"
      },
      {
        "name": "updated_since_timestamp",
        "required": false,
        "description": "Show issues updated after this timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "since"
      },
      {
        "name": "results_per_page",
        "required": false,
        "description": "The number of results per page, maximum is 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page (max 100)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "per_page"
      },
      {
        "name": "page_number",
        "required": false,
        "description": "The specific page of results to fetch. Use this for pagination to navigate through large list of issues.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number of the results to fetch."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      },
      {
        "name": "include_collaborative_repositories",
        "required": false,
        "description": "Include issues from collaborative repositories. Set to true to filter issues where you have collaborative access.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "collab"
      },
      {
        "name": "organization_repositories",
        "required": false,
        "description": "Include issues from organization repositories when set to true. If false, include issues from all repositories.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "orgs"
      },
      {
        "name": "include_owned_repositories",
        "required": false,
        "description": "Set to true to include issues from repositories owned by the authenticated user.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "owned"
      },
      {
        "name": "include_pull_requests",
        "required": false,
        "description": "Set to true to include pull requests in the issues list.",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "pulls"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'issues/list'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-github",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": [
      {
        "key": "GIT_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the GitHub API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{git_server_url}/api/v3/issues",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "filter",
        "tool_parameter_name": "issue_filter_type",
        "description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by you. `mentioned` means issues mentioning you. `subscribed` means issues you're subscribed to updates for. `all` or `repos` means all issues you can see, regardless of participation or creation.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "assigned",
            "created",
            "mentioned",
            "subscribed",
            "repos",
            "all"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Indicates which sorts of issues to return. `assigned` means issues assigned to you. `created` means issues created by you. `mentioned` means issues mentioning you. `subscribed` means issues you're subscribed to updates for. `all` or `repos` means all issues you can see, regardless of participation or creation."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "assigned",
        "documentation_urls": []
      },
      {
        "name": "state",
        "tool_parameter_name": "issue_state",
        "description": "Indicates the state of the issues to return.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Indicates the state of the issues to return."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "open",
        "documentation_urls": []
      },
      {
        "name": "labels",
        "tool_parameter_name": "issue_labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A list of comma separated label names. Example: `bug,ui,@high`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "sort",
        "tool_parameter_name": "sort_issues_by",
        "description": "What to sort results by.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "What to sort results by."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "created",
        "documentation_urls": []
      },
      {
        "name": "direction",
        "tool_parameter_name": "sort_direction",
        "description": "The direction to sort the results by.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "asc",
            "desc"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The direction to sort the results by."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "desc",
        "documentation_urls": []
      },
      {
        "name": "since",
        "tool_parameter_name": "updated_since_timestamp",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "collab",
        "tool_parameter_name": "include_collaborative_repositories",
        "description": "",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "orgs",
        "tool_parameter_name": "organization_repositories",
        "description": "",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "owned",
        "tool_parameter_name": "include_owned_repositories",
        "description": "",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "pulls",
        "tool_parameter_name": "include_pull_requests",
        "description": "",
        "value_schema": {
          "val_type": "boolean",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "per_page",
        "tool_parameter_name": "results_per_page",
        "description": "The number of results per page (max 100).",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page (max 100)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 30,
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "page_number",
        "description": "Page number of the results to fetch.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number of the results to fetch."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 1,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "GIT_SERVER_URL",
        "parameter_name": "git_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
