{
  "name": "CreateGithubScopedToken",
  "fully_qualified_name": "GithubApi.CreateGithubScopedToken@0.1.0",
  "description": "Create a GitHub repository and permission scoped token.\n\nThis tool generates a repository and/or permission scoped user-to-server access token for GitHub. It requires a non-scoped token and the client's Basic Authentication details. Use this when specific repository access or permission is needed for an app.",
  "toolkit": {
    "name": "ArcadeGithubApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "github_client_id",
        "required": true,
        "description": "The client ID of your GitHub app used for authentication.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The client ID of the GitHub app."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "client_id"
      },
      {
        "name": "token_scope_request_body",
        "required": true,
        "description": "JSON object specifying access token, targeted repositories or IDs, target user or organization, and desired permissions levels.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "access_token": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The access token used to authenticate to the GitHub API."
            },
            "permissions": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "actions": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts."
                },
                "administration": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation."
                },
                "checks": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for checks on code."
                },
                "contents": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges."
                },
                "deployments": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for deployments and deployment statuses."
                },
                "environments": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for managing repository environments."
                },
                "issues": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones."
                },
                "members": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for organization teams and members."
                },
                "metadata": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata."
                },
                "organization_administration": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage access to an organization."
                },
                "organization_announcement_banners": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage announcement banners for an organization."
                },
                "organization_hooks": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization."
                },
                "organization_packages": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for organization packages published to GitHub Packages."
                },
                "organization_plan": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for viewing an organization's plan."
                },
                "organization_projects": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write",
                    "admin"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available)."
                },
                "organization_secrets": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage organization secrets."
                },
                "organization_self_hosted_runners": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization."
                },
                "organization_user_blocking": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage users blocked by the organization."
                },
                "packages": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for packages published to GitHub Packages."
                },
                "pages": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds."
                },
                "pull_requests": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges."
                },
                "repository_announcement_banners": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage announcement banners for a repository."
                },
                "repository_hooks": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository."
                },
                "repository_projects": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write",
                    "admin"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage repository projects, columns, and cards."
                },
                "secret_scanning_alerts": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage secret scanning alerts."
                },
                "secrets": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage repository secrets."
                },
                "security_events": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts."
                },
                "single_file": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage just a single file."
                },
                "statuses": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for commit statuses."
                },
                "team_discussions": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage team discussions and related comments."
                },
                "vulnerability_alerts": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage Dependabot alerts."
                },
                "workflows": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to update GitHub Actions workflow files."
                }
              },
              "inner_properties": null,
              "description": "The permissions granted to the user-to-server access token."
            },
            "repositories": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `repository_ids` is specified."
            },
            "repository_ids": {
              "val_type": "array",
              "inner_val_type": "integer",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `repositories` is specified."
            },
            "target": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is specified."
            },
            "target_id": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specified."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'apps/scope-token'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-github",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": [
      {
        "key": "GIT_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the GitHub API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{git_server_url}/api/v3/applications/{client_id}/token/scoped",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "client_id",
        "tool_parameter_name": "github_client_id",
        "description": "The client ID of the GitHub app.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The client ID of the GitHub app."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "token_scope_request_body",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "access_token": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The access token used to authenticate to the GitHub API."
            },
            "permissions": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "actions": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts."
                },
                "administration": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation."
                },
                "checks": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for checks on code."
                },
                "contents": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges."
                },
                "deployments": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for deployments and deployment statuses."
                },
                "environments": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for managing repository environments."
                },
                "issues": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones."
                },
                "members": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for organization teams and members."
                },
                "metadata": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata."
                },
                "organization_administration": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage access to an organization."
                },
                "organization_announcement_banners": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage announcement banners for an organization."
                },
                "organization_hooks": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization."
                },
                "organization_packages": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for organization packages published to GitHub Packages."
                },
                "organization_plan": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for viewing an organization's plan."
                },
                "organization_projects": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write",
                    "admin"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available)."
                },
                "organization_secrets": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage organization secrets."
                },
                "organization_self_hosted_runners": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization."
                },
                "organization_user_blocking": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage users blocked by the organization."
                },
                "packages": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for packages published to GitHub Packages."
                },
                "pages": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds."
                },
                "pull_requests": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges."
                },
                "repository_announcement_banners": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage announcement banners for a repository."
                },
                "repository_hooks": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository."
                },
                "repository_projects": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write",
                    "admin"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage repository projects, columns, and cards."
                },
                "secret_scanning_alerts": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage secret scanning alerts."
                },
                "secrets": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage repository secrets."
                },
                "security_events": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts."
                },
                "single_file": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage just a single file."
                },
                "statuses": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token for commit statuses."
                },
                "team_discussions": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage team discussions and related comments."
                },
                "vulnerability_alerts": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "read",
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to manage Dependabot alerts."
                },
                "workflows": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": [
                    "write"
                  ],
                  "properties": null,
                  "inner_properties": null,
                  "description": "The level of permission to grant the access token to update GitHub Actions workflow files."
                }
              },
              "inner_properties": null,
              "description": "The permissions granted to the user-to-server access token."
            },
            "repositories": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `repository_ids` is specified."
            },
            "repository_ids": {
              "val_type": "array",
              "inner_val_type": "integer",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `repositories` is specified."
            },
            "target": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is specified."
            },
            "target_id": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specified."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "GIT_SERVER_URL",
        "parameter_name": "git_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"examples\": {\n        \"default\": {\n          \"value\": {\n            \"access_token\": \"e72e16c7e42f292c6912e7710c838347ae178b4a\",\n            \"permissions\": {\n              \"contents\": \"read\",\n              \"issues\": \"write\",\n              \"metadata\": \"read\"\n            },\n            \"target\": \"octocat\"\n          }\n        }\n      },\n      \"schema\": {\n        \"properties\": {\n          \"access_token\": {\n            \"description\": \"The access token used to authenticate to the GitHub API.\",\n            \"example\": \"e72e16c7e42f292c6912e7710c838347ae178b4a\",\n            \"type\": \"string\"\n          },\n          \"permissions\": {\n            \"description\": \"The permissions granted to the user-to-server access token.\",\n            \"example\": {\n              \"contents\": \"read\",\n              \"deployments\": \"write\",\n              \"issues\": \"read\",\n              \"single_file\": \"read\"\n            },\n            \"properties\": {\n              \"actions\": {\n                \"description\": \"The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"administration\": {\n                \"description\": \"The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"checks\": {\n                \"description\": \"The level of permission to grant the access token for checks on code.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"contents\": {\n                \"description\": \"The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"deployments\": {\n                \"description\": \"The level of permission to grant the access token for deployments and deployment statuses.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"environments\": {\n                \"description\": \"The level of permission to grant the access token for managing repository environments.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"issues\": {\n                \"description\": \"The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"members\": {\n                \"description\": \"The level of permission to grant the access token for organization teams and members.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"metadata\": {\n                \"description\": \"The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"organization_administration\": {\n                \"description\": \"The level of permission to grant the access token to manage access to an organization.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"organization_announcement_banners\": {\n                \"description\": \"The level of permission to grant the access token to view and manage announcement banners for an organization.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"organization_hooks\": {\n                \"description\": \"The level of permission to grant the access token to manage the post-receive hooks for an organization.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"organization_packages\": {\n                \"description\": \"The level of permission to grant the access token for organization packages published to GitHub Packages.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"organization_plan\": {\n                \"description\": \"The level of permission to grant the access token for viewing an organization's plan.\",\n                \"enum\": [\n                  \"read\"\n                ],\n                \"type\": \"string\"\n              },\n              \"organization_projects\": {\n                \"description\": \"The level of permission to grant the access token to manage organization projects and projects beta (where available).\",\n                \"enum\": [\n                  \"read\",\n                  \"write\",\n                  \"admin\"\n                ],\n                \"type\": \"string\"\n              },\n              \"organization_secrets\": {\n                \"description\": \"The level of permission to grant the access token to manage organization secrets.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"organization_self_hosted_runners\": {\n                \"description\": \"The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"organization_user_blocking\": {\n                \"description\": \"The level of permission to grant the access token to view and manage users blocked by the organization.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"packages\": {\n                \"description\": \"The level of permission to grant the access token for packages published to GitHub Packages.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"pages\": {\n                \"description\": \"The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"pull_requests\": {\n                \"description\": \"The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"repository_announcement_banners\": {\n                \"description\": \"The level of permission to grant the access token to view and manage announcement banners for a repository.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"repository_hooks\": {\n                \"description\": \"The level of permission to grant the access token to manage the post-receive hooks for a repository.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"repository_projects\": {\n                \"description\": \"The level of permission to grant the access token to manage repository projects, columns, and cards.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\",\n                  \"admin\"\n                ],\n                \"type\": \"string\"\n              },\n              \"secret_scanning_alerts\": {\n                \"description\": \"The level of permission to grant the access token to view and manage secret scanning alerts.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"secrets\": {\n                \"description\": \"The level of permission to grant the access token to manage repository secrets.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"security_events\": {\n                \"description\": \"The level of permission to grant the access token to view and manage security events like code scanning alerts.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"single_file\": {\n                \"description\": \"The level of permission to grant the access token to manage just a single file.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"statuses\": {\n                \"description\": \"The level of permission to grant the access token for commit statuses.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"team_discussions\": {\n                \"description\": \"The level of permission to grant the access token to manage team discussions and related comments.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"vulnerability_alerts\": {\n                \"description\": \"The level of permission to grant the access token to manage Dependabot alerts.\",\n                \"enum\": [\n                  \"read\",\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              },\n              \"workflows\": {\n                \"description\": \"The level of permission to grant the access token to update GitHub Actions workflow files.\",\n                \"enum\": [\n                  \"write\"\n                ],\n                \"type\": \"string\"\n              }\n            },\n            \"title\": \"App Permissions\",\n            \"type\": \"object\"\n          },\n          \"repositories\": {\n            \"description\": \"The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `repository_ids` is specified.\",\n            \"items\": {\n              \"example\": \"rails\",\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"repository_ids\": {\n            \"description\": \"The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `repositories` is specified.\",\n            \"example\": [\n              1\n            ],\n            \"items\": {\n              \"type\": \"integer\"\n            },\n            \"type\": \"array\"\n          },\n          \"target\": {\n            \"description\": \"The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is specified.\",\n            \"example\": \"octocat\",\n            \"type\": \"string\"\n          },\n          \"target_id\": {\n            \"description\": \"The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specified.\",\n            \"example\": 1,\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"access_token\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
