{
  "name": "CreateGithubTeam",
  "fully_qualified_name": "GithubApi.CreateGithubTeam@0.1.0",
  "description": "Create a new team in a GitHub organization.\n\nUse this tool to create a new team within a specified GitHub organization. The authenticated user must be a member or owner of the organization. Upon creation, the user becomes a team maintainer by default.",
  "toolkit": {
    "name": "ArcadeGithubApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "organization_name",
        "required": true,
        "description": "The case-insensitive name of the GitHub organization where the team will be created.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The organization name. The name is not case sensitive."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "org"
      },
      {
        "name": "team_name",
        "required": true,
        "description": "The name of the team to be created. It should be a string.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the team."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "name"
      },
      {
        "name": "team_description",
        "required": false,
        "description": "A brief description of the team being created. This helps specify the team's purpose or role within the organization.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The description of the team."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "description"
      },
      {
        "name": "ldap_distinguished_name",
        "required": false,
        "description": "The distinguished name (DN) of the LDAP entry to map to a team. Ensure LDAP synchronization is enabled.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. LDAP synchronization must be enabled to map LDAP entries to a team. Use the \"[Update LDAP mapping for a team](https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team)\" endpoint to change the LDAP DN. For more information, see \"[Using LDAP](https://docs.github.com/enterprise-server@3.8/admin/identity-and-access-management/authenticating-users-for-your-github-enterprise-server-instance/using-ldap#enabling-ldap-sync).\""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "ldap_dn"
      },
      {
        "name": "team_maintainers_github_ids",
        "required": false,
        "description": "List of GitHub IDs for organization members who will become team maintainers.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List GitHub IDs for organization members who will become team maintainers."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "maintainers"
      },
      {
        "name": "parent_team_id",
        "required": false,
        "description": "The numerical ID of the team to assign as the parent for the new team.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of a team to set as the parent team."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "parent_team_id"
      },
      {
        "name": "deprecated_repository_permission",
        "required": false,
        "description": "Specifies the permission for new repositories, though it is deprecated. Options are `pull` or `push`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "pull",
            "push"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "permission"
      },
      {
        "name": "team_privacy_level",
        "required": false,
        "description": "Specifies if the team is 'secret' or 'closed'. Defaults: 'secret' for non-nested teams, 'closed' for parent/child teams.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "secret",
            "closed"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n * `secret` - only visible to organization owners and members of this team.  \n * `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n * `closed` - visible to all members of this organization.  \nDefault for child team: `closed`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "privacy"
      },
      {
        "name": "repository_names_to_add_to_team",
        "required": false,
        "description": "Array of full repository names (e.g., \"organization-name/repository-name\") to associate with the team.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "repo_names"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'teams/create'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-github",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": [
      {
        "key": "GIT_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the GitHub API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{git_server_url}/api/v3/orgs/{org}/teams",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "org",
        "tool_parameter_name": "organization_name",
        "description": "The organization name. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The organization name. The name is not case sensitive."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "description",
        "tool_parameter_name": "team_description",
        "description": "The description of the team.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The description of the team."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "ldap_dn",
        "tool_parameter_name": "ldap_distinguished_name",
        "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. LDAP synchronization must be enabled to map LDAP entries to a team. Use the \"[Update LDAP mapping for a team](https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team)\" endpoint to change the LDAP DN. For more information, see \"[Using LDAP](https://docs.github.com/enterprise-server@3.8/admin/identity-and-access-management/authenticating-users-for-your-github-enterprise-server-instance/using-ldap#enabling-ldap-sync).\"",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. LDAP synchronization must be enabled to map LDAP entries to a team. Use the \"[Update LDAP mapping for a team](https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team)\" endpoint to change the LDAP DN. For more information, see \"[Using LDAP](https://docs.github.com/enterprise-server@3.8/admin/identity-and-access-management/authenticating-users-for-your-github-enterprise-server-instance/using-ldap#enabling-ldap-sync).\""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "maintainers",
        "tool_parameter_name": "team_maintainers_github_ids",
        "description": "List GitHub IDs for organization members who will become team maintainers.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "List GitHub IDs for organization members who will become team maintainers."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "name",
        "tool_parameter_name": "team_name",
        "description": "The name of the team.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the team."
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "parent_team_id",
        "tool_parameter_name": "parent_team_id",
        "description": "The ID of a team to set as the parent team.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The ID of a team to set as the parent team."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "permission",
        "tool_parameter_name": "deprecated_repository_permission",
        "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "pull",
            "push"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "**Deprecated**. The permission that new repositories will be added to the team with when none is specified."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": "pull",
        "documentation_urls": []
      },
      {
        "name": "privacy",
        "tool_parameter_name": "team_privacy_level",
        "description": "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n * `secret` - only visible to organization owners and members of this team.  \n * `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n * `closed` - visible to all members of this organization.  \nDefault for child team: `closed`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "secret",
            "closed"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n * `secret` - only visible to organization owners and members of this team.  \n * `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n * `closed` - visible to all members of this organization.  \nDefault for child team: `closed`"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "repo_names",
        "tool_parameter_name": "repository_names_to_add_to_team",
        "description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.",
        "value_schema": {
          "val_type": "array",
          "inner_val_type": "string",
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "GIT_SERVER_URL",
        "parameter_name": "git_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"examples\": {\n        \"default\": {\n          \"value\": {\n            \"description\": \"A great team\",\n            \"name\": \"Justice League\",\n            \"permission\": \"push\",\n            \"privacy\": \"closed\"\n          }\n        }\n      },\n      \"schema\": {\n        \"properties\": {\n          \"description\": {\n            \"description\": \"The description of the team.\",\n            \"type\": \"string\"\n          },\n          \"ldap_dn\": {\n            \"description\": \"The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. LDAP synchronization must be enabled to map LDAP entries to a team. Use the \\\"[Update LDAP mapping for a team](https://docs.github.com/enterprise-server@3.8/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team)\\\" endpoint to change the LDAP DN. For more information, see \\\"[Using LDAP](https://docs.github.com/enterprise-server@3.8/admin/identity-and-access-management/authenticating-users-for-your-github-enterprise-server-instance/using-ldap#enabling-ldap-sync).\\\"\",\n            \"type\": \"string\"\n          },\n          \"maintainers\": {\n            \"description\": \"List GitHub IDs for organization members who will become team maintainers.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"The name of the team.\",\n            \"type\": \"string\"\n          },\n          \"parent_team_id\": {\n            \"description\": \"The ID of a team to set as the parent team.\",\n            \"type\": \"integer\"\n          },\n          \"permission\": {\n            \"default\": \"pull\",\n            \"description\": \"**Deprecated**. The permission that new repositories will be added to the team with when none is specified.\",\n            \"enum\": [\n              \"pull\",\n              \"push\"\n            ],\n            \"type\": \"string\"\n          },\n          \"privacy\": {\n            \"description\": \"The level of privacy this team should have. The options are:  \\n**For a non-nested team:**  \\n * `secret` - only visible to organization owners and members of this team.  \\n * `closed` - visible to all members of this organization.  \\nDefault: `secret`  \\n**For a parent or child team:**  \\n * `closed` - visible to all members of this organization.  \\nDefault for child team: `closed`\",\n            \"enum\": [\n              \"secret\",\n              \"closed\"\n            ],\n            \"type\": \"string\"\n          },\n          \"repo_names\": {\n            \"description\": \"The full name (e.g., \\\"organization-name/repository-name\\\") of repositories to add the team to.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
