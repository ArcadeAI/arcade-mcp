{
  "name": "SetGithubActionsCachePolicy",
  "fully_qualified_name": "GithubApi.SetGithubActionsCachePolicy@0.1.0",
  "description": "Set GitHub Actions cache usage policy for an enterprise.\n\nThis tool sets the cache usage policy for GitHub Actions within a specific enterprise. Requires authentication with an access token having `admin:enterprise` scope or an appropriate GitHub App permission.",
  "toolkit": {
    "name": "ArcadeGithubApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "enterprise_identifier",
        "required": true,
        "description": "The slug or ID of the enterprise for which to set the cache policy.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "enterprise"
      },
      {
        "name": "maximum_repository_cache_size_limit_in_gb",
        "required": false,
        "description": "Maximum cache size limit for all repository caches in an enterprise, in gigabytes.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "For repositories in an enterprise, the maximum value that can be set as the limit for the sum of all caches in a repository, in gigabytes."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "max_repo_cache_size_limit_in_gb"
      },
      {
        "name": "default_repo_cache_size_limit_gb",
        "required": false,
        "description": "Default size limit for all caches in a repository, specified in gigabytes.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "For repositories in an enterprise, the default size limit for the sum of all caches in a repository, in gigabytes."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "repo_cache_size_limit_in_gb"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'actions/set-actions-cache-usage-policy-for-enterprise'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-github",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": [
      {
        "key": "GIT_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the GitHub API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{git_server_url}/api/v3/enterprises/{enterprise}/actions/cache/usage-policy",
    "http_method": "PATCH",
    "headers": {},
    "parameters": [
      {
        "name": "enterprise",
        "tool_parameter_name": "enterprise_identifier",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "max_repo_cache_size_limit_in_gb",
        "tool_parameter_name": "maximum_repository_cache_size_limit_in_gb",
        "description": "For repositories in an enterprise, the maximum value that can be set as the limit for the sum of all caches in a repository, in gigabytes.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "For repositories in an enterprise, the maximum value that can be set as the limit for the sum of all caches in a repository, in gigabytes."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "repo_cache_size_limit_in_gb",
        "tool_parameter_name": "default_repo_cache_size_limit_gb",
        "description": "For repositories in an enterprise, the default size limit for the sum of all caches in a repository, in gigabytes.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "For repositories in an enterprise, the default size limit for the sum of all caches in a repository, in gigabytes."
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "GIT_SERVER_URL",
        "parameter_name": "git_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"examples\": {\n        \"selected_actions\": {\n          \"$ref\": \"#/components/examples/actions-cache-usage-policy-enterprise\"\n        }\n      },\n      \"schema\": {\n        \"description\": \"GitHub Actions cache usage policy for an enterprise.\",\n        \"properties\": {\n          \"max_repo_cache_size_limit_in_gb\": {\n            \"description\": \"For repositories in an enterprise, the maximum value that can be set as the limit for the sum of all caches in a repository, in gigabytes.\",\n            \"example\": 15,\n            \"type\": \"integer\"\n          },\n          \"repo_cache_size_limit_in_gb\": {\n            \"description\": \"For repositories in an enterprise, the default size limit for the sum of all caches in a repository, in gigabytes.\",\n            \"example\": 10,\n            \"type\": \"integer\"\n          }\n        },\n        \"title\": \"Actions cache usage policy for an enterprise\",\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
