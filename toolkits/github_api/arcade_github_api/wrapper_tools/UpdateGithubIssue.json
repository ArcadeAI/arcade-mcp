{
  "name": "UpdateGithubIssue",
  "fully_qualified_name": "GithubApi.UpdateGithubIssue@0.1.0",
  "description": "Update details of a GitHub issue.\n\nUse this tool when you need to update the information of an existing GitHub issue. Suitable for issue owners or users with push access.",
  "toolkit": {
    "name": "ArcadeGithubApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "repository_owner",
        "required": true,
        "description": "The account owner of the GitHub repository, case insensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "owner"
      },
      {
        "name": "repository_name",
        "required": true,
        "description": "The name of the repository to update the issue in. It is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the repository. The name is not case sensitive."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "repo"
      },
      {
        "name": "issue_identifier",
        "required": true,
        "description": "The unique number identifying the GitHub issue to update.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number that identifies the issue."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "issue_number"
      },
      {
        "name": "issue_update_details",
        "required": false,
        "description": "JSON object containing the details to update the issue, including assignees, body, labels, milestone, state, state reason, and title.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "assignee": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Username to assign to this issue. **This field is deprecated.**"
            },
            "assignees": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Usernames to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this issue. Send an empty array (`[]`) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped."
            },
            "body": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The contents of the issue."
            },
            "labels": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {},
              "description": "Labels to associate with this issue. Pass one or more labels to _replace_ the set of labels on this issue. Send an empty array (`[]`) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped."
            },
            "milestone": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "state": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": [
                "open",
                "closed"
              ],
              "properties": null,
              "inner_properties": null,
              "description": "The open or closed state of the issue."
            },
            "state_reason": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": [
                "completed",
                "not_planned",
                "reopened"
              ],
              "properties": null,
              "inner_properties": null,
              "description": "The reason for the state change. Ignored unless `state` is changed."
            },
            "title": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The title of the issue."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'issues/update'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-github",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": [
      {
        "key": "GIT_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the GitHub API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{git_server_url}/api/v3/repos/{owner}/{repo}/issues/{issue_number}",
    "http_method": "PATCH",
    "headers": {},
    "parameters": [
      {
        "name": "owner",
        "tool_parameter_name": "repository_owner",
        "description": "The account owner of the repository. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "repo",
        "tool_parameter_name": "repository_name",
        "description": "The name of the repository. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the repository. The name is not case sensitive."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "issue_number",
        "tool_parameter_name": "issue_identifier",
        "description": "The number that identifies the issue.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number that identifies the issue."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "issue_update_details",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "assignee": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Username to assign to this issue. **This field is deprecated.**"
            },
            "assignees": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Usernames to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this issue. Send an empty array (`[]`) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped."
            },
            "body": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The contents of the issue."
            },
            "labels": {
              "val_type": "array",
              "inner_val_type": "json",
              "enum": null,
              "properties": null,
              "inner_properties": {},
              "description": "Labels to associate with this issue. Pass one or more labels to _replace_ the set of labels on this issue. Send an empty array (`[]`) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped."
            },
            "milestone": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "state": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": [
                "open",
                "closed"
              ],
              "properties": null,
              "inner_properties": null,
              "description": "The open or closed state of the issue."
            },
            "state_reason": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": [
                "completed",
                "not_planned",
                "reopened"
              ],
              "properties": null,
              "inner_properties": null,
              "description": "The reason for the state change. Ignored unless `state` is changed."
            },
            "title": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The title of the issue."
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "GIT_SERVER_URL",
        "parameter_name": "git_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"examples\": {\n        \"default\": {\n          \"value\": {\n            \"assignees\": [\n              \"octocat\"\n            ],\n            \"body\": \"I'm having a problem with this.\",\n            \"labels\": [\n              \"bug\"\n            ],\n            \"milestone\": 1,\n            \"state\": \"open\",\n            \"title\": \"Found a bug\"\n          }\n        }\n      },\n      \"schema\": {\n        \"properties\": {\n          \"assignee\": {\n            \"description\": \"Username to assign to this issue. **This field is deprecated.**\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"assignees\": {\n            \"description\": \"Usernames to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this issue. Send an empty array (`[]`) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"body\": {\n            \"description\": \"The contents of the issue.\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"labels\": {\n            \"description\": \"Labels to associate with this issue. Pass one or more labels to _replace_ the set of labels on this issue. Send an empty array (`[]`) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.\",\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"properties\": {\n                    \"color\": {\n                      \"nullable\": true,\n                      \"type\": \"string\"\n                    },\n                    \"description\": {\n                      \"nullable\": true,\n                      \"type\": \"string\"\n                    },\n                    \"id\": {\n                      \"type\": \"integer\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              ]\n            },\n            \"type\": \"array\"\n          },\n          \"milestone\": {\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"description\": \"The `number` of the milestone to associate this issue with or use `null` to remove the current milestone. Only users with push access can set the milestone for issues. Without push access to the repository, milestone changes are silently dropped.\",\n                \"type\": \"integer\"\n              }\n            ]\n          },\n          \"state\": {\n            \"description\": \"The open or closed state of the issue.\",\n            \"enum\": [\n              \"open\",\n              \"closed\"\n            ],\n            \"type\": \"string\"\n          },\n          \"state_reason\": {\n            \"description\": \"The reason for the state change. Ignored unless `state` is changed.\",\n            \"enum\": [\n              \"completed\",\n              \"not_planned\",\n              \"reopened\"\n            ],\n            \"example\": \"not_planned\",\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"title\": {\n            \"description\": \"The title of the issue.\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"type\": \"string\"\n              },\n              {\n                \"type\": \"integer\"\n              }\n            ]\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"required\": false\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
