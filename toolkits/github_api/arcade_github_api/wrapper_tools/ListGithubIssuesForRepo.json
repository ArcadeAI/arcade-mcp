{
  "name": "ListGithubIssuesForRepo",
  "fully_qualified_name": "GithubApi.ListGithubIssuesForRepo@0.1.0",
  "description": "Retrieve open issues from a GitHub repository.\n\nThis tool lists open issues and pull requests in a specified GitHub repository. It is useful for tracking unresolved issues and ongoing work. The response includes both issues and pull requests.",
  "toolkit": {
    "name": "ArcadeGithubApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "repository_owner",
        "required": true,
        "description": "The account owner of the repository. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "owner"
      },
      {
        "name": "repository_name",
        "required": true,
        "description": "The name of the GitHub repository to fetch issues from. This is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the repository. The name is not case sensitive."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "repo"
      },
      {
        "name": "milestone_identifier",
        "required": false,
        "description": "Filter issues by milestone. Use an integer for a specific milestone, \"*\" for any milestone, or \"none\" for no milestones.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "milestone"
      },
      {
        "name": "issue_state",
        "required": false,
        "description": "Indicates the state of issues to retrieve: 'open', 'closed', or 'all'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Indicates the state of the issues to return."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "state"
      },
      {
        "name": "assignee_filter",
        "required": false,
        "description": "Filter issues by assignee. Use a username, `none` for unassigned, or `*` for any assignee.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "assignee"
      },
      {
        "name": "issue_creator",
        "required": false,
        "description": "The GitHub username of the person who created the issue.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The user that created the issue."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "creator"
      },
      {
        "name": "mentioned_user",
        "required": false,
        "description": "A GitHub username to filter issues where this user is mentioned.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A user that's mentioned in the issue."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "mentioned"
      },
      {
        "name": "issue_labels",
        "required": false,
        "description": "Comma separated list of label names to filter issues, e.g., 'bug,ui,@high'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A list of comma separated label names. Example: `bug,ui,@high`"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "labels"
      },
      {
        "name": "sort_issues_by",
        "required": false,
        "description": "Specify sorting criteria for issues: 'created', 'updated', or 'comments'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "What to sort results by."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sort"
      },
      {
        "name": "sort_direction",
        "required": false,
        "description": "The direction to sort the results by. Use 'asc' for ascending and 'desc' for descending.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "asc",
            "desc"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The direction to sort the results by."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "direction"
      },
      {
        "name": "updated_since_timestamp",
        "required": false,
        "description": "Only show issues or pull requests updated after this timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "since"
      },
      {
        "name": "results_per_page",
        "required": false,
        "description": "Number of results per page, up to a maximum of 100.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page (max 100)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "per_page"
      },
      {
        "name": "results_page_number",
        "required": false,
        "description": "Specifies which page of results to fetch. Use an integer value to navigate through paginated results.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number of the results to fetch."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "page"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'issues/list-for-repo'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-github",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": null
    },
    "secrets": [
      {
        "key": "GIT_SERVER_URL"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the GitHub API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{git_server_url}/api/v3/repos/{owner}/{repo}/issues",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "milestone",
        "tool_parameter_name": "milestone_identifier",
        "description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "state",
        "tool_parameter_name": "issue_state",
        "description": "Indicates the state of the issues to return.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "open",
            "closed",
            "all"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Indicates the state of the issues to return."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "open",
        "documentation_urls": []
      },
      {
        "name": "assignee",
        "tool_parameter_name": "assignee_filter",
        "description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "creator",
        "tool_parameter_name": "issue_creator",
        "description": "The user that created the issue.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The user that created the issue."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "mentioned",
        "tool_parameter_name": "mentioned_user",
        "description": "A user that's mentioned in the issue.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A user that's mentioned in the issue."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "labels",
        "tool_parameter_name": "issue_labels",
        "description": "A list of comma separated label names. Example: `bug,ui,@high`",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A list of comma separated label names. Example: `bug,ui,@high`"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "sort",
        "tool_parameter_name": "sort_issues_by",
        "description": "What to sort results by.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "created",
            "updated",
            "comments"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "What to sort results by."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "created",
        "documentation_urls": []
      },
      {
        "name": "direction",
        "tool_parameter_name": "sort_direction",
        "description": "The direction to sort the results by.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "asc",
            "desc"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "The direction to sort the results by."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": "desc",
        "documentation_urls": []
      },
      {
        "name": "since",
        "tool_parameter_name": "updated_since_timestamp",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "per_page",
        "tool_parameter_name": "results_per_page",
        "description": "The number of results per page (max 100).",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The number of results per page (max 100)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 30,
        "documentation_urls": []
      },
      {
        "name": "page",
        "tool_parameter_name": "results_page_number",
        "description": "Page number of the results to fetch.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Page number of the results to fetch."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "default": 1,
        "documentation_urls": []
      },
      {
        "name": "owner",
        "tool_parameter_name": "repository_owner",
        "description": "The account owner of the repository. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "repo",
        "tool_parameter_name": "repository_name",
        "description": "The name of the repository. The name is not case sensitive.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The name of the repository. The name is not case sensitive."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "GIT_SERVER_URL",
        "parameter_name": "git_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ],
    "request_body_spec": null,
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
