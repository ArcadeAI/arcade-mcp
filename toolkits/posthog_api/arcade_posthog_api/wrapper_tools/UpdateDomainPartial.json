{
  "name": "UpdateDomainPartial",
  "fully_qualified_name": "PosthogApi.UpdateDomainPartial@0.1.0",
  "description": "Partially update domain information for an organization.\n\nUse this tool to update specific fields of a domain's information within an organization on Datadog. This is useful when you need to change only certain attributes without affecting others.",
  "toolkit": {
    "name": "ArcadePosthogApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "domain_id",
        "required": true,
        "description": "A UUID string that uniquely identifies the domain to be updated.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A UUID string identifying this domain."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "organization_identifier",
        "required": true,
        "description": "The unique identifier for the organization whose domain is being partially updated. Expected to be a string.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "organization_id"
      },
      {
        "name": "domain_update_request",
        "required": false,
        "description": "A JSON object containing the domain ID and details to update, such as verification status, SSO settings, and SAML configuration.",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "id": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "domain": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "is_verified": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Determines whether a domain is verified or not."
            },
            "verified_at": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "verification_challenge": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "jit_provisioning_enabled": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "sso_enforcement": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "has_saml": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Returns whether SAML is configured for the instance. Does not validate the user has the required license (that check is performed in other places)."
            },
            "saml_entity_id": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "saml_acs_url": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "saml_x509_cert": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "requestBody"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'domains_partial_update'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "POSTHOG_SERVER_URL"
      },
      {
        "key": "POSTHOG_PERSONAL_API_KEY"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Datadog API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{posthog_server_url}/api/organizations/{organization_id}/domains/{id}/",
    "http_method": "PATCH",
    "headers": {},
    "parameters": [
      {
        "name": "id",
        "tool_parameter_name": "domain_id",
        "description": "A UUID string identifying this domain.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A UUID string identifying this domain."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "organization_id",
        "tool_parameter_name": "organization_identifier",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "requestBody",
        "tool_parameter_name": "domain_update_request",
        "description": "",
        "value_schema": {
          "val_type": "json",
          "inner_val_type": null,
          "enum": null,
          "properties": {
            "id": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "domain": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "is_verified": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Determines whether a domain is verified or not."
            },
            "verified_at": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "verification_challenge": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "jit_provisioning_enabled": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "sso_enforcement": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "has_saml": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Returns whether SAML is configured for the instance. Does not validate the user has the required license (that check is performed in other places)."
            },
            "saml_entity_id": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "saml_acs_url": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            },
            "saml_x509_cert": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": null
            }
          },
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "POSTHOG_SERVER_URL",
        "parameter_name": "posthog_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "POSTHOG_PERSONAL_API_KEY",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"domain\": {\n            \"type\": \"string\",\n            \"maxLength\": 128\n          },\n          \"is_verified\": {\n            \"type\": \"boolean\",\n            \"description\": \"Determines whether a domain is verified or not.\",\n            \"readOnly\": true\n          },\n          \"verified_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"nullable\": true\n          },\n          \"verification_challenge\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"jit_provisioning_enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"sso_enforcement\": {\n            \"type\": \"string\",\n            \"maxLength\": 28\n          },\n          \"has_saml\": {\n            \"type\": \"boolean\",\n            \"description\": \"Returns whether SAML is configured for the instance. Does not validate the user has the required license (that check is performed in other places).\",\n            \"readOnly\": true\n          },\n          \"saml_entity_id\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"maxLength\": 512\n          },\n          \"saml_acs_url\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"maxLength\": 512\n          },\n          \"saml_x509_cert\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        }\n      }\n    },\n    \"application/x-www-form-urlencoded\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"domain\": {\n            \"type\": \"string\",\n            \"maxLength\": 128\n          },\n          \"is_verified\": {\n            \"type\": \"boolean\",\n            \"description\": \"Determines whether a domain is verified or not.\",\n            \"readOnly\": true\n          },\n          \"verified_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"nullable\": true\n          },\n          \"verification_challenge\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"jit_provisioning_enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"sso_enforcement\": {\n            \"type\": \"string\",\n            \"maxLength\": 28\n          },\n          \"has_saml\": {\n            \"type\": \"boolean\",\n            \"description\": \"Returns whether SAML is configured for the instance. Does not validate the user has the required license (that check is performed in other places).\",\n            \"readOnly\": true\n          },\n          \"saml_entity_id\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"maxLength\": 512\n          },\n          \"saml_acs_url\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"maxLength\": 512\n          },\n          \"saml_x509_cert\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        }\n      }\n    },\n    \"multipart/form-data\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"domain\": {\n            \"type\": \"string\",\n            \"maxLength\": 128\n          },\n          \"is_verified\": {\n            \"type\": \"boolean\",\n            \"description\": \"Determines whether a domain is verified or not.\",\n            \"readOnly\": true\n          },\n          \"verified_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"nullable\": true\n          },\n          \"verification_challenge\": {\n            \"type\": \"string\",\n            \"readOnly\": true\n          },\n          \"jit_provisioning_enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"sso_enforcement\": {\n            \"type\": \"string\",\n            \"maxLength\": 28\n          },\n          \"has_saml\": {\n            \"type\": \"boolean\",\n            \"description\": \"Returns whether SAML is configured for the instance. Does not validate the user has the required license (that check is performed in other places).\",\n            \"readOnly\": true\n          },\n          \"saml_entity_id\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"maxLength\": 512\n          },\n          \"saml_acs_url\": {\n            \"type\": \"string\",\n            \"nullable\": true,\n            \"maxLength\": 512\n          },\n          \"saml_x509_cert\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        }\n      }\n    }\n  }\n}",
    "use_request_body_schema_mode": true,
    "validate_request_body_schema": true
  }
}
