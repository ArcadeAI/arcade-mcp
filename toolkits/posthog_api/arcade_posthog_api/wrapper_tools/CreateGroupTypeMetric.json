{
  "name": "CreateGroupTypeMetric",
  "fully_qualified_name": "PosthogApi.CreateGroupTypeMetric@0.1.0",
  "description": "Create a new metric for a specific group type.\n\nThis tool creates a new metric for a specified group type within a project. It should be called when you need to add a new performance or data metric to a group type for monitoring or analysis purposes.",
  "toolkit": {
    "name": "ArcadePosthogApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "group_type_index",
        "required": true,
        "description": "An integer representing the index of the group type to which a new metric will be added.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "group_type_index"
      },
      {
        "name": "project_id",
        "required": true,
        "description": "Project ID for accessing the specific project. Make a call to /api/projects/ to retrieve available IDs.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Project ID of the project you're trying to access. To find the ID of the project, make a call to /api/projects/."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "project_id"
      },
      {
        "name": "group_type_metric_id",
        "required": true,
        "description": "The unique identifier for the metric you wish to create. It should be a string value.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "id"
      },
      {
        "name": "metric_name",
        "required": true,
        "description": "The name of the metric to be created for the group type. This should be a descriptive and unique identifier that helps distinguish this metric from others.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "name"
      },
      {
        "name": "metric_filters",
        "required": true,
        "description": "Optional filters to apply when creating the group type metric. It accepts a string of filter criteria to narrow down the data.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "filters"
      },
      {
        "name": "metric_format",
        "required": false,
        "description": "Specify the format for the metric. Options are 'numeric' or 'currency'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "numeric",
            "currency"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "* `numeric` - numeric\n* `currency` - currency"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "format"
      },
      {
        "name": "interval_in_days",
        "required": false,
        "description": "Specify the interval in days for the metric data aggregation.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "In days"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "interval"
      },
      {
        "name": "display_format",
        "required": false,
        "description": "Specifies how the metric will be displayed: 'number' for a numeric display, or 'sparkline' for a graphical display.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "number",
            "sparkline"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "* `number` - number\n* `sparkline` - sparkline"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "display"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'groups_types_metrics_create'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": null,
    "secrets": [
      {
        "key": "POSTHOG_SERVER_URL"
      },
      {
        "key": "POSTHOG_PERSONAL_API_KEY"
      }
    ],
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.1.0",
    "description": "Tools that enable LLMs to interact directly with the Datadog API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.2.0",
      "description": ""
    },
    "url": "{posthog_server_url}/api/projects/{project_id}/groups_types/{group_type_index}/metrics/",
    "http_method": "POST",
    "headers": {},
    "parameters": [
      {
        "name": "group_type_index",
        "tool_parameter_name": "group_type_index",
        "description": "",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "project_id",
        "tool_parameter_name": "project_id",
        "description": "Project ID of the project you're trying to access. To find the ID of the project, make a call to /api/projects/.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Project ID of the project you're trying to access. To find the ID of the project, make a call to /api/projects/."
        },
        "accepted_as": "path",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "id",
        "tool_parameter_name": "group_type_metric_id",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "name",
        "tool_parameter_name": "metric_name",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "format",
        "tool_parameter_name": "metric_format",
        "description": "* `numeric` - numeric\n* `currency` - currency",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "numeric",
            "currency"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "* `numeric` - numeric\n* `currency` - currency"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "interval",
        "tool_parameter_name": "interval_in_days",
        "description": "In days",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "In days"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "display",
        "tool_parameter_name": "display_format",
        "description": "* `number` - number\n* `sparkline` - sparkline",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "number",
            "sparkline"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "* `number` - number\n* `sparkline` - sparkline"
        },
        "accepted_as": "body",
        "required": false,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      },
      {
        "name": "filters",
        "tool_parameter_name": "metric_filters",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "body",
        "required": true,
        "deprecated": false,
        "default": null,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "POSTHOG_SERVER_URL",
        "parameter_name": "posthog_server_url",
        "accepted_as": "path",
        "formatted_value": null,
        "description": "",
        "is_auth_token": false
      },
      {
        "arcade_key": "POSTHOG_PERSONAL_API_KEY",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "",
        "is_auth_token": false
      }
    ],
    "request_body_spec": "{\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"maxLength\": 255\n          },\n          \"format\": {\n            \"enum\": [\n              \"numeric\",\n              \"currency\"\n            ],\n            \"type\": \"string\",\n            \"description\": \"* `numeric` - numeric\\n* `currency` - currency\"\n          },\n          \"interval\": {\n            \"type\": \"integer\",\n            \"maximum\": 2147483647,\n            \"minimum\": -2147483648,\n            \"description\": \"In days\"\n          },\n          \"display\": {\n            \"enum\": [\n              \"number\",\n              \"sparkline\"\n            ],\n            \"type\": \"string\",\n            \"description\": \"* `number` - number\\n* `sparkline` - sparkline\"\n          },\n          \"filters\": {}\n        },\n        \"required\": [\n          \"filters\",\n          \"id\",\n          \"name\"\n        ]\n      }\n    },\n    \"application/x-www-form-urlencoded\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"maxLength\": 255\n          },\n          \"format\": {\n            \"enum\": [\n              \"numeric\",\n              \"currency\"\n            ],\n            \"type\": \"string\",\n            \"description\": \"* `numeric` - numeric\\n* `currency` - currency\"\n          },\n          \"interval\": {\n            \"type\": \"integer\",\n            \"maximum\": 2147483647,\n            \"minimum\": -2147483648,\n            \"description\": \"In days\"\n          },\n          \"display\": {\n            \"enum\": [\n              \"number\",\n              \"sparkline\"\n            ],\n            \"type\": \"string\",\n            \"description\": \"* `number` - number\\n* `sparkline` - sparkline\"\n          },\n          \"filters\": {}\n        },\n        \"required\": [\n          \"filters\",\n          \"id\",\n          \"name\"\n        ]\n      }\n    },\n    \"multipart/form-data\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"maxLength\": 255\n          },\n          \"format\": {\n            \"enum\": [\n              \"numeric\",\n              \"currency\"\n            ],\n            \"type\": \"string\",\n            \"description\": \"* `numeric` - numeric\\n* `currency` - currency\"\n          },\n          \"interval\": {\n            \"type\": \"integer\",\n            \"maximum\": 2147483647,\n            \"minimum\": -2147483648,\n            \"description\": \"In days\"\n          },\n          \"display\": {\n            \"enum\": [\n              \"number\",\n              \"sparkline\"\n            ],\n            \"type\": \"string\",\n            \"description\": \"* `number` - number\\n* `sparkline` - sparkline\"\n          },\n          \"filters\": {}\n        },\n        \"required\": [\n          \"filters\",\n          \"id\",\n          \"name\"\n        ]\n      }\n    }\n  },\n  \"required\": true\n}",
    "use_request_body_schema_mode": false,
    "validate_request_body_schema": false
  }
}
