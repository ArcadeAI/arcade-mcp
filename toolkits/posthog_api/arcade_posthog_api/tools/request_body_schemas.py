"""Request Body Schemas for API Tools

DO NOT EDIT THIS MODULE DIRECTLY.

THIS MODULE WAS AUTO-GENERATED AND CONTAINS OpenAPI REQUEST BODY SCHEMAS
FOR TOOLS WITH COMPLEX REQUEST BODIES. ANY CHANGES TO THIS MODULE WILL
BE OVERWRITTEN BY THE TRANSPILER.
"""
from typing import Any

REQUEST_BODY_SCHEMAS: dict[str, Any] = {
    "CREATEBATCHEXPORTFORENVIRONMENTS": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "CREATEBACKFILLFORBATCHEXPORT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "progress": {"type": "string", "readOnly": true}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The end of the data interval."}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this backfill.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportBackfill was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportBackfill finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportBackfill was last updated."}, "team": {"type": "integer", "description": "The team this belongs to."}, "batch_export": {"type": "string", "format": "uuid", "description": "The BatchExport this backfill belongs to."}}, "required": ["batch_export", "created_at", "id", "last_updated_at", "progress", "status", "team"]}',  # noqa: E501
    "CANCELBATCHEXPORTBACKFILL": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "progress": {"type": "string", "readOnly": true}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The end of the data interval."}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this backfill.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportBackfill was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportBackfill finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportBackfill was last updated."}, "team": {"type": "integer", "description": "The team this belongs to."}, "batch_export": {"type": "string", "format": "uuid", "description": "The BatchExport this backfill belongs to."}}, "required": ["batch_export", "created_at", "id", "last_updated_at", "progress", "status", "team"]}',  # noqa: E501
    "CANCELBATCHEXPORTRUN": '{"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}',  # noqa: E501
    "RETRYBATCHEXPORTRUN": '{"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}',  # noqa: E501
    "UPDATEENVIRONMENTBATCHEXPORTS": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "UPDATEENVIRONMENTEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}}',  # noqa: E501
    "TRIGGERBATCHEXPORTBACKFILL": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "PAUSEBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "RUNENVIRONMENTTESTSTEP": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "UNPAUSEBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "CREATEENVIRONMENTBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "CREATEENVIRONMENTDASHBOARD": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["access_control_version", "created_at", "created_by", "creation_mode", "effective_privilege_level", "effective_restriction_level", "filters", "id", "is_shared", "persisted_filters", "persisted_variables", "team_id", "tiles", "user_access_level", "variables"]}',  # noqa: E501
    "ADDDASHBOARDCOLLABORATOR": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "user": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "added_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "user_uuid": {"type": "string", "format": "uuid", "writeOnly": true}}, "required": ["added_at", "dashboard_id", "id", "level", "updated_at", "user", "user_uuid"]}',  # noqa: E501
    "CREATEDASHBOARDSHARINGPASSWORD": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "REFRESHDASHBOARDSHARING": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "UPDATEENVIRONMENTDASHBOARD": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["access_control_version", "created_at", "created_by", "creation_mode", "effective_privilege_level", "effective_restriction_level", "filters", "id", "is_shared", "persisted_filters", "persisted_variables", "team_id", "tiles", "user_access_level", "variables"]}',  # noqa: E501
    "UPDATEDASHBOARDENVIRONMENT": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "MOVEDASHBOARDTILE": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "CREATEENVIRONMENTDASHBOARDFROMTEMPLATE": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["access_control_version", "created_at", "created_by", "creation_mode", "effective_privilege_level", "effective_restriction_level", "filters", "id", "is_shared", "persisted_filters", "persisted_variables", "team_id", "tiles", "user_access_level", "variables"]}',  # noqa: E501
    "CREATEDATACOLORTHEME": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 100}, "colors": {}, "is_global": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "is_global", "name"]}',  # noqa: E501
    "UPDATEENVIRONMENTCOLORTHEME": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 100}, "colors": {}, "is_global": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "is_global", "name"]}',  # noqa: E501
    "UPDATEENVIRONMENTTHEME": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 100}, "colors": {}, "is_global": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}}}',  # noqa: E501
    "CREATEENVIRONMENTDATASETITEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "dataset": {"type": "string", "format": "uuid"}, "input": {"nullable": true}, "output": {"nullable": true}, "metadata": {"nullable": true}, "ref_trace_id": {"type": "string", "nullable": true, "maxLength": 255}, "ref_timestamp": {"type": "string", "format": "date-time", "nullable": true}, "ref_source_id": {"type": "string", "nullable": true, "maxLength": 255}, "deleted": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}, "required": ["created_at", "created_by", "dataset", "id", "team", "updated_at"]}',  # noqa: E501
    "UPDATEENVIRONMENTDATASETITEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "dataset": {"type": "string", "format": "uuid"}, "input": {"nullable": true}, "output": {"nullable": true}, "metadata": {"nullable": true}, "ref_trace_id": {"type": "string", "nullable": true, "maxLength": 255}, "ref_timestamp": {"type": "string", "format": "date-time", "nullable": true}, "ref_source_id": {"type": "string", "nullable": true, "maxLength": 255}, "deleted": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}, "required": ["created_at", "created_by", "dataset", "id", "team", "updated_at"]}',  # noqa: E501
    "MODIFYENVIRONMENTDATASETITEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "dataset": {"type": "string", "format": "uuid"}, "input": {"nullable": true}, "output": {"nullable": true}, "metadata": {"nullable": true}, "ref_trace_id": {"type": "string", "nullable": true, "maxLength": 255}, "ref_timestamp": {"type": "string", "format": "date-time", "nullable": true}, "ref_source_id": {"type": "string", "nullable": true, "maxLength": 255}, "deleted": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}}',  # noqa: E501
    "CREATEENVIRONMENTDATASET": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "metadata": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "team", "updated_at"]}',  # noqa: E501
    "UPDATEENVIRONMENTDATASET": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "metadata": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "team", "updated_at"]}',  # noqa: E501
    "MODIFYENVIRONMENTDATASET": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "metadata": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}}',  # noqa: E501
    "UPDATEENVIRONMENTENDPOINT": '{"additionalProperties": false, "properties": {"client_query_id": {"default": null, "description": "Client provided query ID. Can be used to retrieve the status or cancel the query.", "title": "Client Query Id", "type": "string", "nullable": true}, "filters_override": {"additionalProperties": false, "properties": {"breakdown_filter": {"additionalProperties": false, "properties": {"breakdown": {"default": null, "title": "Breakdown", "anyOf": [{"type": "string"}, {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array"}, {"type": "integer"}], "nullable": true}, "breakdown_group_type_index": {"default": null, "title": "Breakdown Group Type Index", "type": "integer", "nullable": true}, "breakdown_hide_other_aggregation": {"default": null, "title": "Breakdown Hide Other Aggregation", "type": "boolean", "nullable": true}, "breakdown_histogram_bin_count": {"default": null, "title": "Breakdown Histogram Bin Count", "type": "integer", "nullable": true}, "breakdown_limit": {"default": null, "title": "Breakdown Limit", "type": "integer", "nullable": true}, "breakdown_normalize_url": {"default": null, "title": "Breakdown Normalize Url", "type": "boolean", "nullable": true}, "breakdown_type": {"enum": ["cohort", "person", "event", "event_metadata", "group", "session", "hogql", "data_warehouse", "data_warehouse_person_property", "revenue_analytics"], "title": "BreakdownType", "type": "string"}, "breakdowns": {"default": null, "title": "Breakdowns", "items": {"additionalProperties": false, "properties": {"group_type_index": {"default": null, "title": "Group Type Index", "type": "integer", "nullable": true}, "histogram_bin_count": {"default": null, "title": "Histogram Bin Count", "type": "integer", "nullable": true}, "normalize_url": {"default": null, "title": "Normalize Url", "type": "boolean", "nullable": true}, "property": {"anyOf": [{"type": "string"}, {"type": "integer"}], "title": "Property"}, "type": {"enum": ["cohort", "person", "event", "event_metadata", "group", "session", "hogql", "revenue_analytics"], "title": "MultipleBreakdownType", "type": "string"}}, "required": ["property"], "title": "Breakdown", "type": "object"}, "maxItems": 3, "type": "array", "nullable": true}}, "title": "BreakdownFilter", "type": "object"}, "date_from": {"default": null, "title": "Date From", "type": "string", "nullable": true}, "date_to": {"default": null, "title": "Date To", "type": "string", "nullable": true}, "properties": {"default": null, "title": "Properties", "items": {"anyOf": [{"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "event", "description": "Event properties", "title": "Type", "type": "string", "enum": ["event"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key"], "title": "EventPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "person", "description": "Person properties", "title": "Type", "type": "string", "enum": ["person"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "PersonPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"enum": ["tag_name", "text", "href", "selector"], "title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "element", "title": "Type", "type": "string", "enum": ["element"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "ElementPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "event_metadata", "title": "Type", "type": "string", "enum": ["event_metadata"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "EventMetadataPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "session", "title": "Type", "type": "string", "enum": ["session"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "SessionPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"cohort_name": {"default": null, "title": "Cohort Name", "type": "string", "nullable": true}, "key": {"default": "id", "title": "Key", "type": "string", "enum": ["id"]}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "cohort", "title": "Type", "type": "string", "enum": ["cohort"]}, "value": {"title": "Value", "type": "integer"}}, "required": ["value"], "title": "CohortPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"anyOf": [{"enum": ["duration", "active_seconds", "inactive_seconds"], "title": "DurationType", "type": "string"}, {"type": "string"}], "title": "Key"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "recording", "title": "Type", "type": "string", "enum": ["recording"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "RecordingPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "log_entry", "title": "Type", "type": "string", "enum": ["log_entry"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "LogEntryPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"group_type_index": {"default": null, "title": "Group Type Index", "type": "integer", "nullable": true}, "key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "group", "title": "Type", "type": "string", "enum": ["group"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "GroupPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "feature", "description": "Event property with \"$feature/\" prepended", "title": "Type", "type": "string", "enum": ["feature"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "FeaturePropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"description": "The key should be the flag ID", "title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"default": "flag_evaluates_to", "description": "Only flag_evaluates_to operator is allowed for flag dependencies", "title": "Operator", "type": "string", "enum": ["flag_evaluates_to"]}, "type": {"default": "flag", "description": "Feature flag dependency", "title": "Type", "type": "string", "enum": ["flag"]}, "value": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "The value can be true, false, or a variant name", "title": "Value"}}, "required": ["key", "value"], "title": "FlagPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "type": {"default": "hogql", "title": "Type", "type": "string", "enum": ["hogql"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key"], "title": "HogQLPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {}, "title": "EmptyPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "data_warehouse", "title": "Type", "type": "string", "enum": ["data_warehouse"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "DataWarehousePropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "data_warehouse_person_property", "title": "Type", "type": "string", "enum": ["data_warehouse_person_property"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "DataWarehousePersonPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "error_tracking_issue", "title": "Type", "type": "string", "enum": ["error_tracking_issue"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "ErrorTrackingIssueFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "log", "title": "Type", "type": "string", "enum": ["log"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "LogPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "revenue_analytics", "title": "Type", "type": "string", "enum": ["revenue_analytics"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "RevenueAnalyticsPropertyFilter", "type": "object"}]}, "type": "array", "nullable": true}}, "title": "DashboardFilter", "type": "object"}, "query_override": {"default": null, "title": "Query Override", "type": "object", "nullable": true}, "refresh": {"enum": ["async", "async_except_on_cache_miss", "blocking", "force_async", "force_blocking", "force_cache", "lazy_async"], "title": "RefreshType", "type": "string"}, "variables_override": {"default": null, "title": "Variables Override", "additionalProperties": {"type": "object"}, "type": "object", "nullable": true}, "variables_values": {"default": null, "title": "Variables Values", "type": "object", "nullable": true}}, "title": "EndpointRunRequest", "type": "object"}',  # noqa: E501
    "CREATEENVIRONMENTEVALUATION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string"}, "enabled": {"type": "boolean"}, "prompt": {"type": "string"}, "conditions": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}}, "required": ["created_at", "created_by", "id", "name", "prompt", "updated_at"]}',  # noqa: E501
    "UPDATEENVIRONMENTEVALUATION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string"}, "enabled": {"type": "boolean"}, "prompt": {"type": "string"}, "conditions": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}}, "required": ["created_at", "created_by", "id", "name", "prompt", "updated_at"]}',  # noqa: E501
    "MODIFYENVIRONMENTEVALUATION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string"}, "enabled": {"type": "boolean"}, "prompt": {"type": "string"}, "conditions": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}}}',  # noqa: E501
    "CREATEENVIRONMENTEXPORTS": '{"type": "object", "description": "Standard ExportedAsset serializer that doesn\'t return content.", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard": {"type": "integer", "nullable": true}, "insight": {"type": "integer", "nullable": true}, "export_format": {"enum": ["image/png", "application/pdf", "text/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "video/webm", "video/mp4", "image/gif", "application/json"], "type": "string", "description": "* `image/png` - image/png\n* `application/pdf` - application/pdf\n* `text/csv` - text/csv\n* `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet` - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n* `video/webm` - video/webm\n* `video/mp4` - video/mp4\n* `image/gif` - image/gif\n* `application/json` - application/json"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "has_content": {"type": "string", "readOnly": true}, "export_context": {"nullable": true}, "filename": {"type": "string", "readOnly": true}, "expires_after": {"type": "string", "format": "date-time", "nullable": true}, "exception": {"type": "string", "readOnly": true, "nullable": true}}, "required": ["created_at", "exception", "export_format", "filename", "has_content", "id"]}',  # noqa: E501
    "CREATEFILESYSTEMENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "UPDATEENVIRONMENTFILESYSTEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "MODIFYENVIRONMENTFILESYSTEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "GETFILECOUNTINFOLDER": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "CREATEENVIRONMENTFILESYSTEMLINK": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "MOVEFILEWITHINENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "COUNTFILESINDIRECTORY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "CREATEENVIRONMENTFILESYSTEMLOGVIEW": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "CREATEHOGFUNCTIONENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["bytecode", "created_at", "created_by", "id", "status", "template", "transpiled", "updated_at"]}',  # noqa: E501
    "UPDATEHOGFUNCTIONS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["bytecode", "created_at", "created_by", "id", "status", "template", "transpiled", "updated_at"]}',  # noqa: E501
    "UPDATEHOGFUNCTIONVIEWLOG": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "CREATEHOGFUNCTIONBROADCAST": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["bytecode", "created_at", "created_by", "id", "status", "template", "transpiled", "updated_at"]}',  # noqa: E501
    "TRACKHOGFUNCTIONINVOCATION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["bytecode", "created_at", "created_by", "id", "status", "template", "transpiled", "updated_at"]}',  # noqa: E501
    "UPDATEHOGFUNCTIONSORDER": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "CREATEENVIRONMENTINSIGHT": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}, "required": ["alerts", "cache_target_age", "columns", "created_at", "created_by", "dashboard_tiles", "effective_privilege_level", "effective_restriction_level", "hasMore", "hogql", "id", "is_cached", "is_sample", "last_modified_at", "last_modified_by", "last_refresh", "last_viewed_at", "next_allowed_client_refresh", "query_status", "result", "short_id", "timezone", "types", "updated_at", "user_access_level"]}',  # noqa: E501
    "CREATESHARINGPASSWORD": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "REFRESHINSIGHTSSHARING": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "UPDATEENVIRONMENTINSIGHTS": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}, "required": ["alerts", "cache_target_age", "columns", "created_at", "created_by", "dashboard_tiles", "effective_privilege_level", "effective_restriction_level", "hasMore", "hogql", "id", "is_cached", "is_sample", "last_modified_at", "last_modified_by", "last_refresh", "last_viewed_at", "next_allowed_client_refresh", "query_status", "result", "short_id", "timezone", "types", "updated_at", "user_access_level"]}',  # noqa: E501
    "UPDATEENVIRONMENTINSIGHTSLOG": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "CANCELINSIGHTCREATION": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}, "required": ["alerts", "cache_target_age", "columns", "created_at", "created_by", "dashboard_tiles", "effective_privilege_level", "effective_restriction_level", "hasMore", "hogql", "id", "is_cached", "is_sample", "last_modified_at", "last_modified_by", "last_refresh", "last_viewed_at", "next_allowed_client_refresh", "query_status", "result", "short_id", "timezone", "types", "updated_at", "user_access_level"]}',  # noqa: E501
    "UPDATEINSIGHTVIEWTIMESTAMPS": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}, "required": ["alerts", "cache_target_age", "columns", "created_at", "created_by", "dashboard_tiles", "effective_privilege_level", "effective_restriction_level", "hasMore", "hogql", "id", "is_cached", "is_sample", "last_modified_at", "last_modified_by", "last_refresh", "last_viewed_at", "next_allowed_client_refresh", "query_status", "result", "short_id", "timezone", "types", "updated_at", "user_access_level"]}',  # noqa: E501
    "CREATEENVIRONMENTINTEGRATION": '{"type": "object", "description": "Standard Integration serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "kind": {"enum": ["slack", "salesforce", "hubspot", "google-pubsub", "google-cloud-storage", "google-ads", "google-sheets", "snapchat", "linkedin-ads", "reddit-ads", "tiktok-ads", "intercom", "email", "linear", "github", "meta-ads", "twilio", "clickup", "vercel", "databricks"], "type": "string", "description": "* `slack` - Slack\n* `salesforce` - Salesforce\n* `hubspot` - Hubspot\n* `google-pubsub` - Google Pubsub\n* `google-cloud-storage` - Google Cloud Storage\n* `google-ads` - Google Ads\n* `google-sheets` - Google Sheets\n* `snapchat` - Snapchat\n* `linkedin-ads` - Linkedin Ads\n* `reddit-ads` - Reddit Ads\n* `tiktok-ads` - Tiktok Ads\n* `intercom` - Intercom\n* `email` - Email\n* `linear` - Linear\n* `github` - Github\n* `meta-ads` - Meta Ads\n* `twilio` - Twilio\n* `clickup` - Clickup\n* `vercel` - Vercel\n* `databricks` - Databricks"}, "config": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "errors": {"type": "string", "readOnly": true}, "display_name": {"type": "string", "readOnly": true}}, "required": ["created_at", "created_by", "display_name", "errors", "id", "kind"]}',  # noqa: E501
    "VERIFYEMAILINTEGRATION": '{"type": "object", "description": "Standard Integration serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "kind": {"enum": ["slack", "salesforce", "hubspot", "google-pubsub", "google-cloud-storage", "google-ads", "google-sheets", "snapchat", "linkedin-ads", "reddit-ads", "tiktok-ads", "intercom", "email", "linear", "github", "meta-ads", "twilio", "clickup", "vercel", "databricks"], "type": "string", "description": "* `slack` - Slack\n* `salesforce` - Salesforce\n* `hubspot` - Hubspot\n* `google-pubsub` - Google Pubsub\n* `google-cloud-storage` - Google Cloud Storage\n* `google-ads` - Google Ads\n* `google-sheets` - Google Sheets\n* `snapchat` - Snapchat\n* `linkedin-ads` - Linkedin Ads\n* `reddit-ads` - Reddit Ads\n* `tiktok-ads` - Tiktok Ads\n* `intercom` - Intercom\n* `email` - Email\n* `linear` - Linear\n* `github` - Github\n* `meta-ads` - Meta Ads\n* `twilio` - Twilio\n* `clickup` - Clickup\n* `vercel` - Vercel\n* `databricks` - Databricks"}, "config": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "errors": {"type": "string", "readOnly": true}, "display_name": {"type": "string", "readOnly": true}}, "required": ["created_at", "created_by", "display_name", "errors", "id", "kind"]}',  # noqa: E501
    "UPDATEPERSONPROPERTIES": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "QUEUEPERSONEVENTSDELETION": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "DELETEPERSONPROPERTY": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "DELETEPERSONRECORDINGS": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "READORDELETEPERSON": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "UPDATEPERSONPROPERTY": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "BULKDELETEPERSONSINENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "CREATEPERSONSFUNNEL": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "CREATEPERSONSFUNNELCORRELATION": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "RESETDISTINCTID": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "CREATESESSIONRECORDINGPLAYLIST": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "filters": {}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "recordings_counts": {"type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"oneOf": [{"type": "integer"}, {"type": "boolean"}], "nullable": true}}, "readOnly": true}, "type": {"readOnly": true, "nullable": true, "oneOf": [{"enum": ["collection", "filters"], "type": "string", "description": "* `collection` - Collection\n* `filters` - Filters"}, {"enum": [null]}]}, "is_synthetic": {"type": "boolean", "description": "Return whether this is a synthetic playlist", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "is_synthetic", "last_modified_at", "last_modified_by", "recordings_counts", "short_id", "type"]}',  # noqa: E501
    "UPDATESESSIONRECORDINGPLAYLIST": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "filters": {}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "recordings_counts": {"type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"oneOf": [{"type": "integer"}, {"type": "boolean"}], "nullable": true}}, "readOnly": true}, "type": {"readOnly": true, "nullable": true, "oneOf": [{"enum": ["collection", "filters"], "type": "string", "description": "* `collection` - Collection\n* `filters` - Filters"}, {"enum": [null]}]}, "is_synthetic": {"type": "boolean", "description": "Return whether this is a synthetic playlist", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "is_synthetic", "last_modified_at", "last_modified_by", "recordings_counts", "short_id", "type"]}',  # noqa: E501
    "MODIFYRECORDINGPLAYLIST": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "filters": {}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "recordings_counts": {"type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"oneOf": [{"type": "integer"}, {"type": "boolean"}], "nullable": true}}, "readOnly": true}, "type": {"readOnly": true, "nullable": true, "oneOf": [{"enum": ["collection", "filters"], "type": "string", "description": "* `collection` - Collection\n* `filters` - Filters"}, {"enum": [null]}]}, "is_synthetic": {"type": "boolean", "description": "Return whether this is a synthetic playlist", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "CREATESESSIONRECORDINGPLAYLISTENTRY": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "filters": {}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "recordings_counts": {"type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"oneOf": [{"type": "integer"}, {"type": "boolean"}], "nullable": true}}, "readOnly": true}, "type": {"readOnly": true, "nullable": true, "oneOf": [{"enum": ["collection", "filters"], "type": "string", "description": "* `collection` - Collection\n* `filters` - Filters"}, {"enum": [null]}]}, "is_synthetic": {"type": "boolean", "description": "Return whether this is a synthetic playlist", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "is_synthetic", "last_modified_at", "last_modified_by", "recordings_counts", "short_id", "type"]}',  # noqa: E501
    "MODIFYSESSIONRECORDING": '{"type": "object", "properties": {"id": {"type": "string", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "viewed": {"type": "boolean", "readOnly": true}, "viewers": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "recording_duration": {"type": "integer", "readOnly": true}, "active_seconds": {"type": "integer", "readOnly": true, "nullable": true}, "inactive_seconds": {"type": "integer", "readOnly": true, "nullable": true}, "start_time": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "end_time": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "click_count": {"type": "integer", "readOnly": true, "nullable": true}, "keypress_count": {"type": "integer", "readOnly": true, "nullable": true}, "mouse_activity_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_log_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_warn_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_error_count": {"type": "integer", "readOnly": true, "nullable": true}, "start_url": {"type": "string", "readOnly": true, "nullable": true}, "person": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "string", "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}, "storage": {"type": "string", "readOnly": true}, "retention_period_days": {"type": "integer", "readOnly": true, "nullable": true}, "expiry_time": {"type": "string", "readOnly": true}, "recording_ttl": {"type": "string", "readOnly": true}, "snapshot_source": {"type": "string", "nullable": true, "readOnly": true}, "ongoing": {"type": "boolean", "readOnly": true}, "activity_score": {"type": "number", "format": "double", "nullable": true, "readOnly": true}}, "required": ["active_seconds", "activity_score", "click_count", "console_error_count", "console_log_count", "console_warn_count", "distinct_id", "end_time", "expiry_time", "id", "inactive_seconds", "keypress_count", "mouse_activity_count", "ongoing", "recording_duration", "recording_ttl", "retention_period_days", "snapshot_source", "start_time", "start_url", "storage", "viewed", "viewers"]}',  # noqa: E501
    "UPDATESESSIONRECORDING": '{"type": "object", "properties": {"id": {"type": "string", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "viewed": {"type": "boolean", "readOnly": true}, "viewers": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "recording_duration": {"type": "integer", "readOnly": true}, "active_seconds": {"type": "integer", "readOnly": true, "nullable": true}, "inactive_seconds": {"type": "integer", "readOnly": true, "nullable": true}, "start_time": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "end_time": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "click_count": {"type": "integer", "readOnly": true, "nullable": true}, "keypress_count": {"type": "integer", "readOnly": true, "nullable": true}, "mouse_activity_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_log_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_warn_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_error_count": {"type": "integer", "readOnly": true, "nullable": true}, "start_url": {"type": "string", "readOnly": true, "nullable": true}, "person": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "string", "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}, "storage": {"type": "string", "readOnly": true}, "retention_period_days": {"type": "integer", "readOnly": true, "nullable": true}, "expiry_time": {"type": "string", "readOnly": true}, "recording_ttl": {"type": "string", "readOnly": true}, "snapshot_source": {"type": "string", "nullable": true, "readOnly": true}, "ongoing": {"type": "boolean", "readOnly": true}, "activity_score": {"type": "number", "format": "double", "nullable": true, "readOnly": true}}}',  # noqa: E501
    "GENERATERECORDINGPASSWORD": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "REFRESHSESSIONRECORDINGSHARING": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "CREATEENVIRONMENTSUBSCRIPTION": '{"type": "object", "description": "Standard Subscription serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard": {"type": "integer", "nullable": true}, "insight": {"type": "integer", "nullable": true}, "target_type": {"enum": ["email", "slack", "webhook"], "type": "string", "description": "* `email` - Email\n* `slack` - Slack\n* `webhook` - Webhook"}, "target_value": {"type": "string"}, "frequency": {"enum": ["daily", "weekly", "monthly", "yearly"], "type": "string", "description": "* `daily` - Daily\n* `weekly` - Weekly\n* `monthly` - Monthly\n* `yearly` - Yearly"}, "interval": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "byweekday": {"type": "array", "items": {"enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"], "type": "string", "description": "* `monday` - Monday\n* `tuesday` - Tuesday\n* `wednesday` - Wednesday\n* `thursday` - Thursday\n* `friday` - Friday\n* `saturday` - Saturday\n* `sunday` - Sunday"}, "nullable": true}, "bysetpos": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "start_date": {"type": "string", "format": "date-time"}, "until_date": {"type": "string", "format": "date-time", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "title": {"type": "string", "nullable": true, "maxLength": 100}, "summary": {"type": "string", "readOnly": true}, "next_delivery_date": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "invite_message": {"type": "string", "nullable": true}}, "required": ["created_at", "created_by", "frequency", "id", "next_delivery_date", "start_date", "summary", "target_type", "target_value"]}',  # noqa: E501
    "UPDATEENVIRONMENTSUBSCRIPTION": '{"type": "object", "description": "Standard Subscription serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard": {"type": "integer", "nullable": true}, "insight": {"type": "integer", "nullable": true}, "target_type": {"enum": ["email", "slack", "webhook"], "type": "string", "description": "* `email` - Email\n* `slack` - Slack\n* `webhook` - Webhook"}, "target_value": {"type": "string"}, "frequency": {"enum": ["daily", "weekly", "monthly", "yearly"], "type": "string", "description": "* `daily` - Daily\n* `weekly` - Weekly\n* `monthly` - Monthly\n* `yearly` - Yearly"}, "interval": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "byweekday": {"type": "array", "items": {"enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"], "type": "string", "description": "* `monday` - Monday\n* `tuesday` - Tuesday\n* `wednesday` - Wednesday\n* `thursday` - Thursday\n* `friday` - Friday\n* `saturday` - Saturday\n* `sunday` - Sunday"}, "nullable": true}, "bysetpos": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "start_date": {"type": "string", "format": "date-time"}, "until_date": {"type": "string", "format": "date-time", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "title": {"type": "string", "nullable": true, "maxLength": 100}, "summary": {"type": "string", "readOnly": true}, "next_delivery_date": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "invite_message": {"type": "string", "nullable": true}}, "required": ["created_at", "created_by", "frequency", "id", "next_delivery_date", "start_date", "summary", "target_type", "target_value"]}',  # noqa: E501
    "MODIFYENVIRONMENTSUBSCRIPTION": '{"type": "object", "description": "Standard Subscription serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard": {"type": "integer", "nullable": true}, "insight": {"type": "integer", "nullable": true}, "target_type": {"enum": ["email", "slack", "webhook"], "type": "string", "description": "* `email` - Email\n* `slack` - Slack\n* `webhook` - Webhook"}, "target_value": {"type": "string"}, "frequency": {"enum": ["daily", "weekly", "monthly", "yearly"], "type": "string", "description": "* `daily` - Daily\n* `weekly` - Weekly\n* `monthly` - Monthly\n* `yearly` - Yearly"}, "interval": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "byweekday": {"type": "array", "items": {"enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"], "type": "string", "description": "* `monday` - Monday\n* `tuesday` - Tuesday\n* `wednesday` - Wednesday\n* `thursday` - Thursday\n* `friday` - Friday\n* `saturday` - Saturday\n* `sunday` - Sunday"}, "nullable": true}, "bysetpos": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "start_date": {"type": "string", "format": "date-time"}, "until_date": {"type": "string", "format": "date-time", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "title": {"type": "string", "nullable": true, "maxLength": 100}, "summary": {"type": "string", "readOnly": true}, "next_delivery_date": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "invite_message": {"type": "string", "nullable": true}}}',  # noqa: E501
    "CREATEUSERINTERVIEWENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "interviewee_emails": {"type": "array", "items": {"type": "string", "maxLength": 254}}, "transcript": {"type": "string", "readOnly": true}, "summary": {"type": "string"}, "audio": {"type": "string", "format": "uri", "writeOnly": true}}, "required": ["audio", "created_at", "created_by", "id", "transcript"]}',  # noqa: E501
    "UPDATEUSERINTERVIEWENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "interviewee_emails": {"type": "array", "items": {"type": "string", "maxLength": 254}}, "transcript": {"type": "string", "readOnly": true}, "summary": {"type": "string"}, "audio": {"type": "string", "format": "uri", "writeOnly": true}}, "required": ["audio", "created_at", "created_by", "id", "transcript"]}',  # noqa: E501
    "MODIFYINTERVIEWENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "interviewee_emails": {"type": "array", "items": {"type": "string", "maxLength": 254}}, "transcript": {"type": "string", "readOnly": true}, "summary": {"type": "string"}, "audio": {"type": "string", "format": "uri", "writeOnly": true}}}',  # noqa: E501
    "CREATEWAREHOUSESAVEDQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "UPDATEWAREHOUSEQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "UPDATEWAREHOUSESAVEDQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "FETCHSAVEDQUERYANCESTORS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "CANCELSAVEDQUERYWORKFLOW": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "GETDESCENDANTSSAVEDQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "UNDOMATERIALIZATIONPOSTHOG": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "RUNSAVEDQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "CREATEWAREHOUSETABLE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}, "required": ["columns", "created_at", "created_by", "credential", "external_data_source", "external_schema", "format", "id", "name", "url_pattern"]}',  # noqa: E501
    "MODIFYWAREHOUSETABLE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}, "required": ["columns", "created_at", "created_by", "credential", "external_data_source", "external_schema", "format", "id", "name", "url_pattern"]}',  # noqa: E501
    "UPDATEWAREHOUSETABLE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "REFRESHWAREHOUSETABLESCHEMA": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}, "required": ["columns", "created_at", "created_by", "credential", "external_data_source", "external_schema", "format", "id", "name", "url_pattern"]}',  # noqa: E501
    "UPDATEWAREHOUSETABLESCHEMA": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}, "required": ["columns", "created_at", "created_by", "credential", "external_data_source", "external_schema", "format", "id", "name", "url_pattern"]}',  # noqa: E501
    "MANAGEWAREHOUSETABLE": '{}',  # noqa: E501
    "CREATEORGANIZATION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}',  # noqa: E501
    "UPDATEORGANIZATIONDETAILS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}',  # noqa: E501
    "UPDATEORGANIZATIONINFO": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}}',  # noqa: E501
    "ROLLBACKENVIRONMENTSMIGRATION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}',  # noqa: E501
    "CREATEBATCHEXPORTS": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "UPDATEBATCHEXPORTS": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "MODIFYBATCHEXPORTS": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}}',  # noqa: E501
    "INITIATEEXPORTBACKFILL": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "HALTBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "RUNBATCHEXPORTTESTSTEP": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "RESUMEBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "RUNTESTSTEPNEWFORBATCHEXPORTS": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "CREATEDOMAININORGANIZATION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "domain": {"type": "string", "maxLength": 128}, "is_verified": {"type": "boolean", "description": "Determines whether a domain is verified or not.", "readOnly": true}, "verified_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "verification_challenge": {"type": "string", "readOnly": true}, "jit_provisioning_enabled": {"type": "boolean"}, "sso_enforcement": {"type": "string", "maxLength": 28}, "has_saml": {"type": "boolean", "description": "Returns whether SAML is configured for the instance. Does not validate the user has the required license (that check is performed in other places).", "readOnly": true}, "saml_entity_id": {"type": "string", "nullable": true, "maxLength": 512}, "saml_acs_url": {"type": "string", "nullable": true, "maxLength": 512}, "saml_x509_cert": {"type": "string", "nullable": true}}, "required": ["domain", "has_saml", "id", "is_verified", "verification_challenge", "verified_at"]}',  # noqa: E501
    "UPDATEORGANIZATIONDOMAIN": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "domain": {"type": "string", "maxLength": 128}, "is_verified": {"type": "boolean", "description": "Determines whether a domain is verified or not.", "readOnly": true}, "verified_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "verification_challenge": {"type": "string", "readOnly": true}, "jit_provisioning_enabled": {"type": "boolean"}, "sso_enforcement": {"type": "string", "maxLength": 28}, "has_saml": {"type": "boolean", "description": "Returns whether SAML is configured for the instance. Does not validate the user has the required license (that check is performed in other places).", "readOnly": true}, "saml_entity_id": {"type": "string", "nullable": true, "maxLength": 512}, "saml_acs_url": {"type": "string", "nullable": true, "maxLength": 512}, "saml_x509_cert": {"type": "string", "nullable": true}}, "required": ["domain", "has_saml", "id", "is_verified", "verification_challenge", "verified_at"]}',  # noqa: E501
    "UPDATEDOMAINPARTIAL": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "domain": {"type": "string", "maxLength": 128}, "is_verified": {"type": "boolean", "description": "Determines whether a domain is verified or not.", "readOnly": true}, "verified_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "verification_challenge": {"type": "string", "readOnly": true}, "jit_provisioning_enabled": {"type": "boolean"}, "sso_enforcement": {"type": "string", "maxLength": 28}, "has_saml": {"type": "boolean", "description": "Returns whether SAML is configured for the instance. Does not validate the user has the required license (that check is performed in other places).", "readOnly": true}, "saml_entity_id": {"type": "string", "nullable": true, "maxLength": 512}, "saml_acs_url": {"type": "string", "nullable": true, "maxLength": 512}, "saml_x509_cert": {"type": "string", "nullable": true}}}',  # noqa: E501
    "VERIFYDOMAINFORORG": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "domain": {"type": "string", "maxLength": 128}, "is_verified": {"type": "boolean", "description": "Determines whether a domain is verified or not.", "readOnly": true}, "verified_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "verification_challenge": {"type": "string", "readOnly": true}, "jit_provisioning_enabled": {"type": "boolean"}, "sso_enforcement": {"type": "string", "maxLength": 28}, "has_saml": {"type": "boolean", "description": "Returns whether SAML is configured for the instance. Does not validate the user has the required license (that check is performed in other places).", "readOnly": true}, "saml_entity_id": {"type": "string", "nullable": true, "maxLength": 512}, "saml_acs_url": {"type": "string", "nullable": true, "maxLength": 512}, "saml_x509_cert": {"type": "string", "nullable": true}}, "required": ["domain", "has_saml", "id", "is_verified", "verification_challenge", "verified_at"]}',  # noqa: E501
    "CREATEORGANIZATIONINVITE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "target_email": {"type": "string", "format": "email", "maxLength": 254}, "first_name": {"type": "string", "maxLength": 30}, "emailing_attempt_made": {"type": "boolean", "readOnly": true}, "level": {"allOf": [{"enum": [1, 8, 15], "type": "integer", "description": "* `1` - member\n* `8` - administrator\n* `15` - owner"}], "minimum": 0, "maximum": 32767}, "is_expired": {"type": "boolean", "description": "Check if invite is older than INVITE_DAYS_VALIDITY days.", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "message": {"type": "string", "nullable": true}, "private_project_access": {"nullable": true, "description": "List of team IDs and corresponding access levels to private projects."}, "send_email": {"type": "boolean", "writeOnly": true, "default": true}, "combine_pending_invites": {"type": "boolean", "writeOnly": true, "default": false}}, "required": ["created_at", "created_by", "emailing_attempt_made", "id", "is_expired", "target_email", "updated_at"]}',  # noqa: E501
    "CREATEBULKINVITES": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "target_email": {"type": "string", "format": "email", "maxLength": 254}, "first_name": {"type": "string", "maxLength": 30}, "emailing_attempt_made": {"type": "boolean", "readOnly": true}, "level": {"allOf": [{"enum": [1, 8, 15], "type": "integer", "description": "* `1` - member\n* `8` - administrator\n* `15` - owner"}], "minimum": 0, "maximum": 32767}, "is_expired": {"type": "boolean", "description": "Check if invite is older than INVITE_DAYS_VALIDITY days.", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "message": {"type": "string", "nullable": true}, "private_project_access": {"nullable": true, "description": "List of team IDs and corresponding access levels to private projects."}, "send_email": {"type": "boolean", "writeOnly": true, "default": true}, "combine_pending_invites": {"type": "boolean", "writeOnly": true, "default": false}}, "required": ["created_at", "created_by", "emailing_attempt_made", "id", "is_expired", "target_email", "updated_at"]}',  # noqa: E501
    "UPDATEORGANIZATIONMEMBER": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "user": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "level": {"allOf": [{"enum": [1, 8, 15], "type": "integer", "description": "* `1` - member\n* `8` - administrator\n* `15` - owner"}], "minimum": 0, "maximum": 32767}, "joined_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "last_login": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["has_social_auth", "id", "is_2fa_enabled", "joined_at", "last_login", "updated_at", "user"]}',  # noqa: E501
    "UPDATEORGANIZATIONMEMBERDETAILS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "user": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "level": {"allOf": [{"enum": [1, 8, 15], "type": "integer", "description": "* `1` - member\n* `8` - administrator\n* `15` - owner"}], "minimum": 0, "maximum": 32767}, "joined_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "last_login": {"type": "string", "format": "date-time", "readOnly": true}}}',  # noqa: E501
    "CREATEPROJECTFORORGANIZATION": '{"type": "object", "description": "Like `ProjectBasicSerializer`, but also works as a drop-in replacement for `TeamBasicSerializer` by way of\npassthrough fields. This allows the meaning of `Team` to change from \"project\" to \"environment\" without breaking\nbackward compatibility of the REST API.\nDo not use this in greenfield endpoints!", "properties": {"id": {"type": "integer", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "product_description": {"type": "string", "nullable": true, "maxLength": 1000}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "ingested_event": {"type": "boolean", "readOnly": true}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "access_control": {"type": "boolean"}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "person_on_events_querying_enabled": {"type": "string", "readOnly": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "default_modifiers": {"type": "string", "readOnly": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "product_intents": {"type": "string", "readOnly": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}}, "required": ["api_token", "created_at", "default_modifiers", "effective_membership_level", "group_types", "has_group_types", "id", "ingested_event", "live_events_token", "organization", "person_on_events_querying_enabled", "product_intents", "secret_api_token", "secret_api_token_backup", "updated_at", "uuid"]}',  # noqa: E501
    "UPDATEPROJECTDETAILS": '{"type": "object", "description": "Like `ProjectBasicSerializer`, but also works as a drop-in replacement for `TeamBasicSerializer` by way of\npassthrough fields. This allows the meaning of `Team` to change from \"project\" to \"environment\" without breaking\nbackward compatibility of the REST API.\nDo not use this in greenfield endpoints!", "properties": {"id": {"type": "integer", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "product_description": {"type": "string", "nullable": true, "maxLength": 1000}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "ingested_event": {"type": "boolean", "readOnly": true}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "access_control": {"type": "boolean"}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "person_on_events_querying_enabled": {"type": "string", "readOnly": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "default_modifiers": {"type": "string", "readOnly": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "product_intents": {"type": "string", "readOnly": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}}, "required": ["api_token", "created_at", "default_modifiers", "effective_membership_level", "group_types", "has_group_types", "id", "ingested_event", "live_events_token", "organization", "person_on_events_querying_enabled", "product_intents", "secret_api_token", "secret_api_token_backup", "updated_at", "uuid"]}',  # noqa: E501
    "UPDATEORGANIZATIONPROJECT": '{"type": "object", "description": "Like `ProjectBasicSerializer`, but also works as a drop-in replacement for `TeamBasicSerializer` by way of\npassthrough fields. This allows the meaning of `Team` to change from \"project\" to \"environment\" without breaking\nbackward compatibility of the REST API.\nDo not use this in greenfield endpoints!", "properties": {"id": {"type": "integer", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "product_description": {"type": "string", "nullable": true, "maxLength": 1000}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "ingested_event": {"type": "boolean", "readOnly": true}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "access_control": {"type": "boolean"}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "person_on_events_querying_enabled": {"type": "string", "readOnly": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "default_modifiers": {"type": "string", "readOnly": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "product_intents": {"type": "string", "readOnly": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "UPDATEPROJECTPRODUCTINTENT": '{"type": "object", "description": "Like `ProjectBasicSerializer`, but also works as a drop-in replacement for `TeamBasicSerializer` by way of\npassthrough fields. This allows the meaning of `Team` to change from \"project\" to \"environment\" without breaking\nbackward compatibility of the REST API.\nDo not use this in greenfield endpoints!", "properties": {"id": {"type": "integer", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "product_description": {"type": "string", "nullable": true, "maxLength": 1000}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "ingested_event": {"type": "boolean", "readOnly": true}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "access_control": {"type": "boolean"}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "person_on_events_querying_enabled": {"type": "string", "readOnly": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "default_modifiers": {"type": "string", "readOnly": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "product_intents": {"type": "string", "readOnly": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "CREATEORGANIZATIONPROJECT": '{"type": "object", "description": "Like `ProjectBasicSerializer`, but also works as a drop-in replacement for `TeamBasicSerializer` by way of\npassthrough fields. This allows the meaning of `Team` to change from \"project\" to \"environment\" without breaking\nbackward compatibility of the REST API.\nDo not use this in greenfield endpoints!", "properties": {"id": {"type": "integer", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "product_description": {"type": "string", "nullable": true, "maxLength": 1000}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "ingested_event": {"type": "boolean", "readOnly": true}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "access_control": {"type": "boolean"}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "person_on_events_querying_enabled": {"type": "string", "readOnly": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "default_modifiers": {"type": "string", "readOnly": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "product_intents": {"type": "string", "readOnly": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}}, "required": ["api_token", "created_at", "default_modifiers", "effective_membership_level", "group_types", "has_group_types", "id", "ingested_event", "live_events_token", "organization", "person_on_events_querying_enabled", "product_intents", "secret_api_token", "secret_api_token_backup", "updated_at", "uuid"]}',  # noqa: E501
    "UPDATEPROJECTONBOARDINGSTATUS": '{"type": "object", "description": "Like `ProjectBasicSerializer`, but also works as a drop-in replacement for `TeamBasicSerializer` by way of\npassthrough fields. This allows the meaning of `Team` to change from \"project\" to \"environment\" without breaking\nbackward compatibility of the REST API.\nDo not use this in greenfield endpoints!", "properties": {"id": {"type": "integer", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "product_description": {"type": "string", "nullable": true, "maxLength": 1000}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "ingested_event": {"type": "boolean", "readOnly": true}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "access_control": {"type": "boolean"}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "person_on_events_querying_enabled": {"type": "string", "readOnly": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "default_modifiers": {"type": "string", "readOnly": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "product_intents": {"type": "string", "readOnly": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "DELETESECRETTOKENBACKUP": '{"type": "object", "description": "Like `ProjectBasicSerializer`, but also works as a drop-in replacement for `TeamBasicSerializer` by way of\npassthrough fields. This allows the meaning of `Team` to change from \"project\" to \"environment\" without breaking\nbackward compatibility of the REST API.\nDo not use this in greenfield endpoints!", "properties": {"id": {"type": "integer", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "product_description": {"type": "string", "nullable": true, "maxLength": 1000}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "ingested_event": {"type": "boolean", "readOnly": true}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "access_control": {"type": "boolean"}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "person_on_events_querying_enabled": {"type": "string", "readOnly": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "default_modifiers": {"type": "string", "readOnly": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "product_intents": {"type": "string", "readOnly": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "RESETPROJECTTOKEN": '{"type": "object", "description": "Like `ProjectBasicSerializer`, but also works as a drop-in replacement for `TeamBasicSerializer` by way of\npassthrough fields. This allows the meaning of `Team` to change from \"project\" to \"environment\" without breaking\nbackward compatibility of the REST API.\nDo not use this in greenfield endpoints!", "properties": {"id": {"type": "integer", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "product_description": {"type": "string", "nullable": true, "maxLength": 1000}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "ingested_event": {"type": "boolean", "readOnly": true}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "access_control": {"type": "boolean"}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "person_on_events_querying_enabled": {"type": "string", "readOnly": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "default_modifiers": {"type": "string", "readOnly": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "product_intents": {"type": "string", "readOnly": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "ROTATESECRETTOKENFORPROJECT": '{"type": "object", "description": "Like `ProjectBasicSerializer`, but also works as a drop-in replacement for `TeamBasicSerializer` by way of\npassthrough fields. This allows the meaning of `Team` to change from \"project\" to \"environment\" without breaking\nbackward compatibility of the REST API.\nDo not use this in greenfield endpoints!", "properties": {"id": {"type": "integer", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "product_description": {"type": "string", "nullable": true, "maxLength": 1000}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "ingested_event": {"type": "boolean", "readOnly": true}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "access_control": {"type": "boolean"}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "person_on_events_querying_enabled": {"type": "string", "readOnly": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "default_modifiers": {"type": "string", "readOnly": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "product_intents": {"type": "string", "readOnly": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "CREATEPROXYRECORDS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "domain": {"type": "string", "maxLength": 64}, "target_cname": {"type": "string", "readOnly": true}, "status": {"allOf": [{"enum": ["waiting", "issuing", "valid", "warning", "erroring", "deleting", "timed_out"], "type": "string", "description": "* `waiting` - Waiting\n* `issuing` - Issuing\n* `valid` - Valid\n* `warning` - Warning\n* `erroring` - Erroring\n* `deleting` - Deleting\n* `timed_out` - Timed Out"}], "readOnly": true}, "message": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}}, "required": ["created_at", "created_by", "domain", "id", "message", "status", "target_cname", "updated_at"]}',  # noqa: E501
    "UPDATEPROXYRECORD": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "domain": {"type": "string", "maxLength": 64}, "target_cname": {"type": "string", "readOnly": true}, "status": {"allOf": [{"enum": ["waiting", "issuing", "valid", "warning", "erroring", "deleting", "timed_out"], "type": "string", "description": "* `waiting` - Waiting\n* `issuing` - Issuing\n* `valid` - Valid\n* `warning` - Warning\n* `erroring` - Erroring\n* `deleting` - Deleting\n* `timed_out` - Timed Out"}], "readOnly": true}, "message": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}}, "required": ["created_at", "created_by", "domain", "id", "message", "status", "target_cname", "updated_at"]}',  # noqa: E501
    "MODIFYPROXYRECORD": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "domain": {"type": "string", "maxLength": 64}, "target_cname": {"type": "string", "readOnly": true}, "status": {"allOf": [{"enum": ["waiting", "issuing", "valid", "warning", "erroring", "deleting", "timed_out"], "type": "string", "description": "* `waiting` - Waiting\n* `issuing` - Issuing\n* `valid` - Valid\n* `warning` - Warning\n* `erroring` - Erroring\n* `deleting` - Deleting\n* `timed_out` - Timed Out"}], "readOnly": true}, "message": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "CREATEROLEINORGANIZATION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "members": {"type": "string", "readOnly": true}, "is_default": {"type": "string", "readOnly": true}}, "required": ["created_at", "created_by", "id", "is_default", "members", "name"]}',  # noqa: E501
    "UPDATEORGANIZATIONROLE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "members": {"type": "string", "readOnly": true}, "is_default": {"type": "string", "readOnly": true}}, "required": ["created_at", "created_by", "id", "is_default", "members", "name"]}',  # noqa: E501
    "UPDATEROLEDETAILS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "members": {"type": "string", "readOnly": true}, "is_default": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "CREATEROLEMEMBERSHIP": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "role_id": {"type": "string", "format": "uuid", "readOnly": true}, "organization_member": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "user": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "level": {"allOf": [{"enum": [1, 8, 15], "type": "integer", "description": "* `1` - member\n* `8` - administrator\n* `15` - owner"}], "minimum": 0, "maximum": 32767}, "joined_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "last_login": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["has_social_auth", "id", "is_2fa_enabled", "joined_at", "last_login", "updated_at", "user"]}], "readOnly": true}, "user": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "joined_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "user_uuid": {"type": "string", "format": "uuid", "writeOnly": true}}, "required": ["id", "joined_at", "organization_member", "role_id", "updated_at", "user", "user_uuid"]}',  # noqa: E501
    "LOGTRACKFILESYSTEMVIEWS": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "tags": {"type": "array", "items": {}}, "post_to_slack": {"type": "boolean"}, "slack_message_format": {"type": "string", "maxLength": 1200}, "steps": {"type": "array", "items": {"type": "object", "properties": {"event": {"type": "string", "nullable": true}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true}, "selector": {"type": "string", "nullable": true}, "tag_name": {"type": "string", "nullable": true}, "text": {"type": "string", "nullable": true}, "text_matching": {"nullable": true, "oneOf": [{"enum": ["contains", "regex", "exact"], "type": "string", "description": "* `contains` - contains\n* `regex` - regex\n* `exact` - exact"}, {"enum": [null]}]}, "href": {"type": "string", "nullable": true}, "href_matching": {"nullable": true, "oneOf": [{"enum": ["contains", "regex", "exact"], "type": "string", "description": "* `contains` - contains\n* `regex` - regex\n* `exact` - exact"}, {"enum": [null]}]}, "url": {"type": "string", "nullable": true}, "url_matching": {"nullable": true, "oneOf": [{"enum": ["contains", "regex", "exact"], "type": "string", "description": "* `contains` - contains\n* `regex` - regex\n* `exact` - exact"}, {"enum": [null]}]}}}}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "is_calculating": {"type": "boolean", "readOnly": true}, "last_calculated_at": {"type": "string", "format": "date-time"}, "team_id": {"type": "integer", "readOnly": true}, "is_action": {"type": "boolean", "readOnly": true, "default": true}, "bytecode_error": {"type": "string", "readOnly": true, "nullable": true}, "pinned_at": {"type": "string", "format": "date-time", "nullable": true}, "creation_context": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}, "required": ["bytecode_error", "created_at", "created_by", "creation_context", "id", "is_action", "is_calculating", "team_id", "user_access_level"]}',  # noqa: E501
    "UPDATEPROJECTACTION": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "tags": {"type": "array", "items": {}}, "post_to_slack": {"type": "boolean"}, "slack_message_format": {"type": "string", "maxLength": 1200}, "steps": {"type": "array", "items": {"type": "object", "properties": {"event": {"type": "string", "nullable": true}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true}, "selector": {"type": "string", "nullable": true}, "tag_name": {"type": "string", "nullable": true}, "text": {"type": "string", "nullable": true}, "text_matching": {"nullable": true, "oneOf": [{"enum": ["contains", "regex", "exact"], "type": "string", "description": "* `contains` - contains\n* `regex` - regex\n* `exact` - exact"}, {"enum": [null]}]}, "href": {"type": "string", "nullable": true}, "href_matching": {"nullable": true, "oneOf": [{"enum": ["contains", "regex", "exact"], "type": "string", "description": "* `contains` - contains\n* `regex` - regex\n* `exact` - exact"}, {"enum": [null]}]}, "url": {"type": "string", "nullable": true}, "url_matching": {"nullable": true, "oneOf": [{"enum": ["contains", "regex", "exact"], "type": "string", "description": "* `contains` - contains\n* `regex` - regex\n* `exact` - exact"}, {"enum": [null]}]}}}}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "is_calculating": {"type": "boolean", "readOnly": true}, "last_calculated_at": {"type": "string", "format": "date-time"}, "team_id": {"type": "integer", "readOnly": true}, "is_action": {"type": "boolean", "readOnly": true, "default": true}, "bytecode_error": {"type": "string", "readOnly": true, "nullable": true}, "pinned_at": {"type": "string", "format": "date-time", "nullable": true}, "creation_context": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}, "required": ["bytecode_error", "created_at", "created_by", "creation_context", "id", "is_action", "is_calculating", "team_id", "user_access_level"]}',  # noqa: E501
    "UPDATEACTIONPARTIAL": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "tags": {"type": "array", "items": {}}, "post_to_slack": {"type": "boolean"}, "slack_message_format": {"type": "string", "maxLength": 1200}, "steps": {"type": "array", "items": {"type": "object", "properties": {"event": {"type": "string", "nullable": true}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true}, "selector": {"type": "string", "nullable": true}, "tag_name": {"type": "string", "nullable": true}, "text": {"type": "string", "nullable": true}, "text_matching": {"nullable": true, "oneOf": [{"enum": ["contains", "regex", "exact"], "type": "string", "description": "* `contains` - contains\n* `regex` - regex\n* `exact` - exact"}, {"enum": [null]}]}, "href": {"type": "string", "nullable": true}, "href_matching": {"nullable": true, "oneOf": [{"enum": ["contains", "regex", "exact"], "type": "string", "description": "* `contains` - contains\n* `regex` - regex\n* `exact` - exact"}, {"enum": [null]}]}, "url": {"type": "string", "nullable": true}, "url_matching": {"nullable": true, "oneOf": [{"enum": ["contains", "regex", "exact"], "type": "string", "description": "* `contains` - contains\n* `regex` - regex\n* `exact` - exact"}, {"enum": [null]}]}}}}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "is_calculating": {"type": "boolean", "readOnly": true}, "last_calculated_at": {"type": "string", "format": "date-time"}, "team_id": {"type": "integer", "readOnly": true}, "is_action": {"type": "boolean", "readOnly": true, "default": true}, "bytecode_error": {"type": "string", "readOnly": true, "nullable": true}, "pinned_at": {"type": "string", "format": "date-time", "nullable": true}, "creation_context": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}}',  # noqa: E501
    "CREATEANNOTATION": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "content": {"type": "string", "nullable": true, "maxLength": 400}, "date_marker": {"type": "string", "format": "date-time", "nullable": true}, "creation_type": {"enum": ["USR", "GIT"], "type": "string", "description": "* `USR` - user\n* `GIT` - GitHub"}, "dashboard_item": {"type": "integer", "nullable": true}, "dashboard_id": {"type": "integer", "nullable": true, "readOnly": true}, "dashboard_name": {"type": "string", "nullable": true, "readOnly": true}, "insight_short_id": {"type": "string", "nullable": true, "readOnly": true}, "insight_name": {"type": "string", "nullable": true, "readOnly": true}, "insight_derived_name": {"type": "string", "nullable": true, "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "deleted": {"type": "boolean"}, "scope": {"enum": ["dashboard_item", "dashboard", "project", "organization", "recording"], "type": "string", "description": "* `dashboard_item` - insight\n* `dashboard` - dashboard\n* `project` - project\n* `organization` - organization\n* `recording` - recording"}}, "required": ["created_at", "created_by", "dashboard_id", "dashboard_name", "id", "insight_derived_name", "insight_name", "insight_short_id", "updated_at"]}',  # noqa: E501
    "UPDATEANNOTATION": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "content": {"type": "string", "nullable": true, "maxLength": 400}, "date_marker": {"type": "string", "format": "date-time", "nullable": true}, "creation_type": {"enum": ["USR", "GIT"], "type": "string", "description": "* `USR` - user\n* `GIT` - GitHub"}, "dashboard_item": {"type": "integer", "nullable": true}, "dashboard_id": {"type": "integer", "nullable": true, "readOnly": true}, "dashboard_name": {"type": "string", "nullable": true, "readOnly": true}, "insight_short_id": {"type": "string", "nullable": true, "readOnly": true}, "insight_name": {"type": "string", "nullable": true, "readOnly": true}, "insight_derived_name": {"type": "string", "nullable": true, "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "deleted": {"type": "boolean"}, "scope": {"enum": ["dashboard_item", "dashboard", "project", "organization", "recording"], "type": "string", "description": "* `dashboard_item` - insight\n* `dashboard` - dashboard\n* `project` - project\n* `organization` - organization\n* `recording` - recording"}}, "required": ["created_at", "created_by", "dashboard_id", "dashboard_name", "id", "insight_derived_name", "insight_name", "insight_short_id", "updated_at"]}',  # noqa: E501
    "MODIFYANNOTATION": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "content": {"type": "string", "nullable": true, "maxLength": 400}, "date_marker": {"type": "string", "format": "date-time", "nullable": true}, "creation_type": {"enum": ["USR", "GIT"], "type": "string", "description": "* `USR` - user\n* `GIT` - GitHub"}, "dashboard_item": {"type": "integer", "nullable": true}, "dashboard_id": {"type": "integer", "nullable": true, "readOnly": true}, "dashboard_name": {"type": "string", "nullable": true, "readOnly": true}, "insight_short_id": {"type": "string", "nullable": true, "readOnly": true}, "insight_name": {"type": "string", "nullable": true, "readOnly": true}, "insight_derived_name": {"type": "string", "nullable": true, "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "deleted": {"type": "boolean"}, "scope": {"enum": ["dashboard_item", "dashboard", "project", "organization", "recording"], "type": "string", "description": "* `dashboard_item` - insight\n* `dashboard` - dashboard\n* `project` - project\n* `organization` - organization\n* `recording` - recording"}}}',  # noqa: E501
    "CREATEBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "CREATEBATCHEXPORTBACKFILL": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "progress": {"type": "string", "readOnly": true}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The end of the data interval."}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this backfill.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportBackfill was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportBackfill finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportBackfill was last updated."}, "team": {"type": "integer", "description": "The team this belongs to."}, "batch_export": {"type": "string", "format": "uuid", "description": "The BatchExport this backfill belongs to."}}, "required": ["batch_export", "created_at", "id", "last_updated_at", "progress", "status", "team"]}',  # noqa: E501
    "TERMINATEBATCHEXPORTBACKFILL": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "progress": {"type": "string", "readOnly": true}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The end of the data interval."}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this backfill.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportBackfill was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportBackfill finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportBackfill was last updated."}, "team": {"type": "integer", "description": "The team this belongs to."}, "batch_export": {"type": "string", "format": "uuid", "description": "The BatchExport this backfill belongs to."}}, "required": ["batch_export", "created_at", "id", "last_updated_at", "progress", "status", "team"]}',  # noqa: E501
    "STOPBATCHEXPORTRUN": '{"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}',  # noqa: E501
    "RETRYEXPORTRUN": '{"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}',  # noqa: E501
    "UPDATEBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "EDITBATCHEXPORTS": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}}',  # noqa: E501
    "STARTBATCHEXPORTBACKFILL": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "SUSPENDBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "RUNTESTSTEPBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "REACTIVATEBATCHEXPORT": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "RUNBATCHEXPORTSTESTSTEP": '{"type": "object", "description": "Serializer for a BatchExport model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "team_id": {"type": "integer", "description": "The team this belongs to.", "readOnly": true}, "name": {"type": "string", "description": "A human-readable name for this BatchExport."}, "model": {"nullable": true, "description": "Which model this BatchExport is exporting.\n\n* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions", "oneOf": [{"enum": ["events", "persons", "sessions"], "type": "string", "description": "* `events` - Events\n* `persons` - Persons\n* `sessions` - Sessions"}, {"enum": [""]}, {"enum": [null]}]}, "destination": {"type": "object", "description": "Serializer for an BatchExportDestination model.", "properties": {"type": {"allOf": [{"enum": ["S3", "Snowflake", "Postgres", "Redshift", "BigQuery", "Databricks", "HTTP", "NoOp"], "type": "string", "description": "* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}], "description": "A choice of supported BatchExportDestination types.\n\n* `S3` - S3\n* `Snowflake` - Snowflake\n* `Postgres` - Postgres\n* `Redshift` - Redshift\n* `BigQuery` - Bigquery\n* `Databricks` - Databricks\n* `HTTP` - Http\n* `NoOp` - Noop"}, "config": {"description": "A JSON field to store all configuration parameters required to access a BatchExportDestination."}, "integration": {"type": "integer", "nullable": true, "description": "The integration for this destination."}, "integration_id": {"type": "integer", "writeOnly": true, "nullable": true}}, "required": ["type"]}, "interval": {"enum": ["hour", "day", "week", "every 5 minutes"], "type": "string", "description": "* `hour` - hour\n* `day` - day\n* `week` - week\n* `every 5 minutes` - every 5 minutes"}, "paused": {"type": "boolean", "description": "Whether this BatchExport is paused or not."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was created."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExport was last updated."}, "last_paused_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExport was last paused."}, "start_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time before which any Batch Export runs won\'t be triggered."}, "end_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Time after which any Batch Export runs won\'t be triggered."}, "latest_runs": {"type": "array", "items": {"type": "object", "description": "Serializer for a BatchExportRun model.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "status": {"allOf": [{"enum": ["Cancelled", "Completed", "ContinuedAsNew", "Failed", "FailedRetryable", "FailedBilling", "Terminated", "TimedOut", "Running", "Starting"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}], "description": "The status of this run.\n\n* `Cancelled` - Cancelled\n* `Completed` - Completed\n* `ContinuedAsNew` - Continued As New\n* `Failed` - Failed\n* `FailedRetryable` - Failed Retryable\n* `FailedBilling` - Failed Billing\n* `Terminated` - Terminated\n* `TimedOut` - Timedout\n* `Running` - Running\n* `Starting` - Starting"}, "records_completed": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The number of records that have been exported."}, "latest_error": {"type": "string", "nullable": true, "description": "The latest error that occurred during this run."}, "data_interval_start": {"type": "string", "format": "date-time", "nullable": true, "description": "The start of the data interval."}, "data_interval_end": {"type": "string", "format": "date-time", "description": "The end of the data interval."}, "cursor": {"type": "string", "nullable": true, "description": "An opaque cursor that may be used to resume."}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was created."}, "finished_at": {"type": "string", "format": "date-time", "nullable": true, "description": "The timestamp at which this BatchExportRun finished, successfully or not."}, "last_updated_at": {"type": "string", "format": "date-time", "readOnly": true, "description": "The timestamp at which this BatchExportRun was last updated."}, "records_total_count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true, "description": "The total count of records that should be exported in this BatchExportRun."}, "bytes_exported": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "nullable": true, "description": "The number of bytes that have been exported in this BatchExportRun."}, "batch_export": {"type": "string", "format": "uuid", "readOnly": true, "description": "The BatchExport this run belongs to."}, "backfill": {"type": "string", "format": "uuid", "nullable": true, "description": "The backfill this run belongs to."}}, "required": ["batch_export", "created_at", "data_interval_end", "id", "last_updated_at", "status"]}, "readOnly": true}, "hogql_query": {"type": "string"}, "schema": {"readOnly": true, "nullable": true, "description": "A schema of custom fields to select when exporting data."}, "filters": {"nullable": true}}, "required": ["created_at", "destination", "id", "interval", "last_updated_at", "latest_runs", "name", "schema", "team_id"]}',  # noqa: E501
    "CREATECOHORTTRACKING": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string", "maxLength": 1000}, "groups": {}, "deleted": {"type": "boolean"}, "filters": {"nullable": true, "description": "Filters for the cohort. Examples:\n\n        # Behavioral filter (performed event)\n        {\n            \"properties\": {\n                \"type\": \"OR\",\n                \"values\": [{\n                    \"type\": \"OR\",\n                    \"values\": [{\n                        \"key\": \"address page viewed\",\n                        \"type\": \"behavioral\",\n                        \"value\": \"performed_event\",\n                        \"negation\": false,\n                        \"event_type\": \"events\",\n                        \"time_value\": \"30\",\n                        \"time_interval\": \"day\"\n                    }]\n                }]\n            }\n        }\n\n        # Person property filter\n        {\n            \"properties\": {\n                \"type\": \"OR\",\n                \"values\": [{\n                    \"type\": \"AND\",\n                    \"values\": [{\n                        \"key\": \"promoCodes\",\n                        \"type\": \"person\",\n                        \"value\": [\"1234567890\"],\n                        \"negation\": false,\n                        \"operator\": \"exact\"\n                    }]\n                }]\n            }\n        }\n\n        # Cohort filter\n        {\n            \"properties\": {\n                \"type\": \"OR\",\n                \"values\": [{\n                    \"type\": \"AND\",\n                    \"values\": [{\n                        \"key\": \"id\",\n                        \"type\": \"cohort\",\n                        \"value\": 8814,\n                        \"negation\": false\n                    }]\n                }]\n            }\n        }"}, "query": {"nullable": true}, "is_calculating": {"type": "boolean", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "last_calculation": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "errors_calculating": {"type": "integer", "readOnly": true}, "count": {"type": "integer", "readOnly": true, "nullable": true}, "is_static": {"type": "boolean"}, "cohort_type": {"nullable": true, "description": "Type of cohort based on filter complexity\n\n* `static` - static\n* `person_property` - person_property\n* `behavioral` - behavioral\n* `analytical` - analytical", "oneOf": [{"enum": ["static", "person_property", "behavioral", "analytical"], "type": "string", "description": "* `static` - static\n* `person_property` - person_property\n* `behavioral` - behavioral\n* `analytical` - analytical"}, {"enum": [""]}, {"enum": [null]}]}, "experiment_set": {"type": "array", "items": {"type": "integer"}, "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_create_static_person_ids": {"type": "array", "items": {"type": "string"}, "writeOnly": true, "title": " create static person ids"}}, "required": ["count", "created_at", "created_by", "errors_calculating", "experiment_set", "id", "is_calculating", "last_calculation"]}',  # noqa: E501
    "MODIFYCOHORTVIEWS": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string", "maxLength": 1000}, "groups": {}, "deleted": {"type": "boolean"}, "filters": {"nullable": true, "description": "Filters for the cohort. Examples:\n\n        # Behavioral filter (performed event)\n        {\n            \"properties\": {\n                \"type\": \"OR\",\n                \"values\": [{\n                    \"type\": \"OR\",\n                    \"values\": [{\n                        \"key\": \"address page viewed\",\n                        \"type\": \"behavioral\",\n                        \"value\": \"performed_event\",\n                        \"negation\": false,\n                        \"event_type\": \"events\",\n                        \"time_value\": \"30\",\n                        \"time_interval\": \"day\"\n                    }]\n                }]\n            }\n        }\n\n        # Person property filter\n        {\n            \"properties\": {\n                \"type\": \"OR\",\n                \"values\": [{\n                    \"type\": \"AND\",\n                    \"values\": [{\n                        \"key\": \"promoCodes\",\n                        \"type\": \"person\",\n                        \"value\": [\"1234567890\"],\n                        \"negation\": false,\n                        \"operator\": \"exact\"\n                    }]\n                }]\n            }\n        }\n\n        # Cohort filter\n        {\n            \"properties\": {\n                \"type\": \"OR\",\n                \"values\": [{\n                    \"type\": \"AND\",\n                    \"values\": [{\n                        \"key\": \"id\",\n                        \"type\": \"cohort\",\n                        \"value\": 8814,\n                        \"negation\": false\n                    }]\n                }]\n            }\n        }"}, "query": {"nullable": true}, "is_calculating": {"type": "boolean", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "last_calculation": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "errors_calculating": {"type": "integer", "readOnly": true}, "count": {"type": "integer", "readOnly": true, "nullable": true}, "is_static": {"type": "boolean"}, "cohort_type": {"nullable": true, "description": "Type of cohort based on filter complexity\n\n* `static` - static\n* `person_property` - person_property\n* `behavioral` - behavioral\n* `analytical` - analytical", "oneOf": [{"enum": ["static", "person_property", "behavioral", "analytical"], "type": "string", "description": "* `static` - static\n* `person_property` - person_property\n* `behavioral` - behavioral\n* `analytical` - analytical"}, {"enum": [""]}, {"enum": [null]}]}, "experiment_set": {"type": "array", "items": {"type": "integer"}, "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_create_static_person_ids": {"type": "array", "items": {"type": "string"}, "writeOnly": true, "title": " create static person ids"}}, "required": ["count", "created_at", "created_by", "errors_calculating", "experiment_set", "id", "is_calculating", "last_calculation"]}',  # noqa: E501
    "UPDATECOHORTVIEWS": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string", "maxLength": 1000}, "groups": {}, "deleted": {"type": "boolean"}, "filters": {"nullable": true, "description": "Filters for the cohort. Examples:\n\n        # Behavioral filter (performed event)\n        {\n            \"properties\": {\n                \"type\": \"OR\",\n                \"values\": [{\n                    \"type\": \"OR\",\n                    \"values\": [{\n                        \"key\": \"address page viewed\",\n                        \"type\": \"behavioral\",\n                        \"value\": \"performed_event\",\n                        \"negation\": false,\n                        \"event_type\": \"events\",\n                        \"time_value\": \"30\",\n                        \"time_interval\": \"day\"\n                    }]\n                }]\n            }\n        }\n\n        # Person property filter\n        {\n            \"properties\": {\n                \"type\": \"OR\",\n                \"values\": [{\n                    \"type\": \"AND\",\n                    \"values\": [{\n                        \"key\": \"promoCodes\",\n                        \"type\": \"person\",\n                        \"value\": [\"1234567890\"],\n                        \"negation\": false,\n                        \"operator\": \"exact\"\n                    }]\n                }]\n            }\n        }\n\n        # Cohort filter\n        {\n            \"properties\": {\n                \"type\": \"OR\",\n                \"values\": [{\n                    \"type\": \"AND\",\n                    \"values\": [{\n                        \"key\": \"id\",\n                        \"type\": \"cohort\",\n                        \"value\": 8814,\n                        \"negation\": false\n                    }]\n                }]\n            }\n        }"}, "query": {"nullable": true}, "is_calculating": {"type": "boolean", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "last_calculation": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "errors_calculating": {"type": "integer", "readOnly": true}, "count": {"type": "integer", "readOnly": true, "nullable": true}, "is_static": {"type": "boolean"}, "cohort_type": {"nullable": true, "description": "Type of cohort based on filter complexity\n\n* `static` - static\n* `person_property` - person_property\n* `behavioral` - behavioral\n* `analytical` - analytical", "oneOf": [{"enum": ["static", "person_property", "behavioral", "analytical"], "type": "string", "description": "* `static` - static\n* `person_property` - person_property\n* `behavioral` - behavioral\n* `analytical` - analytical"}, {"enum": [""]}, {"enum": [null]}]}, "experiment_set": {"type": "array", "items": {"type": "integer"}, "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_create_static_person_ids": {"type": "array", "items": {"type": "string"}, "writeOnly": true, "title": " create static person ids"}}}',  # noqa: E501
    "CREATEDASHBOARDTEMPLATE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "template_name": {"type": "string", "nullable": true, "maxLength": 400}, "dashboard_description": {"type": "string", "nullable": true, "maxLength": 400}, "dashboard_filters": {"nullable": true}, "tags": {"type": "array", "items": {"type": "string", "maxLength": 255}, "nullable": true}, "tiles": {"nullable": true}, "variables": {"nullable": true}, "deleted": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"type": "integer", "nullable": true}, "image_url": {"type": "string", "nullable": true, "maxLength": 8201}, "team_id": {"type": "integer", "nullable": true, "readOnly": true}, "scope": {"nullable": true, "oneOf": [{"enum": ["team", "global", "feature_flag"], "type": "string", "description": "* `team` - Only team\n* `global` - Global\n* `feature_flag` - Feature Flag"}, {"enum": [""]}, {"enum": [null]}]}, "availability_contexts": {"type": "array", "items": {"type": "string", "maxLength": 255}, "nullable": true}}, "required": ["created_at", "id", "team_id"]}',  # noqa: E501
    "MODIFYDASHBOARDTEMPLATE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "template_name": {"type": "string", "nullable": true, "maxLength": 400}, "dashboard_description": {"type": "string", "nullable": true, "maxLength": 400}, "dashboard_filters": {"nullable": true}, "tags": {"type": "array", "items": {"type": "string", "maxLength": 255}, "nullable": true}, "tiles": {"nullable": true}, "variables": {"nullable": true}, "deleted": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"type": "integer", "nullable": true}, "image_url": {"type": "string", "nullable": true, "maxLength": 8201}, "team_id": {"type": "integer", "nullable": true, "readOnly": true}, "scope": {"nullable": true, "oneOf": [{"enum": ["team", "global", "feature_flag"], "type": "string", "description": "* `team` - Only team\n* `global` - Global\n* `feature_flag` - Feature Flag"}, {"enum": [""]}, {"enum": [null]}]}, "availability_contexts": {"type": "array", "items": {"type": "string", "maxLength": 255}, "nullable": true}}, "required": ["created_at", "id", "team_id"]}',  # noqa: E501
    "UPDATEDASHBOARDTEMPLATE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "template_name": {"type": "string", "nullable": true, "maxLength": 400}, "dashboard_description": {"type": "string", "nullable": true, "maxLength": 400}, "dashboard_filters": {"nullable": true}, "tags": {"type": "array", "items": {"type": "string", "maxLength": 255}, "nullable": true}, "tiles": {"nullable": true}, "variables": {"nullable": true}, "deleted": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"type": "integer", "nullable": true}, "image_url": {"type": "string", "nullable": true, "maxLength": 8201}, "team_id": {"type": "integer", "nullable": true, "readOnly": true}, "scope": {"nullable": true, "oneOf": [{"enum": ["team", "global", "feature_flag"], "type": "string", "description": "* `team` - Only team\n* `global` - Global\n* `feature_flag` - Feature Flag"}, {"enum": [""]}, {"enum": [null]}]}, "availability_contexts": {"type": "array", "items": {"type": "string", "maxLength": 255}, "nullable": true}}}',  # noqa: E501
    "CREATEDASHBOARD": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["access_control_version", "created_at", "created_by", "creation_mode", "effective_privilege_level", "effective_restriction_level", "filters", "id", "is_shared", "persisted_filters", "persisted_variables", "team_id", "tiles", "user_access_level", "variables"]}',  # noqa: E501
    "CREATEDASHBOARDCOLLABORATOR": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "user": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "added_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "user_uuid": {"type": "string", "format": "uuid", "writeOnly": true}}, "required": ["added_at", "dashboard_id", "id", "level", "updated_at", "user", "user_uuid"]}',  # noqa: E501
    "SETDASHBOARDSHARINGPASSWORD": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "REFRESHDASHBOARDSHARINGLINK": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "UPDATEDASHBOARD": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["access_control_version", "created_at", "created_by", "creation_mode", "effective_privilege_level", "effective_restriction_level", "filters", "id", "is_shared", "persisted_filters", "persisted_variables", "team_id", "tiles", "user_access_level", "variables"]}',  # noqa: E501
    "UPDATEDASHBOARDPARTIAL": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "UPDATEDASHBOARDTILEPOSITION": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "CREATEDASHBOARDFROMTEMPLATE": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_accessed_at": {"type": "string", "format": "date-time", "nullable": true}, "is_shared": {"type": "boolean", "readOnly": true}, "deleted": {"type": "boolean"}, "creation_mode": {"allOf": [{"enum": ["default", "template", "duplicate"], "type": "string", "description": "* `default` - Default\n* `template` - Template\n* `duplicate` - Duplicate"}], "readOnly": true}, "filters": {"type": "object", "additionalProperties": {}, "readOnly": true}, "variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "breakdown_colors": {}, "data_color_theme_id": {"type": "integer", "nullable": true}, "tags": {"type": "array", "items": {}}, "restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer", "description": "* `21` - Everyone in the project can edit\n* `37` - Only those invited to this dashboard can edit"}], "minimum": 0, "maximum": 32767}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "access_control_version": {"type": "string", "readOnly": true}, "last_refresh": {"type": "string", "format": "date-time", "nullable": true}, "persisted_filters": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "persisted_variables": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "tiles": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "nullable": true, "readOnly": true}, "use_template": {"type": "string", "writeOnly": true}, "use_dashboard": {"type": "integer", "writeOnly": true, "nullable": true}, "delete_insights": {"type": "boolean", "writeOnly": true, "default": false}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["access_control_version", "created_at", "created_by", "creation_mode", "effective_privilege_level", "effective_restriction_level", "filters", "id", "is_shared", "persisted_filters", "persisted_variables", "team_id", "tiles", "user_access_level", "variables"]}',  # noqa: E501
    "ADDDATACOLORTHEME": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 100}, "colors": {}, "is_global": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "is_global", "name"]}',  # noqa: E501
    "UPDATEDATACOLORTHEME": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 100}, "colors": {}, "is_global": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "is_global", "name"]}',  # noqa: E501
    "MODIFYDATATHEME": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 100}, "colors": {}, "is_global": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}}}',  # noqa: E501
    "CREATEDATASETITEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "dataset": {"type": "string", "format": "uuid"}, "input": {"nullable": true}, "output": {"nullable": true}, "metadata": {"nullable": true}, "ref_trace_id": {"type": "string", "nullable": true, "maxLength": 255}, "ref_timestamp": {"type": "string", "format": "date-time", "nullable": true}, "ref_source_id": {"type": "string", "nullable": true, "maxLength": 255}, "deleted": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}, "required": ["created_at", "created_by", "dataset", "id", "team", "updated_at"]}',  # noqa: E501
    "UPDATEDATASETITEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "dataset": {"type": "string", "format": "uuid"}, "input": {"nullable": true}, "output": {"nullable": true}, "metadata": {"nullable": true}, "ref_trace_id": {"type": "string", "nullable": true, "maxLength": 255}, "ref_timestamp": {"type": "string", "format": "date-time", "nullable": true}, "ref_source_id": {"type": "string", "nullable": true, "maxLength": 255}, "deleted": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}, "required": ["created_at", "created_by", "dataset", "id", "team", "updated_at"]}',  # noqa: E501
    "MODIFYDATASETITEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "dataset": {"type": "string", "format": "uuid"}, "input": {"nullable": true}, "output": {"nullable": true}, "metadata": {"nullable": true}, "ref_trace_id": {"type": "string", "nullable": true, "maxLength": 255}, "ref_timestamp": {"type": "string", "format": "date-time", "nullable": true}, "ref_source_id": {"type": "string", "nullable": true, "maxLength": 255}, "deleted": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}}',  # noqa: E501
    "CREATEDATASETPROJECT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "metadata": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "team", "updated_at"]}',  # noqa: E501
    "UPDATEDATASET": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "metadata": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "team", "updated_at"]}',  # noqa: E501
    "UPDATEDATASETINFO": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "metadata": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "team": {"type": "integer", "readOnly": true}}}',  # noqa: E501
    "CREATEEARLYACCESSFEATURETRACKING": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200}, "description": {"type": "string"}, "stage": {"enum": ["draft", "concept", "alpha", "beta", "general-availability", "archived"], "type": "string", "description": "* `draft` - draft\n* `concept` - concept\n* `alpha` - alpha\n* `beta` - beta\n* `general-availability` - general availability\n* `archived` - archived"}, "documentation_url": {"type": "string", "format": "uri", "maxLength": 800}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "feature_flag_id": {"type": "integer", "writeOnly": true}, "feature_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "feature_flag", "id", "name", "stage"]}',  # noqa: E501
    "MODIFYEARLYACCESSFEATURE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "feature_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "name": {"type": "string", "maxLength": 200}, "description": {"type": "string"}, "stage": {"enum": ["draft", "concept", "alpha", "beta", "general-availability", "archived"], "type": "string", "description": "* `draft` - draft\n* `concept` - concept\n* `alpha` - alpha\n* `beta` - beta\n* `general-availability` - general availability\n* `archived` - archived"}, "documentation_url": {"type": "string", "format": "uri", "maxLength": 800}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "feature_flag", "id", "name", "stage"]}',  # noqa: E501
    "UPDATEEARLYACCESSFEATURE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "feature_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "name": {"type": "string", "maxLength": 200}, "description": {"type": "string"}, "stage": {"enum": ["draft", "concept", "alpha", "beta", "general-availability", "archived"], "type": "string", "description": "* `draft` - draft\n* `concept` - concept\n* `alpha` - alpha\n* `beta` - beta\n* `general-availability` - general availability\n* `archived` - archived"}, "documentation_url": {"type": "string", "format": "uri", "maxLength": 800}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}}}',  # noqa: E501
    "UPDATEENDPOINT": '{"additionalProperties": false, "properties": {"client_query_id": {"default": null, "description": "Client provided query ID. Can be used to retrieve the status or cancel the query.", "title": "Client Query Id", "type": "string", "nullable": true}, "filters_override": {"additionalProperties": false, "properties": {"breakdown_filter": {"additionalProperties": false, "properties": {"breakdown": {"default": null, "title": "Breakdown", "anyOf": [{"type": "string"}, {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array"}, {"type": "integer"}], "nullable": true}, "breakdown_group_type_index": {"default": null, "title": "Breakdown Group Type Index", "type": "integer", "nullable": true}, "breakdown_hide_other_aggregation": {"default": null, "title": "Breakdown Hide Other Aggregation", "type": "boolean", "nullable": true}, "breakdown_histogram_bin_count": {"default": null, "title": "Breakdown Histogram Bin Count", "type": "integer", "nullable": true}, "breakdown_limit": {"default": null, "title": "Breakdown Limit", "type": "integer", "nullable": true}, "breakdown_normalize_url": {"default": null, "title": "Breakdown Normalize Url", "type": "boolean", "nullable": true}, "breakdown_type": {"enum": ["cohort", "person", "event", "event_metadata", "group", "session", "hogql", "data_warehouse", "data_warehouse_person_property", "revenue_analytics"], "title": "BreakdownType", "type": "string"}, "breakdowns": {"default": null, "title": "Breakdowns", "items": {"additionalProperties": false, "properties": {"group_type_index": {"default": null, "title": "Group Type Index", "type": "integer", "nullable": true}, "histogram_bin_count": {"default": null, "title": "Histogram Bin Count", "type": "integer", "nullable": true}, "normalize_url": {"default": null, "title": "Normalize Url", "type": "boolean", "nullable": true}, "property": {"anyOf": [{"type": "string"}, {"type": "integer"}], "title": "Property"}, "type": {"enum": ["cohort", "person", "event", "event_metadata", "group", "session", "hogql", "revenue_analytics"], "title": "MultipleBreakdownType", "type": "string"}}, "required": ["property"], "title": "Breakdown", "type": "object"}, "maxItems": 3, "type": "array", "nullable": true}}, "title": "BreakdownFilter", "type": "object"}, "date_from": {"default": null, "title": "Date From", "type": "string", "nullable": true}, "date_to": {"default": null, "title": "Date To", "type": "string", "nullable": true}, "properties": {"default": null, "title": "Properties", "items": {"anyOf": [{"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "event", "description": "Event properties", "title": "Type", "type": "string", "enum": ["event"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key"], "title": "EventPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "person", "description": "Person properties", "title": "Type", "type": "string", "enum": ["person"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "PersonPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"enum": ["tag_name", "text", "href", "selector"], "title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "element", "title": "Type", "type": "string", "enum": ["element"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "ElementPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "event_metadata", "title": "Type", "type": "string", "enum": ["event_metadata"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "EventMetadataPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "session", "title": "Type", "type": "string", "enum": ["session"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "SessionPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"cohort_name": {"default": null, "title": "Cohort Name", "type": "string", "nullable": true}, "key": {"default": "id", "title": "Key", "type": "string", "enum": ["id"]}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "cohort", "title": "Type", "type": "string", "enum": ["cohort"]}, "value": {"title": "Value", "type": "integer"}}, "required": ["value"], "title": "CohortPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"anyOf": [{"enum": ["duration", "active_seconds", "inactive_seconds"], "title": "DurationType", "type": "string"}, {"type": "string"}], "title": "Key"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "recording", "title": "Type", "type": "string", "enum": ["recording"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "RecordingPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "log_entry", "title": "Type", "type": "string", "enum": ["log_entry"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "LogEntryPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"group_type_index": {"default": null, "title": "Group Type Index", "type": "integer", "nullable": true}, "key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "group", "title": "Type", "type": "string", "enum": ["group"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "GroupPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "feature", "description": "Event property with \"$feature/\" prepended", "title": "Type", "type": "string", "enum": ["feature"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "FeaturePropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"description": "The key should be the flag ID", "title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"default": "flag_evaluates_to", "description": "Only flag_evaluates_to operator is allowed for flag dependencies", "title": "Operator", "type": "string", "enum": ["flag_evaluates_to"]}, "type": {"default": "flag", "description": "Feature flag dependency", "title": "Type", "type": "string", "enum": ["flag"]}, "value": {"anyOf": [{"type": "boolean"}, {"type": "string"}], "description": "The value can be true, false, or a variant name", "title": "Value"}}, "required": ["key", "value"], "title": "FlagPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "type": {"default": "hogql", "title": "Type", "type": "string", "enum": ["hogql"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key"], "title": "HogQLPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {}, "title": "EmptyPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "data_warehouse", "title": "Type", "type": "string", "enum": ["data_warehouse"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "DataWarehousePropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "data_warehouse_person_property", "title": "Type", "type": "string", "enum": ["data_warehouse_person_property"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "DataWarehousePersonPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "error_tracking_issue", "title": "Type", "type": "string", "enum": ["error_tracking_issue"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "ErrorTrackingIssueFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "log", "title": "Type", "type": "string", "enum": ["log"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "LogPropertyFilter", "type": "object"}, {"additionalProperties": false, "properties": {"key": {"title": "Key", "type": "string"}, "label": {"default": null, "title": "Label", "type": "string", "nullable": true}, "operator": {"enum": ["exact", "is_not", "icontains", "not_icontains", "regex", "not_regex", "gt", "gte", "lt", "lte", "is_set", "is_not_set", "is_date_exact", "is_date_before", "is_date_after", "between", "not_between", "min", "max", "in", "not_in", "is_cleaned_path_exact", "flag_evaluates_to"], "title": "PropertyOperator", "type": "string"}, "type": {"default": "revenue_analytics", "title": "Type", "type": "string", "enum": ["revenue_analytics"]}, "value": {"default": null, "title": "Value", "anyOf": [{"items": {"anyOf": [{"type": "string"}, {"type": "number"}, {"type": "boolean"}]}, "type": "array"}, {"type": "string"}, {"type": "number"}, {"type": "boolean"}], "nullable": true}}, "required": ["key", "operator"], "title": "RevenueAnalyticsPropertyFilter", "type": "object"}]}, "type": "array", "nullable": true}}, "title": "DashboardFilter", "type": "object"}, "query_override": {"default": null, "title": "Query Override", "type": "object", "nullable": true}, "refresh": {"enum": ["async", "async_except_on_cache_miss", "blocking", "force_async", "force_blocking", "force_cache", "lazy_async"], "title": "RefreshType", "type": "string"}, "variables_override": {"default": null, "title": "Variables Override", "additionalProperties": {"type": "object"}, "type": "object", "nullable": true}, "variables_values": {"default": null, "title": "Variables Values", "type": "object", "nullable": true}}, "title": "EndpointRunRequest", "type": "object"}',  # noqa: E501
    "CREATEPROJECTENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "access_control": {"type": "boolean"}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "default_modifiers": {"type": "object", "additionalProperties": {}, "readOnly": true}, "person_on_events_querying_enabled": {"type": "boolean", "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_recording_url_trigger_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_url_blocklist_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_event_trigger_config": {"type": "array", "items": {"type": "string", "nullable": true}, "nullable": true}, "session_recording_trigger_match_type_config": {"type": "string", "nullable": true, "maxLength": 24}, "session_recording_retention_period": {"enum": ["30d", "90d", "1y", "5y"], "type": "string", "description": "* `30d` - 30 Days\n* `90d` - 90 Days\n* `1y` - 1 Year\n* `5y` - 5 Years"}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "cookieless_server_hash_mode": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1, 2], "type": "integer", "description": "* `0` - Disabled\n* `1` - Stateless\n* `2` - Stateful"}, {"enum": [null]}]}, "human_friendly_comparison_periods": {"type": "boolean", "nullable": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_enabled": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_message": {"type": "string", "nullable": true}, "default_evaluation_environments_enabled": {"type": "boolean", "nullable": true, "description": "Whether to automatically apply default evaluation environments to new feature flags"}, "capture_dead_clicks": {"type": "boolean", "nullable": true}, "default_data_theme": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "revenue_analytics_config": {"type": "object", "properties": {"base_currency": {"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}, "events": {}, "goals": {}, "filter_test_accounts": {"type": "boolean"}}}, "marketing_analytics_config": {"type": "object", "properties": {"sources_map": {}, "conversion_goals": {}, "attribution_window_days": {"type": "integer", "maximum": 90, "minimum": 1}, "attribution_mode": {"enum": ["first_touch", "last_touch"], "type": "string", "description": "* `first_touch` - First Touch\n* `last_touch` - Last Touch"}, "campaign_name_mappings": {}}}, "onboarding_tasks": {"nullable": true}, "base_currency": {"allOf": [{"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}], "default": "USD"}, "web_analytics_pre_aggregated_tables_enabled": {"type": "boolean", "nullable": true}, "experiment_recalculation_time": {"type": "string", "format": "time", "nullable": true, "description": "Time of day (UTC) when experiment metrics should be recalculated. If not set, uses the default recalculation time."}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "product_intents": {"type": "string", "readOnly": true}, "managed_viewsets": {"type": "string", "readOnly": true}}, "required": ["api_token", "created_at", "default_modifiers", "effective_membership_level", "group_types", "has_group_types", "id", "ingested_event", "live_events_token", "managed_viewsets", "organization", "person_on_events_querying_enabled", "product_intents", "project_id", "secret_api_token", "secret_api_token_backup", "updated_at", "user_access_level", "uuid"]}',  # noqa: E501
    "EDITPROJECTENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "access_control": {"type": "boolean"}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "default_modifiers": {"type": "object", "additionalProperties": {}, "readOnly": true}, "person_on_events_querying_enabled": {"type": "boolean", "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_recording_url_trigger_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_url_blocklist_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_event_trigger_config": {"type": "array", "items": {"type": "string", "nullable": true}, "nullable": true}, "session_recording_trigger_match_type_config": {"type": "string", "nullable": true, "maxLength": 24}, "session_recording_retention_period": {"enum": ["30d", "90d", "1y", "5y"], "type": "string", "description": "* `30d` - 30 Days\n* `90d` - 90 Days\n* `1y` - 1 Year\n* `5y` - 5 Years"}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "cookieless_server_hash_mode": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1, 2], "type": "integer", "description": "* `0` - Disabled\n* `1` - Stateless\n* `2` - Stateful"}, {"enum": [null]}]}, "human_friendly_comparison_periods": {"type": "boolean", "nullable": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_enabled": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_message": {"type": "string", "nullable": true}, "default_evaluation_environments_enabled": {"type": "boolean", "nullable": true, "description": "Whether to automatically apply default evaluation environments to new feature flags"}, "capture_dead_clicks": {"type": "boolean", "nullable": true}, "default_data_theme": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "revenue_analytics_config": {"type": "object", "properties": {"base_currency": {"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}, "events": {}, "goals": {}, "filter_test_accounts": {"type": "boolean"}}}, "marketing_analytics_config": {"type": "object", "properties": {"sources_map": {}, "conversion_goals": {}, "attribution_window_days": {"type": "integer", "maximum": 90, "minimum": 1}, "attribution_mode": {"enum": ["first_touch", "last_touch"], "type": "string", "description": "* `first_touch` - First Touch\n* `last_touch` - Last Touch"}, "campaign_name_mappings": {}}}, "onboarding_tasks": {"nullable": true}, "base_currency": {"allOf": [{"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}], "default": "USD"}, "web_analytics_pre_aggregated_tables_enabled": {"type": "boolean", "nullable": true}, "experiment_recalculation_time": {"type": "string", "format": "time", "nullable": true, "description": "Time of day (UTC) when experiment metrics should be recalculated. If not set, uses the default recalculation time."}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "product_intents": {"type": "string", "readOnly": true}, "managed_viewsets": {"type": "string", "readOnly": true}}, "required": ["api_token", "created_at", "default_modifiers", "effective_membership_level", "group_types", "has_group_types", "id", "ingested_event", "live_events_token", "managed_viewsets", "organization", "person_on_events_querying_enabled", "product_intents", "project_id", "secret_api_token", "secret_api_token_backup", "updated_at", "user_access_level", "uuid"]}',  # noqa: E501
    "MODIFYPROJECTENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "access_control": {"type": "boolean"}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "default_modifiers": {"type": "object", "additionalProperties": {}, "readOnly": true}, "person_on_events_querying_enabled": {"type": "boolean", "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_recording_url_trigger_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_url_blocklist_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_event_trigger_config": {"type": "array", "items": {"type": "string", "nullable": true}, "nullable": true}, "session_recording_trigger_match_type_config": {"type": "string", "nullable": true, "maxLength": 24}, "session_recording_retention_period": {"enum": ["30d", "90d", "1y", "5y"], "type": "string", "description": "* `30d` - 30 Days\n* `90d` - 90 Days\n* `1y` - 1 Year\n* `5y` - 5 Years"}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "cookieless_server_hash_mode": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1, 2], "type": "integer", "description": "* `0` - Disabled\n* `1` - Stateless\n* `2` - Stateful"}, {"enum": [null]}]}, "human_friendly_comparison_periods": {"type": "boolean", "nullable": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_enabled": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_message": {"type": "string", "nullable": true}, "default_evaluation_environments_enabled": {"type": "boolean", "nullable": true, "description": "Whether to automatically apply default evaluation environments to new feature flags"}, "capture_dead_clicks": {"type": "boolean", "nullable": true}, "default_data_theme": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "revenue_analytics_config": {"type": "object", "properties": {"base_currency": {"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}, "events": {}, "goals": {}, "filter_test_accounts": {"type": "boolean"}}}, "marketing_analytics_config": {"type": "object", "properties": {"sources_map": {}, "conversion_goals": {}, "attribution_window_days": {"type": "integer", "maximum": 90, "minimum": 1}, "attribution_mode": {"enum": ["first_touch", "last_touch"], "type": "string", "description": "* `first_touch` - First Touch\n* `last_touch` - Last Touch"}, "campaign_name_mappings": {}}}, "onboarding_tasks": {"nullable": true}, "base_currency": {"allOf": [{"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}], "default": "USD"}, "web_analytics_pre_aggregated_tables_enabled": {"type": "boolean", "nullable": true}, "experiment_recalculation_time": {"type": "string", "format": "time", "nullable": true, "description": "Time of day (UTC) when experiment metrics should be recalculated. If not set, uses the default recalculation time."}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "product_intents": {"type": "string", "readOnly": true}, "managed_viewsets": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "UPDATEPROJECTENVIRONMENT": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "access_control": {"type": "boolean"}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "default_modifiers": {"type": "object", "additionalProperties": {}, "readOnly": true}, "person_on_events_querying_enabled": {"type": "boolean", "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_recording_url_trigger_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_url_blocklist_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_event_trigger_config": {"type": "array", "items": {"type": "string", "nullable": true}, "nullable": true}, "session_recording_trigger_match_type_config": {"type": "string", "nullable": true, "maxLength": 24}, "session_recording_retention_period": {"enum": ["30d", "90d", "1y", "5y"], "type": "string", "description": "* `30d` - 30 Days\n* `90d` - 90 Days\n* `1y` - 1 Year\n* `5y` - 5 Years"}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "cookieless_server_hash_mode": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1, 2], "type": "integer", "description": "* `0` - Disabled\n* `1` - Stateless\n* `2` - Stateful"}, {"enum": [null]}]}, "human_friendly_comparison_periods": {"type": "boolean", "nullable": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_enabled": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_message": {"type": "string", "nullable": true}, "default_evaluation_environments_enabled": {"type": "boolean", "nullable": true, "description": "Whether to automatically apply default evaluation environments to new feature flags"}, "capture_dead_clicks": {"type": "boolean", "nullable": true}, "default_data_theme": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "revenue_analytics_config": {"type": "object", "properties": {"base_currency": {"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}, "events": {}, "goals": {}, "filter_test_accounts": {"type": "boolean"}}}, "marketing_analytics_config": {"type": "object", "properties": {"sources_map": {}, "conversion_goals": {}, "attribution_window_days": {"type": "integer", "maximum": 90, "minimum": 1}, "attribution_mode": {"enum": ["first_touch", "last_touch"], "type": "string", "description": "* `first_touch` - First Touch\n* `last_touch` - Last Touch"}, "campaign_name_mappings": {}}}, "onboarding_tasks": {"nullable": true}, "base_currency": {"allOf": [{"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}], "default": "USD"}, "web_analytics_pre_aggregated_tables_enabled": {"type": "boolean", "nullable": true}, "experiment_recalculation_time": {"type": "string", "format": "time", "nullable": true, "description": "Time of day (UTC) when experiment metrics should be recalculated. If not set, uses the default recalculation time."}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "product_intents": {"type": "string", "readOnly": true}, "managed_viewsets": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "COMPLETEPROJECTONBOARDING": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "access_control": {"type": "boolean"}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "default_modifiers": {"type": "object", "additionalProperties": {}, "readOnly": true}, "person_on_events_querying_enabled": {"type": "boolean", "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_recording_url_trigger_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_url_blocklist_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_event_trigger_config": {"type": "array", "items": {"type": "string", "nullable": true}, "nullable": true}, "session_recording_trigger_match_type_config": {"type": "string", "nullable": true, "maxLength": 24}, "session_recording_retention_period": {"enum": ["30d", "90d", "1y", "5y"], "type": "string", "description": "* `30d` - 30 Days\n* `90d` - 90 Days\n* `1y` - 1 Year\n* `5y` - 5 Years"}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "cookieless_server_hash_mode": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1, 2], "type": "integer", "description": "* `0` - Disabled\n* `1` - Stateless\n* `2` - Stateful"}, {"enum": [null]}]}, "human_friendly_comparison_periods": {"type": "boolean", "nullable": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_enabled": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_message": {"type": "string", "nullable": true}, "default_evaluation_environments_enabled": {"type": "boolean", "nullable": true, "description": "Whether to automatically apply default evaluation environments to new feature flags"}, "capture_dead_clicks": {"type": "boolean", "nullable": true}, "default_data_theme": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "revenue_analytics_config": {"type": "object", "properties": {"base_currency": {"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}, "events": {}, "goals": {}, "filter_test_accounts": {"type": "boolean"}}}, "marketing_analytics_config": {"type": "object", "properties": {"sources_map": {}, "conversion_goals": {}, "attribution_window_days": {"type": "integer", "maximum": 90, "minimum": 1}, "attribution_mode": {"enum": ["first_touch", "last_touch"], "type": "string", "description": "* `first_touch` - First Touch\n* `last_touch` - Last Touch"}, "campaign_name_mappings": {}}}, "onboarding_tasks": {"nullable": true}, "base_currency": {"allOf": [{"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}], "default": "USD"}, "web_analytics_pre_aggregated_tables_enabled": {"type": "boolean", "nullable": true}, "experiment_recalculation_time": {"type": "string", "format": "time", "nullable": true, "description": "Time of day (UTC) when experiment metrics should be recalculated. If not set, uses the default recalculation time."}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "product_intents": {"type": "string", "readOnly": true}, "managed_viewsets": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "CREATEDEFAULTEVALUATIONTAGS": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "access_control": {"type": "boolean"}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "default_modifiers": {"type": "object", "additionalProperties": {}, "readOnly": true}, "person_on_events_querying_enabled": {"type": "boolean", "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_recording_url_trigger_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_url_blocklist_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_event_trigger_config": {"type": "array", "items": {"type": "string", "nullable": true}, "nullable": true}, "session_recording_trigger_match_type_config": {"type": "string", "nullable": true, "maxLength": 24}, "session_recording_retention_period": {"enum": ["30d", "90d", "1y", "5y"], "type": "string", "description": "* `30d` - 30 Days\n* `90d` - 90 Days\n* `1y` - 1 Year\n* `5y` - 5 Years"}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "cookieless_server_hash_mode": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1, 2], "type": "integer", "description": "* `0` - Disabled\n* `1` - Stateless\n* `2` - Stateful"}, {"enum": [null]}]}, "human_friendly_comparison_periods": {"type": "boolean", "nullable": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_enabled": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_message": {"type": "string", "nullable": true}, "default_evaluation_environments_enabled": {"type": "boolean", "nullable": true, "description": "Whether to automatically apply default evaluation environments to new feature flags"}, "capture_dead_clicks": {"type": "boolean", "nullable": true}, "default_data_theme": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "revenue_analytics_config": {"type": "object", "properties": {"base_currency": {"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}, "events": {}, "goals": {}, "filter_test_accounts": {"type": "boolean"}}}, "marketing_analytics_config": {"type": "object", "properties": {"sources_map": {}, "conversion_goals": {}, "attribution_window_days": {"type": "integer", "maximum": 90, "minimum": 1}, "attribution_mode": {"enum": ["first_touch", "last_touch"], "type": "string", "description": "* `first_touch` - First Touch\n* `last_touch` - Last Touch"}, "campaign_name_mappings": {}}}, "onboarding_tasks": {"nullable": true}, "base_currency": {"allOf": [{"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}], "default": "USD"}, "web_analytics_pre_aggregated_tables_enabled": {"type": "boolean", "nullable": true}, "experiment_recalculation_time": {"type": "string", "format": "time", "nullable": true, "description": "Time of day (UTC) when experiment metrics should be recalculated. If not set, uses the default recalculation time."}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "product_intents": {"type": "string", "readOnly": true}, "managed_viewsets": {"type": "string", "readOnly": true}}, "required": ["api_token", "created_at", "default_modifiers", "effective_membership_level", "group_types", "has_group_types", "id", "ingested_event", "live_events_token", "managed_viewsets", "organization", "person_on_events_querying_enabled", "product_intents", "project_id", "secret_api_token", "secret_api_token_backup", "updated_at", "user_access_level", "uuid"]}',  # noqa: E501
    "DELETEENVSECRETTOKENBACKUP": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "access_control": {"type": "boolean"}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "default_modifiers": {"type": "object", "additionalProperties": {}, "readOnly": true}, "person_on_events_querying_enabled": {"type": "boolean", "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_recording_url_trigger_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_url_blocklist_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_event_trigger_config": {"type": "array", "items": {"type": "string", "nullable": true}, "nullable": true}, "session_recording_trigger_match_type_config": {"type": "string", "nullable": true, "maxLength": 24}, "session_recording_retention_period": {"enum": ["30d", "90d", "1y", "5y"], "type": "string", "description": "* `30d` - 30 Days\n* `90d` - 90 Days\n* `1y` - 1 Year\n* `5y` - 5 Years"}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "cookieless_server_hash_mode": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1, 2], "type": "integer", "description": "* `0` - Disabled\n* `1` - Stateless\n* `2` - Stateful"}, {"enum": [null]}]}, "human_friendly_comparison_periods": {"type": "boolean", "nullable": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_enabled": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_message": {"type": "string", "nullable": true}, "default_evaluation_environments_enabled": {"type": "boolean", "nullable": true, "description": "Whether to automatically apply default evaluation environments to new feature flags"}, "capture_dead_clicks": {"type": "boolean", "nullable": true}, "default_data_theme": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "revenue_analytics_config": {"type": "object", "properties": {"base_currency": {"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}, "events": {}, "goals": {}, "filter_test_accounts": {"type": "boolean"}}}, "marketing_analytics_config": {"type": "object", "properties": {"sources_map": {}, "conversion_goals": {}, "attribution_window_days": {"type": "integer", "maximum": 90, "minimum": 1}, "attribution_mode": {"enum": ["first_touch", "last_touch"], "type": "string", "description": "* `first_touch` - First Touch\n* `last_touch` - Last Touch"}, "campaign_name_mappings": {}}}, "onboarding_tasks": {"nullable": true}, "base_currency": {"allOf": [{"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}], "default": "USD"}, "web_analytics_pre_aggregated_tables_enabled": {"type": "boolean", "nullable": true}, "experiment_recalculation_time": {"type": "string", "format": "time", "nullable": true, "description": "Time of day (UTC) when experiment metrics should be recalculated. If not set, uses the default recalculation time."}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "product_intents": {"type": "string", "readOnly": true}, "managed_viewsets": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "RESETPROJECTENVIRONMENTTOKEN": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "access_control": {"type": "boolean"}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "default_modifiers": {"type": "object", "additionalProperties": {}, "readOnly": true}, "person_on_events_querying_enabled": {"type": "boolean", "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_recording_url_trigger_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_url_blocklist_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_event_trigger_config": {"type": "array", "items": {"type": "string", "nullable": true}, "nullable": true}, "session_recording_trigger_match_type_config": {"type": "string", "nullable": true, "maxLength": 24}, "session_recording_retention_period": {"enum": ["30d", "90d", "1y", "5y"], "type": "string", "description": "* `30d` - 30 Days\n* `90d` - 90 Days\n* `1y` - 1 Year\n* `5y` - 5 Years"}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "cookieless_server_hash_mode": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1, 2], "type": "integer", "description": "* `0` - Disabled\n* `1` - Stateless\n* `2` - Stateful"}, {"enum": [null]}]}, "human_friendly_comparison_periods": {"type": "boolean", "nullable": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_enabled": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_message": {"type": "string", "nullable": true}, "default_evaluation_environments_enabled": {"type": "boolean", "nullable": true, "description": "Whether to automatically apply default evaluation environments to new feature flags"}, "capture_dead_clicks": {"type": "boolean", "nullable": true}, "default_data_theme": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "revenue_analytics_config": {"type": "object", "properties": {"base_currency": {"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}, "events": {}, "goals": {}, "filter_test_accounts": {"type": "boolean"}}}, "marketing_analytics_config": {"type": "object", "properties": {"sources_map": {}, "conversion_goals": {}, "attribution_window_days": {"type": "integer", "maximum": 90, "minimum": 1}, "attribution_mode": {"enum": ["first_touch", "last_touch"], "type": "string", "description": "* `first_touch` - First Touch\n* `last_touch` - Last Touch"}, "campaign_name_mappings": {}}}, "onboarding_tasks": {"nullable": true}, "base_currency": {"allOf": [{"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}], "default": "USD"}, "web_analytics_pre_aggregated_tables_enabled": {"type": "boolean", "nullable": true}, "experiment_recalculation_time": {"type": "string", "format": "time", "nullable": true, "description": "Time of day (UTC) when experiment metrics should be recalculated. If not set, uses the default recalculation time."}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "product_intents": {"type": "string", "readOnly": true}, "managed_viewsets": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "ROTATEENVIRONMENTSECRETTOKEN": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 200, "minLength": 1}, "access_control": {"type": "boolean"}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "secret_api_token": {"type": "string", "readOnly": true, "nullable": true}, "secret_api_token_backup": {"type": "string", "readOnly": true, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "default_modifiers": {"type": "object", "additionalProperties": {}, "readOnly": true}, "person_on_events_querying_enabled": {"type": "boolean", "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "app_urls": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}}, "slack_incoming_webhook": {"type": "string", "nullable": true, "maxLength": 500}, "anonymize_ips": {"type": "boolean"}, "completed_snippet_onboarding": {"type": "boolean"}, "test_account_filters": {}, "test_account_filters_default_checked": {"type": "boolean", "nullable": true}, "path_cleaning_filters": {"nullable": true}, "is_demo": {"type": "boolean"}, "timezone": {"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}, "data_attributes": {}, "person_display_name_properties": {"type": "array", "items": {"type": "string", "maxLength": 400}, "nullable": true}, "correlation_config": {"nullable": true}, "autocapture_opt_out": {"type": "boolean", "nullable": true}, "autocapture_exceptions_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_opt_in": {"type": "boolean", "nullable": true}, "autocapture_web_vitals_allowed_metrics": {"nullable": true}, "autocapture_exceptions_errors_to_ignore": {"nullable": true}, "capture_console_log_opt_in": {"type": "boolean", "nullable": true}, "capture_performance_opt_in": {"type": "boolean", "nullable": true}, "session_recording_opt_in": {"type": "boolean"}, "session_recording_sample_rate": {"type": "string", "format": "decimal", "pattern": "^-?\\d{0,1}(?:\\.\\d{0,2})?$", "nullable": true}, "session_recording_minimum_duration_milliseconds": {"type": "integer", "maximum": 30000, "minimum": 0, "nullable": true}, "session_recording_linked_flag": {"nullable": true}, "session_recording_network_payload_capture_config": {"nullable": true}, "session_recording_masking_config": {"nullable": true}, "session_recording_url_trigger_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_url_blocklist_config": {"type": "array", "items": {"nullable": true}, "nullable": true}, "session_recording_event_trigger_config": {"type": "array", "items": {"type": "string", "nullable": true}, "nullable": true}, "session_recording_trigger_match_type_config": {"type": "string", "nullable": true, "maxLength": 24}, "session_recording_retention_period": {"enum": ["30d", "90d", "1y", "5y"], "type": "string", "description": "* `30d` - 30 Days\n* `90d` - 90 Days\n* `1y` - 1 Year\n* `5y` - 5 Years"}, "session_replay_config": {"nullable": true}, "survey_config": {"nullable": true}, "week_start_day": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1], "type": "integer", "description": "* `0` - Sunday\n* `1` - Monday"}, {"enum": [null]}]}, "primary_dashboard": {"type": "integer", "nullable": true}, "live_events_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "recording_domains": {"type": "array", "items": {"type": "string", "nullable": true, "maxLength": 200}, "nullable": true}, "cookieless_server_hash_mode": {"nullable": true, "minimum": -32768, "maximum": 32767, "oneOf": [{"enum": [0, 1, 2], "type": "integer", "description": "* `0` - Disabled\n* `1` - Stateless\n* `2` - Stateful"}, {"enum": [null]}]}, "human_friendly_comparison_periods": {"type": "boolean", "nullable": true}, "inject_web_apps": {"type": "boolean", "nullable": true}, "extra_settings": {"nullable": true}, "modifiers": {"nullable": true}, "has_completed_onboarding_for": {"nullable": true}, "surveys_opt_in": {"type": "boolean", "nullable": true}, "heatmaps_opt_in": {"type": "boolean", "nullable": true}, "flags_persistence_default": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_enabled": {"type": "boolean", "nullable": true}, "feature_flag_confirmation_message": {"type": "string", "nullable": true}, "default_evaluation_environments_enabled": {"type": "boolean", "nullable": true, "description": "Whether to automatically apply default evaluation environments to new feature flags"}, "capture_dead_clicks": {"type": "boolean", "nullable": true}, "default_data_theme": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "revenue_analytics_config": {"type": "object", "properties": {"base_currency": {"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}, "events": {}, "goals": {}, "filter_test_accounts": {"type": "boolean"}}}, "marketing_analytics_config": {"type": "object", "properties": {"sources_map": {}, "conversion_goals": {}, "attribution_window_days": {"type": "integer", "maximum": 90, "minimum": 1}, "attribution_mode": {"enum": ["first_touch", "last_touch"], "type": "string", "description": "* `first_touch` - First Touch\n* `last_touch` - Last Touch"}, "campaign_name_mappings": {}}}, "onboarding_tasks": {"nullable": true}, "base_currency": {"allOf": [{"enum": ["AED", "AFN", "ALL", "AMD", "ANG", "AOA", "ARS", "AUD", "AWG", "AZN", "BAM", "BBD", "BDT", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BRL", "BSD", "BTC", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLP", "CNY", "COP", "CRC", "CVE", "CZK", "DJF", "DKK", "DOP", "DZD", "EGP", "ERN", "ETB", "EUR", "FJD", "GBP", "GEL", "GHS", "GIP", "GMD", "GNF", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "ILS", "INR", "IQD", "IRR", "ISK", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LTL", "LVL", "LSL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MYR", "MZN", "NAD", "NGN", "NIO", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PYG", "QAR", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDG", "SEK", "SGD", "SRD", "SSP", "STN", "SYP", "SZL", "THB", "TJS", "TMT", "TND", "TOP", "TRY", "TTD", "TWD", "TZS", "UAH", "UGX", "USD", "UYU", "UZS", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMW"], "type": "string", "description": "* `AED` - AED\n* `AFN` - AFN\n* `ALL` - ALL\n* `AMD` - AMD\n* `ANG` - ANG\n* `AOA` - AOA\n* `ARS` - ARS\n* `AUD` - AUD\n* `AWG` - AWG\n* `AZN` - AZN\n* `BAM` - BAM\n* `BBD` - BBD\n* `BDT` - BDT\n* `BGN` - BGN\n* `BHD` - BHD\n* `BIF` - BIF\n* `BMD` - BMD\n* `BND` - BND\n* `BOB` - BOB\n* `BRL` - BRL\n* `BSD` - BSD\n* `BTC` - BTC\n* `BTN` - BTN\n* `BWP` - BWP\n* `BYN` - BYN\n* `BZD` - BZD\n* `CAD` - CAD\n* `CDF` - CDF\n* `CHF` - CHF\n* `CLP` - CLP\n* `CNY` - CNY\n* `COP` - COP\n* `CRC` - CRC\n* `CVE` - CVE\n* `CZK` - CZK\n* `DJF` - DJF\n* `DKK` - DKK\n* `DOP` - DOP\n* `DZD` - DZD\n* `EGP` - EGP\n* `ERN` - ERN\n* `ETB` - ETB\n* `EUR` - EUR\n* `FJD` - FJD\n* `GBP` - GBP\n* `GEL` - GEL\n* `GHS` - GHS\n* `GIP` - GIP\n* `GMD` - GMD\n* `GNF` - GNF\n* `GTQ` - GTQ\n* `GYD` - GYD\n* `HKD` - HKD\n* `HNL` - HNL\n* `HRK` - HRK\n* `HTG` - HTG\n* `HUF` - HUF\n* `IDR` - IDR\n* `ILS` - ILS\n* `INR` - INR\n* `IQD` - IQD\n* `IRR` - IRR\n* `ISK` - ISK\n* `JMD` - JMD\n* `JOD` - JOD\n* `JPY` - JPY\n* `KES` - KES\n* `KGS` - KGS\n* `KHR` - KHR\n* `KMF` - KMF\n* `KRW` - KRW\n* `KWD` - KWD\n* `KYD` - KYD\n* `KZT` - KZT\n* `LAK` - LAK\n* `LBP` - LBP\n* `LKR` - LKR\n* `LRD` - LRD\n* `LTL` - LTL\n* `LVL` - LVL\n* `LSL` - LSL\n* `LYD` - LYD\n* `MAD` - MAD\n* `MDL` - MDL\n* `MGA` - MGA\n* `MKD` - MKD\n* `MMK` - MMK\n* `MNT` - MNT\n* `MOP` - MOP\n* `MRU` - MRU\n* `MTL` - MTL\n* `MUR` - MUR\n* `MVR` - MVR\n* `MWK` - MWK\n* `MXN` - MXN\n* `MYR` - MYR\n* `MZN` - MZN\n* `NAD` - NAD\n* `NGN` - NGN\n* `NIO` - NIO\n* `NOK` - NOK\n* `NPR` - NPR\n* `NZD` - NZD\n* `OMR` - OMR\n* `PAB` - PAB\n* `PEN` - PEN\n* `PGK` - PGK\n* `PHP` - PHP\n* `PKR` - PKR\n* `PLN` - PLN\n* `PYG` - PYG\n* `QAR` - QAR\n* `RON` - RON\n* `RSD` - RSD\n* `RUB` - RUB\n* `RWF` - RWF\n* `SAR` - SAR\n* `SBD` - SBD\n* `SCR` - SCR\n* `SDG` - SDG\n* `SEK` - SEK\n* `SGD` - SGD\n* `SRD` - SRD\n* `SSP` - SSP\n* `STN` - STN\n* `SYP` - SYP\n* `SZL` - SZL\n* `THB` - THB\n* `TJS` - TJS\n* `TMT` - TMT\n* `TND` - TND\n* `TOP` - TOP\n* `TRY` - TRY\n* `TTD` - TTD\n* `TWD` - TWD\n* `TZS` - TZS\n* `UAH` - UAH\n* `UGX` - UGX\n* `USD` - USD\n* `UYU` - UYU\n* `UZS` - UZS\n* `VES` - VES\n* `VND` - VND\n* `VUV` - VUV\n* `WST` - WST\n* `XAF` - XAF\n* `XCD` - XCD\n* `XOF` - XOF\n* `XPF` - XPF\n* `YER` - YER\n* `ZAR` - ZAR\n* `ZMW` - ZMW"}], "default": "USD"}, "web_analytics_pre_aggregated_tables_enabled": {"type": "boolean", "nullable": true}, "experiment_recalculation_time": {"type": "string", "format": "time", "nullable": true, "description": "Time of day (UTC) when experiment metrics should be recalculated. If not set, uses the default recalculation time."}, "effective_membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "has_group_types": {"type": "boolean", "readOnly": true}, "group_types": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "live_events_token": {"type": "string", "nullable": true, "readOnly": true}, "product_intents": {"type": "string", "readOnly": true}, "managed_viewsets": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "CREATEEXPERIMENTHOLDOUT": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "filters": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "updated_at"]}',  # noqa: E501
    "UPDATEEXPERIMENTHOLDOUT": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "filters": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "updated_at"]}',  # noqa: E501
    "MODIFYEXPERIMENTHOLDOUT": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "filters": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}}',  # noqa: E501
    "CREATEEXPERIMENTSAVEDMETRICS": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "query": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}}, "required": ["created_at", "created_by", "id", "name", "query", "updated_at"]}',  # noqa: E501
    "UPDATEEXPERIMENTSAVEDMETRICS": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "query": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}}, "required": ["created_at", "created_by", "id", "name", "query", "updated_at"]}',  # noqa: E501
    "UPDATEEXPERIMENTMETRICS": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "query": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}}}',  # noqa: E501
    "CREATEEXPERIMENTINPROJECT": '{"type": "object", "description": "Mixin for serializers to add user access control fields", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "feature_flag_key": {"type": "string"}, "feature_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "holdout": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "filters": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "updated_at"]}], "readOnly": true}, "holdout_id": {"type": "integer", "nullable": true}, "exposure_cohort": {"type": "integer", "readOnly": true, "nullable": true}, "parameters": {"nullable": true}, "secondary_metrics": {"nullable": true}, "saved_metrics": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "experiment": {"type": "integer"}, "saved_metric": {"type": "integer"}, "metadata": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "query": {"readOnly": true}, "name": {"type": "string", "readOnly": true}}, "required": ["created_at", "experiment", "id", "name", "query", "saved_metric"]}, "readOnly": true}, "saved_metrics_ids": {"type": "array", "items": {}, "nullable": true}, "filters": {}, "archived": {"type": "boolean"}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["web", "product"], "type": "string", "description": "* `web` - web\n* `product` - product"}, {"enum": [""]}, {"enum": [null]}]}, "exposure_criteria": {"nullable": true}, "metrics": {"nullable": true}, "metrics_secondary": {"nullable": true}, "stats_config": {"nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "conclusion": {"nullable": true, "oneOf": [{"enum": ["won", "lost", "inconclusive", "stopped_early", "invalid"], "type": "string", "description": "* `won` - Won\n* `lost` - Lost\n* `inconclusive` - Inconclusive\n* `stopped_early` - Stopped Early\n* `invalid` - Invalid"}, {"enum": [""]}, {"enum": [null]}]}, "conclusion_comment": {"type": "string", "nullable": true}, "primary_metrics_ordered_uuids": {"nullable": true}, "secondary_metrics_ordered_uuids": {"nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}, "required": ["created_at", "created_by", "exposure_cohort", "feature_flag", "feature_flag_key", "holdout", "id", "name", "saved_metrics", "updated_at", "user_access_level"]}',  # noqa: E501
    "UPDATEEXPERIMENT": '{"type": "object", "description": "Mixin for serializers to add user access control fields", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "feature_flag_key": {"type": "string"}, "feature_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "holdout": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "filters": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "updated_at"]}], "readOnly": true}, "holdout_id": {"type": "integer", "nullable": true}, "exposure_cohort": {"type": "integer", "readOnly": true, "nullable": true}, "parameters": {"nullable": true}, "secondary_metrics": {"nullable": true}, "saved_metrics": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "experiment": {"type": "integer"}, "saved_metric": {"type": "integer"}, "metadata": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "query": {"readOnly": true}, "name": {"type": "string", "readOnly": true}}, "required": ["created_at", "experiment", "id", "name", "query", "saved_metric"]}, "readOnly": true}, "saved_metrics_ids": {"type": "array", "items": {}, "nullable": true}, "filters": {}, "archived": {"type": "boolean"}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["web", "product"], "type": "string", "description": "* `web` - web\n* `product` - product"}, {"enum": [""]}, {"enum": [null]}]}, "exposure_criteria": {"nullable": true}, "metrics": {"nullable": true}, "metrics_secondary": {"nullable": true}, "stats_config": {"nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "conclusion": {"nullable": true, "oneOf": [{"enum": ["won", "lost", "inconclusive", "stopped_early", "invalid"], "type": "string", "description": "* `won` - Won\n* `lost` - Lost\n* `inconclusive` - Inconclusive\n* `stopped_early` - Stopped Early\n* `invalid` - Invalid"}, {"enum": [""]}, {"enum": [null]}]}, "conclusion_comment": {"type": "string", "nullable": true}, "primary_metrics_ordered_uuids": {"nullable": true}, "secondary_metrics_ordered_uuids": {"nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}, "required": ["created_at", "created_by", "exposure_cohort", "feature_flag", "feature_flag_key", "holdout", "id", "name", "saved_metrics", "updated_at", "user_access_level"]}',  # noqa: E501
    "UPDATEEXPERIMENTDETAILS": '{"type": "object", "description": "Mixin for serializers to add user access control fields", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "feature_flag_key": {"type": "string"}, "feature_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "holdout": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "filters": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "updated_at"]}], "readOnly": true}, "holdout_id": {"type": "integer", "nullable": true}, "exposure_cohort": {"type": "integer", "readOnly": true, "nullable": true}, "parameters": {"nullable": true}, "secondary_metrics": {"nullable": true}, "saved_metrics": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "experiment": {"type": "integer"}, "saved_metric": {"type": "integer"}, "metadata": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "query": {"readOnly": true}, "name": {"type": "string", "readOnly": true}}, "required": ["created_at", "experiment", "id", "name", "query", "saved_metric"]}, "readOnly": true}, "saved_metrics_ids": {"type": "array", "items": {}, "nullable": true}, "filters": {}, "archived": {"type": "boolean"}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["web", "product"], "type": "string", "description": "* `web` - web\n* `product` - product"}, {"enum": [""]}, {"enum": [null]}]}, "exposure_criteria": {"nullable": true}, "metrics": {"nullable": true}, "metrics_secondary": {"nullable": true}, "stats_config": {"nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "conclusion": {"nullable": true, "oneOf": [{"enum": ["won", "lost", "inconclusive", "stopped_early", "invalid"], "type": "string", "description": "* `won` - Won\n* `lost` - Lost\n* `inconclusive` - Inconclusive\n* `stopped_early` - Stopped Early\n* `invalid` - Invalid"}, {"enum": [""]}, {"enum": [null]}]}, "conclusion_comment": {"type": "string", "nullable": true}, "primary_metrics_ordered_uuids": {"nullable": true}, "secondary_metrics_ordered_uuids": {"nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}}',  # noqa: E501
    "CREATEEXPOSURECOHORTFOREXPERIMENT": '{"type": "object", "description": "Mixin for serializers to add user access control fields", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "feature_flag_key": {"type": "string"}, "feature_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "holdout": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "filters": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "updated_at"]}], "readOnly": true}, "holdout_id": {"type": "integer", "nullable": true}, "exposure_cohort": {"type": "integer", "readOnly": true, "nullable": true}, "parameters": {"nullable": true}, "secondary_metrics": {"nullable": true}, "saved_metrics": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "experiment": {"type": "integer"}, "saved_metric": {"type": "integer"}, "metadata": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "query": {"readOnly": true}, "name": {"type": "string", "readOnly": true}}, "required": ["created_at", "experiment", "id", "name", "query", "saved_metric"]}, "readOnly": true}, "saved_metrics_ids": {"type": "array", "items": {}, "nullable": true}, "filters": {}, "archived": {"type": "boolean"}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["web", "product"], "type": "string", "description": "* `web` - web\n* `product` - product"}, {"enum": [""]}, {"enum": [null]}]}, "exposure_criteria": {"nullable": true}, "metrics": {"nullable": true}, "metrics_secondary": {"nullable": true}, "stats_config": {"nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "conclusion": {"nullable": true, "oneOf": [{"enum": ["won", "lost", "inconclusive", "stopped_early", "invalid"], "type": "string", "description": "* `won` - Won\n* `lost` - Lost\n* `inconclusive` - Inconclusive\n* `stopped_early` - Stopped Early\n* `invalid` - Invalid"}, {"enum": [""]}, {"enum": [null]}]}, "conclusion_comment": {"type": "string", "nullable": true}, "primary_metrics_ordered_uuids": {"nullable": true}, "secondary_metrics_ordered_uuids": {"nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}, "required": ["created_at", "created_by", "exposure_cohort", "feature_flag", "feature_flag_key", "holdout", "id", "name", "saved_metrics", "updated_at", "user_access_level"]}',  # noqa: E501
    "DUPLICATEEXPERIMENTPOSTHOG": '{"type": "object", "description": "Mixin for serializers to add user access control fields", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "feature_flag_key": {"type": "string"}, "feature_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "holdout": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "filters": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "updated_at"]}], "readOnly": true}, "holdout_id": {"type": "integer", "nullable": true}, "exposure_cohort": {"type": "integer", "readOnly": true, "nullable": true}, "parameters": {"nullable": true}, "secondary_metrics": {"nullable": true}, "saved_metrics": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "experiment": {"type": "integer"}, "saved_metric": {"type": "integer"}, "metadata": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "query": {"readOnly": true}, "name": {"type": "string", "readOnly": true}}, "required": ["created_at", "experiment", "id", "name", "query", "saved_metric"]}, "readOnly": true}, "saved_metrics_ids": {"type": "array", "items": {}, "nullable": true}, "filters": {}, "archived": {"type": "boolean"}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["web", "product"], "type": "string", "description": "* `web` - web\n* `product` - product"}, {"enum": [""]}, {"enum": [null]}]}, "exposure_criteria": {"nullable": true}, "metrics": {"nullable": true}, "metrics_secondary": {"nullable": true}, "stats_config": {"nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "conclusion": {"nullable": true, "oneOf": [{"enum": ["won", "lost", "inconclusive", "stopped_early", "invalid"], "type": "string", "description": "* `won` - Won\n* `lost` - Lost\n* `inconclusive` - Inconclusive\n* `stopped_early` - Stopped Early\n* `invalid` - Invalid"}, {"enum": [""]}, {"enum": [null]}]}, "conclusion_comment": {"type": "string", "nullable": true}, "primary_metrics_ordered_uuids": {"nullable": true}, "secondary_metrics_ordered_uuids": {"nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}, "required": ["created_at", "created_by", "exposure_cohort", "feature_flag", "feature_flag_key", "holdout", "id", "name", "saved_metrics", "updated_at", "user_access_level"]}',  # noqa: E501
    "CREATEEXPERIMENTTIMESERIESRECALCULATION": '{"type": "object", "description": "Mixin for serializers to add user access control fields", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "feature_flag_key": {"type": "string"}, "feature_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "holdout": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "filters": {}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "created_by", "id", "name", "updated_at"]}], "readOnly": true}, "holdout_id": {"type": "integer", "nullable": true}, "exposure_cohort": {"type": "integer", "readOnly": true, "nullable": true}, "parameters": {"nullable": true}, "secondary_metrics": {"nullable": true}, "saved_metrics": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "experiment": {"type": "integer"}, "saved_metric": {"type": "integer"}, "metadata": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "query": {"readOnly": true}, "name": {"type": "string", "readOnly": true}}, "required": ["created_at", "experiment", "id", "name", "query", "saved_metric"]}, "readOnly": true}, "saved_metrics_ids": {"type": "array", "items": {}, "nullable": true}, "filters": {}, "archived": {"type": "boolean"}, "deleted": {"type": "boolean", "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["web", "product"], "type": "string", "description": "* `web` - web\n* `product` - product"}, {"enum": [""]}, {"enum": [null]}]}, "exposure_criteria": {"nullable": true}, "metrics": {"nullable": true}, "metrics_secondary": {"nullable": true}, "stats_config": {"nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "conclusion": {"nullable": true, "oneOf": [{"enum": ["won", "lost", "inconclusive", "stopped_early", "invalid"], "type": "string", "description": "* `won` - Won\n* `lost` - Lost\n* `inconclusive` - Inconclusive\n* `stopped_early` - Stopped Early\n* `invalid` - Invalid"}, {"enum": [""]}, {"enum": [null]}]}, "conclusion_comment": {"type": "string", "nullable": true}, "primary_metrics_ordered_uuids": {"nullable": true}, "secondary_metrics_ordered_uuids": {"nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}, "required": ["created_at", "created_by", "exposure_cohort", "feature_flag", "feature_flag_key", "holdout", "id", "name", "saved_metrics", "updated_at", "user_access_level"]}',  # noqa: E501
    "CREATEEXPORTS": '{"type": "object", "description": "Standard ExportedAsset serializer that doesn\'t return content.", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard": {"type": "integer", "nullable": true}, "insight": {"type": "integer", "nullable": true}, "export_format": {"enum": ["image/png", "application/pdf", "text/csv", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "video/webm", "video/mp4", "image/gif", "application/json"], "type": "string", "description": "* `image/png` - image/png\n* `application/pdf` - application/pdf\n* `text/csv` - text/csv\n* `application/vnd.openxmlformats-officedocument.spreadsheetml.sheet` - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n* `video/webm` - video/webm\n* `video/mp4` - video/mp4\n* `image/gif` - image/gif\n* `application/json` - application/json"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "has_content": {"type": "string", "readOnly": true}, "export_context": {"nullable": true}, "filename": {"type": "string", "readOnly": true}, "expires_after": {"type": "string", "format": "date-time", "nullable": true}, "exception": {"type": "string", "readOnly": true, "nullable": true}}, "required": ["created_at", "exception", "export_format", "filename", "has_content", "id"]}',  # noqa: E501
    "CREATEFEATUREFLAG": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "description": "contains the description for the flag (field name `name` is kept for backwards-compatibility)"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "version": {"type": "integer", "default": 0}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_simple_flag": {"type": "boolean", "readOnly": true}, "rollout_percentage": {"type": "integer", "nullable": true, "readOnly": true}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "experiment_set": {"type": "string", "readOnly": true}, "surveys": {"type": "object", "additionalProperties": {}, "readOnly": true}, "features": {"type": "object", "additionalProperties": {}, "readOnly": true}, "rollback_conditions": {"nullable": true}, "performed_rollback": {"type": "boolean", "nullable": true}, "can_edit": {"type": "boolean", "readOnly": true}, "tags": {"type": "array", "items": {}}, "evaluation_tags": {"type": "array", "items": {}, "writeOnly": true}, "usage_dashboard": {"type": "integer", "readOnly": true}, "analytics_dashboards": {"type": "array", "items": {"type": "integer"}}, "has_enriched_analytics": {"type": "boolean", "nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "creation_context": {"allOf": [{"enum": ["feature_flags", "experiments", "surveys", "early_access_features", "web_experiments"], "type": "string", "description": "* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}], "writeOnly": true, "description": "Indicates the origin product of the feature flag. Choices: \'feature_flags\', \'experiments\', \'surveys\', \'early_access_features\', \'web_experiments\'.\n\n* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}, "is_remote_configuration": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "status": {"type": "string", "readOnly": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "last_called_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Last time this feature flag was called (from $feature_flag_called events)"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_should_create_usage_dashboard": {"type": "boolean", "writeOnly": true, "default": true, "title": " should create usage dashboard"}}, "required": ["can_edit", "created_by", "experiment_set", "features", "id", "is_simple_flag", "key", "last_modified_by", "rollout_percentage", "status", "surveys", "updated_at", "usage_dashboard", "user_access_level"]}',  # noqa: E501
    "MODIFYFEATUREFLAGS": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "description": "contains the description for the flag (field name `name` is kept for backwards-compatibility)"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "version": {"type": "integer", "default": 0}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_simple_flag": {"type": "boolean", "readOnly": true}, "rollout_percentage": {"type": "integer", "nullable": true, "readOnly": true}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "experiment_set": {"type": "string", "readOnly": true}, "surveys": {"type": "object", "additionalProperties": {}, "readOnly": true}, "features": {"type": "object", "additionalProperties": {}, "readOnly": true}, "rollback_conditions": {"nullable": true}, "performed_rollback": {"type": "boolean", "nullable": true}, "can_edit": {"type": "boolean", "readOnly": true}, "tags": {"type": "array", "items": {}}, "evaluation_tags": {"type": "array", "items": {}, "writeOnly": true}, "usage_dashboard": {"type": "integer", "readOnly": true}, "analytics_dashboards": {"type": "array", "items": {"type": "integer"}}, "has_enriched_analytics": {"type": "boolean", "nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "creation_context": {"allOf": [{"enum": ["feature_flags", "experiments", "surveys", "early_access_features", "web_experiments"], "type": "string", "description": "* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}], "writeOnly": true, "description": "Indicates the origin product of the feature flag. Choices: \'feature_flags\', \'experiments\', \'surveys\', \'early_access_features\', \'web_experiments\'.\n\n* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}, "is_remote_configuration": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "status": {"type": "string", "readOnly": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "last_called_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Last time this feature flag was called (from $feature_flag_called events)"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_should_create_usage_dashboard": {"type": "boolean", "writeOnly": true, "default": true, "title": " should create usage dashboard"}}, "required": ["can_edit", "created_by", "experiment_set", "features", "id", "is_simple_flag", "key", "last_modified_by", "rollout_percentage", "status", "surveys", "updated_at", "usage_dashboard", "user_access_level"]}',  # noqa: E501
    "UPDATEFEATUREFLAGS": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "description": "contains the description for the flag (field name `name` is kept for backwards-compatibility)"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "version": {"type": "integer", "default": 0}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_simple_flag": {"type": "boolean", "readOnly": true}, "rollout_percentage": {"type": "integer", "nullable": true, "readOnly": true}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "experiment_set": {"type": "string", "readOnly": true}, "surveys": {"type": "object", "additionalProperties": {}, "readOnly": true}, "features": {"type": "object", "additionalProperties": {}, "readOnly": true}, "rollback_conditions": {"nullable": true}, "performed_rollback": {"type": "boolean", "nullable": true}, "can_edit": {"type": "boolean", "readOnly": true}, "tags": {"type": "array", "items": {}}, "evaluation_tags": {"type": "array", "items": {}, "writeOnly": true}, "usage_dashboard": {"type": "integer", "readOnly": true}, "analytics_dashboards": {"type": "array", "items": {"type": "integer"}}, "has_enriched_analytics": {"type": "boolean", "nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "creation_context": {"allOf": [{"enum": ["feature_flags", "experiments", "surveys", "early_access_features", "web_experiments"], "type": "string", "description": "* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}], "writeOnly": true, "description": "Indicates the origin product of the feature flag. Choices: \'feature_flags\', \'experiments\', \'surveys\', \'early_access_features\', \'web_experiments\'.\n\n* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}, "is_remote_configuration": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "status": {"type": "string", "readOnly": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "last_called_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Last time this feature flag was called (from $feature_flag_called events)"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_should_create_usage_dashboard": {"type": "boolean", "writeOnly": true, "default": true, "title": " should create usage dashboard"}}}',  # noqa: E501
    "CREATESTATICCOHORTFORFEATUREFLAG": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "description": "contains the description for the flag (field name `name` is kept for backwards-compatibility)"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "version": {"type": "integer", "default": 0}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_simple_flag": {"type": "boolean", "readOnly": true}, "rollout_percentage": {"type": "integer", "nullable": true, "readOnly": true}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "experiment_set": {"type": "string", "readOnly": true}, "surveys": {"type": "object", "additionalProperties": {}, "readOnly": true}, "features": {"type": "object", "additionalProperties": {}, "readOnly": true}, "rollback_conditions": {"nullable": true}, "performed_rollback": {"type": "boolean", "nullable": true}, "can_edit": {"type": "boolean", "readOnly": true}, "tags": {"type": "array", "items": {}}, "evaluation_tags": {"type": "array", "items": {}, "writeOnly": true}, "usage_dashboard": {"type": "integer", "readOnly": true}, "analytics_dashboards": {"type": "array", "items": {"type": "integer"}}, "has_enriched_analytics": {"type": "boolean", "nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "creation_context": {"allOf": [{"enum": ["feature_flags", "experiments", "surveys", "early_access_features", "web_experiments"], "type": "string", "description": "* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}], "writeOnly": true, "description": "Indicates the origin product of the feature flag. Choices: \'feature_flags\', \'experiments\', \'surveys\', \'early_access_features\', \'web_experiments\'.\n\n* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}, "is_remote_configuration": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "status": {"type": "string", "readOnly": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "last_called_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Last time this feature flag was called (from $feature_flag_called events)"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_should_create_usage_dashboard": {"type": "boolean", "writeOnly": true, "default": true, "title": " should create usage dashboard"}}, "required": ["can_edit", "created_by", "experiment_set", "features", "id", "is_simple_flag", "key", "last_modified_by", "rollout_percentage", "status", "surveys", "updated_at", "usage_dashboard", "user_access_level"]}',  # noqa: E501
    "CREATEFEATUREFLAGSDASHBOARD": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "description": "contains the description for the flag (field name `name` is kept for backwards-compatibility)"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "version": {"type": "integer", "default": 0}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_simple_flag": {"type": "boolean", "readOnly": true}, "rollout_percentage": {"type": "integer", "nullable": true, "readOnly": true}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "experiment_set": {"type": "string", "readOnly": true}, "surveys": {"type": "object", "additionalProperties": {}, "readOnly": true}, "features": {"type": "object", "additionalProperties": {}, "readOnly": true}, "rollback_conditions": {"nullable": true}, "performed_rollback": {"type": "boolean", "nullable": true}, "can_edit": {"type": "boolean", "readOnly": true}, "tags": {"type": "array", "items": {}}, "evaluation_tags": {"type": "array", "items": {}, "writeOnly": true}, "usage_dashboard": {"type": "integer", "readOnly": true}, "analytics_dashboards": {"type": "array", "items": {"type": "integer"}}, "has_enriched_analytics": {"type": "boolean", "nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "creation_context": {"allOf": [{"enum": ["feature_flags", "experiments", "surveys", "early_access_features", "web_experiments"], "type": "string", "description": "* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}], "writeOnly": true, "description": "Indicates the origin product of the feature flag. Choices: \'feature_flags\', \'experiments\', \'surveys\', \'early_access_features\', \'web_experiments\'.\n\n* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}, "is_remote_configuration": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "status": {"type": "string", "readOnly": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "last_called_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Last time this feature flag was called (from $feature_flag_called events)"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_should_create_usage_dashboard": {"type": "boolean", "writeOnly": true, "default": true, "title": " should create usage dashboard"}}, "required": ["can_edit", "created_by", "experiment_set", "features", "id", "is_simple_flag", "key", "last_modified_by", "rollout_percentage", "status", "surveys", "updated_at", "usage_dashboard", "user_access_level"]}',  # noqa: E501
    "CREATEFEATUREFLAGUSAGEDASHBOARD": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "description": "contains the description for the flag (field name `name` is kept for backwards-compatibility)"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "version": {"type": "integer", "default": 0}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_simple_flag": {"type": "boolean", "readOnly": true}, "rollout_percentage": {"type": "integer", "nullable": true, "readOnly": true}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "experiment_set": {"type": "string", "readOnly": true}, "surveys": {"type": "object", "additionalProperties": {}, "readOnly": true}, "features": {"type": "object", "additionalProperties": {}, "readOnly": true}, "rollback_conditions": {"nullable": true}, "performed_rollback": {"type": "boolean", "nullable": true}, "can_edit": {"type": "boolean", "readOnly": true}, "tags": {"type": "array", "items": {}}, "evaluation_tags": {"type": "array", "items": {}, "writeOnly": true}, "usage_dashboard": {"type": "integer", "readOnly": true}, "analytics_dashboards": {"type": "array", "items": {"type": "integer"}}, "has_enriched_analytics": {"type": "boolean", "nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "creation_context": {"allOf": [{"enum": ["feature_flags", "experiments", "surveys", "early_access_features", "web_experiments"], "type": "string", "description": "* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}], "writeOnly": true, "description": "Indicates the origin product of the feature flag. Choices: \'feature_flags\', \'experiments\', \'surveys\', \'early_access_features\', \'web_experiments\'.\n\n* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}, "is_remote_configuration": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "status": {"type": "string", "readOnly": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "last_called_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Last time this feature flag was called (from $feature_flag_called events)"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_should_create_usage_dashboard": {"type": "boolean", "writeOnly": true, "default": true, "title": " should create usage dashboard"}}, "required": ["can_edit", "created_by", "experiment_set", "features", "id", "is_simple_flag", "key", "last_modified_by", "rollout_percentage", "status", "surveys", "updated_at", "usage_dashboard", "user_access_level"]}',  # noqa: E501
    "GETFEATUREFLAGKEYS": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "description": "contains the description for the flag (field name `name` is kept for backwards-compatibility)"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "version": {"type": "integer", "default": 0}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_simple_flag": {"type": "boolean", "readOnly": true}, "rollout_percentage": {"type": "integer", "nullable": true, "readOnly": true}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "experiment_set": {"type": "string", "readOnly": true}, "surveys": {"type": "object", "additionalProperties": {}, "readOnly": true}, "features": {"type": "object", "additionalProperties": {}, "readOnly": true}, "rollback_conditions": {"nullable": true}, "performed_rollback": {"type": "boolean", "nullable": true}, "can_edit": {"type": "boolean", "readOnly": true}, "tags": {"type": "array", "items": {}}, "evaluation_tags": {"type": "array", "items": {}, "writeOnly": true}, "usage_dashboard": {"type": "integer", "readOnly": true}, "analytics_dashboards": {"type": "array", "items": {"type": "integer"}}, "has_enriched_analytics": {"type": "boolean", "nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "creation_context": {"allOf": [{"enum": ["feature_flags", "experiments", "surveys", "early_access_features", "web_experiments"], "type": "string", "description": "* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}], "writeOnly": true, "description": "Indicates the origin product of the feature flag. Choices: \'feature_flags\', \'experiments\', \'surveys\', \'early_access_features\', \'web_experiments\'.\n\n* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}, "is_remote_configuration": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "status": {"type": "string", "readOnly": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "last_called_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Last time this feature flag was called (from $feature_flag_called events)"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_should_create_usage_dashboard": {"type": "boolean", "writeOnly": true, "default": true, "title": " should create usage dashboard"}}, "required": ["can_edit", "created_by", "experiment_set", "features", "id", "is_simple_flag", "key", "last_modified_by", "rollout_percentage", "status", "surveys", "updated_at", "usage_dashboard", "user_access_level"]}',  # noqa: E501
    "CREATEFEATUREFLAGBLASTRADIUS": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "description": "contains the description for the flag (field name `name` is kept for backwards-compatibility)"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time"}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "version": {"type": "integer", "default": 0}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_simple_flag": {"type": "boolean", "readOnly": true}, "rollout_percentage": {"type": "integer", "nullable": true, "readOnly": true}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "experiment_set": {"type": "string", "readOnly": true}, "surveys": {"type": "object", "additionalProperties": {}, "readOnly": true}, "features": {"type": "object", "additionalProperties": {}, "readOnly": true}, "rollback_conditions": {"nullable": true}, "performed_rollback": {"type": "boolean", "nullable": true}, "can_edit": {"type": "boolean", "readOnly": true}, "tags": {"type": "array", "items": {}}, "evaluation_tags": {"type": "array", "items": {}, "writeOnly": true}, "usage_dashboard": {"type": "integer", "readOnly": true}, "analytics_dashboards": {"type": "array", "items": {"type": "integer"}}, "has_enriched_analytics": {"type": "boolean", "nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "creation_context": {"allOf": [{"enum": ["feature_flags", "experiments", "surveys", "early_access_features", "web_experiments"], "type": "string", "description": "* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}], "writeOnly": true, "description": "Indicates the origin product of the feature flag. Choices: \'feature_flags\', \'experiments\', \'surveys\', \'early_access_features\', \'web_experiments\'.\n\n* `feature_flags` - feature_flags\n* `experiments` - experiments\n* `surveys` - surveys\n* `early_access_features` - early_access_features\n* `web_experiments` - web_experiments"}, "is_remote_configuration": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "status": {"type": "string", "readOnly": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "last_called_at": {"type": "string", "format": "date-time", "nullable": true, "description": "Last time this feature flag was called (from $feature_flag_called events)"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "_should_create_usage_dashboard": {"type": "boolean", "writeOnly": true, "default": true, "title": " should create usage dashboard"}}, "required": ["can_edit", "created_by", "experiment_set", "features", "id", "is_simple_flag", "key", "last_modified_by", "rollout_percentage", "status", "surveys", "updated_at", "usage_dashboard", "user_access_level"]}',  # noqa: E501
    "CREATEPROJECTFILESYSTEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "UPDATEFILESYSTEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "MODIFYFILESYSTEM": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "FETCHFOLDERFILECOUNT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "CREATEFILESYSTEMLINK": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "MOVEFILESYSTEMENTRY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "FETCHFILECOUNTBYPATH": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "CREATEFILESYSTEMLOGVIEW": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "path": {"type": "string"}, "depth": {"type": "integer", "readOnly": true, "nullable": true}, "type": {"type": "string", "maxLength": 100}, "ref": {"type": "string", "nullable": true, "maxLength": 100}, "href": {"type": "string", "nullable": true}, "meta": {"nullable": true}, "shortcut": {"type": "boolean", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_viewed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["created_at", "depth", "id", "last_viewed_at", "path"]}',  # noqa: E501
    "UPDATEGROUPDASHBOARD": '{"type": "object", "properties": {"group_type": {"type": "string", "readOnly": true}, "group_type_index": {"type": "integer", "readOnly": true}, "name_singular": {"type": "string", "nullable": true, "maxLength": 400}, "name_plural": {"type": "string", "nullable": true, "maxLength": 400}, "detail_dashboard": {"type": "integer", "nullable": true}, "default_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "nullable": true}}, "required": ["group_type", "group_type_index"]}',  # noqa: E501
    "UPDATEDEFAULTGROUPCOLUMNS": '{"type": "object", "properties": {"group_type": {"type": "string", "readOnly": true}, "group_type_index": {"type": "integer", "readOnly": true}, "name_singular": {"type": "string", "nullable": true, "maxLength": 400}, "name_plural": {"type": "string", "nullable": true, "maxLength": 400}, "detail_dashboard": {"type": "integer", "nullable": true}, "default_columns": {"type": "array", "items": {"type": "string"}, "nullable": true}, "created_at": {"type": "string", "format": "date-time", "nullable": true}}, "required": ["group_type", "group_type_index"]}',  # noqa: E501
    "CREATEHOGFUNCTION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["bytecode", "created_at", "created_by", "id", "status", "template", "transpiled", "updated_at"]}',  # noqa: E501
    "MODIFYHOGFUNCTIONS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["bytecode", "created_at", "created_by", "id", "status", "template", "transpiled", "updated_at"]}',  # noqa: E501
    "UPDATEHOGFUNCTIONVIEWS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "TRACKFILESYSTEMVIEW": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["bytecode", "created_at", "created_by", "id", "status", "template", "transpiled", "updated_at"]}',  # noqa: E501
    "TRACKFSVIEW": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["bytecode", "created_at", "created_by", "id", "status", "template", "transpiled", "updated_at"]}',  # noqa: E501
    "UPDATEHOGFUNCTIONORDER": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "type": {"nullable": true, "oneOf": [{"enum": ["destination", "site_destination", "internal_destination", "source_webhook", "site_app", "transformation"], "type": "string", "description": "* `destination` - Destination\n* `site_destination` - Site Destination\n* `internal_destination` - Internal Destination\n* `source_webhook` - Source Webhook\n* `site_app` - Site App\n* `transformation` - Transformation"}, {"enum": [null]}]}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "deleted": {"type": "boolean", "writeOnly": true}, "hog": {"type": "string"}, "bytecode": {"readOnly": true, "nullable": true}, "transpiled": {"type": "string", "readOnly": true, "nullable": true}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}, "masking": {"allOf": [{"type": "object", "properties": {"ttl": {"type": "integer", "maximum": 86400, "minimum": 60}, "threshold": {"type": "integer", "nullable": true}, "hash": {"type": "string"}, "bytecode": {"nullable": true}}, "required": ["hash", "ttl"]}], "nullable": true}, "mappings": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "inputs_schema": {"type": "array", "items": {"type": "object", "properties": {"type": {"enum": ["string", "number", "boolean", "dictionary", "choice", "json", "integration", "integration_field", "email", "native_email"], "type": "string", "description": "* `string` - string\n* `number` - number\n* `boolean` - boolean\n* `dictionary` - dictionary\n* `choice` - choice\n* `json` - json\n* `integration` - integration\n* `integration_field` - integration_field\n* `email` - email\n* `native_email` - native_email"}, "key": {"type": "string"}, "label": {"type": "string"}, "choices": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "required": {"type": "boolean", "default": false}, "default": {}, "secret": {"type": "boolean", "default": false}, "hidden": {"type": "boolean", "default": false}, "description": {"type": "string"}, "integration": {"type": "string"}, "integration_key": {"type": "string"}, "requires_field": {"type": "string"}, "integration_field": {"type": "string"}, "requiredScopes": {"type": "string"}, "templating": {"enum": [true, false, "hog", "liquid"], "description": "* `True` - True\n* `False` - False\n* `hog` - hog\n* `liquid` - liquid"}}, "required": ["key", "type"]}}, "inputs": {"type": "object", "additionalProperties": {"type": "object", "properties": {"value": {"type": "string"}, "templating": {"enum": ["hog", "liquid"], "type": "string", "description": "* `hog` - hog\n* `liquid` - liquid"}, "bytecode": {"type": "array", "items": {}, "readOnly": true}, "order": {"type": "integer", "readOnly": true}, "transpiled": {"readOnly": true}}, "required": ["bytecode", "order", "transpiled"]}}, "filters": {"type": "object", "properties": {"source": {"allOf": [{"enum": ["events", "person-updates"], "type": "string", "description": "* `events` - events\n* `person-updates` - person-updates"}], "default": "events"}, "actions": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "events": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "properties": {"type": "array", "items": {"type": "object", "additionalProperties": {}}}, "bytecode": {"nullable": true}, "transpiled": {}, "filter_test_accounts": {"type": "boolean"}, "bytecode_error": {"type": "string"}}}}}, "nullable": true}, "icon_url": {"type": "string", "nullable": true}, "template": {"allOf": [{"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string", "nullable": true}, "code": {"type": "string"}, "code_language": {"type": "string", "maxLength": 20}, "inputs_schema": {}, "type": {"type": "string", "maxLength": 50}, "status": {"type": "string", "maxLength": 20}, "category": {}, "free": {"type": "boolean"}, "icon_url": {"type": "string", "nullable": true}, "filters": {"nullable": true}, "masking": {"nullable": true}, "mapping_templates": {"type": "array", "items": {"type": "object", "properties": {"name": {"type": "string"}, "include_by_default": {"type": "boolean", "nullable": true}, "filters": {"nullable": true}, "inputs": {"nullable": true}, "inputs_schema": {"nullable": true}}, "required": ["name"]}, "nullable": true}}, "required": ["code", "id", "inputs_schema", "name", "type"]}], "readOnly": true}, "template_id": {"type": "string", "writeOnly": true, "nullable": true, "maxLength": 400}, "status": {"allOf": [{"type": "object", "properties": {"state": {"enum": [0, 1, 2, 3, 11, 12], "type": "integer", "description": "* `0` - 0\n* `1` - 1\n* `2` - 2\n* `3` - 3\n* `11` - 11\n* `12` - 12"}, "tokens": {"type": "integer"}}, "required": ["state", "tokens"]}], "readOnly": true, "nullable": true}, "execution_order": {"type": "integer", "maximum": 32767, "minimum": 0, "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "CREATEINSIGHTENTRY": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}, "required": ["alerts", "cache_target_age", "columns", "created_at", "created_by", "dashboard_tiles", "effective_privilege_level", "effective_restriction_level", "hasMore", "hogql", "id", "is_cached", "is_sample", "last_modified_at", "last_modified_by", "last_refresh", "last_viewed_at", "next_allowed_client_refresh", "query_status", "result", "short_id", "timezone", "types", "updated_at", "user_access_level"]}',  # noqa: E501
    "CREATEINSIGHTSSHARINGPASSWORD": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "REFRESHINSIGHTSHARING": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "UPDATEINSIGHTS": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}, "required": ["alerts", "cache_target_age", "columns", "created_at", "created_by", "dashboard_tiles", "effective_privilege_level", "effective_restriction_level", "hasMore", "hogql", "id", "is_cached", "is_sample", "last_modified_at", "last_modified_by", "last_refresh", "last_viewed_at", "next_allowed_client_refresh", "query_status", "result", "short_id", "timezone", "types", "updated_at", "user_access_level"]}',  # noqa: E501
    "UPDATEINSIGHTSVIEWLOG": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "STOPINSIGHTPROCESS": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}, "required": ["alerts", "cache_target_age", "columns", "created_at", "created_by", "dashboard_tiles", "effective_privilege_level", "effective_restriction_level", "hasMore", "hogql", "id", "is_cached", "is_sample", "last_modified_at", "last_modified_by", "last_refresh", "last_viewed_at", "next_allowed_client_refresh", "query_status", "result", "short_id", "timezone", "types", "updated_at", "user_access_level"]}',  # noqa: E501
    "RECORDINSIGHTVIEWS": '{"type": "object", "description": "Simplified serializer to speed response times when loading large amounts of objects.", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "query": {"type": "object", "example": {"kind": "InsightVizNode", "source": {"kind": "TrendsQuery", "series": [{"kind": "EventsNode", "math": "total", "name": "$pageview", "event": "$pageview", "version": 1}], "version": 1}, "version": 1}, "nullable": true}, "order": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "deleted": {"type": "boolean"}, "dashboards": {"type": "array", "items": {"type": "integer"}, "description": "\n        DEPRECATED. Will be removed in a future release. Use dashboard_tiles instead.\n        A dashboard ID for each of the dashboards that this insight is displayed on.\n        "}, "dashboard_tiles": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard_id": {"type": "integer", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}}, "required": ["dashboard_id", "id"]}, "readOnly": true, "description": "\n    A dashboard tile ID and dashboard_id for each of the dashboards that this insight is displayed on.\n    "}, "last_refresh": {"type": "string", "readOnly": true, "description": "\n    The datetime this insight\'s results were generated.\n    If added to one or more dashboards the insight can be refreshed separately on each.\n    Returns the appropriate last_refresh datetime for the context the insight is viewed in\n    (see from_dashboard query parameter).\n    "}, "cache_target_age": {"type": "string", "readOnly": true, "description": "The target age of the cached results for this insight."}, "next_allowed_client_refresh": {"type": "string", "readOnly": true, "description": "\n    The earliest possible datetime at which we\'ll allow the cached results for this insight to be refreshed\n    by querying the database.\n    "}, "result": {"type": "string", "readOnly": true}, "hasMore": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "description": {"type": "string", "nullable": true, "maxLength": 400}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "tags": {"type": "array", "items": {}}, "favorited": {"type": "boolean"}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "is_sample": {"type": "boolean", "readOnly": true}, "effective_restriction_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "effective_privilege_level": {"allOf": [{"enum": [21, 37], "type": "integer"}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "timezone": {"type": "string", "readOnly": true, "description": "The timezone this chart is displayed in."}, "is_cached": {"type": "string", "readOnly": true}, "query_status": {"type": "string", "readOnly": true}, "hogql": {"type": "string", "readOnly": true}, "types": {"type": "string", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}, "alerts": {"type": "string", "readOnly": true}, "last_viewed_at": {"type": "string", "readOnly": true}}, "required": ["alerts", "cache_target_age", "columns", "created_at", "created_by", "dashboard_tiles", "effective_privilege_level", "effective_restriction_level", "hasMore", "hogql", "id", "is_cached", "is_sample", "last_modified_at", "last_modified_by", "last_refresh", "last_viewed_at", "next_allowed_client_refresh", "query_status", "result", "short_id", "timezone", "types", "updated_at", "user_access_level"]}',  # noqa: E501
    "CREATEPROJECTINTEGRATION": '{"type": "object", "description": "Standard Integration serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "kind": {"enum": ["slack", "salesforce", "hubspot", "google-pubsub", "google-cloud-storage", "google-ads", "google-sheets", "snapchat", "linkedin-ads", "reddit-ads", "tiktok-ads", "intercom", "email", "linear", "github", "meta-ads", "twilio", "clickup", "vercel", "databricks"], "type": "string", "description": "* `slack` - Slack\n* `salesforce` - Salesforce\n* `hubspot` - Hubspot\n* `google-pubsub` - Google Pubsub\n* `google-cloud-storage` - Google Cloud Storage\n* `google-ads` - Google Ads\n* `google-sheets` - Google Sheets\n* `snapchat` - Snapchat\n* `linkedin-ads` - Linkedin Ads\n* `reddit-ads` - Reddit Ads\n* `tiktok-ads` - Tiktok Ads\n* `intercom` - Intercom\n* `email` - Email\n* `linear` - Linear\n* `github` - Github\n* `meta-ads` - Meta Ads\n* `twilio` - Twilio\n* `clickup` - Clickup\n* `vercel` - Vercel\n* `databricks` - Databricks"}, "config": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "errors": {"type": "string", "readOnly": true}, "display_name": {"type": "string", "readOnly": true}}, "required": ["created_at", "created_by", "display_name", "errors", "id", "kind"]}',  # noqa: E501
    "CREATEEMAILVERIFICATIONINTEGRATION": '{"type": "object", "description": "Standard Integration serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "kind": {"enum": ["slack", "salesforce", "hubspot", "google-pubsub", "google-cloud-storage", "google-ads", "google-sheets", "snapchat", "linkedin-ads", "reddit-ads", "tiktok-ads", "intercom", "email", "linear", "github", "meta-ads", "twilio", "clickup", "vercel", "databricks"], "type": "string", "description": "* `slack` - Slack\n* `salesforce` - Salesforce\n* `hubspot` - Hubspot\n* `google-pubsub` - Google Pubsub\n* `google-cloud-storage` - Google Cloud Storage\n* `google-ads` - Google Ads\n* `google-sheets` - Google Sheets\n* `snapchat` - Snapchat\n* `linkedin-ads` - Linkedin Ads\n* `reddit-ads` - Reddit Ads\n* `tiktok-ads` - Tiktok Ads\n* `intercom` - Intercom\n* `email` - Email\n* `linear` - Linear\n* `github` - Github\n* `meta-ads` - Meta Ads\n* `twilio` - Twilio\n* `clickup` - Clickup\n* `vercel` - Vercel\n* `databricks` - Databricks"}, "config": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "errors": {"type": "string", "readOnly": true}, "display_name": {"type": "string", "readOnly": true}}, "required": ["created_at", "created_by", "display_name", "errors", "id", "kind"]}',  # noqa: E501
    "CREATECHATCOMPLETION": '{"type": "object", "properties": {"model": {"type": "string", "description": "The model to use for completion (e.g., \'gpt-4\', \'gpt-3.5-turbo\')"}, "messages": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "description": "List of message objects with \'role\' and \'content\'"}, "temperature": {"type": "number", "format": "double", "maximum": 2.0, "minimum": 0.0, "description": "Sampling temperature between 0 and 2"}, "top_p": {"type": "number", "format": "double", "maximum": 1.0, "minimum": 0.0, "description": "Nucleus sampling parameter"}, "n": {"type": "integer", "minimum": 1, "description": "Number of completions to generate"}, "stream": {"type": "boolean", "default": false, "description": "Whether to stream the response"}, "stream_options": {"description": "Additional options for streaming"}, "stop": {"type": "array", "items": {"type": "string"}, "description": "Stop sequences"}, "max_tokens": {"type": "integer", "minimum": 1, "description": "Maximum number of tokens to generate"}, "max_completion_tokens": {"type": "integer", "minimum": 1, "description": "Maximum number of completion tokens (alternative to max_tokens)"}, "presence_penalty": {"type": "number", "format": "double", "maximum": 2.0, "minimum": -2.0, "description": "Presence penalty between -2.0 and 2.0"}, "frequency_penalty": {"type": "number", "format": "double", "maximum": 2.0, "minimum": -2.0, "description": "Frequency penalty between -2.0 and 2.0"}, "logit_bias": {"description": "Logit bias mapping"}, "user": {"type": "string", "description": "Unique user identifier"}, "tools": {"type": "array", "items": {}, "description": "List of tools available to the model"}, "tool_choice": {"description": "Controls which tool is called"}, "parallel_tool_calls": {"type": "boolean", "description": "Whether to allow parallel tool calls"}, "response_format": {"description": "Format for the model output"}, "seed": {"type": "integer", "description": "Random seed for deterministic sampling"}, "logprobs": {"type": "boolean", "description": "Whether to return log probabilities"}, "top_logprobs": {"type": "integer", "maximum": 20, "minimum": 0, "description": "Number of most likely tokens to return at each position"}, "modalities": {"type": "array", "items": {"enum": ["text", "audio"], "type": "string", "description": "* `text` - text\n* `audio` - audio"}, "description": "Output modalities"}, "prediction": {"description": "Prediction content for speculative decoding"}, "audio": {"description": "Audio input parameters"}, "reasoning_effort": {"allOf": [{"enum": ["none", "minimal", "low", "medium", "high", "default"], "type": "string", "description": "* `none` - none\n* `minimal` - minimal\n* `low` - low\n* `medium` - medium\n* `high` - high\n* `default` - default"}], "description": "Reasoning effort level for o-series models\n\n* `none` - none\n* `minimal` - minimal\n* `low` - low\n* `medium` - medium\n* `high` - high\n* `default` - default"}, "verbosity": {"allOf": [{"enum": ["concise", "standard", "verbose"], "type": "string", "description": "* `concise` - concise\n* `standard` - standard\n* `verbose` - verbose"}], "description": "Controls the verbosity level of the model\'s output\n\n* `concise` - concise\n* `standard` - standard\n* `verbose` - verbose"}, "store": {"type": "boolean", "description": "Whether to store the output for model distillation or evals"}, "web_search_options": {"description": "Web search tool configuration"}, "functions": {"type": "array", "items": {}, "description": "Deprecated in favor of tools. List of functions the model may call"}, "function_call": {"description": "Deprecated in favor of tool_choice. Controls which function is called"}}, "required": ["messages", "model"]}',  # noqa: E501
    "CREATEMESSAGEWITHCLAUDE": '{"type": "object", "properties": {"model": {"type": "string", "description": "The model to use for completion (e.g., \'claude-3-5-sonnet-20241022\')"}, "messages": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "description": "List of message objects with \'role\' and \'content\'"}, "max_tokens": {"type": "integer", "minimum": 1, "default": 4096, "description": "Maximum number of tokens to generate"}, "temperature": {"type": "number", "format": "double", "maximum": 1.0, "minimum": 0.0, "description": "Sampling temperature between 0 and 1"}, "top_p": {"type": "number", "format": "double", "maximum": 1.0, "minimum": 0.0, "description": "Nucleus sampling parameter"}, "top_k": {"type": "integer", "minimum": 0, "description": "Top-k sampling parameter"}, "stream": {"type": "boolean", "default": false, "description": "Whether to stream the response"}, "stop_sequences": {"type": "array", "items": {"type": "string"}, "description": "Custom stop sequences"}, "system": {"description": "System prompt (string or array of content blocks)"}, "metadata": {"description": "Metadata to attach to the request"}, "thinking": {"description": "Thinking configuration for extended thinking"}, "tools": {"type": "array", "items": {}, "description": "List of tools available to the model"}, "tool_choice": {"description": "Controls which tool is called"}, "service_tier": {"allOf": [{"enum": ["auto", "standard_only"], "type": "string", "description": "* `auto` - auto\n* `standard_only` - standard_only"}], "description": "Service tier for the request\n\n* `auto` - auto\n* `standard_only` - standard_only"}}, "required": ["messages", "model"]}',  # noqa: E501
    "CREATENOTEBOOK": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "title": {"type": "string", "nullable": true, "maxLength": 256}, "content": {"nullable": true}, "text_content": {"type": "string", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "deleted": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "last_modified_at", "last_modified_by", "short_id", "user_access_level"]}',  # noqa: E501
    "UPDATENOTEBOOK": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "title": {"type": "string", "nullable": true, "maxLength": 256}, "content": {"nullable": true}, "text_content": {"type": "string", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "deleted": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "last_modified_at", "last_modified_by", "short_id", "user_access_level"]}',  # noqa: E501
    "UPDATENOTEBOOKDETAILS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "title": {"type": "string", "nullable": true, "maxLength": 256}, "content": {"nullable": true}, "text_content": {"type": "string", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "deleted": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "MODIFYPERSONDETAILS": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "QUEUEPERSONEVENTDELETION": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "REMOVEPERSONATTRIBUTE": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "REMOVEPERSONRECORDINGS": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "SPLITPERSONENTITYCREATE": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "MODIFYUSERATTRIBUTE": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "BULKDELETEPERSONS": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "CREATEORUPDATEPERSONS": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "ADDPERSONSFUNNELCORRELATION": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "RESETPERSONDISTINCTID": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}',  # noqa: E501
    "UPDATEPROPERTYDEFINITIONS": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "is_numerical": {"type": "boolean"}, "property_type": {"nullable": true, "oneOf": [{"enum": ["DateTime", "String", "Numeric", "Boolean", "Duration"], "type": "string", "description": "* `DateTime` - DateTime\n* `String` - String\n* `Numeric` - Numeric\n* `Boolean` - Boolean\n* `Duration` - Duration"}, {"enum": [""]}, {"enum": [null]}]}, "tags": {"type": "array", "items": {}}, "is_seen_on_filtered_events": {"type": "string", "readOnly": true}}, "required": ["id", "is_seen_on_filtered_events", "name"]}',  # noqa: E501
    "UPDATEPROPERTYDEFINITION": '{"type": "object", "description": "Serializer mixin that resolves appropriate response for tags depending on license.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "is_numerical": {"type": "boolean"}, "property_type": {"nullable": true, "oneOf": [{"enum": ["DateTime", "String", "Numeric", "Boolean", "Duration"], "type": "string", "description": "* `DateTime` - DateTime\n* `String` - String\n* `Numeric` - Numeric\n* `Boolean` - Boolean\n* `Duration` - Duration"}, {"enum": [""]}, {"enum": [null]}]}, "tags": {"type": "array", "items": {}}, "is_seen_on_filtered_events": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "NEWSESSIONRECORDINGPLAYLIST": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "filters": {}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "recordings_counts": {"type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"oneOf": [{"type": "integer"}, {"type": "boolean"}], "nullable": true}}, "readOnly": true}, "type": {"readOnly": true, "nullable": true, "oneOf": [{"enum": ["collection", "filters"], "type": "string", "description": "* `collection` - Collection\n* `filters` - Filters"}, {"enum": [null]}]}, "is_synthetic": {"type": "boolean", "description": "Return whether this is a synthetic playlist", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "is_synthetic", "last_modified_at", "last_modified_by", "recordings_counts", "short_id", "type"]}',  # noqa: E501
    "MODIFYSESSIONRECORDINGPLAYLIST": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "filters": {}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "recordings_counts": {"type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"oneOf": [{"type": "integer"}, {"type": "boolean"}], "nullable": true}}, "readOnly": true}, "type": {"readOnly": true, "nullable": true, "oneOf": [{"enum": ["collection", "filters"], "type": "string", "description": "* `collection` - Collection\n* `filters` - Filters"}, {"enum": [null]}]}, "is_synthetic": {"type": "boolean", "description": "Return whether this is a synthetic playlist", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "is_synthetic", "last_modified_at", "last_modified_by", "recordings_counts", "short_id", "type"]}',  # noqa: E501
    "EDITSESSIONPLAYLIST": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "filters": {}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "recordings_counts": {"type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"oneOf": [{"type": "integer"}, {"type": "boolean"}], "nullable": true}}, "readOnly": true}, "type": {"readOnly": true, "nullable": true, "oneOf": [{"enum": ["collection", "filters"], "type": "string", "description": "* `collection` - Collection\n* `filters` - Filters"}, {"enum": [null]}]}, "is_synthetic": {"type": "boolean", "description": "Return whether this is a synthetic playlist", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "ADDSESSIONRECORDINGTOPLAYLIST": '{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "short_id": {"type": "string", "readOnly": true}, "name": {"type": "string", "nullable": true, "maxLength": 400}, "derived_name": {"type": "string", "nullable": true, "maxLength": 400}, "description": {"type": "string"}, "pinned": {"type": "boolean"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "filters": {}, "last_modified_at": {"type": "string", "format": "date-time", "readOnly": true}, "last_modified_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "recordings_counts": {"type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"oneOf": [{"type": "integer"}, {"type": "boolean"}], "nullable": true}}, "readOnly": true}, "type": {"readOnly": true, "nullable": true, "oneOf": [{"enum": ["collection", "filters"], "type": "string", "description": "* `collection` - Collection\n* `filters` - Filters"}, {"enum": [null]}]}, "is_synthetic": {"type": "boolean", "description": "Return whether this is a synthetic playlist", "readOnly": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "is_synthetic", "last_modified_at", "last_modified_by", "recordings_counts", "short_id", "type"]}',  # noqa: E501
    "UPDATESESSIONRECORDING2": '{"type": "object", "properties": {"id": {"type": "string", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "viewed": {"type": "boolean", "readOnly": true}, "viewers": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "recording_duration": {"type": "integer", "readOnly": true}, "active_seconds": {"type": "integer", "readOnly": true, "nullable": true}, "inactive_seconds": {"type": "integer", "readOnly": true, "nullable": true}, "start_time": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "end_time": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "click_count": {"type": "integer", "readOnly": true, "nullable": true}, "keypress_count": {"type": "integer", "readOnly": true, "nullable": true}, "mouse_activity_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_log_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_warn_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_error_count": {"type": "integer", "readOnly": true, "nullable": true}, "start_url": {"type": "string", "readOnly": true, "nullable": true}, "person": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "string", "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}, "storage": {"type": "string", "readOnly": true}, "retention_period_days": {"type": "integer", "readOnly": true, "nullable": true}, "expiry_time": {"type": "string", "readOnly": true}, "recording_ttl": {"type": "string", "readOnly": true}, "snapshot_source": {"type": "string", "nullable": true, "readOnly": true}, "ongoing": {"type": "boolean", "readOnly": true}, "activity_score": {"type": "number", "format": "double", "nullable": true, "readOnly": true}}, "required": ["active_seconds", "activity_score", "click_count", "console_error_count", "console_log_count", "console_warn_count", "distinct_id", "end_time", "expiry_time", "id", "inactive_seconds", "keypress_count", "mouse_activity_count", "ongoing", "recording_duration", "recording_ttl", "retention_period_days", "snapshot_source", "start_time", "start_url", "storage", "viewed", "viewers"]}',  # noqa: E501
    "EDITSESSIONRECORDING": '{"type": "object", "properties": {"id": {"type": "string", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "viewed": {"type": "boolean", "readOnly": true}, "viewers": {"type": "array", "items": {"type": "string"}, "readOnly": true}, "recording_duration": {"type": "integer", "readOnly": true}, "active_seconds": {"type": "integer", "readOnly": true, "nullable": true}, "inactive_seconds": {"type": "integer", "readOnly": true, "nullable": true}, "start_time": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "end_time": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "click_count": {"type": "integer", "readOnly": true, "nullable": true}, "keypress_count": {"type": "integer", "readOnly": true, "nullable": true}, "mouse_activity_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_log_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_warn_count": {"type": "integer", "readOnly": true, "nullable": true}, "console_error_count": {"type": "integer", "readOnly": true, "nullable": true}, "start_url": {"type": "string", "readOnly": true, "nullable": true}, "person": {"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "distinct_ids": {"type": "string", "readOnly": true}, "properties": {}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}}, "required": ["created_at", "distinct_ids", "id", "name", "uuid"]}, "storage": {"type": "string", "readOnly": true}, "retention_period_days": {"type": "integer", "readOnly": true, "nullable": true}, "expiry_time": {"type": "string", "readOnly": true}, "recording_ttl": {"type": "string", "readOnly": true}, "snapshot_source": {"type": "string", "nullable": true, "readOnly": true}, "ongoing": {"type": "boolean", "readOnly": true}, "activity_score": {"type": "number", "format": "double", "nullable": true, "readOnly": true}}}',  # noqa: E501
    "CREATERECORDINGSHAREPASSWORD": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "UPDATESESSIONRECORDINGSHARING": '{"type": "object", "properties": {"created_at": {"type": "string", "format": "date-time", "readOnly": true}, "enabled": {"type": "boolean"}, "access_token": {"type": "string", "readOnly": true, "nullable": true}, "settings": {"nullable": true}, "password_required": {"type": "boolean"}, "share_passwords": {"type": "string", "readOnly": true}}, "required": ["access_token", "created_at", "share_passwords"]}',  # noqa: E501
    "CREATEPROJECTSUBSCRIPTION": '{"type": "object", "description": "Standard Subscription serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard": {"type": "integer", "nullable": true}, "insight": {"type": "integer", "nullable": true}, "target_type": {"enum": ["email", "slack", "webhook"], "type": "string", "description": "* `email` - Email\n* `slack` - Slack\n* `webhook` - Webhook"}, "target_value": {"type": "string"}, "frequency": {"enum": ["daily", "weekly", "monthly", "yearly"], "type": "string", "description": "* `daily` - Daily\n* `weekly` - Weekly\n* `monthly` - Monthly\n* `yearly` - Yearly"}, "interval": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "byweekday": {"type": "array", "items": {"enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"], "type": "string", "description": "* `monday` - Monday\n* `tuesday` - Tuesday\n* `wednesday` - Wednesday\n* `thursday` - Thursday\n* `friday` - Friday\n* `saturday` - Saturday\n* `sunday` - Sunday"}, "nullable": true}, "bysetpos": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "start_date": {"type": "string", "format": "date-time"}, "until_date": {"type": "string", "format": "date-time", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "title": {"type": "string", "nullable": true, "maxLength": 100}, "summary": {"type": "string", "readOnly": true}, "next_delivery_date": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "invite_message": {"type": "string", "nullable": true}}, "required": ["created_at", "created_by", "frequency", "id", "next_delivery_date", "start_date", "summary", "target_type", "target_value"]}',  # noqa: E501
    "UPDATESUBSCRIPTIONSETTINGS": '{"type": "object", "description": "Standard Subscription serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard": {"type": "integer", "nullable": true}, "insight": {"type": "integer", "nullable": true}, "target_type": {"enum": ["email", "slack", "webhook"], "type": "string", "description": "* `email` - Email\n* `slack` - Slack\n* `webhook` - Webhook"}, "target_value": {"type": "string"}, "frequency": {"enum": ["daily", "weekly", "monthly", "yearly"], "type": "string", "description": "* `daily` - Daily\n* `weekly` - Weekly\n* `monthly` - Monthly\n* `yearly` - Yearly"}, "interval": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "byweekday": {"type": "array", "items": {"enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"], "type": "string", "description": "* `monday` - Monday\n* `tuesday` - Tuesday\n* `wednesday` - Wednesday\n* `thursday` - Thursday\n* `friday` - Friday\n* `saturday` - Saturday\n* `sunday` - Sunday"}, "nullable": true}, "bysetpos": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "start_date": {"type": "string", "format": "date-time"}, "until_date": {"type": "string", "format": "date-time", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "title": {"type": "string", "nullable": true, "maxLength": 100}, "summary": {"type": "string", "readOnly": true}, "next_delivery_date": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "invite_message": {"type": "string", "nullable": true}}, "required": ["created_at", "created_by", "frequency", "id", "next_delivery_date", "start_date", "summary", "target_type", "target_value"]}',  # noqa: E501
    "UPDATESUBSCRIPTIONDETAILS": '{"type": "object", "description": "Standard Subscription serializer.", "properties": {"id": {"type": "integer", "readOnly": true}, "dashboard": {"type": "integer", "nullable": true}, "insight": {"type": "integer", "nullable": true}, "target_type": {"enum": ["email", "slack", "webhook"], "type": "string", "description": "* `email` - Email\n* `slack` - Slack\n* `webhook` - Webhook"}, "target_value": {"type": "string"}, "frequency": {"enum": ["daily", "weekly", "monthly", "yearly"], "type": "string", "description": "* `daily` - Daily\n* `weekly` - Weekly\n* `monthly` - Monthly\n* `yearly` - Yearly"}, "interval": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "byweekday": {"type": "array", "items": {"enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"], "type": "string", "description": "* `monday` - Monday\n* `tuesday` - Tuesday\n* `wednesday` - Wednesday\n* `thursday` - Thursday\n* `friday` - Friday\n* `saturday` - Saturday\n* `sunday` - Sunday"}, "nullable": true}, "bysetpos": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "count": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "start_date": {"type": "string", "format": "date-time"}, "until_date": {"type": "string", "format": "date-time", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "deleted": {"type": "boolean"}, "title": {"type": "string", "nullable": true, "maxLength": 100}, "summary": {"type": "string", "readOnly": true}, "next_delivery_date": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}, "invite_message": {"type": "string", "nullable": true}}}',  # noqa: E501
    "CREATESURVEY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string"}, "type": {"enum": ["popover", "widget", "external_survey", "api"], "type": "string", "description": "* `popover` - popover\n* `widget` - widget\n* `external_survey` - external survey\n* `api` - api"}, "schedule": {"type": "string", "nullable": true}, "linked_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "linked_flag_id": {"type": "integer", "writeOnly": true, "nullable": true}, "targeting_flag_id": {"type": "integer", "writeOnly": true}, "targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "internal_targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "targeting_flag_filters": {"writeOnly": true, "nullable": true}, "remove_targeting_flag": {"type": "boolean", "writeOnly": true, "nullable": true}, "questions": {"nullable": true, "description": "\n        The `array` of questions included in the survey. Each question must conform to one of the defined question types: Basic, Link, Rating, or Multiple Choice.\n\n        Basic (open-ended question)\n        - `id`: The question ID\n        - `type`: `open`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Link (a question with a link)\n        - `id`: The question ID\n        - `type`: `link`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `link`: The URL associated with the question.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Rating (a question with a rating scale)\n        - `id`: The question ID\n        - `type`: `rating`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `display`: Display style of the rating (`number` or `emoji`).\n        - `scale`: The scale of the rating (`number`).\n        - `lowerBoundLabel`: Label for the lower bound of the scale.\n        - `upperBoundLabel`: Label for the upper bound of the scale.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Multiple choice\n        - `id`: The question ID\n        - `type`: `single_choice` or `multiple_choice`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `choices`: An array of choices for the question.\n        - `shuffleOptions`: Whether to shuffle the order of the choices (`boolean`).\n        - `hasOpenChoice`: Whether the question allows an open-ended response (`boolean`).\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Branching logic can be one of the following types:\n\n        Next question: Proceeds to the next question\n        ```json\n        {\n            \"type\": \"next_question\"\n        }\n        ```\n\n        End: Ends the survey, optionally displaying a confirmation message.\n        ```json\n        {\n            \"type\": \"end\"\n        }\n        ```\n\n        Response-based: Branches based on the response values. Available for the `rating` and `single_choice` question types.\n        ```json\n        {\n            \"type\": \"response_based\",\n            \"responseValues\": {\n                \"responseKey\": \"value\"\n            }\n        }\n        ```\n\n        Specific question: Proceeds to a specific question by index.\n        ```json\n        {\n            \"type\": \"specific_question\",\n            \"index\": 2\n        }\n        ```\n        "}, "conditions": {"nullable": true}, "appearance": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "archived": {"type": "boolean"}, "responses_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "iteration_count": {"type": "integer", "maximum": 500, "minimum": 0, "nullable": true}, "iteration_frequency_days": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "iteration_start_dates": {"type": "array", "items": {"type": "string", "format": "date-time", "nullable": true}, "nullable": true}, "current_iteration": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "current_iteration_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_interval_type": {"nullable": true, "oneOf": [{"enum": ["day", "week", "month"], "type": "string", "description": "* `day` - day\n* `week` - week\n* `month` - month"}, {"enum": [""]}, {"enum": [null]}]}, "response_sampling_interval": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_daily_limits": {"nullable": true}, "enable_partial_responses": {"type": "boolean", "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "internal_targeting_flag", "linked_flag", "name", "targeting_flag", "type"]}',  # noqa: E501
    "UPDATESURVEYTRACKING": '{"type": "object", "description": "Mixin for serializers to add user access control fields", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string"}, "type": {"enum": ["popover", "widget", "external_survey", "api"], "type": "string", "description": "* `popover` - popover\n* `widget` - widget\n* `external_survey` - external survey\n* `api` - api"}, "schedule": {"type": "string", "nullable": true}, "linked_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "linked_flag_id": {"type": "integer", "nullable": true}, "targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "internal_targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "questions": {"nullable": true, "description": "\n        The `array` of questions included in the survey. Each question must conform to one of the defined question types: Basic, Link, Rating, or Multiple Choice.\n\n        Basic (open-ended question)\n        - `id`: The question ID\n        - `type`: `open`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Link (a question with a link)\n        - `id`: The question ID\n        - `type`: `link`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `link`: The URL associated with the question.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Rating (a question with a rating scale)\n        - `id`: The question ID\n        - `type`: `rating`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `display`: Display style of the rating (`number` or `emoji`).\n        - `scale`: The scale of the rating (`number`).\n        - `lowerBoundLabel`: Label for the lower bound of the scale.\n        - `upperBoundLabel`: Label for the upper bound of the scale.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Multiple choice\n        - `id`: The question ID\n        - `type`: `single_choice` or `multiple_choice`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `choices`: An array of choices for the question.\n        - `shuffleOptions`: Whether to shuffle the order of the choices (`boolean`).\n        - `hasOpenChoice`: Whether the question allows an open-ended response (`boolean`).\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Branching logic can be one of the following types:\n\n        Next question: Proceeds to the next question\n        ```json\n        {\n            \"type\": \"next_question\"\n        }\n        ```\n\n        End: Ends the survey, optionally displaying a confirmation message.\n        ```json\n        {\n            \"type\": \"end\"\n        }\n        ```\n\n        Response-based: Branches based on the response values. Available for the `rating` and `single_choice` question types.\n        ```json\n        {\n            \"type\": \"response_based\",\n            \"responseValues\": {\n                \"responseKey\": \"value\"\n            }\n        }\n        ```\n\n        Specific question: Proceeds to a specific question by index.\n        ```json\n        {\n            \"type\": \"specific_question\",\n            \"index\": 2\n        }\n        ```\n        "}, "conditions": {"type": "string", "readOnly": true}, "appearance": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "archived": {"type": "boolean"}, "responses_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "feature_flag_keys": {"type": "array", "items": {}, "readOnly": true}, "iteration_count": {"type": "integer", "maximum": 500, "minimum": 0, "nullable": true}, "iteration_frequency_days": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "iteration_start_dates": {"type": "array", "items": {"type": "string", "format": "date-time", "nullable": true}, "nullable": true}, "current_iteration": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "current_iteration_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_interval_type": {"nullable": true, "oneOf": [{"enum": ["day", "week", "month"], "type": "string", "description": "* `day` - day\n* `week` - week\n* `month` - month"}, {"enum": [""]}, {"enum": [null]}]}, "response_sampling_interval": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_daily_limits": {"nullable": true}, "enable_partial_responses": {"type": "boolean", "nullable": true}, "user_access_level": {"type": "string", "nullable": true, "readOnly": true, "description": "The effective access level the user has for this object"}}, "required": ["conditions", "created_at", "created_by", "feature_flag_keys", "id", "internal_targeting_flag", "linked_flag", "name", "targeting_flag", "type", "user_access_level"]}',  # noqa: E501
    "UPDATESURVEYINFO": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string"}, "type": {"enum": ["popover", "widget", "external_survey", "api"], "type": "string", "description": "* `popover` - popover\n* `widget` - widget\n* `external_survey` - external survey\n* `api` - api"}, "schedule": {"type": "string", "nullable": true}, "linked_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "linked_flag_id": {"type": "integer", "writeOnly": true, "nullable": true}, "targeting_flag_id": {"type": "integer", "writeOnly": true}, "targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "internal_targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "targeting_flag_filters": {"writeOnly": true, "nullable": true}, "remove_targeting_flag": {"type": "boolean", "writeOnly": true, "nullable": true}, "questions": {"nullable": true, "description": "\n        The `array` of questions included in the survey. Each question must conform to one of the defined question types: Basic, Link, Rating, or Multiple Choice.\n\n        Basic (open-ended question)\n        - `id`: The question ID\n        - `type`: `open`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Link (a question with a link)\n        - `id`: The question ID\n        - `type`: `link`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `link`: The URL associated with the question.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Rating (a question with a rating scale)\n        - `id`: The question ID\n        - `type`: `rating`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `display`: Display style of the rating (`number` or `emoji`).\n        - `scale`: The scale of the rating (`number`).\n        - `lowerBoundLabel`: Label for the lower bound of the scale.\n        - `upperBoundLabel`: Label for the upper bound of the scale.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Multiple choice\n        - `id`: The question ID\n        - `type`: `single_choice` or `multiple_choice`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `choices`: An array of choices for the question.\n        - `shuffleOptions`: Whether to shuffle the order of the choices (`boolean`).\n        - `hasOpenChoice`: Whether the question allows an open-ended response (`boolean`).\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Branching logic can be one of the following types:\n\n        Next question: Proceeds to the next question\n        ```json\n        {\n            \"type\": \"next_question\"\n        }\n        ```\n\n        End: Ends the survey, optionally displaying a confirmation message.\n        ```json\n        {\n            \"type\": \"end\"\n        }\n        ```\n\n        Response-based: Branches based on the response values. Available for the `rating` and `single_choice` question types.\n        ```json\n        {\n            \"type\": \"response_based\",\n            \"responseValues\": {\n                \"responseKey\": \"value\"\n            }\n        }\n        ```\n\n        Specific question: Proceeds to a specific question by index.\n        ```json\n        {\n            \"type\": \"specific_question\",\n            \"index\": 2\n        }\n        ```\n        "}, "conditions": {"nullable": true}, "appearance": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "archived": {"type": "boolean"}, "responses_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "iteration_count": {"type": "integer", "maximum": 500, "minimum": 0, "nullable": true}, "iteration_frequency_days": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "iteration_start_dates": {"type": "array", "items": {"type": "string", "format": "date-time", "nullable": true}, "nullable": true}, "current_iteration": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "current_iteration_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_interval_type": {"nullable": true, "oneOf": [{"enum": ["day", "week", "month"], "type": "string", "description": "* `day` - day\n* `week` - week\n* `month` - month"}, {"enum": [""]}, {"enum": [null]}]}, "response_sampling_interval": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_daily_limits": {"nullable": true}, "enable_partial_responses": {"type": "boolean", "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}}',  # noqa: E501
    "DUPLICATESURVEYTOPROJECTS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string"}, "type": {"enum": ["popover", "widget", "external_survey", "api"], "type": "string", "description": "* `popover` - popover\n* `widget` - widget\n* `external_survey` - external survey\n* `api` - api"}, "schedule": {"type": "string", "nullable": true}, "linked_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "linked_flag_id": {"type": "integer", "writeOnly": true, "nullable": true}, "targeting_flag_id": {"type": "integer", "writeOnly": true}, "targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "internal_targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "targeting_flag_filters": {"writeOnly": true, "nullable": true}, "remove_targeting_flag": {"type": "boolean", "writeOnly": true, "nullable": true}, "questions": {"nullable": true, "description": "\n        The `array` of questions included in the survey. Each question must conform to one of the defined question types: Basic, Link, Rating, or Multiple Choice.\n\n        Basic (open-ended question)\n        - `id`: The question ID\n        - `type`: `open`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Link (a question with a link)\n        - `id`: The question ID\n        - `type`: `link`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `link`: The URL associated with the question.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Rating (a question with a rating scale)\n        - `id`: The question ID\n        - `type`: `rating`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `display`: Display style of the rating (`number` or `emoji`).\n        - `scale`: The scale of the rating (`number`).\n        - `lowerBoundLabel`: Label for the lower bound of the scale.\n        - `upperBoundLabel`: Label for the upper bound of the scale.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Multiple choice\n        - `id`: The question ID\n        - `type`: `single_choice` or `multiple_choice`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `choices`: An array of choices for the question.\n        - `shuffleOptions`: Whether to shuffle the order of the choices (`boolean`).\n        - `hasOpenChoice`: Whether the question allows an open-ended response (`boolean`).\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Branching logic can be one of the following types:\n\n        Next question: Proceeds to the next question\n        ```json\n        {\n            \"type\": \"next_question\"\n        }\n        ```\n\n        End: Ends the survey, optionally displaying a confirmation message.\n        ```json\n        {\n            \"type\": \"end\"\n        }\n        ```\n\n        Response-based: Branches based on the response values. Available for the `rating` and `single_choice` question types.\n        ```json\n        {\n            \"type\": \"response_based\",\n            \"responseValues\": {\n                \"responseKey\": \"value\"\n            }\n        }\n        ```\n\n        Specific question: Proceeds to a specific question by index.\n        ```json\n        {\n            \"type\": \"specific_question\",\n            \"index\": 2\n        }\n        ```\n        "}, "conditions": {"nullable": true}, "appearance": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "archived": {"type": "boolean"}, "responses_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "iteration_count": {"type": "integer", "maximum": 500, "minimum": 0, "nullable": true}, "iteration_frequency_days": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "iteration_start_dates": {"type": "array", "items": {"type": "string", "format": "date-time", "nullable": true}, "nullable": true}, "current_iteration": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "current_iteration_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_interval_type": {"nullable": true, "oneOf": [{"enum": ["day", "week", "month"], "type": "string", "description": "* `day` - day\n* `week` - week\n* `month` - month"}, {"enum": [""]}, {"enum": [null]}]}, "response_sampling_interval": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_daily_limits": {"nullable": true}, "enable_partial_responses": {"type": "boolean", "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "internal_targeting_flag", "linked_flag", "name", "targeting_flag", "type"]}',  # noqa: E501
    "SUMMARIZESURVEYRESPONSES": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 400}, "description": {"type": "string"}, "type": {"enum": ["popover", "widget", "external_survey", "api"], "type": "string", "description": "* `popover` - popover\n* `widget` - widget\n* `external_survey` - external survey\n* `api` - api"}, "schedule": {"type": "string", "nullable": true}, "linked_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "linked_flag_id": {"type": "integer", "writeOnly": true, "nullable": true}, "targeting_flag_id": {"type": "integer", "writeOnly": true}, "targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "internal_targeting_flag": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "team_id": {"type": "integer", "readOnly": true}, "name": {"type": "string"}, "key": {"type": "string", "maxLength": 400}, "filters": {"type": "object", "additionalProperties": {}}, "deleted": {"type": "boolean"}, "active": {"type": "boolean"}, "ensure_experience_continuity": {"type": "boolean", "nullable": true}, "has_encrypted_payloads": {"type": "boolean", "nullable": true}, "version": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648, "nullable": true}, "evaluation_runtime": {"nullable": true, "description": "Specifies where this feature flag should be evaluated\n\n* `server` - Server\n* `client` - Client\n* `all` - All", "oneOf": [{"enum": ["server", "client", "all"], "type": "string", "description": "* `server` - Server\n* `client` - Client\n* `all` - All"}, {"enum": [""]}, {"enum": [null]}]}, "evaluation_tags": {"type": "array", "items": {"type": "string"}, "readOnly": true}}, "required": ["evaluation_tags", "id", "key", "team_id"]}], "readOnly": true}, "targeting_flag_filters": {"writeOnly": true, "nullable": true}, "remove_targeting_flag": {"type": "boolean", "writeOnly": true, "nullable": true}, "questions": {"nullable": true, "description": "\n        The `array` of questions included in the survey. Each question must conform to one of the defined question types: Basic, Link, Rating, or Multiple Choice.\n\n        Basic (open-ended question)\n        - `id`: The question ID\n        - `type`: `open`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Link (a question with a link)\n        - `id`: The question ID\n        - `type`: `link`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `link`: The URL associated with the question.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Rating (a question with a rating scale)\n        - `id`: The question ID\n        - `type`: `rating`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `display`: Display style of the rating (`number` or `emoji`).\n        - `scale`: The scale of the rating (`number`).\n        - `lowerBoundLabel`: Label for the lower bound of the scale.\n        - `upperBoundLabel`: Label for the upper bound of the scale.\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Multiple choice\n        - `id`: The question ID\n        - `type`: `single_choice` or `multiple_choice`\n        - `question`: The text of the question.\n        - `description`: Optional description of the question.\n        - `descriptionContentType`: Content type of the description (`html` or `text`).\n        - `optional`: Whether the question is optional (`boolean`).\n        - `buttonText`: Text displayed on the submit button.\n        - `choices`: An array of choices for the question.\n        - `shuffleOptions`: Whether to shuffle the order of the choices (`boolean`).\n        - `hasOpenChoice`: Whether the question allows an open-ended response (`boolean`).\n        - `branching`: Branching logic for the question. See branching types below for details.\n\n        Branching logic can be one of the following types:\n\n        Next question: Proceeds to the next question\n        ```json\n        {\n            \"type\": \"next_question\"\n        }\n        ```\n\n        End: Ends the survey, optionally displaying a confirmation message.\n        ```json\n        {\n            \"type\": \"end\"\n        }\n        ```\n\n        Response-based: Branches based on the response values. Available for the `rating` and `single_choice` question types.\n        ```json\n        {\n            \"type\": \"response_based\",\n            \"responseValues\": {\n                \"responseKey\": \"value\"\n            }\n        }\n        ```\n\n        Specific question: Proceeds to a specific question by index.\n        ```json\n        {\n            \"type\": \"specific_question\",\n            \"index\": 2\n        }\n        ```\n        "}, "conditions": {"nullable": true}, "appearance": {"nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "start_date": {"type": "string", "format": "date-time", "nullable": true}, "end_date": {"type": "string", "format": "date-time", "nullable": true}, "archived": {"type": "boolean"}, "responses_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "iteration_count": {"type": "integer", "maximum": 500, "minimum": 0, "nullable": true}, "iteration_frequency_days": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "iteration_start_dates": {"type": "array", "items": {"type": "string", "format": "date-time", "nullable": true}, "nullable": true}, "current_iteration": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "current_iteration_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_start_date": {"type": "string", "format": "date-time", "nullable": true}, "response_sampling_interval_type": {"nullable": true, "oneOf": [{"enum": ["day", "week", "month"], "type": "string", "description": "* `day` - day\n* `week` - week\n* `month` - month"}, {"enum": [""]}, {"enum": [null]}]}, "response_sampling_interval": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_limit": {"type": "integer", "maximum": 2147483647, "minimum": 0, "nullable": true}, "response_sampling_daily_limits": {"nullable": true}, "enable_partial_responses": {"type": "boolean", "nullable": true}, "_create_in_folder": {"type": "string", "writeOnly": true, "title": " create in folder"}}, "required": ["created_at", "created_by", "id", "internal_targeting_flag", "linked_flag", "name", "targeting_flag", "type"]}',  # noqa: E501
    "CREATEPROJECTTASK": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "task_number": {"type": "integer", "readOnly": true, "nullable": true}, "slug": {"type": "string", "readOnly": true}, "title": {"type": "string", "maxLength": 255}, "description": {"type": "string"}, "origin_product": {"enum": ["error_tracking", "eval_clusters", "user_created", "support_queue", "session_summaries"], "type": "string", "description": "* `error_tracking` - Error Tracking\n* `eval_clusters` - Eval Clusters\n* `user_created` - User Created\n* `support_queue` - Support Queue\n* `session_summaries` - Session Summaries"}, "position": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "github_integration": {"type": "integer", "nullable": true, "description": "GitHub integration for this task"}, "repository_config": {"description": "Repository configuration with organization and repository fields"}, "repository_list": {"type": "string", "readOnly": true}, "primary_repository": {"type": "string", "readOnly": true}, "latest_run": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "description", "id", "latest_run", "origin_product", "primary_repository", "repository_list", "slug", "task_number", "updated_at"]}',  # noqa: E501
    "UPDATEPROJECTTASK": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "task_number": {"type": "integer", "readOnly": true, "nullable": true}, "slug": {"type": "string", "readOnly": true}, "title": {"type": "string", "maxLength": 255}, "description": {"type": "string"}, "origin_product": {"enum": ["error_tracking", "eval_clusters", "user_created", "support_queue", "session_summaries"], "type": "string", "description": "* `error_tracking` - Error Tracking\n* `eval_clusters` - Eval Clusters\n* `user_created` - User Created\n* `support_queue` - Support Queue\n* `session_summaries` - Session Summaries"}, "position": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "github_integration": {"type": "integer", "nullable": true, "description": "GitHub integration for this task"}, "repository_config": {"description": "Repository configuration with organization and repository fields"}, "repository_list": {"type": "string", "readOnly": true}, "primary_repository": {"type": "string", "readOnly": true}, "latest_run": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}, "required": ["created_at", "description", "id", "latest_run", "origin_product", "primary_repository", "repository_list", "slug", "task_number", "updated_at"]}',  # noqa: E501
    "UPDATETASKINPROJECT": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "task_number": {"type": "integer", "readOnly": true, "nullable": true}, "slug": {"type": "string", "readOnly": true}, "title": {"type": "string", "maxLength": 255}, "description": {"type": "string"}, "origin_product": {"enum": ["error_tracking", "eval_clusters", "user_created", "support_queue", "session_summaries"], "type": "string", "description": "* `error_tracking` - Error Tracking\n* `eval_clusters` - Eval Clusters\n* `user_created` - User Created\n* `support_queue` - Support Queue\n* `session_summaries` - Session Summaries"}, "position": {"type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "github_integration": {"type": "integer", "nullable": true, "description": "GitHub integration for this task"}, "repository_config": {"description": "Repository configuration with organization and repository fields"}, "repository_list": {"type": "string", "readOnly": true}, "primary_repository": {"type": "string", "readOnly": true}, "latest_run": {"type": "string", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}}}',  # noqa: E501
    "CREATETASKRUN": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "task": {"type": "string", "format": "uuid", "readOnly": true}, "stage": {"type": "string", "nullable": true, "description": "Current stage for this run (e.g., \'backlog\', \'in_progress\', \'done\')", "maxLength": 100}, "branch": {"type": "string", "nullable": true, "description": "Branch name for the run", "maxLength": 255}, "status": {"enum": ["started", "in_progress", "completed", "failed"], "type": "string", "description": "* `started` - Started\n* `in_progress` - In Progress\n* `completed` - Completed\n* `failed` - Failed"}, "log": {"description": "Live output from Claude Code execution"}, "error_message": {"type": "string", "nullable": true, "description": "Error message if execution failed"}, "output": {"nullable": true, "description": "Run output data (e.g., PR URL, commit SHA, etc.)"}, "state": {"description": "Run state data for resuming or tracking execution state"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "completed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}, "required": ["completed_at", "created_at", "id", "task", "updated_at"]}',  # noqa: E501
    "UPDATETASKRUNSTATUS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "task": {"type": "string", "format": "uuid", "readOnly": true}, "stage": {"type": "string", "nullable": true, "description": "Current stage for this run (e.g., \'backlog\', \'in_progress\', \'done\')", "maxLength": 100}, "branch": {"type": "string", "nullable": true, "description": "Branch name for the run", "maxLength": 255}, "status": {"enum": ["started", "in_progress", "completed", "failed"], "type": "string", "description": "* `started` - Started\n* `in_progress` - In Progress\n* `completed` - Completed\n* `failed` - Failed"}, "log": {"description": "Live output from Claude Code execution"}, "error_message": {"type": "string", "nullable": true, "description": "Error message if execution failed"}, "output": {"nullable": true, "description": "Run output data (e.g., PR URL, commit SHA, etc.)"}, "state": {"description": "Run state data for resuming or tracking execution state"}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "completed_at": {"type": "string", "format": "date-time", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "APPENDTASKRUNLOGS": '{"type": "object", "properties": {"entries": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "description": "Array of log entry dictionaries to append"}}, "required": ["entries"]}',  # noqa: E501
    "ADDWAREHOUSESAVEDQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "EDITWAREHOUSESAVEDQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "MODIFYWAREHOUSEQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}}',  # noqa: E501
    "GETANCESTORSOFSAVEDQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "CANCELRUNNINGSAVEDQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "GETQUERYDESCENDANTS": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "UNDOMATERIALIZATION": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "EXECUTESAVEDQUERY": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "query": {"nullable": true, "description": "HogQL query"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "sync_frequency": {"type": "string", "readOnly": true}, "columns": {"type": "string", "readOnly": true}, "status": {"readOnly": true, "nullable": true, "description": "The status of when this SavedQuery last ran.\n\n* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running", "oneOf": [{"enum": ["Cancelled", "Modified", "Completed", "Failed", "Running"], "type": "string", "description": "* `Cancelled` - Cancelled\n* `Modified` - Modified\n* `Completed` - Completed\n* `Failed` - Failed\n* `Running` - Running"}, {"enum": [null]}]}, "last_run_at": {"type": "string", "format": "date-time", "nullable": true, "readOnly": true}, "latest_error": {"type": "string", "readOnly": true, "nullable": true}, "edited_history_id": {"type": "string", "writeOnly": true, "nullable": true}, "latest_history_id": {"type": "string", "readOnly": true}, "soft_update": {"type": "boolean", "writeOnly": true, "nullable": true}, "is_materialized": {"type": "boolean", "readOnly": true, "nullable": true}}, "required": ["columns", "created_at", "created_by", "id", "is_materialized", "last_run_at", "latest_error", "latest_history_id", "name", "status", "sync_frequency"]}',  # noqa: E501
    "ADDWAREHOUSETABLE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}, "required": ["columns", "created_at", "created_by", "credential", "external_data_source", "external_schema", "format", "id", "name", "url_pattern"]}',  # noqa: E501
    "EDITWAREHOUSETABLE": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}, "required": ["columns", "created_at", "created_by", "credential", "external_data_source", "external_schema", "format", "id", "name", "url_pattern"]}',  # noqa: E501
    "UPDATEWAREHOUSETABLE2": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}}',  # noqa: E501
    "UPDATETABLESCHEMA": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}, "required": ["columns", "created_at", "created_by", "credential", "external_data_source", "external_schema", "format", "id", "name", "url_pattern"]}',  # noqa: E501
    "MODIFYTABLESCHEMA": '{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "deleted": {"type": "boolean", "nullable": true}, "name": {"type": "string", "maxLength": 128}, "format": {"enum": ["CSV", "CSVWithNames", "Parquet", "JSONEachRow", "Delta", "DeltaS3Wrapper"], "type": "string", "description": "* `CSV` - CSV\n* `CSVWithNames` - CSVWithNames\n* `Parquet` - Parquet\n* `JSONEachRow` - JSON\n* `Delta` - Delta\n* `DeltaS3Wrapper` - DeltaS3Wrapper"}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "url_pattern": {"type": "string", "maxLength": 500}, "credential": {"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_by": {"allOf": [{"type": "object", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "nullable": true, "maxLength": 200}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "is_email_verified": {"type": "boolean", "nullable": true}, "hedgehog_config": {"type": "object", "additionalProperties": {}, "nullable": true, "readOnly": true}, "role_at_organization": {"nullable": true, "oneOf": [{"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}, {"enum": [""]}, {"enum": [null]}]}}, "required": ["email", "hedgehog_config", "id", "uuid"]}], "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "access_key": {"type": "string", "writeOnly": true, "maxLength": 500}, "access_secret": {"type": "string", "writeOnly": true, "maxLength": 500}}, "required": ["access_key", "access_secret", "created_at", "created_by", "id"]}, "columns": {"type": "string", "readOnly": true}, "external_data_source": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "created_by": {"type": "integer", "readOnly": true, "nullable": true}, "status": {"type": "string", "readOnly": true}, "source_type": {"allOf": [{"enum": ["Stripe", "Hubspot", "Postgres", "Zendesk", "Snowflake", "Salesforce", "MySQL", "MongoDB", "MSSQL", "Vitally", "BigQuery", "Chargebee", "GoogleAds", "TemporalIO", "DoIt", "GoogleSheets", "MetaAds", "Klaviyo", "Mailchimp", "Braze", "Mailjet", "Redshift", "Polar", "RevenueCat", "LinkedinAds", "RedditAds", "TikTokAds", "Shopify"], "type": "string", "description": "* `Stripe` - Stripe\n* `Hubspot` - Hubspot\n* `Postgres` - Postgres\n* `Zendesk` - Zendesk\n* `Snowflake` - Snowflake\n* `Salesforce` - Salesforce\n* `MySQL` - MySQL\n* `MongoDB` - MongoDB\n* `MSSQL` - MSSQL\n* `Vitally` - Vitally\n* `BigQuery` - BigQuery\n* `Chargebee` - Chargebee\n* `GoogleAds` - GoogleAds\n* `TemporalIO` - TemporalIO\n* `DoIt` - DoIt\n* `GoogleSheets` - GoogleSheets\n* `MetaAds` - MetaAds\n* `Klaviyo` - Klaviyo\n* `Mailchimp` - Mailchimp\n* `Braze` - Braze\n* `Mailjet` - Mailjet\n* `Redshift` - Redshift\n* `Polar` - Polar\n* `RevenueCat` - RevenueCat\n* `LinkedinAds` - LinkedinAds\n* `RedditAds` - RedditAds\n* `TikTokAds` - TikTokAds\n* `Shopify` - Shopify"}], "readOnly": true}}, "required": ["created_at", "created_by", "id", "source_type", "status"]}], "readOnly": true}, "external_schema": {"type": "string", "readOnly": true}}, "required": ["columns", "created_at", "created_by", "credential", "external_data_source", "external_schema", "format", "id", "name", "url_pattern"]}',  # noqa: E501
    "WAREHOUSETABLEFILEOPERATIONS": '{}',  # noqa: E501
    "UPDATEUSERDETAILS": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}, "required": ["date_joined", "distinct_id", "email", "has_password", "has_social_auth", "has_sso_enforcement", "id", "is_2fa_enabled", "is_email_verified", "is_impersonated", "is_impersonated_until", "organization", "organizations", "password", "pending_email", "scene_personalisation", "sensitive_session_expires_at", "team", "uuid"]}',  # noqa: E501
    "UPDATEUSERINFO": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}}',  # noqa: E501
    "UPDATEUSERHEDGEHOGCONFIG": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}}',  # noqa: E501
    "CREATEUSERSCENEPERSONALIZATION": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}, "required": ["date_joined", "distinct_id", "email", "has_password", "has_social_auth", "has_sso_enforcement", "id", "is_2fa_enabled", "is_email_verified", "is_impersonated", "is_impersonated_until", "organization", "organizations", "password", "pending_email", "scene_personalisation", "sensitive_session_expires_at", "team", "uuid"]}',  # noqa: E501
    "GENERATEBACKUPCODES": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}, "required": ["date_joined", "distinct_id", "email", "has_password", "has_social_auth", "has_sso_enforcement", "id", "is_2fa_enabled", "is_email_verified", "is_impersonated", "is_impersonated_until", "organization", "organizations", "password", "pending_email", "scene_personalisation", "sensitive_session_expires_at", "team", "uuid"]}',  # noqa: E501
    "DISABLEUSER2FA": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}, "required": ["date_joined", "distinct_id", "email", "has_password", "has_social_auth", "has_sso_enforcement", "id", "is_2fa_enabled", "is_email_verified", "is_impersonated", "is_impersonated_until", "organization", "organizations", "password", "pending_email", "scene_personalisation", "sensitive_session_expires_at", "team", "uuid"]}',  # noqa: E501
    "VALIDATETWOFACTORAUTHENTICATION": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}, "required": ["date_joined", "distinct_id", "email", "has_password", "has_social_auth", "has_sso_enforcement", "id", "is_2fa_enabled", "is_email_verified", "is_impersonated", "is_impersonated_until", "organization", "organizations", "password", "pending_email", "scene_personalisation", "sensitive_session_expires_at", "team", "uuid"]}',  # noqa: E501
    "VALIDATEUSER2FA": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}, "required": ["date_joined", "distinct_id", "email", "has_password", "has_social_auth", "has_sso_enforcement", "id", "is_2fa_enabled", "is_email_verified", "is_impersonated", "is_impersonated_until", "organization", "organizations", "password", "pending_email", "scene_personalisation", "sensitive_session_expires_at", "team", "uuid"]}',  # noqa: E501
    "CANCELEMAILCHANGEREQUEST": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}}',  # noqa: E501
    "REQUESTEMAILVERIFICATION": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}, "required": ["date_joined", "distinct_id", "email", "has_password", "has_social_auth", "has_sso_enforcement", "id", "is_2fa_enabled", "is_email_verified", "is_impersonated", "is_impersonated_until", "organization", "organizations", "password", "pending_email", "scene_personalisation", "sensitive_session_expires_at", "team", "uuid"]}',  # noqa: E501
    "VERIFYUSEREMAIL": '{"type": "object", "properties": {"date_joined": {"type": "string", "format": "date-time", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "distinct_id": {"type": "string", "readOnly": true, "nullable": true}, "first_name": {"type": "string", "maxLength": 150}, "last_name": {"type": "string", "maxLength": 150}, "email": {"type": "string", "format": "email", "title": "Email address", "maxLength": 254}, "pending_email": {"type": "string", "format": "email", "readOnly": true, "nullable": true, "title": "Pending email address awaiting verification"}, "is_email_verified": {"type": "boolean", "readOnly": true, "nullable": true}, "notification_settings": {"type": "object", "additionalProperties": {}}, "anonymize_data": {"type": "boolean", "nullable": true}, "toolbar_mode": {"nullable": true, "oneOf": [{"enum": ["disabled", "toolbar"], "type": "string", "description": "* `disabled` - disabled\n* `toolbar` - toolbar"}, {"enum": [""]}, {"enum": [null]}]}, "has_password": {"type": "boolean", "readOnly": true}, "id": {"type": "integer", "readOnly": true}, "is_staff": {"type": "boolean", "title": "Staff status", "description": "Designates whether the user can log into this admin site."}, "is_impersonated": {"type": "boolean", "nullable": true, "readOnly": true}, "is_impersonated_until": {"type": "string", "nullable": true, "readOnly": true}, "sensitive_session_expires_at": {"type": "string", "nullable": true, "readOnly": true}, "team": {"allOf": [{"type": "object", "description": "Serializer for `Team` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "integer", "readOnly": true}, "uuid": {"type": "string", "format": "uuid", "readOnly": true}, "organization": {"type": "string", "format": "uuid", "readOnly": true}, "project_id": {"type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "format": "int64", "readOnly": true}, "api_token": {"type": "string", "readOnly": true}, "name": {"type": "string", "readOnly": true}, "completed_snippet_onboarding": {"type": "boolean", "readOnly": true}, "has_completed_onboarding_for": {"readOnly": true, "nullable": true}, "ingested_event": {"type": "boolean", "readOnly": true}, "is_demo": {"type": "boolean", "readOnly": true}, "timezone": {"allOf": [{"enum": ["Africa/Abidjan", "Africa/Accra", "Africa/Addis_Ababa", "Africa/Algiers", "Africa/Asmara", "Africa/Asmera", "Africa/Bamako", "Africa/Bangui", "Africa/Banjul", "Africa/Bissau", "Africa/Blantyre", "Africa/Brazzaville", "Africa/Bujumbura", "Africa/Cairo", "Africa/Casablanca", "Africa/Ceuta", "Africa/Conakry", "Africa/Dakar", "Africa/Dar_es_Salaam", "Africa/Djibouti", "Africa/Douala", "Africa/El_Aaiun", "Africa/Freetown", "Africa/Gaborone", "Africa/Harare", "Africa/Johannesburg", "Africa/Juba", "Africa/Kampala", "Africa/Khartoum", "Africa/Kigali", "Africa/Kinshasa", "Africa/Lagos", "Africa/Libreville", "Africa/Lome", "Africa/Luanda", "Africa/Lubumbashi", "Africa/Lusaka", "Africa/Malabo", "Africa/Maputo", "Africa/Maseru", "Africa/Mbabane", "Africa/Mogadishu", "Africa/Monrovia", "Africa/Nairobi", "Africa/Ndjamena", "Africa/Niamey", "Africa/Nouakchott", "Africa/Ouagadougou", "Africa/Porto-Novo", "Africa/Sao_Tome", "Africa/Timbuktu", "Africa/Tripoli", "Africa/Tunis", "Africa/Windhoek", "America/Adak", "America/Anchorage", "America/Anguilla", "America/Antigua", "America/Araguaina", "America/Argentina/Buenos_Aires", "America/Argentina/Catamarca", "America/Argentina/ComodRivadavia", "America/Argentina/Cordoba", "America/Argentina/Jujuy", "America/Argentina/La_Rioja", "America/Argentina/Mendoza", "America/Argentina/Rio_Gallegos", "America/Argentina/Salta", "America/Argentina/San_Juan", "America/Argentina/San_Luis", "America/Argentina/Tucuman", "America/Argentina/Ushuaia", "America/Aruba", "America/Asuncion", "America/Atikokan", "America/Atka", "America/Bahia", "America/Bahia_Banderas", "America/Barbados", "America/Belem", "America/Belize", "America/Blanc-Sablon", "America/Boa_Vista", "America/Bogota", "America/Boise", "America/Buenos_Aires", "America/Cambridge_Bay", "America/Campo_Grande", "America/Cancun", "America/Caracas", "America/Catamarca", "America/Cayenne", "America/Cayman", "America/Chicago", "America/Chihuahua", "America/Ciudad_Juarez", "America/Coral_Harbour", "America/Cordoba", "America/Costa_Rica", "America/Creston", "America/Cuiaba", "America/Curacao", "America/Danmarkshavn", "America/Dawson", "America/Dawson_Creek", "America/Denver", "America/Detroit", "America/Dominica", "America/Edmonton", "America/Eirunepe", "America/El_Salvador", "America/Ensenada", "America/Fort_Nelson", "America/Fort_Wayne", "America/Fortaleza", "America/Glace_Bay", "America/Godthab", "America/Goose_Bay", "America/Grand_Turk", "America/Grenada", "America/Guadeloupe", "America/Guatemala", "America/Guayaquil", "America/Guyana", "America/Halifax", "America/Havana", "America/Hermosillo", "America/Indiana/Indianapolis", "America/Indiana/Knox", "America/Indiana/Marengo", "America/Indiana/Petersburg", "America/Indiana/Tell_City", "America/Indiana/Vevay", "America/Indiana/Vincennes", "America/Indiana/Winamac", "America/Indianapolis", "America/Inuvik", "America/Iqaluit", "America/Jamaica", "America/Jujuy", "America/Juneau", "America/Kentucky/Louisville", "America/Kentucky/Monticello", "America/Knox_IN", "America/Kralendijk", "America/La_Paz", "America/Lima", "America/Los_Angeles", "America/Louisville", "America/Lower_Princes", "America/Maceio", "America/Managua", "America/Manaus", "America/Marigot", "America/Martinique", "America/Matamoros", "America/Mazatlan", "America/Mendoza", "America/Menominee", "America/Merida", "America/Metlakatla", "America/Mexico_City", "America/Miquelon", "America/Moncton", "America/Monterrey", "America/Montevideo", "America/Montreal", "America/Montserrat", "America/Nassau", "America/New_York", "America/Nipigon", "America/Nome", "America/Noronha", "America/North_Dakota/Beulah", "America/North_Dakota/Center", "America/North_Dakota/New_Salem", "America/Nuuk", "America/Ojinaga", "America/Panama", "America/Pangnirtung", "America/Paramaribo", "America/Phoenix", "America/Port-au-Prince", "America/Port_of_Spain", "America/Porto_Acre", "America/Porto_Velho", "America/Puerto_Rico", "America/Punta_Arenas", "America/Rainy_River", "America/Rankin_Inlet", "America/Recife", "America/Regina", "America/Resolute", "America/Rio_Branco", "America/Rosario", "America/Santa_Isabel", "America/Santarem", "America/Santiago", "America/Santo_Domingo", "America/Sao_Paulo", "America/Scoresbysund", "America/Shiprock", "America/Sitka", "America/St_Barthelemy", "America/St_Johns", "America/St_Kitts", "America/St_Lucia", "America/St_Thomas", "America/St_Vincent", "America/Swift_Current", "America/Tegucigalpa", "America/Thule", "America/Thunder_Bay", "America/Tijuana", "America/Toronto", "America/Tortola", "America/Vancouver", "America/Virgin", "America/Whitehorse", "America/Winnipeg", "America/Yakutat", "America/Yellowknife", "Antarctica/Casey", "Antarctica/Davis", "Antarctica/DumontDUrville", "Antarctica/Macquarie", "Antarctica/Mawson", "Antarctica/McMurdo", "Antarctica/Palmer", "Antarctica/Rothera", "Antarctica/South_Pole", "Antarctica/Syowa", "Antarctica/Troll", "Antarctica/Vostok", "Arctic/Longyearbyen", "Asia/Aden", "Asia/Almaty", "Asia/Amman", "Asia/Anadyr", "Asia/Aqtau", "Asia/Aqtobe", "Asia/Ashgabat", "Asia/Ashkhabad", "Asia/Atyrau", "Asia/Baghdad", "Asia/Bahrain", "Asia/Baku", "Asia/Bangkok", "Asia/Barnaul", "Asia/Beirut", "Asia/Bishkek", "Asia/Brunei", "Asia/Calcutta", "Asia/Chita", "Asia/Choibalsan", "Asia/Chongqing", "Asia/Chungking", "Asia/Colombo", "Asia/Dacca", "Asia/Damascus", "Asia/Dhaka", "Asia/Dili", "Asia/Dubai", "Asia/Dushanbe", "Asia/Famagusta", "Asia/Gaza", "Asia/Harbin", "Asia/Hebron", "Asia/Ho_Chi_Minh", "Asia/Hong_Kong", "Asia/Hovd", "Asia/Irkutsk", "Asia/Istanbul", "Asia/Jakarta", "Asia/Jayapura", "Asia/Jerusalem", "Asia/Kabul", "Asia/Kamchatka", "Asia/Karachi", "Asia/Kashgar", "Asia/Kathmandu", "Asia/Katmandu", "Asia/Khandyga", "Asia/Kolkata", "Asia/Krasnoyarsk", "Asia/Kuala_Lumpur", "Asia/Kuching", "Asia/Kuwait", "Asia/Macao", "Asia/Macau", "Asia/Magadan", "Asia/Makassar", "Asia/Manila", "Asia/Muscat", "Asia/Nicosia", "Asia/Novokuznetsk", "Asia/Novosibirsk", "Asia/Omsk", "Asia/Oral", "Asia/Phnom_Penh", "Asia/Pontianak", "Asia/Pyongyang", "Asia/Qatar", "Asia/Qostanay", "Asia/Qyzylorda", "Asia/Rangoon", "Asia/Riyadh", "Asia/Saigon", "Asia/Sakhalin", "Asia/Samarkand", "Asia/Seoul", "Asia/Shanghai", "Asia/Singapore", "Asia/Srednekolymsk", "Asia/Taipei", "Asia/Tashkent", "Asia/Tbilisi", "Asia/Tehran", "Asia/Tel_Aviv", "Asia/Thimbu", "Asia/Thimphu", "Asia/Tokyo", "Asia/Tomsk", "Asia/Ujung_Pandang", "Asia/Ulaanbaatar", "Asia/Ulan_Bator", "Asia/Urumqi", "Asia/Ust-Nera", "Asia/Vientiane", "Asia/Vladivostok", "Asia/Yakutsk", "Asia/Yangon", "Asia/Yekaterinburg", "Asia/Yerevan", "Atlantic/Azores", "Atlantic/Bermuda", "Atlantic/Canary", "Atlantic/Cape_Verde", "Atlantic/Faeroe", "Atlantic/Faroe", "Atlantic/Jan_Mayen", "Atlantic/Madeira", "Atlantic/Reykjavik", "Atlantic/South_Georgia", "Atlantic/St_Helena", "Atlantic/Stanley", "Australia/ACT", "Australia/Adelaide", "Australia/Brisbane", "Australia/Broken_Hill", "Australia/Canberra", "Australia/Currie", "Australia/Darwin", "Australia/Eucla", "Australia/Hobart", "Australia/LHI", "Australia/Lindeman", "Australia/Lord_Howe", "Australia/Melbourne", "Australia/NSW", "Australia/North", "Australia/Perth", "Australia/Queensland", "Australia/South", "Australia/Sydney", "Australia/Tasmania", "Australia/Victoria", "Australia/West", "Australia/Yancowinna", "Brazil/Acre", "Brazil/DeNoronha", "Brazil/East", "Brazil/West", "CET", "CST6CDT", "Canada/Atlantic", "Canada/Central", "Canada/Eastern", "Canada/Mountain", "Canada/Newfoundland", "Canada/Pacific", "Canada/Saskatchewan", "Canada/Yukon", "Chile/Continental", "Chile/EasterIsland", "Cuba", "EET", "EST", "EST5EDT", "Egypt", "Eire", "Etc/GMT", "Etc/GMT+0", "Etc/GMT+1", "Etc/GMT+10", "Etc/GMT+11", "Etc/GMT+12", "Etc/GMT+2", "Etc/GMT+3", "Etc/GMT+4", "Etc/GMT+5", "Etc/GMT+6", "Etc/GMT+7", "Etc/GMT+8", "Etc/GMT+9", "Etc/GMT-0", "Etc/GMT-1", "Etc/GMT-10", "Etc/GMT-11", "Etc/GMT-12", "Etc/GMT-13", "Etc/GMT-14", "Etc/GMT-2", "Etc/GMT-3", "Etc/GMT-4", "Etc/GMT-5", "Etc/GMT-6", "Etc/GMT-7", "Etc/GMT-8", "Etc/GMT-9", "Etc/GMT0", "Etc/Greenwich", "Etc/UCT", "Etc/UTC", "Etc/Universal", "Etc/Zulu", "Europe/Amsterdam", "Europe/Andorra", "Europe/Astrakhan", "Europe/Athens", "Europe/Belfast", "Europe/Belgrade", "Europe/Berlin", "Europe/Bratislava", "Europe/Brussels", "Europe/Bucharest", "Europe/Budapest", "Europe/Busingen", "Europe/Chisinau", "Europe/Copenhagen", "Europe/Dublin", "Europe/Gibraltar", "Europe/Guernsey", "Europe/Helsinki", "Europe/Isle_of_Man", "Europe/Istanbul", "Europe/Jersey", "Europe/Kaliningrad", "Europe/Kiev", "Europe/Kirov", "Europe/Kyiv", "Europe/Lisbon", "Europe/Ljubljana", "Europe/London", "Europe/Luxembourg", "Europe/Madrid", "Europe/Malta", "Europe/Mariehamn", "Europe/Minsk", "Europe/Monaco", "Europe/Moscow", "Europe/Nicosia", "Europe/Oslo", "Europe/Paris", "Europe/Podgorica", "Europe/Prague", "Europe/Riga", "Europe/Rome", "Europe/Samara", "Europe/San_Marino", "Europe/Sarajevo", "Europe/Saratov", "Europe/Simferopol", "Europe/Skopje", "Europe/Sofia", "Europe/Stockholm", "Europe/Tallinn", "Europe/Tirane", "Europe/Tiraspol", "Europe/Ulyanovsk", "Europe/Uzhgorod", "Europe/Vaduz", "Europe/Vatican", "Europe/Vienna", "Europe/Vilnius", "Europe/Volgograd", "Europe/Warsaw", "Europe/Zagreb", "Europe/Zaporozhye", "Europe/Zurich", "GB", "GB-Eire", "GMT", "GMT+0", "GMT-0", "GMT0", "Greenwich", "HST", "Hongkong", "Iceland", "Indian/Antananarivo", "Indian/Chagos", "Indian/Christmas", "Indian/Cocos", "Indian/Comoro", "Indian/Kerguelen", "Indian/Mahe", "Indian/Maldives", "Indian/Mauritius", "Indian/Mayotte", "Indian/Reunion", "Iran", "Israel", "Jamaica", "Japan", "Kwajalein", "Libya", "MET", "MST", "MST7MDT", "Mexico/BajaNorte", "Mexico/BajaSur", "Mexico/General", "NZ", "NZ-CHAT", "Navajo", "PRC", "PST8PDT", "Pacific/Apia", "Pacific/Auckland", "Pacific/Bougainville", "Pacific/Chatham", "Pacific/Chuuk", "Pacific/Easter", "Pacific/Efate", "Pacific/Enderbury", "Pacific/Fakaofo", "Pacific/Fiji", "Pacific/Funafuti", "Pacific/Galapagos", "Pacific/Gambier", "Pacific/Guadalcanal", "Pacific/Guam", "Pacific/Honolulu", "Pacific/Johnston", "Pacific/Kanton", "Pacific/Kiritimati", "Pacific/Kosrae", "Pacific/Kwajalein", "Pacific/Majuro", "Pacific/Marquesas", "Pacific/Midway", "Pacific/Nauru", "Pacific/Niue", "Pacific/Norfolk", "Pacific/Noumea", "Pacific/Pago_Pago", "Pacific/Palau", "Pacific/Pitcairn", "Pacific/Pohnpei", "Pacific/Ponape", "Pacific/Port_Moresby", "Pacific/Rarotonga", "Pacific/Saipan", "Pacific/Samoa", "Pacific/Tahiti", "Pacific/Tarawa", "Pacific/Tongatapu", "Pacific/Truk", "Pacific/Wake", "Pacific/Wallis", "Pacific/Yap", "Poland", "Portugal", "ROC", "ROK", "Singapore", "Turkey", "UCT", "US/Alaska", "US/Aleutian", "US/Arizona", "US/Central", "US/East-Indiana", "US/Eastern", "US/Hawaii", "US/Indiana-Starke", "US/Michigan", "US/Mountain", "US/Pacific", "US/Samoa", "UTC", "Universal", "W-SU", "WET", "Zulu"], "type": "string", "description": "* `Africa/Abidjan` - Africa/Abidjan\n* `Africa/Accra` - Africa/Accra\n* `Africa/Addis_Ababa` - Africa/Addis_Ababa\n* `Africa/Algiers` - Africa/Algiers\n* `Africa/Asmara` - Africa/Asmara\n* `Africa/Asmera` - Africa/Asmera\n* `Africa/Bamako` - Africa/Bamako\n* `Africa/Bangui` - Africa/Bangui\n* `Africa/Banjul` - Africa/Banjul\n* `Africa/Bissau` - Africa/Bissau\n* `Africa/Blantyre` - Africa/Blantyre\n* `Africa/Brazzaville` - Africa/Brazzaville\n* `Africa/Bujumbura` - Africa/Bujumbura\n* `Africa/Cairo` - Africa/Cairo\n* `Africa/Casablanca` - Africa/Casablanca\n* `Africa/Ceuta` - Africa/Ceuta\n* `Africa/Conakry` - Africa/Conakry\n* `Africa/Dakar` - Africa/Dakar\n* `Africa/Dar_es_Salaam` - Africa/Dar_es_Salaam\n* `Africa/Djibouti` - Africa/Djibouti\n* `Africa/Douala` - Africa/Douala\n* `Africa/El_Aaiun` - Africa/El_Aaiun\n* `Africa/Freetown` - Africa/Freetown\n* `Africa/Gaborone` - Africa/Gaborone\n* `Africa/Harare` - Africa/Harare\n* `Africa/Johannesburg` - Africa/Johannesburg\n* `Africa/Juba` - Africa/Juba\n* `Africa/Kampala` - Africa/Kampala\n* `Africa/Khartoum` - Africa/Khartoum\n* `Africa/Kigali` - Africa/Kigali\n* `Africa/Kinshasa` - Africa/Kinshasa\n* `Africa/Lagos` - Africa/Lagos\n* `Africa/Libreville` - Africa/Libreville\n* `Africa/Lome` - Africa/Lome\n* `Africa/Luanda` - Africa/Luanda\n* `Africa/Lubumbashi` - Africa/Lubumbashi\n* `Africa/Lusaka` - Africa/Lusaka\n* `Africa/Malabo` - Africa/Malabo\n* `Africa/Maputo` - Africa/Maputo\n* `Africa/Maseru` - Africa/Maseru\n* `Africa/Mbabane` - Africa/Mbabane\n* `Africa/Mogadishu` - Africa/Mogadishu\n* `Africa/Monrovia` - Africa/Monrovia\n* `Africa/Nairobi` - Africa/Nairobi\n* `Africa/Ndjamena` - Africa/Ndjamena\n* `Africa/Niamey` - Africa/Niamey\n* `Africa/Nouakchott` - Africa/Nouakchott\n* `Africa/Ouagadougou` - Africa/Ouagadougou\n* `Africa/Porto-Novo` - Africa/Porto-Novo\n* `Africa/Sao_Tome` - Africa/Sao_Tome\n* `Africa/Timbuktu` - Africa/Timbuktu\n* `Africa/Tripoli` - Africa/Tripoli\n* `Africa/Tunis` - Africa/Tunis\n* `Africa/Windhoek` - Africa/Windhoek\n* `America/Adak` - America/Adak\n* `America/Anchorage` - America/Anchorage\n* `America/Anguilla` - America/Anguilla\n* `America/Antigua` - America/Antigua\n* `America/Araguaina` - America/Araguaina\n* `America/Argentina/Buenos_Aires` - America/Argentina/Buenos_Aires\n* `America/Argentina/Catamarca` - America/Argentina/Catamarca\n* `America/Argentina/ComodRivadavia` - America/Argentina/ComodRivadavia\n* `America/Argentina/Cordoba` - America/Argentina/Cordoba\n* `America/Argentina/Jujuy` - America/Argentina/Jujuy\n* `America/Argentina/La_Rioja` - America/Argentina/La_Rioja\n* `America/Argentina/Mendoza` - America/Argentina/Mendoza\n* `America/Argentina/Rio_Gallegos` - America/Argentina/Rio_Gallegos\n* `America/Argentina/Salta` - America/Argentina/Salta\n* `America/Argentina/San_Juan` - America/Argentina/San_Juan\n* `America/Argentina/San_Luis` - America/Argentina/San_Luis\n* `America/Argentina/Tucuman` - America/Argentina/Tucuman\n* `America/Argentina/Ushuaia` - America/Argentina/Ushuaia\n* `America/Aruba` - America/Aruba\n* `America/Asuncion` - America/Asuncion\n* `America/Atikokan` - America/Atikokan\n* `America/Atka` - America/Atka\n* `America/Bahia` - America/Bahia\n* `America/Bahia_Banderas` - America/Bahia_Banderas\n* `America/Barbados` - America/Barbados\n* `America/Belem` - America/Belem\n* `America/Belize` - America/Belize\n* `America/Blanc-Sablon` - America/Blanc-Sablon\n* `America/Boa_Vista` - America/Boa_Vista\n* `America/Bogota` - America/Bogota\n* `America/Boise` - America/Boise\n* `America/Buenos_Aires` - America/Buenos_Aires\n* `America/Cambridge_Bay` - America/Cambridge_Bay\n* `America/Campo_Grande` - America/Campo_Grande\n* `America/Cancun` - America/Cancun\n* `America/Caracas` - America/Caracas\n* `America/Catamarca` - America/Catamarca\n* `America/Cayenne` - America/Cayenne\n* `America/Cayman` - America/Cayman\n* `America/Chicago` - America/Chicago\n* `America/Chihuahua` - America/Chihuahua\n* `America/Ciudad_Juarez` - America/Ciudad_Juarez\n* `America/Coral_Harbour` - America/Coral_Harbour\n* `America/Cordoba` - America/Cordoba\n* `America/Costa_Rica` - America/Costa_Rica\n* `America/Creston` - America/Creston\n* `America/Cuiaba` - America/Cuiaba\n* `America/Curacao` - America/Curacao\n* `America/Danmarkshavn` - America/Danmarkshavn\n* `America/Dawson` - America/Dawson\n* `America/Dawson_Creek` - America/Dawson_Creek\n* `America/Denver` - America/Denver\n* `America/Detroit` - America/Detroit\n* `America/Dominica` - America/Dominica\n* `America/Edmonton` - America/Edmonton\n* `America/Eirunepe` - America/Eirunepe\n* `America/El_Salvador` - America/El_Salvador\n* `America/Ensenada` - America/Ensenada\n* `America/Fort_Nelson` - America/Fort_Nelson\n* `America/Fort_Wayne` - America/Fort_Wayne\n* `America/Fortaleza` - America/Fortaleza\n* `America/Glace_Bay` - America/Glace_Bay\n* `America/Godthab` - America/Godthab\n* `America/Goose_Bay` - America/Goose_Bay\n* `America/Grand_Turk` - America/Grand_Turk\n* `America/Grenada` - America/Grenada\n* `America/Guadeloupe` - America/Guadeloupe\n* `America/Guatemala` - America/Guatemala\n* `America/Guayaquil` - America/Guayaquil\n* `America/Guyana` - America/Guyana\n* `America/Halifax` - America/Halifax\n* `America/Havana` - America/Havana\n* `America/Hermosillo` - America/Hermosillo\n* `America/Indiana/Indianapolis` - America/Indiana/Indianapolis\n* `America/Indiana/Knox` - America/Indiana/Knox\n* `America/Indiana/Marengo` - America/Indiana/Marengo\n* `America/Indiana/Petersburg` - America/Indiana/Petersburg\n* `America/Indiana/Tell_City` - America/Indiana/Tell_City\n* `America/Indiana/Vevay` - America/Indiana/Vevay\n* `America/Indiana/Vincennes` - America/Indiana/Vincennes\n* `America/Indiana/Winamac` - America/Indiana/Winamac\n* `America/Indianapolis` - America/Indianapolis\n* `America/Inuvik` - America/Inuvik\n* `America/Iqaluit` - America/Iqaluit\n* `America/Jamaica` - America/Jamaica\n* `America/Jujuy` - America/Jujuy\n* `America/Juneau` - America/Juneau\n* `America/Kentucky/Louisville` - America/Kentucky/Louisville\n* `America/Kentucky/Monticello` - America/Kentucky/Monticello\n* `America/Knox_IN` - America/Knox_IN\n* `America/Kralendijk` - America/Kralendijk\n* `America/La_Paz` - America/La_Paz\n* `America/Lima` - America/Lima\n* `America/Los_Angeles` - America/Los_Angeles\n* `America/Louisville` - America/Louisville\n* `America/Lower_Princes` - America/Lower_Princes\n* `America/Maceio` - America/Maceio\n* `America/Managua` - America/Managua\n* `America/Manaus` - America/Manaus\n* `America/Marigot` - America/Marigot\n* `America/Martinique` - America/Martinique\n* `America/Matamoros` - America/Matamoros\n* `America/Mazatlan` - America/Mazatlan\n* `America/Mendoza` - America/Mendoza\n* `America/Menominee` - America/Menominee\n* `America/Merida` - America/Merida\n* `America/Metlakatla` - America/Metlakatla\n* `America/Mexico_City` - America/Mexico_City\n* `America/Miquelon` - America/Miquelon\n* `America/Moncton` - America/Moncton\n* `America/Monterrey` - America/Monterrey\n* `America/Montevideo` - America/Montevideo\n* `America/Montreal` - America/Montreal\n* `America/Montserrat` - America/Montserrat\n* `America/Nassau` - America/Nassau\n* `America/New_York` - America/New_York\n* `America/Nipigon` - America/Nipigon\n* `America/Nome` - America/Nome\n* `America/Noronha` - America/Noronha\n* `America/North_Dakota/Beulah` - America/North_Dakota/Beulah\n* `America/North_Dakota/Center` - America/North_Dakota/Center\n* `America/North_Dakota/New_Salem` - America/North_Dakota/New_Salem\n* `America/Nuuk` - America/Nuuk\n* `America/Ojinaga` - America/Ojinaga\n* `America/Panama` - America/Panama\n* `America/Pangnirtung` - America/Pangnirtung\n* `America/Paramaribo` - America/Paramaribo\n* `America/Phoenix` - America/Phoenix\n* `America/Port-au-Prince` - America/Port-au-Prince\n* `America/Port_of_Spain` - America/Port_of_Spain\n* `America/Porto_Acre` - America/Porto_Acre\n* `America/Porto_Velho` - America/Porto_Velho\n* `America/Puerto_Rico` - America/Puerto_Rico\n* `America/Punta_Arenas` - America/Punta_Arenas\n* `America/Rainy_River` - America/Rainy_River\n* `America/Rankin_Inlet` - America/Rankin_Inlet\n* `America/Recife` - America/Recife\n* `America/Regina` - America/Regina\n* `America/Resolute` - America/Resolute\n* `America/Rio_Branco` - America/Rio_Branco\n* `America/Rosario` - America/Rosario\n* `America/Santa_Isabel` - America/Santa_Isabel\n* `America/Santarem` - America/Santarem\n* `America/Santiago` - America/Santiago\n* `America/Santo_Domingo` - America/Santo_Domingo\n* `America/Sao_Paulo` - America/Sao_Paulo\n* `America/Scoresbysund` - America/Scoresbysund\n* `America/Shiprock` - America/Shiprock\n* `America/Sitka` - America/Sitka\n* `America/St_Barthelemy` - America/St_Barthelemy\n* `America/St_Johns` - America/St_Johns\n* `America/St_Kitts` - America/St_Kitts\n* `America/St_Lucia` - America/St_Lucia\n* `America/St_Thomas` - America/St_Thomas\n* `America/St_Vincent` - America/St_Vincent\n* `America/Swift_Current` - America/Swift_Current\n* `America/Tegucigalpa` - America/Tegucigalpa\n* `America/Thule` - America/Thule\n* `America/Thunder_Bay` - America/Thunder_Bay\n* `America/Tijuana` - America/Tijuana\n* `America/Toronto` - America/Toronto\n* `America/Tortola` - America/Tortola\n* `America/Vancouver` - America/Vancouver\n* `America/Virgin` - America/Virgin\n* `America/Whitehorse` - America/Whitehorse\n* `America/Winnipeg` - America/Winnipeg\n* `America/Yakutat` - America/Yakutat\n* `America/Yellowknife` - America/Yellowknife\n* `Antarctica/Casey` - Antarctica/Casey\n* `Antarctica/Davis` - Antarctica/Davis\n* `Antarctica/DumontDUrville` - Antarctica/DumontDUrville\n* `Antarctica/Macquarie` - Antarctica/Macquarie\n* `Antarctica/Mawson` - Antarctica/Mawson\n* `Antarctica/McMurdo` - Antarctica/McMurdo\n* `Antarctica/Palmer` - Antarctica/Palmer\n* `Antarctica/Rothera` - Antarctica/Rothera\n* `Antarctica/South_Pole` - Antarctica/South_Pole\n* `Antarctica/Syowa` - Antarctica/Syowa\n* `Antarctica/Troll` - Antarctica/Troll\n* `Antarctica/Vostok` - Antarctica/Vostok\n* `Arctic/Longyearbyen` - Arctic/Longyearbyen\n* `Asia/Aden` - Asia/Aden\n* `Asia/Almaty` - Asia/Almaty\n* `Asia/Amman` - Asia/Amman\n* `Asia/Anadyr` - Asia/Anadyr\n* `Asia/Aqtau` - Asia/Aqtau\n* `Asia/Aqtobe` - Asia/Aqtobe\n* `Asia/Ashgabat` - Asia/Ashgabat\n* `Asia/Ashkhabad` - Asia/Ashkhabad\n* `Asia/Atyrau` - Asia/Atyrau\n* `Asia/Baghdad` - Asia/Baghdad\n* `Asia/Bahrain` - Asia/Bahrain\n* `Asia/Baku` - Asia/Baku\n* `Asia/Bangkok` - Asia/Bangkok\n* `Asia/Barnaul` - Asia/Barnaul\n* `Asia/Beirut` - Asia/Beirut\n* `Asia/Bishkek` - Asia/Bishkek\n* `Asia/Brunei` - Asia/Brunei\n* `Asia/Calcutta` - Asia/Calcutta\n* `Asia/Chita` - Asia/Chita\n* `Asia/Choibalsan` - Asia/Choibalsan\n* `Asia/Chongqing` - Asia/Chongqing\n* `Asia/Chungking` - Asia/Chungking\n* `Asia/Colombo` - Asia/Colombo\n* `Asia/Dacca` - Asia/Dacca\n* `Asia/Damascus` - Asia/Damascus\n* `Asia/Dhaka` - Asia/Dhaka\n* `Asia/Dili` - Asia/Dili\n* `Asia/Dubai` - Asia/Dubai\n* `Asia/Dushanbe` - Asia/Dushanbe\n* `Asia/Famagusta` - Asia/Famagusta\n* `Asia/Gaza` - Asia/Gaza\n* `Asia/Harbin` - Asia/Harbin\n* `Asia/Hebron` - Asia/Hebron\n* `Asia/Ho_Chi_Minh` - Asia/Ho_Chi_Minh\n* `Asia/Hong_Kong` - Asia/Hong_Kong\n* `Asia/Hovd` - Asia/Hovd\n* `Asia/Irkutsk` - Asia/Irkutsk\n* `Asia/Istanbul` - Asia/Istanbul\n* `Asia/Jakarta` - Asia/Jakarta\n* `Asia/Jayapura` - Asia/Jayapura\n* `Asia/Jerusalem` - Asia/Jerusalem\n* `Asia/Kabul` - Asia/Kabul\n* `Asia/Kamchatka` - Asia/Kamchatka\n* `Asia/Karachi` - Asia/Karachi\n* `Asia/Kashgar` - Asia/Kashgar\n* `Asia/Kathmandu` - Asia/Kathmandu\n* `Asia/Katmandu` - Asia/Katmandu\n* `Asia/Khandyga` - Asia/Khandyga\n* `Asia/Kolkata` - Asia/Kolkata\n* `Asia/Krasnoyarsk` - Asia/Krasnoyarsk\n* `Asia/Kuala_Lumpur` - Asia/Kuala_Lumpur\n* `Asia/Kuching` - Asia/Kuching\n* `Asia/Kuwait` - Asia/Kuwait\n* `Asia/Macao` - Asia/Macao\n* `Asia/Macau` - Asia/Macau\n* `Asia/Magadan` - Asia/Magadan\n* `Asia/Makassar` - Asia/Makassar\n* `Asia/Manila` - Asia/Manila\n* `Asia/Muscat` - Asia/Muscat\n* `Asia/Nicosia` - Asia/Nicosia\n* `Asia/Novokuznetsk` - Asia/Novokuznetsk\n* `Asia/Novosibirsk` - Asia/Novosibirsk\n* `Asia/Omsk` - Asia/Omsk\n* `Asia/Oral` - Asia/Oral\n* `Asia/Phnom_Penh` - Asia/Phnom_Penh\n* `Asia/Pontianak` - Asia/Pontianak\n* `Asia/Pyongyang` - Asia/Pyongyang\n* `Asia/Qatar` - Asia/Qatar\n* `Asia/Qostanay` - Asia/Qostanay\n* `Asia/Qyzylorda` - Asia/Qyzylorda\n* `Asia/Rangoon` - Asia/Rangoon\n* `Asia/Riyadh` - Asia/Riyadh\n* `Asia/Saigon` - Asia/Saigon\n* `Asia/Sakhalin` - Asia/Sakhalin\n* `Asia/Samarkand` - Asia/Samarkand\n* `Asia/Seoul` - Asia/Seoul\n* `Asia/Shanghai` - Asia/Shanghai\n* `Asia/Singapore` - Asia/Singapore\n* `Asia/Srednekolymsk` - Asia/Srednekolymsk\n* `Asia/Taipei` - Asia/Taipei\n* `Asia/Tashkent` - Asia/Tashkent\n* `Asia/Tbilisi` - Asia/Tbilisi\n* `Asia/Tehran` - Asia/Tehran\n* `Asia/Tel_Aviv` - Asia/Tel_Aviv\n* `Asia/Thimbu` - Asia/Thimbu\n* `Asia/Thimphu` - Asia/Thimphu\n* `Asia/Tokyo` - Asia/Tokyo\n* `Asia/Tomsk` - Asia/Tomsk\n* `Asia/Ujung_Pandang` - Asia/Ujung_Pandang\n* `Asia/Ulaanbaatar` - Asia/Ulaanbaatar\n* `Asia/Ulan_Bator` - Asia/Ulan_Bator\n* `Asia/Urumqi` - Asia/Urumqi\n* `Asia/Ust-Nera` - Asia/Ust-Nera\n* `Asia/Vientiane` - Asia/Vientiane\n* `Asia/Vladivostok` - Asia/Vladivostok\n* `Asia/Yakutsk` - Asia/Yakutsk\n* `Asia/Yangon` - Asia/Yangon\n* `Asia/Yekaterinburg` - Asia/Yekaterinburg\n* `Asia/Yerevan` - Asia/Yerevan\n* `Atlantic/Azores` - Atlantic/Azores\n* `Atlantic/Bermuda` - Atlantic/Bermuda\n* `Atlantic/Canary` - Atlantic/Canary\n* `Atlantic/Cape_Verde` - Atlantic/Cape_Verde\n* `Atlantic/Faeroe` - Atlantic/Faeroe\n* `Atlantic/Faroe` - Atlantic/Faroe\n* `Atlantic/Jan_Mayen` - Atlantic/Jan_Mayen\n* `Atlantic/Madeira` - Atlantic/Madeira\n* `Atlantic/Reykjavik` - Atlantic/Reykjavik\n* `Atlantic/South_Georgia` - Atlantic/South_Georgia\n* `Atlantic/St_Helena` - Atlantic/St_Helena\n* `Atlantic/Stanley` - Atlantic/Stanley\n* `Australia/ACT` - Australia/ACT\n* `Australia/Adelaide` - Australia/Adelaide\n* `Australia/Brisbane` - Australia/Brisbane\n* `Australia/Broken_Hill` - Australia/Broken_Hill\n* `Australia/Canberra` - Australia/Canberra\n* `Australia/Currie` - Australia/Currie\n* `Australia/Darwin` - Australia/Darwin\n* `Australia/Eucla` - Australia/Eucla\n* `Australia/Hobart` - Australia/Hobart\n* `Australia/LHI` - Australia/LHI\n* `Australia/Lindeman` - Australia/Lindeman\n* `Australia/Lord_Howe` - Australia/Lord_Howe\n* `Australia/Melbourne` - Australia/Melbourne\n* `Australia/NSW` - Australia/NSW\n* `Australia/North` - Australia/North\n* `Australia/Perth` - Australia/Perth\n* `Australia/Queensland` - Australia/Queensland\n* `Australia/South` - Australia/South\n* `Australia/Sydney` - Australia/Sydney\n* `Australia/Tasmania` - Australia/Tasmania\n* `Australia/Victoria` - Australia/Victoria\n* `Australia/West` - Australia/West\n* `Australia/Yancowinna` - Australia/Yancowinna\n* `Brazil/Acre` - Brazil/Acre\n* `Brazil/DeNoronha` - Brazil/DeNoronha\n* `Brazil/East` - Brazil/East\n* `Brazil/West` - Brazil/West\n* `CET` - CET\n* `CST6CDT` - CST6CDT\n* `Canada/Atlantic` - Canada/Atlantic\n* `Canada/Central` - Canada/Central\n* `Canada/Eastern` - Canada/Eastern\n* `Canada/Mountain` - Canada/Mountain\n* `Canada/Newfoundland` - Canada/Newfoundland\n* `Canada/Pacific` - Canada/Pacific\n* `Canada/Saskatchewan` - Canada/Saskatchewan\n* `Canada/Yukon` - Canada/Yukon\n* `Chile/Continental` - Chile/Continental\n* `Chile/EasterIsland` - Chile/EasterIsland\n* `Cuba` - Cuba\n* `EET` - EET\n* `EST` - EST\n* `EST5EDT` - EST5EDT\n* `Egypt` - Egypt\n* `Eire` - Eire\n* `Etc/GMT` - Etc/GMT\n* `Etc/GMT+0` - Etc/GMT+0\n* `Etc/GMT+1` - Etc/GMT+1\n* `Etc/GMT+10` - Etc/GMT+10\n* `Etc/GMT+11` - Etc/GMT+11\n* `Etc/GMT+12` - Etc/GMT+12\n* `Etc/GMT+2` - Etc/GMT+2\n* `Etc/GMT+3` - Etc/GMT+3\n* `Etc/GMT+4` - Etc/GMT+4\n* `Etc/GMT+5` - Etc/GMT+5\n* `Etc/GMT+6` - Etc/GMT+6\n* `Etc/GMT+7` - Etc/GMT+7\n* `Etc/GMT+8` - Etc/GMT+8\n* `Etc/GMT+9` - Etc/GMT+9\n* `Etc/GMT-0` - Etc/GMT-0\n* `Etc/GMT-1` - Etc/GMT-1\n* `Etc/GMT-10` - Etc/GMT-10\n* `Etc/GMT-11` - Etc/GMT-11\n* `Etc/GMT-12` - Etc/GMT-12\n* `Etc/GMT-13` - Etc/GMT-13\n* `Etc/GMT-14` - Etc/GMT-14\n* `Etc/GMT-2` - Etc/GMT-2\n* `Etc/GMT-3` - Etc/GMT-3\n* `Etc/GMT-4` - Etc/GMT-4\n* `Etc/GMT-5` - Etc/GMT-5\n* `Etc/GMT-6` - Etc/GMT-6\n* `Etc/GMT-7` - Etc/GMT-7\n* `Etc/GMT-8` - Etc/GMT-8\n* `Etc/GMT-9` - Etc/GMT-9\n* `Etc/GMT0` - Etc/GMT0\n* `Etc/Greenwich` - Etc/Greenwich\n* `Etc/UCT` - Etc/UCT\n* `Etc/UTC` - Etc/UTC\n* `Etc/Universal` - Etc/Universal\n* `Etc/Zulu` - Etc/Zulu\n* `Europe/Amsterdam` - Europe/Amsterdam\n* `Europe/Andorra` - Europe/Andorra\n* `Europe/Astrakhan` - Europe/Astrakhan\n* `Europe/Athens` - Europe/Athens\n* `Europe/Belfast` - Europe/Belfast\n* `Europe/Belgrade` - Europe/Belgrade\n* `Europe/Berlin` - Europe/Berlin\n* `Europe/Bratislava` - Europe/Bratislava\n* `Europe/Brussels` - Europe/Brussels\n* `Europe/Bucharest` - Europe/Bucharest\n* `Europe/Budapest` - Europe/Budapest\n* `Europe/Busingen` - Europe/Busingen\n* `Europe/Chisinau` - Europe/Chisinau\n* `Europe/Copenhagen` - Europe/Copenhagen\n* `Europe/Dublin` - Europe/Dublin\n* `Europe/Gibraltar` - Europe/Gibraltar\n* `Europe/Guernsey` - Europe/Guernsey\n* `Europe/Helsinki` - Europe/Helsinki\n* `Europe/Isle_of_Man` - Europe/Isle_of_Man\n* `Europe/Istanbul` - Europe/Istanbul\n* `Europe/Jersey` - Europe/Jersey\n* `Europe/Kaliningrad` - Europe/Kaliningrad\n* `Europe/Kiev` - Europe/Kiev\n* `Europe/Kirov` - Europe/Kirov\n* `Europe/Kyiv` - Europe/Kyiv\n* `Europe/Lisbon` - Europe/Lisbon\n* `Europe/Ljubljana` - Europe/Ljubljana\n* `Europe/London` - Europe/London\n* `Europe/Luxembourg` - Europe/Luxembourg\n* `Europe/Madrid` - Europe/Madrid\n* `Europe/Malta` - Europe/Malta\n* `Europe/Mariehamn` - Europe/Mariehamn\n* `Europe/Minsk` - Europe/Minsk\n* `Europe/Monaco` - Europe/Monaco\n* `Europe/Moscow` - Europe/Moscow\n* `Europe/Nicosia` - Europe/Nicosia\n* `Europe/Oslo` - Europe/Oslo\n* `Europe/Paris` - Europe/Paris\n* `Europe/Podgorica` - Europe/Podgorica\n* `Europe/Prague` - Europe/Prague\n* `Europe/Riga` - Europe/Riga\n* `Europe/Rome` - Europe/Rome\n* `Europe/Samara` - Europe/Samara\n* `Europe/San_Marino` - Europe/San_Marino\n* `Europe/Sarajevo` - Europe/Sarajevo\n* `Europe/Saratov` - Europe/Saratov\n* `Europe/Simferopol` - Europe/Simferopol\n* `Europe/Skopje` - Europe/Skopje\n* `Europe/Sofia` - Europe/Sofia\n* `Europe/Stockholm` - Europe/Stockholm\n* `Europe/Tallinn` - Europe/Tallinn\n* `Europe/Tirane` - Europe/Tirane\n* `Europe/Tiraspol` - Europe/Tiraspol\n* `Europe/Ulyanovsk` - Europe/Ulyanovsk\n* `Europe/Uzhgorod` - Europe/Uzhgorod\n* `Europe/Vaduz` - Europe/Vaduz\n* `Europe/Vatican` - Europe/Vatican\n* `Europe/Vienna` - Europe/Vienna\n* `Europe/Vilnius` - Europe/Vilnius\n* `Europe/Volgograd` - Europe/Volgograd\n* `Europe/Warsaw` - Europe/Warsaw\n* `Europe/Zagreb` - Europe/Zagreb\n* `Europe/Zaporozhye` - Europe/Zaporozhye\n* `Europe/Zurich` - Europe/Zurich\n* `GB` - GB\n* `GB-Eire` - GB-Eire\n* `GMT` - GMT\n* `GMT+0` - GMT+0\n* `GMT-0` - GMT-0\n* `GMT0` - GMT0\n* `Greenwich` - Greenwich\n* `HST` - HST\n* `Hongkong` - Hongkong\n* `Iceland` - Iceland\n* `Indian/Antananarivo` - Indian/Antananarivo\n* `Indian/Chagos` - Indian/Chagos\n* `Indian/Christmas` - Indian/Christmas\n* `Indian/Cocos` - Indian/Cocos\n* `Indian/Comoro` - Indian/Comoro\n* `Indian/Kerguelen` - Indian/Kerguelen\n* `Indian/Mahe` - Indian/Mahe\n* `Indian/Maldives` - Indian/Maldives\n* `Indian/Mauritius` - Indian/Mauritius\n* `Indian/Mayotte` - Indian/Mayotte\n* `Indian/Reunion` - Indian/Reunion\n* `Iran` - Iran\n* `Israel` - Israel\n* `Jamaica` - Jamaica\n* `Japan` - Japan\n* `Kwajalein` - Kwajalein\n* `Libya` - Libya\n* `MET` - MET\n* `MST` - MST\n* `MST7MDT` - MST7MDT\n* `Mexico/BajaNorte` - Mexico/BajaNorte\n* `Mexico/BajaSur` - Mexico/BajaSur\n* `Mexico/General` - Mexico/General\n* `NZ` - NZ\n* `NZ-CHAT` - NZ-CHAT\n* `Navajo` - Navajo\n* `PRC` - PRC\n* `PST8PDT` - PST8PDT\n* `Pacific/Apia` - Pacific/Apia\n* `Pacific/Auckland` - Pacific/Auckland\n* `Pacific/Bougainville` - Pacific/Bougainville\n* `Pacific/Chatham` - Pacific/Chatham\n* `Pacific/Chuuk` - Pacific/Chuuk\n* `Pacific/Easter` - Pacific/Easter\n* `Pacific/Efate` - Pacific/Efate\n* `Pacific/Enderbury` - Pacific/Enderbury\n* `Pacific/Fakaofo` - Pacific/Fakaofo\n* `Pacific/Fiji` - Pacific/Fiji\n* `Pacific/Funafuti` - Pacific/Funafuti\n* `Pacific/Galapagos` - Pacific/Galapagos\n* `Pacific/Gambier` - Pacific/Gambier\n* `Pacific/Guadalcanal` - Pacific/Guadalcanal\n* `Pacific/Guam` - Pacific/Guam\n* `Pacific/Honolulu` - Pacific/Honolulu\n* `Pacific/Johnston` - Pacific/Johnston\n* `Pacific/Kanton` - Pacific/Kanton\n* `Pacific/Kiritimati` - Pacific/Kiritimati\n* `Pacific/Kosrae` - Pacific/Kosrae\n* `Pacific/Kwajalein` - Pacific/Kwajalein\n* `Pacific/Majuro` - Pacific/Majuro\n* `Pacific/Marquesas` - Pacific/Marquesas\n* `Pacific/Midway` - Pacific/Midway\n* `Pacific/Nauru` - Pacific/Nauru\n* `Pacific/Niue` - Pacific/Niue\n* `Pacific/Norfolk` - Pacific/Norfolk\n* `Pacific/Noumea` - Pacific/Noumea\n* `Pacific/Pago_Pago` - Pacific/Pago_Pago\n* `Pacific/Palau` - Pacific/Palau\n* `Pacific/Pitcairn` - Pacific/Pitcairn\n* `Pacific/Pohnpei` - Pacific/Pohnpei\n* `Pacific/Ponape` - Pacific/Ponape\n* `Pacific/Port_Moresby` - Pacific/Port_Moresby\n* `Pacific/Rarotonga` - Pacific/Rarotonga\n* `Pacific/Saipan` - Pacific/Saipan\n* `Pacific/Samoa` - Pacific/Samoa\n* `Pacific/Tahiti` - Pacific/Tahiti\n* `Pacific/Tarawa` - Pacific/Tarawa\n* `Pacific/Tongatapu` - Pacific/Tongatapu\n* `Pacific/Truk` - Pacific/Truk\n* `Pacific/Wake` - Pacific/Wake\n* `Pacific/Wallis` - Pacific/Wallis\n* `Pacific/Yap` - Pacific/Yap\n* `Poland` - Poland\n* `Portugal` - Portugal\n* `ROC` - ROC\n* `ROK` - ROK\n* `Singapore` - Singapore\n* `Turkey` - Turkey\n* `UCT` - UCT\n* `US/Alaska` - US/Alaska\n* `US/Aleutian` - US/Aleutian\n* `US/Arizona` - US/Arizona\n* `US/Central` - US/Central\n* `US/East-Indiana` - US/East-Indiana\n* `US/Eastern` - US/Eastern\n* `US/Hawaii` - US/Hawaii\n* `US/Indiana-Starke` - US/Indiana-Starke\n* `US/Michigan` - US/Michigan\n* `US/Mountain` - US/Mountain\n* `US/Pacific` - US/Pacific\n* `US/Samoa` - US/Samoa\n* `UTC` - UTC\n* `Universal` - Universal\n* `W-SU` - W-SU\n* `WET` - WET\n* `Zulu` - Zulu"}], "readOnly": true}, "access_control": {"type": "boolean", "readOnly": true}}, "required": ["access_control", "api_token", "completed_snippet_onboarding", "has_completed_onboarding_for", "id", "ingested_event", "is_demo", "name", "organization", "project_id", "timezone", "uuid"]}], "readOnly": true}, "organization": {"allOf": [{"type": "object", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "readOnly": true, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "plugins_access_level": {"allOf": [{"enum": [0, 3, 6, 9], "type": "integer", "description": "* `0` - none\n* `3` - config\n* `6` - install\n* `9` - root"}], "readOnly": true}, "teams": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "projects": {"type": "array", "items": {"type": "object", "additionalProperties": {}}, "readOnly": true}, "available_product_features": {"type": "array", "items": {}, "readOnly": true, "nullable": true}, "is_member_join_email_enabled": {"type": "boolean"}, "metadata": {"type": "string", "readOnly": true}, "customer_id": {"type": "string", "readOnly": true, "nullable": true}, "enforce_2fa": {"type": "boolean", "nullable": true}, "members_can_invite": {"type": "boolean", "nullable": true}, "members_can_use_personal_api_keys": {"type": "boolean"}, "allow_publicly_shared_resources": {"type": "boolean"}, "member_count": {"type": "string", "readOnly": true}, "is_ai_data_processing_approved": {"type": "boolean", "nullable": true}, "default_experiment_stats_method": {"nullable": true, "description": "Default statistical method for new experiments in this organization.\n\n* `bayesian` - Bayesian\n* `frequentist` - Frequentist", "oneOf": [{"enum": ["bayesian", "frequentist"], "type": "string", "description": "* `bayesian` - Bayesian\n* `frequentist` - Frequentist"}, {"enum": [""]}, {"enum": [null]}]}, "default_role_id": {"type": "string", "nullable": true, "description": "ID of the role to automatically assign to new members joining the organization"}}, "required": ["available_product_features", "created_at", "customer_id", "id", "member_count", "membership_level", "metadata", "name", "plugins_access_level", "projects", "slug", "teams", "updated_at"]}], "readOnly": true}, "organizations": {"type": "array", "items": {"type": "object", "description": "Serializer for `Organization` model with minimal attributes to speeed up loading and transfer times.\nAlso used for nested serializers.", "properties": {"id": {"type": "string", "format": "uuid", "readOnly": true}, "name": {"type": "string", "maxLength": 64}, "slug": {"type": "string", "maxLength": 48, "pattern": "^[-a-zA-Z0-9_]+$"}, "logo_media_id": {"type": "string", "format": "uuid", "nullable": true, "readOnly": true}, "membership_level": {"allOf": [{"enum": [1, 8, 15], "type": "integer"}], "nullable": true, "readOnly": true}, "members_can_use_personal_api_keys": {"type": "boolean"}}, "required": ["id", "logo_media_id", "membership_level", "name", "slug"]}, "readOnly": true}, "set_current_organization": {"type": "string", "writeOnly": true}, "set_current_team": {"type": "string", "writeOnly": true}, "password": {"type": "string", "writeOnly": true, "maxLength": 128}, "current_password": {"type": "string", "writeOnly": true}, "events_column_config": {}, "is_2fa_enabled": {"type": "boolean", "readOnly": true}, "has_social_auth": {"type": "boolean", "readOnly": true}, "has_sso_enforcement": {"type": "boolean", "readOnly": true}, "has_seen_product_intro_for": {"nullable": true}, "scene_personalisation": {"type": "array", "items": {"type": "object", "properties": {"scene": {"type": "string", "maxLength": 200}, "dashboard": {"type": "integer", "nullable": true}}, "required": ["scene"]}, "readOnly": true}, "theme_mode": {"nullable": true, "oneOf": [{"enum": ["light", "dark", "system"], "type": "string", "description": "* `light` - Light\n* `dark` - Dark\n* `system` - System"}, {"enum": [""]}, {"enum": [null]}]}, "hedgehog_config": {"nullable": true}, "role_at_organization": {"enum": ["engineering", "data", "product", "founder", "leadership", "marketing", "sales", "other"], "type": "string", "description": "* `engineering` - Engineering\n* `data` - Data\n* `product` - Product Management\n* `founder` - Founder\n* `leadership` - Leadership\n* `marketing` - Marketing\n* `sales` - Sales / Success\n* `other` - Other"}}, "required": ["date_joined", "distinct_id", "email", "has_password", "has_social_auth", "has_sso_enforcement", "id", "is_2fa_enabled", "is_email_verified", "is_impersonated", "is_impersonated_until", "organization", "organizations", "password", "pending_email", "scene_personalisation", "sensitive_session_expires_at", "team", "uuid"]}',  # noqa: E501
}
