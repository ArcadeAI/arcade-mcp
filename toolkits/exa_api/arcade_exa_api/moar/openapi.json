{
  "openapi": "3.1.0",
  "info": {
    "version": "1.2.0",
    "title": "Exa Search API",
    "description": "A comprehensive API for internet-scale search, allowing users to perform queries and retrieve results from a wide variety of sources using embeddings-based and traditional search.",
    "x-moar-merged": true,
    "x-moar-merged-count": 2
  },
  "servers": [
    {
      "url": "https://api.exa.ai"
    },
    {
      "url": "https://api.exa.ai/websets/",
      "description": "Production"
    }
  ],
  "security": [
    {
      "apikey": []
    }
  ],
  "paths": {
    "/search": {
      "post": {
        "operationId": "search",
        "summary": "Search",
        "description": "Perform a search with a Exa prompt-engineered query and retrieve a list of relevant results. Optionally get contents.",
        "x-codeSamples": [
          {
            "lang": "bash",
            "label": "Simple search and contents",
            "source": "curl -X POST 'https://api.exa.ai/search' \\\n  -H 'x-api-key: YOUR-EXA-API-KEY' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"query\": \"Latest research in LLMs\",\n    \"text\": true\n  }'\n"
          },
          {
            "lang": "python",
            "label": "Simple search and contents",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nresults = exa.search_and_contents(\n    \"Latest research in LLMs\", \n    text=True\n)\n\nprint(results)\n"
          },
          {
            "lang": "javascript",
            "label": "Simple search and contents",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst results = await exa.searchAndContents(\n    'Latest research in LLMs', \n    { text: true }\n);\n\nconsole.log(results);\n"
          },
          {
            "lang": "php",
            "label": "Simple search and contents",
            "source": ""
          },
          {
            "lang": "go",
            "label": "Simple search and contents",
            "source": ""
          },
          {
            "lang": "java",
            "label": "Simple search and contents",
            "source": ""
          },
          {
            "lang": "bash",
            "label": "Advanced search with filters",
            "source": "curl --request POST \\\n  --url https://api.exa.ai/search \\\n  --header 'x-api-key: <token>' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n  \"query\": \"Latest research in LLMs\",\n  \"type\": \"auto\",\n  \"category\": \"research paper\",\n  \"numResults\": 10,\n  \"contents\": {\n    \"text\": true,\n    \"summary\": {\n      \"query\": \"Main developments\"\n    },\n    \"subpages\": 1,\n    \"subpageTarget\": \"sources\",\n    \"extras\": {\n      \"links\": 1,\n      \"imageLinks\": 1\n    }\n  }\n}'\n"
          },
          {
            "lang": "python",
            "label": "Advanced search with filters",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nresults = exa.search_and_contents(\n    \"Latest research in LLMs\",\n    type=\"auto\",\n    category=\"research paper\",\n    num_results=10,\n    text=True,\n    summary={\n        \"query\": \"Main developments\"\n    },\n    subpages=1,\n    subpage_target=\"sources\",\n    extras={\n        \"links\": 1,\n        \"image_links\": 1\n    }\n)\n\nprint(results)\n"
          },
          {
            "lang": "javascript",
            "label": "Advanced search with filters",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst results = await exa.searchAndContents('Latest research in LLMs', {\n    type: 'auto',\n    category: 'research paper',\n    numResults: 10,\n    contents: {\n        text: true,\n        summary: {\n            query: 'Main developments'\n        },\n        subpages: 1,\n        subpageTarget: 'sources',\n        extras: {\n            links: 1,\n            imageLinks: 1\n        }\n    }\n});\n\nconsole.log(results);\n"
          },
          {
            "lang": "php",
            "label": "Advanced search with filters",
            "source": ""
          },
          {
            "lang": "go",
            "label": "Advanced search with filters",
            "source": ""
          },
          {
            "lang": "java",
            "label": "Advanced search with filters",
            "source": ""
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "query": {
                        "type": "string",
                        "example": "Latest developments in LLM capabilities",
                        "description": "The query string for the search."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "keyword",
                          "neural",
                          "fast",
                          "auto"
                        ],
                        "description": "The type of search. Neural uses an embeddings-based model, keyword is google-like SERP, and auto (default) intelligently combines the two. Fast uses streamlined versions of the neural and keyword models.",
                        "example": "auto",
                        "default": "auto"
                      },
                      "category": {
                        "type": "string",
                        "enum": [
                          "company",
                          "research paper",
                          "news",
                          "pdf",
                          "github",
                          "tweet",
                          "personal site",
                          "linkedin profile",
                          "financial report"
                        ],
                        "description": "A data category to focus on.",
                        "example": "research paper"
                      },
                      "userLocation": {
                        "type": "string",
                        "description": "The two-letter ISO country code of the user, e.g. US.",
                        "example": "US"
                      }
                    },
                    "required": [
                      "query"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "numResults": {
                        "type": "integer",
                        "maximum": 100,
                        "default": 10,
                        "minimum": 1,
                        "description": "Number of results to return (up to thousands of results available for custom plans)",
                        "example": 10
                      },
                      "includeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to include in the search. If specified, results will only come from these domains.",
                        "example": [
                          "arxiv.org",
                          "paperswithcode.com"
                        ]
                      },
                      "excludeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to exclude from search results. If specified, no results will be returned from these domains."
                      },
                      "startCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01"
                      },
                      "endCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31"
                      },
                      "startPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01"
                      },
                      "endPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31"
                      },
                      "includeText": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.",
                        "example": [
                          "large language model"
                        ]
                      },
                      "excludeText": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.",
                        "example": [
                          "course"
                        ]
                      },
                      "context": {
                        "oneOf": [
                          {
                            "type": "boolean",
                            "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                            "example": true
                          },
                          {
                            "type": "object",
                            "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                            "properties": {
                              "maxCharacters": {
                                "type": "integer",
                                "description": "Maximum character limit.",
                                "example": 10000
                              }
                            }
                          }
                        ]
                      },
                      "contents": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "oneOf": [
                              {
                                "type": "boolean",
                                "title": "Simple text retrieval",
                                "description": "If true, returns full page text with default settings. If false, disables text return."
                              },
                              {
                                "type": "object",
                                "title": "Advanced text options",
                                "description": "Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.",
                                "properties": {
                                  "maxCharacters": {
                                    "type": "integer",
                                    "description": "Maximum character limit for the full page text. Useful for controlling response size and API costs.",
                                    "example": 1000
                                  },
                                  "includeHtmlTags": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Include HTML tags in the response, which can help LLMs understand text structure and formatting.",
                                    "example": false
                                  }
                                }
                              }
                            ]
                          },
                          "highlights": {
                            "type": "object",
                            "description": "Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.",
                            "properties": {
                              "numSentences": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "The number of sentences to return for each snippet.",
                                "example": 1
                              },
                              "highlightsPerUrl": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "The number of snippets to return for each result.",
                                "example": 1
                              },
                              "query": {
                                "type": "string",
                                "description": "Custom query to direct the LLM's selection of highlights.",
                                "example": "Key advancements"
                              }
                            }
                          },
                          "summary": {
                            "type": "object",
                            "description": "Summary of the webpage",
                            "properties": {
                              "query": {
                                "type": "string",
                                "description": "Custom query for the LLM-generated summary.",
                                "example": "Main developments"
                              },
                              "schema": {
                                "type": "object",
                                "description": "JSON schema for structured output from summary. \nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\n",
                                "example": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "title": "Title",
                                  "type": "object",
                                  "properties": {
                                    "Property 1": {
                                      "type": "string",
                                      "description": "Description"
                                    },
                                    "Property 2": {
                                      "type": "string",
                                      "enum": [
                                        "option 1",
                                        "option 2",
                                        "option 3"
                                      ],
                                      "description": "Description"
                                    }
                                  },
                                  "required": [
                                    "Property 1"
                                  ]
                                }
                              }
                            }
                          },
                          "livecrawl": {
                            "type": "string",
                            "enum": [
                              "never",
                              "fallback",
                              "always",
                              "preferred"
                            ],
                            "description": "Options for livecrawling pages.\n'never': Disable livecrawling (default for neural search).\n'fallback': Livecrawl when cache is empty (default for keyword search).\n'always': Always livecrawl.\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\n",
                            "example": "always"
                          },
                          "livecrawlTimeout": {
                            "type": "integer",
                            "default": 10000,
                            "description": "The timeout for livecrawling in milliseconds.",
                            "example": 1000
                          },
                          "subpages": {
                            "type": "integer",
                            "default": 0,
                            "description": "The number of subpages to crawl. The actual number crawled may be limited by system constraints.",
                            "example": 1
                          },
                          "subpageTarget": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            ],
                            "description": "Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.",
                            "example": "sources"
                          },
                          "extras": {
                            "type": "object",
                            "description": "Extra parameters to pass.",
                            "properties": {
                              "links": {
                                "type": "integer",
                                "default": 0,
                                "description": "Number of URLs to return from each webpage.",
                                "example": 1
                              },
                              "imageLinks": {
                                "type": "integer",
                                "default": 0,
                                "description": "Number of images to return for each result.",
                                "example": 1
                              }
                            }
                          },
                          "context": {
                            "oneOf": [
                              {
                                "type": "boolean",
                                "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                                "example": true
                              },
                              {
                                "type": "object",
                                "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                                "properties": {
                                  "maxCharacters": {
                                    "type": "integer",
                                    "description": "Maximum character limit.",
                                    "example": 10000
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/SearchResponse"
          }
        },
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai"
          }
        ],
        "x-moar-primitive-count": 31,
        "x-moar-complexity-skipped": false
      }
    },
    "/findSimilar": {
      "post": {
        "operationId": "findSimilar",
        "summary": "Find similar links",
        "description": "Find similar links to the link provided. Optionally get contents.",
        "x-codeSamples": [
          {
            "lang": "bash",
            "label": "Find similar links",
            "source": "curl -X POST 'https://api.exa.ai/findSimilar' \\\n  -H 'x-api-key: YOUR-EXA-API-KEY' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"url\": \"https://arxiv.org/abs/2307.06435\",\n    \"text\": true\n  }'\n"
          },
          {
            "lang": "python",
            "label": "Find similar links",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nresults = exa.find_similar_and_contents(\n    url=\"https://arxiv.org/abs/2307.06435\",\n    text=True\n)\n\nprint(results)\n"
          },
          {
            "lang": "javascript",
            "label": "Find similar links",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst results = await exa.findSimilarAndContents(\n    'https://arxiv.org/abs/2307.06435',\n    { text: true }\n);\n\nconsole.log(results);\n"
          },
          {
            "lang": "php",
            "label": "Find similar links",
            "source": ""
          },
          {
            "lang": "go",
            "label": "Find similar links",
            "source": ""
          },
          {
            "lang": "java",
            "label": "Find similar links",
            "source": ""
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "example": "https://arxiv.org/abs/2307.06435",
                        "description": "The url for which you would like to find similar links."
                      }
                    },
                    "required": [
                      "url"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "numResults": {
                        "type": "integer",
                        "maximum": 100,
                        "default": 10,
                        "minimum": 1,
                        "description": "Number of results to return (up to thousands of results available for custom plans)",
                        "example": 10
                      },
                      "includeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to include in the search. If specified, results will only come from these domains.",
                        "example": [
                          "arxiv.org",
                          "paperswithcode.com"
                        ]
                      },
                      "excludeDomains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of domains to exclude from search results. If specified, no results will be returned from these domains."
                      },
                      "startCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01"
                      },
                      "endCrawlDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31"
                      },
                      "startPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-01-01"
                      },
                      "endPublishedDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
                        "example": "2023-12-31"
                      },
                      "includeText": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.",
                        "example": [
                          "large language model"
                        ]
                      },
                      "excludeText": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.",
                        "example": [
                          "course"
                        ]
                      },
                      "context": {
                        "oneOf": [
                          {
                            "type": "boolean",
                            "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                            "example": true
                          },
                          {
                            "type": "object",
                            "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                            "properties": {
                              "maxCharacters": {
                                "type": "integer",
                                "description": "Maximum character limit.",
                                "example": 10000
                              }
                            }
                          }
                        ]
                      },
                      "contents": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "oneOf": [
                              {
                                "type": "boolean",
                                "title": "Simple text retrieval",
                                "description": "If true, returns full page text with default settings. If false, disables text return."
                              },
                              {
                                "type": "object",
                                "title": "Advanced text options",
                                "description": "Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.",
                                "properties": {
                                  "maxCharacters": {
                                    "type": "integer",
                                    "description": "Maximum character limit for the full page text. Useful for controlling response size and API costs.",
                                    "example": 1000
                                  },
                                  "includeHtmlTags": {
                                    "type": "boolean",
                                    "default": false,
                                    "description": "Include HTML tags in the response, which can help LLMs understand text structure and formatting.",
                                    "example": false
                                  }
                                }
                              }
                            ]
                          },
                          "highlights": {
                            "type": "object",
                            "description": "Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.",
                            "properties": {
                              "numSentences": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "The number of sentences to return for each snippet.",
                                "example": 1
                              },
                              "highlightsPerUrl": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "The number of snippets to return for each result.",
                                "example": 1
                              },
                              "query": {
                                "type": "string",
                                "description": "Custom query to direct the LLM's selection of highlights.",
                                "example": "Key advancements"
                              }
                            }
                          },
                          "summary": {
                            "type": "object",
                            "description": "Summary of the webpage",
                            "properties": {
                              "query": {
                                "type": "string",
                                "description": "Custom query for the LLM-generated summary.",
                                "example": "Main developments"
                              },
                              "schema": {
                                "type": "object",
                                "description": "JSON schema for structured output from summary. \nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\n",
                                "example": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "title": "Title",
                                  "type": "object",
                                  "properties": {
                                    "Property 1": {
                                      "type": "string",
                                      "description": "Description"
                                    },
                                    "Property 2": {
                                      "type": "string",
                                      "enum": [
                                        "option 1",
                                        "option 2",
                                        "option 3"
                                      ],
                                      "description": "Description"
                                    }
                                  },
                                  "required": [
                                    "Property 1"
                                  ]
                                }
                              }
                            }
                          },
                          "livecrawl": {
                            "type": "string",
                            "enum": [
                              "never",
                              "fallback",
                              "always",
                              "preferred"
                            ],
                            "description": "Options for livecrawling pages.\n'never': Disable livecrawling (default for neural search).\n'fallback': Livecrawl when cache is empty (default for keyword search).\n'always': Always livecrawl.\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\n",
                            "example": "always"
                          },
                          "livecrawlTimeout": {
                            "type": "integer",
                            "default": 10000,
                            "description": "The timeout for livecrawling in milliseconds.",
                            "example": 1000
                          },
                          "subpages": {
                            "type": "integer",
                            "default": 0,
                            "description": "The number of subpages to crawl. The actual number crawled may be limited by system constraints.",
                            "example": 1
                          },
                          "subpageTarget": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            ],
                            "description": "Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.",
                            "example": "sources"
                          },
                          "extras": {
                            "type": "object",
                            "description": "Extra parameters to pass.",
                            "properties": {
                              "links": {
                                "type": "integer",
                                "default": 0,
                                "description": "Number of URLs to return from each webpage.",
                                "example": 1
                              },
                              "imageLinks": {
                                "type": "integer",
                                "default": 0,
                                "description": "Number of images to return for each result.",
                                "example": 1
                              }
                            }
                          },
                          "context": {
                            "oneOf": [
                              {
                                "type": "boolean",
                                "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                                "example": true
                              },
                              {
                                "type": "object",
                                "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                                "properties": {
                                  "maxCharacters": {
                                    "type": "integer",
                                    "description": "Maximum character limit.",
                                    "example": 10000
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/FindSimilarResponse"
          }
        },
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai"
          }
        ],
        "x-moar-primitive-count": 28,
        "x-moar-complexity-skipped": false
      }
    },
    "/contents": {
      "post": {
        "summary": "Get Contents",
        "operationId": "getContents",
        "x-codeSamples": [
          {
            "lang": "bash",
            "label": "Simple contents retrieval",
            "source": "curl -X POST 'https://api.exa.ai/contents' \\\n  -H 'x-api-key: YOUR-EXA-API-KEY' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"urls\": [\"https://arxiv.org/abs/2307.06435\"],\n    \"text\": true\n  }'\n"
          },
          {
            "lang": "python",
            "label": "Simple contents retrieval",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nresults = exa.get_contents(\n    urls=[\"https://arxiv.org/abs/2307.06435\"],\n    text=True\n)\n\nprint(results)\n"
          },
          {
            "lang": "javascript",
            "label": "Simple contents retrieval",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst results = await exa.getContents(\n    [\"https://arxiv.org/abs/2307.06435\"],\n    { text: true }\n);\n\nconsole.log(results);\n"
          },
          {
            "lang": "php",
            "label": "Simple contents retrieval",
            "source": ""
          },
          {
            "lang": "go",
            "label": "Simple contents retrieval",
            "source": ""
          },
          {
            "lang": "java",
            "label": "Simple contents retrieval",
            "source": ""
          },
          {
            "lang": "bash",
            "label": "Advanced contents retrieval",
            "source": "curl --request POST \\\n  --url https://api.exa.ai/contents \\\n  --header 'x-api-key: YOUR-EXA-API-KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"urls\": [\"https://arxiv.org/abs/2307.06435\"],\n    \"text\": {\n      \"maxCharacters\": 1000,\n      \"includeHtmlTags\": false\n    },\n    \"highlights\": {\n      \"numSentences\": 3,\n      \"highlightsPerUrl\": 2,\n      \"query\": \"Key findings\"\n    },\n    \"summary\": {\n      \"query\": \"Main research contributions\"\n    },\n    \"subpages\": 1,\n    \"subpageTarget\": \"references\",\n    \"extras\": {\n      \"links\": 2,\n      \"imageLinks\": 1\n    }\n  }'\n"
          },
          {
            "lang": "python",
            "label": "Advanced contents retrieval",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nresults = exa.get_contents(\n    urls=[\"https://arxiv.org/abs/2307.06435\"],\n    text={\n        \"maxCharacters\": 1000,\n        \"includeHtmlTags\": False\n    },\n    highlights={\n        \"numSentences\": 3,\n        \"highlightsPerUrl\": 2,\n        \"query\": \"Key findings\"\n    },\n    summary={\n        \"query\": \"Main research contributions\"\n    },\n    subpages=1,\n    subpage_target=\"references\",\n    extras={\n        \"links\": 2,\n        \"image_links\": 1\n    }\n)\n\nprint(results)\n"
          },
          {
            "lang": "javascript",
            "label": "Advanced contents retrieval",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst results = await exa.getContents(\n    [\"https://arxiv.org/abs/2307.06435\"],\n    {\n        text: {\n            maxCharacters: 1000,\n            includeHtmlTags: false\n        },\n        highlights: {\n            numSentences: 3,\n            highlightsPerUrl: 2,\n            query: \"Key findings\"\n        },\n        summary: {\n            query: \"Main research contributions\"\n        },\n        subpages: 1,\n        subpageTarget: \"references\",\n        extras: {\n            links: 2,\n            imageLinks: 1\n        }\n    }\n);\n\nconsole.log(results);\n"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "urls": {
                        "type": "array",
                        "description": "Array of URLs to crawl (backwards compatible with 'ids' parameter).",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "https://arxiv.org/pdf/2307.06435"
                        ]
                      },
                      "ids": {
                        "type": "array",
                        "deprecated": true,
                        "description": "Deprecated - use 'urls' instead. Array of document IDs obtained from searches.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "https://arxiv.org/pdf/2307.06435"
                        ]
                      }
                    },
                    "required": [
                      "urls"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "text": {
                        "oneOf": [
                          {
                            "type": "boolean",
                            "title": "Simple text retrieval",
                            "description": "If true, returns full page text with default settings. If false, disables text return."
                          },
                          {
                            "type": "object",
                            "title": "Advanced text options",
                            "description": "Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.",
                            "properties": {
                              "maxCharacters": {
                                "type": "integer",
                                "description": "Maximum character limit for the full page text. Useful for controlling response size and API costs.",
                                "example": 1000
                              },
                              "includeHtmlTags": {
                                "type": "boolean",
                                "default": false,
                                "description": "Include HTML tags in the response, which can help LLMs understand text structure and formatting.",
                                "example": false
                              }
                            }
                          }
                        ]
                      },
                      "highlights": {
                        "type": "object",
                        "description": "Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.",
                        "properties": {
                          "numSentences": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "The number of sentences to return for each snippet.",
                            "example": 1
                          },
                          "highlightsPerUrl": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "The number of snippets to return for each result.",
                            "example": 1
                          },
                          "query": {
                            "type": "string",
                            "description": "Custom query to direct the LLM's selection of highlights.",
                            "example": "Key advancements"
                          }
                        }
                      },
                      "summary": {
                        "type": "object",
                        "description": "Summary of the webpage",
                        "properties": {
                          "query": {
                            "type": "string",
                            "description": "Custom query for the LLM-generated summary.",
                            "example": "Main developments"
                          },
                          "schema": {
                            "type": "object",
                            "description": "JSON schema for structured output from summary. \nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\n",
                            "example": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "Title",
                              "type": "object",
                              "properties": {
                                "Property 1": {
                                  "type": "string",
                                  "description": "Description"
                                },
                                "Property 2": {
                                  "type": "string",
                                  "enum": [
                                    "option 1",
                                    "option 2",
                                    "option 3"
                                  ],
                                  "description": "Description"
                                }
                              },
                              "required": [
                                "Property 1"
                              ]
                            }
                          }
                        }
                      },
                      "livecrawl": {
                        "type": "string",
                        "enum": [
                          "never",
                          "fallback",
                          "always",
                          "preferred"
                        ],
                        "description": "Options for livecrawling pages.\n'never': Disable livecrawling (default for neural search).\n'fallback': Livecrawl when cache is empty (default for keyword search).\n'always': Always livecrawl.\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\n",
                        "example": "always"
                      },
                      "livecrawlTimeout": {
                        "type": "integer",
                        "default": 10000,
                        "description": "The timeout for livecrawling in milliseconds.",
                        "example": 1000
                      },
                      "subpages": {
                        "type": "integer",
                        "default": 0,
                        "description": "The number of subpages to crawl. The actual number crawled may be limited by system constraints.",
                        "example": 1
                      },
                      "subpageTarget": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ],
                        "description": "Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.",
                        "example": "sources"
                      },
                      "extras": {
                        "type": "object",
                        "description": "Extra parameters to pass.",
                        "properties": {
                          "links": {
                            "type": "integer",
                            "default": 0,
                            "description": "Number of URLs to return from each webpage.",
                            "example": 1
                          },
                          "imageLinks": {
                            "type": "integer",
                            "default": 0,
                            "description": "Number of images to return for each result.",
                            "example": 1
                          }
                        }
                      },
                      "context": {
                        "oneOf": [
                          {
                            "type": "boolean",
                            "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                            "example": true
                          },
                          {
                            "type": "object",
                            "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                            "properties": {
                              "maxCharacters": {
                                "type": "integer",
                                "description": "Maximum character limit.",
                                "example": 10000
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ContentsResponse"
          }
        },
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai"
          }
        ],
        "x-moar-primitive-count": 18,
        "x-moar-complexity-skipped": false
      }
    },
    "/answer": {
      "post": {
        "operationId": "answer",
        "summary": "Generate an answer from search results",
        "description": "Performs a search based on the query and generates either a direct answer or a detailed summary with citations, depending on the query type.\n",
        "x-codeSamples": [
          {
            "lang": "bash",
            "label": "Simple answer",
            "source": "curl -X POST 'https://api.exa.ai/answer' \\\n  -H 'x-api-key: YOUR-EXA-API-KEY' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"query\": \"What is the latest valuation of SpaceX?\",\n    \"text\": true\n  }'\n"
          },
          {
            "lang": "python",
            "label": "Simple answer",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nresult = exa.answer(\n    \"What is the latest valuation of SpaceX?\",\n    text=True\n)\n\nprint(result)\n"
          },
          {
            "lang": "javascript",
            "label": "Simple answer",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst result = await exa.answer(\n    'What is the latest valuation of SpaceX?',\n    { text: true }\n);\n\nconsole.log(result);\n"
          },
          {
            "lang": "php",
            "label": "Simple answer",
            "source": ""
          },
          {
            "lang": "go",
            "label": "Simple answer",
            "source": ""
          },
          {
            "lang": "java",
            "label": "Simple answer",
            "source": ""
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "query"
                ],
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "The question or query to answer.",
                    "example": "What is the latest valuation of SpaceX?",
                    "minLength": 1
                  },
                  "stream": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, the response is returned as a server-sent events (SSS) stream."
                  },
                  "text": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, the response includes full text content in the search results"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/AnswerResponse"
          }
        },
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai"
          }
        ],
        "x-moar-primitive-count": 3,
        "x-moar-complexity-skipped": false
      }
    },
    "/research/v1": {
      "get": {
        "description": "Get a paginated list of research requests",
        "operationId": "ResearchController_listResearch",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to paginate through the results",
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of research requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "data": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "discriminator": {
                          "propertyName": "status"
                        },
                        "oneOf": [
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "researchId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the research request"
                              },
                              "createdAt": {
                                "type": [
                                  "number"
                                ],
                                "description": "Milliseconds since epoch time"
                              },
                              "model": {
                                "default": "exa-research",
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "exa-research",
                                  "exa-research-pro"
                                ],
                                "description": "The model used for the research request"
                              },
                              "instructions": {
                                "type": [
                                  "string"
                                ],
                                "description": "The instructions given to this research request"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "pending"
                                ]
                              }
                            },
                            "required": [
                              "researchId",
                              "createdAt",
                              "instructions",
                              "status"
                            ]
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "researchId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the research request"
                              },
                              "createdAt": {
                                "type": [
                                  "number"
                                ],
                                "description": "Milliseconds since epoch time"
                              },
                              "model": {
                                "default": "exa-research",
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "exa-research",
                                  "exa-research-pro"
                                ],
                                "description": "The model used for the research request"
                              },
                              "instructions": {
                                "type": [
                                  "string"
                                ],
                                "description": "The instructions given to this research request"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "running"
                                ]
                              },
                              "events": {
                                "type": [
                                  "array"
                                ],
                                "items": {
                                  "oneOf": [
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "research-definition"
                                              ]
                                            },
                                            "instructions": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "outputSchema": {
                                              "type": [
                                                "object"
                                              ],
                                              "additionalProperties": {}
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "instructions",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "research-output"
                                              ]
                                            },
                                            "output": {
                                              "discriminator": {
                                                "propertyName": "outputType"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "completed"
                                                      ]
                                                    },
                                                    "costDollars": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "total": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "numSearches": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "numPages": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "reasoningTokens": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "total",
                                                        "numSearches",
                                                        "numPages",
                                                        "reasoningTokens"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "parsed": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "additionalProperties": {}
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "costDollars",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "failed"
                                                      ]
                                                    },
                                                    "error": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "error"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-definition"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-operation"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "operationId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "data": {
                                              "discriminator": {
                                                "propertyName": "type"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "think"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "search"
                                                      ]
                                                    },
                                                    "searchType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "neural",
                                                        "keyword",
                                                        "auto",
                                                        "fast"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "query": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "results": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "object"
                                                        ],
                                                        "properties": {
                                                          "url": {
                                                            "type": [
                                                              "string"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "url"
                                                        ]
                                                      }
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "searchType",
                                                    "query",
                                                    "results",
                                                    "pageTokens"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "crawl"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "result": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "url": {
                                                          "type": [
                                                            "string"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "url"
                                                      ]
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "result",
                                                    "pageTokens"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "operationId",
                                            "data",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-output"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "output": {
                                              "discriminator": {
                                                "propertyName": "outputType"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "tasks"
                                                      ]
                                                    },
                                                    "reasoning": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "tasksInstructions": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "string"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "reasoning",
                                                    "tasksInstructions"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "stop"
                                                      ]
                                                    },
                                                    "reasoning": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "reasoning"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-definition"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "instructions": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "instructions",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-operation"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "operationId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "data": {
                                              "discriminator": {
                                                "propertyName": "type"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "think"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "search"
                                                      ]
                                                    },
                                                    "searchType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "neural",
                                                        "keyword",
                                                        "auto",
                                                        "fast"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "query": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "results": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "object"
                                                        ],
                                                        "properties": {
                                                          "url": {
                                                            "type": [
                                                              "string"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "url"
                                                        ]
                                                      }
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "searchType",
                                                    "query",
                                                    "results",
                                                    "pageTokens"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "crawl"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "result": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "url": {
                                                          "type": [
                                                            "string"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "url"
                                                      ]
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "result",
                                                    "pageTokens"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "operationId",
                                            "data",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-output"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "output": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "outputType": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "completed"
                                                  ]
                                                },
                                                "content": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "outputType",
                                                "content"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "researchId",
                              "createdAt",
                              "instructions",
                              "status"
                            ]
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "researchId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the research request"
                              },
                              "createdAt": {
                                "type": [
                                  "number"
                                ],
                                "description": "Milliseconds since epoch time"
                              },
                              "model": {
                                "default": "exa-research",
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "exa-research",
                                  "exa-research-pro"
                                ],
                                "description": "The model used for the research request"
                              },
                              "instructions": {
                                "type": [
                                  "string"
                                ],
                                "description": "The instructions given to this research request"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "completed"
                                ]
                              },
                              "events": {
                                "type": [
                                  "array"
                                ],
                                "items": {
                                  "oneOf": [
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "research-definition"
                                              ]
                                            },
                                            "instructions": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "outputSchema": {
                                              "type": [
                                                "object"
                                              ],
                                              "additionalProperties": {}
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "instructions",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "research-output"
                                              ]
                                            },
                                            "output": {
                                              "discriminator": {
                                                "propertyName": "outputType"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "completed"
                                                      ]
                                                    },
                                                    "costDollars": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "total": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "numSearches": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "numPages": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "reasoningTokens": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "total",
                                                        "numSearches",
                                                        "numPages",
                                                        "reasoningTokens"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "parsed": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "additionalProperties": {}
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "costDollars",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "failed"
                                                      ]
                                                    },
                                                    "error": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "error"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-definition"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-operation"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "operationId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "data": {
                                              "discriminator": {
                                                "propertyName": "type"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "think"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "search"
                                                      ]
                                                    },
                                                    "searchType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "neural",
                                                        "keyword",
                                                        "auto",
                                                        "fast"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "query": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "results": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "object"
                                                        ],
                                                        "properties": {
                                                          "url": {
                                                            "type": [
                                                              "string"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "url"
                                                        ]
                                                      }
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "searchType",
                                                    "query",
                                                    "results",
                                                    "pageTokens"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "crawl"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "result": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "url": {
                                                          "type": [
                                                            "string"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "url"
                                                      ]
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "result",
                                                    "pageTokens"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "operationId",
                                            "data",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-output"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "output": {
                                              "discriminator": {
                                                "propertyName": "outputType"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "tasks"
                                                      ]
                                                    },
                                                    "reasoning": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "tasksInstructions": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "string"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "reasoning",
                                                    "tasksInstructions"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "stop"
                                                      ]
                                                    },
                                                    "reasoning": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "reasoning"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-definition"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "instructions": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "instructions",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-operation"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "operationId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "data": {
                                              "discriminator": {
                                                "propertyName": "type"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "think"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "search"
                                                      ]
                                                    },
                                                    "searchType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "neural",
                                                        "keyword",
                                                        "auto",
                                                        "fast"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "query": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "results": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "object"
                                                        ],
                                                        "properties": {
                                                          "url": {
                                                            "type": [
                                                              "string"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "url"
                                                        ]
                                                      }
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "searchType",
                                                    "query",
                                                    "results",
                                                    "pageTokens"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "crawl"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "result": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "url": {
                                                          "type": [
                                                            "string"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "url"
                                                      ]
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "result",
                                                    "pageTokens"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "operationId",
                                            "data",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-output"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "output": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "outputType": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "completed"
                                                  ]
                                                },
                                                "content": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "outputType",
                                                "content"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "output": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "content": {
                                    "type": [
                                      "string"
                                    ]
                                  },
                                  "parsed": {
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {}
                                  }
                                },
                                "required": [
                                  "content"
                                ]
                              },
                              "costDollars": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "total": {
                                    "type": [
                                      "number"
                                    ]
                                  },
                                  "numSearches": {
                                    "type": [
                                      "number"
                                    ]
                                  },
                                  "numPages": {
                                    "type": [
                                      "number"
                                    ]
                                  },
                                  "reasoningTokens": {
                                    "type": [
                                      "number"
                                    ]
                                  }
                                },
                                "required": [
                                  "total",
                                  "numSearches",
                                  "numPages",
                                  "reasoningTokens"
                                ]
                              }
                            },
                            "required": [
                              "researchId",
                              "createdAt",
                              "instructions",
                              "status",
                              "output",
                              "costDollars"
                            ]
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "researchId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the research request"
                              },
                              "createdAt": {
                                "type": [
                                  "number"
                                ],
                                "description": "Milliseconds since epoch time"
                              },
                              "model": {
                                "default": "exa-research",
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "exa-research",
                                  "exa-research-pro"
                                ],
                                "description": "The model used for the research request"
                              },
                              "instructions": {
                                "type": [
                                  "string"
                                ],
                                "description": "The instructions given to this research request"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "canceled"
                                ]
                              },
                              "events": {
                                "type": [
                                  "array"
                                ],
                                "items": {
                                  "oneOf": [
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "research-definition"
                                              ]
                                            },
                                            "instructions": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "outputSchema": {
                                              "type": [
                                                "object"
                                              ],
                                              "additionalProperties": {}
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "instructions",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "research-output"
                                              ]
                                            },
                                            "output": {
                                              "discriminator": {
                                                "propertyName": "outputType"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "completed"
                                                      ]
                                                    },
                                                    "costDollars": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "total": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "numSearches": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "numPages": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "reasoningTokens": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "total",
                                                        "numSearches",
                                                        "numPages",
                                                        "reasoningTokens"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "parsed": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "additionalProperties": {}
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "costDollars",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "failed"
                                                      ]
                                                    },
                                                    "error": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "error"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-definition"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-operation"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "operationId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "data": {
                                              "discriminator": {
                                                "propertyName": "type"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "think"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "search"
                                                      ]
                                                    },
                                                    "searchType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "neural",
                                                        "keyword",
                                                        "auto",
                                                        "fast"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "query": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "results": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "object"
                                                        ],
                                                        "properties": {
                                                          "url": {
                                                            "type": [
                                                              "string"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "url"
                                                        ]
                                                      }
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "searchType",
                                                    "query",
                                                    "results",
                                                    "pageTokens"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "crawl"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "result": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "url": {
                                                          "type": [
                                                            "string"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "url"
                                                      ]
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "result",
                                                    "pageTokens"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "operationId",
                                            "data",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-output"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "output": {
                                              "discriminator": {
                                                "propertyName": "outputType"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "tasks"
                                                      ]
                                                    },
                                                    "reasoning": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "tasksInstructions": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "string"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "reasoning",
                                                    "tasksInstructions"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "stop"
                                                      ]
                                                    },
                                                    "reasoning": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "reasoning"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-definition"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "instructions": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "instructions",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-operation"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "operationId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "data": {
                                              "discriminator": {
                                                "propertyName": "type"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "think"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "search"
                                                      ]
                                                    },
                                                    "searchType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "neural",
                                                        "keyword",
                                                        "auto",
                                                        "fast"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "query": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "results": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "object"
                                                        ],
                                                        "properties": {
                                                          "url": {
                                                            "type": [
                                                              "string"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "url"
                                                        ]
                                                      }
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "searchType",
                                                    "query",
                                                    "results",
                                                    "pageTokens"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "crawl"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "result": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "url": {
                                                          "type": [
                                                            "string"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "url"
                                                      ]
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "result",
                                                    "pageTokens"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "operationId",
                                            "data",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-output"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "output": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "outputType": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "completed"
                                                  ]
                                                },
                                                "content": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "outputType",
                                                "content"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "researchId",
                              "createdAt",
                              "instructions",
                              "status"
                            ]
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "researchId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the research request"
                              },
                              "createdAt": {
                                "type": [
                                  "number"
                                ],
                                "description": "Milliseconds since epoch time"
                              },
                              "model": {
                                "default": "exa-research",
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "exa-research",
                                  "exa-research-pro"
                                ],
                                "description": "The model used for the research request"
                              },
                              "instructions": {
                                "type": [
                                  "string"
                                ],
                                "description": "The instructions given to this research request"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "failed"
                                ]
                              },
                              "events": {
                                "type": [
                                  "array"
                                ],
                                "items": {
                                  "oneOf": [
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "research-definition"
                                              ]
                                            },
                                            "instructions": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "outputSchema": {
                                              "type": [
                                                "object"
                                              ],
                                              "additionalProperties": {}
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "instructions",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "research-output"
                                              ]
                                            },
                                            "output": {
                                              "discriminator": {
                                                "propertyName": "outputType"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "completed"
                                                      ]
                                                    },
                                                    "costDollars": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "total": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "numSearches": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "numPages": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        },
                                                        "reasoningTokens": {
                                                          "type": [
                                                            "number"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "total",
                                                        "numSearches",
                                                        "numPages",
                                                        "reasoningTokens"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "parsed": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "additionalProperties": {}
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "costDollars",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "failed"
                                                      ]
                                                    },
                                                    "error": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "error"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-definition"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-operation"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "operationId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "data": {
                                              "discriminator": {
                                                "propertyName": "type"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "think"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "search"
                                                      ]
                                                    },
                                                    "searchType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "neural",
                                                        "keyword",
                                                        "auto",
                                                        "fast"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "query": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "results": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "object"
                                                        ],
                                                        "properties": {
                                                          "url": {
                                                            "type": [
                                                              "string"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "url"
                                                        ]
                                                      }
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "searchType",
                                                    "query",
                                                    "results",
                                                    "pageTokens"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "crawl"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "result": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "url": {
                                                          "type": [
                                                            "string"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "url"
                                                      ]
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "result",
                                                    "pageTokens"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "operationId",
                                            "data",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "plan-output"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "output": {
                                              "discriminator": {
                                                "propertyName": "outputType"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "tasks"
                                                      ]
                                                    },
                                                    "reasoning": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "tasksInstructions": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "string"
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "reasoning",
                                                    "tasksInstructions"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "outputType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "stop"
                                                      ]
                                                    },
                                                    "reasoning": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "outputType",
                                                    "reasoning"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "discriminator": {
                                        "propertyName": "eventType"
                                      },
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-definition"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "instructions": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "instructions",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-operation"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "operationId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "data": {
                                              "discriminator": {
                                                "propertyName": "type"
                                              },
                                              "oneOf": [
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "think"
                                                      ]
                                                    },
                                                    "content": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "content"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "search"
                                                      ]
                                                    },
                                                    "searchType": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "neural",
                                                        "keyword",
                                                        "auto",
                                                        "fast"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "query": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "results": {
                                                      "type": [
                                                        "array"
                                                      ],
                                                      "items": {
                                                        "type": [
                                                          "object"
                                                        ],
                                                        "properties": {
                                                          "url": {
                                                            "type": [
                                                              "string"
                                                            ]
                                                          }
                                                        },
                                                        "required": [
                                                          "url"
                                                        ]
                                                      }
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "searchType",
                                                    "query",
                                                    "results",
                                                    "pageTokens"
                                                  ]
                                                },
                                                {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "type": {
                                                      "type": [
                                                        "string"
                                                      ],
                                                      "enum": [
                                                        "crawl"
                                                      ]
                                                    },
                                                    "goal": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    },
                                                    "result": {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "url": {
                                                          "type": [
                                                            "string"
                                                          ]
                                                        }
                                                      },
                                                      "required": [
                                                        "url"
                                                      ]
                                                    },
                                                    "pageTokens": {
                                                      "type": [
                                                        "number"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "type",
                                                    "result",
                                                    "pageTokens"
                                                  ]
                                                }
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "operationId",
                                            "data",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "eventType": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "task-output"
                                              ]
                                            },
                                            "planId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "taskId": {
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "output": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "outputType": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "completed"
                                                  ]
                                                },
                                                "content": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "outputType",
                                                "content"
                                              ]
                                            },
                                            "createdAt": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "Milliseconds since epoch time"
                                            },
                                            "researchId": {
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "eventType",
                                            "planId",
                                            "taskId",
                                            "output",
                                            "createdAt",
                                            "researchId"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              },
                              "error": {
                                "type": [
                                  "string"
                                ],
                                "description": "A message indicating why the request failed"
                              }
                            },
                            "required": [
                              "researchId",
                              "createdAt",
                              "instructions",
                              "status",
                              "error"
                            ]
                          }
                        ],
                        "examples": [
                          {
                            "researchId": "01jszdfs0052sg4jc552sg4jc5",
                            "model": "exa-research",
                            "instructions": "What species of ant are similar to honeypot ants?",
                            "status": "running"
                          },
                          {
                            "researchId": "01jszdfs0052sg4jc552sg4jc5",
                            "model": "exa-research",
                            "instructions": "What species of ant are similar to honeypot ants?",
                            "status": "completed",
                            "output": "Melophorus bagoti"
                          }
                        ]
                      },
                      "description": "The list of research requests"
                    },
                    "hasMore": {
                      "type": [
                        "boolean"
                      ],
                      "description": "Whether there are more results to paginate through"
                    },
                    "nextCursor": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The cursor to paginate through the next set of results"
                    }
                  },
                  "required": [
                    "data",
                    "hasMore",
                    "nextCursor"
                  ]
                }
              }
            }
          }
        },
        "summary": "List research requests",
        "tags": [
          "Research"
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "post": {
        "operationId": "ResearchController_createResearch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "model": {
                    "default": "exa-research",
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "exa-research",
                      "exa-research-pro"
                    ]
                  },
                  "instructions": {
                    "type": [
                      "string"
                    ],
                    "maxLength": 4096,
                    "description": "Instructions for what research should be conducted"
                  },
                  "outputSchema": {
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "instructions"
                ],
                "examples": [
                  {
                    "model": "exa-research",
                    "instructions": "What species of ant are similar to honeypot ants?"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Research request created",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "propertyName": "status"
                  },
                  "oneOf": [
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "pending"
                          ]
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status"
                      ]
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "running"
                          ]
                        },
                        "events": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "oneOf": [
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-definition"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "outputSchema": {
                                        "type": [
                                          "object"
                                        ],
                                        "additionalProperties": {}
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-output"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "completed"
                                                ]
                                              },
                                              "costDollars": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "total": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numSearches": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numPages": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "reasoningTokens": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "total",
                                                  "numSearches",
                                                  "numPages",
                                                  "reasoningTokens"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "parsed": {
                                                "type": [
                                                  "object"
                                                ],
                                                "additionalProperties": {}
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "costDollars",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "failed"
                                                ]
                                              },
                                              "error": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "error"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "tasks"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "tasksInstructions": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning",
                                              "tasksInstructions"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "stop"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "outputType": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "completed"
                                            ]
                                          },
                                          "content": {
                                            "type": [
                                              "string"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "outputType",
                                          "content"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status"
                      ]
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "completed"
                          ]
                        },
                        "events": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "oneOf": [
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-definition"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "outputSchema": {
                                        "type": [
                                          "object"
                                        ],
                                        "additionalProperties": {}
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-output"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "completed"
                                                ]
                                              },
                                              "costDollars": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "total": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numSearches": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numPages": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "reasoningTokens": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "total",
                                                  "numSearches",
                                                  "numPages",
                                                  "reasoningTokens"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "parsed": {
                                                "type": [
                                                  "object"
                                                ],
                                                "additionalProperties": {}
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "costDollars",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "failed"
                                                ]
                                              },
                                              "error": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "error"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "tasks"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "tasksInstructions": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning",
                                              "tasksInstructions"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "stop"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "outputType": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "completed"
                                            ]
                                          },
                                          "content": {
                                            "type": [
                                              "string"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "outputType",
                                          "content"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "output": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "content": {
                              "type": [
                                "string"
                              ]
                            },
                            "parsed": {
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {}
                            }
                          },
                          "required": [
                            "content"
                          ]
                        },
                        "costDollars": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "total": {
                              "type": [
                                "number"
                              ]
                            },
                            "numSearches": {
                              "type": [
                                "number"
                              ]
                            },
                            "numPages": {
                              "type": [
                                "number"
                              ]
                            },
                            "reasoningTokens": {
                              "type": [
                                "number"
                              ]
                            }
                          },
                          "required": [
                            "total",
                            "numSearches",
                            "numPages",
                            "reasoningTokens"
                          ]
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status",
                        "output",
                        "costDollars"
                      ]
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "canceled"
                          ]
                        },
                        "events": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "oneOf": [
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-definition"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "outputSchema": {
                                        "type": [
                                          "object"
                                        ],
                                        "additionalProperties": {}
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-output"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "completed"
                                                ]
                                              },
                                              "costDollars": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "total": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numSearches": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numPages": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "reasoningTokens": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "total",
                                                  "numSearches",
                                                  "numPages",
                                                  "reasoningTokens"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "parsed": {
                                                "type": [
                                                  "object"
                                                ],
                                                "additionalProperties": {}
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "costDollars",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "failed"
                                                ]
                                              },
                                              "error": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "error"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "tasks"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "tasksInstructions": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning",
                                              "tasksInstructions"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "stop"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "outputType": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "completed"
                                            ]
                                          },
                                          "content": {
                                            "type": [
                                              "string"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "outputType",
                                          "content"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status"
                      ]
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "failed"
                          ]
                        },
                        "events": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "oneOf": [
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-definition"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "outputSchema": {
                                        "type": [
                                          "object"
                                        ],
                                        "additionalProperties": {}
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-output"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "completed"
                                                ]
                                              },
                                              "costDollars": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "total": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numSearches": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numPages": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "reasoningTokens": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "total",
                                                  "numSearches",
                                                  "numPages",
                                                  "reasoningTokens"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "parsed": {
                                                "type": [
                                                  "object"
                                                ],
                                                "additionalProperties": {}
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "costDollars",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "failed"
                                                ]
                                              },
                                              "error": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "error"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "tasks"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "tasksInstructions": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning",
                                              "tasksInstructions"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "stop"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "outputType": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "completed"
                                            ]
                                          },
                                          "content": {
                                            "type": [
                                              "string"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "outputType",
                                          "content"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "error": {
                          "type": [
                            "string"
                          ],
                          "description": "A message indicating why the request failed"
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status",
                        "error"
                      ]
                    }
                  ],
                  "examples": [
                    {
                      "researchId": "01jszdfs0052sg4jc552sg4jc5",
                      "model": "exa-research",
                      "instructions": "What species of ant are similar to honeypot ants?",
                      "status": "running"
                    },
                    {
                      "researchId": "01jszdfs0052sg4jc552sg4jc5",
                      "model": "exa-research",
                      "instructions": "What species of ant are similar to honeypot ants?",
                      "status": "completed",
                      "output": "Melophorus bagoti"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Create a new research request",
        "tags": [
          "Research"
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/research/v1/{researchId}": {
      "get": {
        "description": "Retrieve research by ID. Add ?stream=true for real-time SSE updates.",
        "operationId": "ResearchController_getResearch",
        "parameters": [
          {
            "name": "researchId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stream",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "events",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "propertyName": "status"
                  },
                  "oneOf": [
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "pending"
                          ]
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status"
                      ]
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "running"
                          ]
                        },
                        "events": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "oneOf": [
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-definition"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "outputSchema": {
                                        "type": [
                                          "object"
                                        ],
                                        "additionalProperties": {}
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-output"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "completed"
                                                ]
                                              },
                                              "costDollars": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "total": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numSearches": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numPages": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "reasoningTokens": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "total",
                                                  "numSearches",
                                                  "numPages",
                                                  "reasoningTokens"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "parsed": {
                                                "type": [
                                                  "object"
                                                ],
                                                "additionalProperties": {}
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "costDollars",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "failed"
                                                ]
                                              },
                                              "error": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "error"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "tasks"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "tasksInstructions": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning",
                                              "tasksInstructions"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "stop"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "outputType": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "completed"
                                            ]
                                          },
                                          "content": {
                                            "type": [
                                              "string"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "outputType",
                                          "content"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status"
                      ]
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "completed"
                          ]
                        },
                        "events": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "oneOf": [
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-definition"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "outputSchema": {
                                        "type": [
                                          "object"
                                        ],
                                        "additionalProperties": {}
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-output"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "completed"
                                                ]
                                              },
                                              "costDollars": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "total": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numSearches": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numPages": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "reasoningTokens": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "total",
                                                  "numSearches",
                                                  "numPages",
                                                  "reasoningTokens"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "parsed": {
                                                "type": [
                                                  "object"
                                                ],
                                                "additionalProperties": {}
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "costDollars",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "failed"
                                                ]
                                              },
                                              "error": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "error"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "tasks"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "tasksInstructions": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning",
                                              "tasksInstructions"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "stop"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "outputType": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "completed"
                                            ]
                                          },
                                          "content": {
                                            "type": [
                                              "string"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "outputType",
                                          "content"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "output": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "content": {
                              "type": [
                                "string"
                              ]
                            },
                            "parsed": {
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {}
                            }
                          },
                          "required": [
                            "content"
                          ]
                        },
                        "costDollars": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "total": {
                              "type": [
                                "number"
                              ]
                            },
                            "numSearches": {
                              "type": [
                                "number"
                              ]
                            },
                            "numPages": {
                              "type": [
                                "number"
                              ]
                            },
                            "reasoningTokens": {
                              "type": [
                                "number"
                              ]
                            }
                          },
                          "required": [
                            "total",
                            "numSearches",
                            "numPages",
                            "reasoningTokens"
                          ]
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status",
                        "output",
                        "costDollars"
                      ]
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "canceled"
                          ]
                        },
                        "events": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "oneOf": [
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-definition"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "outputSchema": {
                                        "type": [
                                          "object"
                                        ],
                                        "additionalProperties": {}
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-output"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "completed"
                                                ]
                                              },
                                              "costDollars": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "total": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numSearches": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numPages": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "reasoningTokens": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "total",
                                                  "numSearches",
                                                  "numPages",
                                                  "reasoningTokens"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "parsed": {
                                                "type": [
                                                  "object"
                                                ],
                                                "additionalProperties": {}
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "costDollars",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "failed"
                                                ]
                                              },
                                              "error": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "error"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "tasks"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "tasksInstructions": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning",
                                              "tasksInstructions"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "stop"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "outputType": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "completed"
                                            ]
                                          },
                                          "content": {
                                            "type": [
                                              "string"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "outputType",
                                          "content"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status"
                      ]
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "researchId": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the research request"
                        },
                        "createdAt": {
                          "type": [
                            "number"
                          ],
                          "description": "Milliseconds since epoch time"
                        },
                        "model": {
                          "default": "exa-research",
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "exa-research",
                            "exa-research-pro"
                          ],
                          "description": "The model used for the research request"
                        },
                        "instructions": {
                          "type": [
                            "string"
                          ],
                          "description": "The instructions given to this research request"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "failed"
                          ]
                        },
                        "events": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "oneOf": [
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-definition"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "outputSchema": {
                                        "type": [
                                          "object"
                                        ],
                                        "additionalProperties": {}
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "research-output"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "completed"
                                                ]
                                              },
                                              "costDollars": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "total": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numSearches": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "numPages": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  },
                                                  "reasoningTokens": {
                                                    "type": [
                                                      "number"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "total",
                                                  "numSearches",
                                                  "numPages",
                                                  "reasoningTokens"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "parsed": {
                                                "type": [
                                                  "object"
                                                ],
                                                "additionalProperties": {}
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "costDollars",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "failed"
                                                ]
                                              },
                                              "error": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "error"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "plan-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "discriminator": {
                                          "propertyName": "outputType"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "tasks"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "tasksInstructions": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning",
                                              "tasksInstructions"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "outputType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "stop"
                                                ]
                                              },
                                              "reasoning": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "outputType",
                                              "reasoning"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              },
                              {
                                "discriminator": {
                                  "propertyName": "eventType"
                                },
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-definition"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "instructions": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "instructions",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-operation"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "operationId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "data": {
                                        "discriminator": {
                                          "propertyName": "type"
                                        },
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "think"
                                                ]
                                              },
                                              "content": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "content"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "search"
                                                ]
                                              },
                                              "searchType": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "neural",
                                                  "keyword",
                                                  "auto",
                                                  "fast"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "query": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "results": {
                                                "type": [
                                                  "array"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "url": {
                                                      "type": [
                                                        "string"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "url"
                                                  ]
                                                }
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "searchType",
                                              "query",
                                              "results",
                                              "pageTokens"
                                            ]
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "crawl"
                                                ]
                                              },
                                              "goal": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "result": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "url": {
                                                    "type": [
                                                      "string"
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "url"
                                                ]
                                              },
                                              "pageTokens": {
                                                "type": [
                                                  "number"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "result",
                                              "pageTokens"
                                            ]
                                          }
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "operationId",
                                      "data",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "eventType": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "task-output"
                                        ]
                                      },
                                      "planId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "taskId": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "output": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "outputType": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "completed"
                                            ]
                                          },
                                          "content": {
                                            "type": [
                                              "string"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "outputType",
                                          "content"
                                        ]
                                      },
                                      "createdAt": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "Milliseconds since epoch time"
                                      },
                                      "researchId": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "eventType",
                                      "planId",
                                      "taskId",
                                      "output",
                                      "createdAt",
                                      "researchId"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "error": {
                          "type": [
                            "string"
                          ],
                          "description": "A message indicating why the request failed"
                        }
                      },
                      "required": [
                        "researchId",
                        "createdAt",
                        "instructions",
                        "status",
                        "error"
                      ]
                    }
                  ],
                  "examples": [
                    {
                      "researchId": "01jszdfs0052sg4jc552sg4jc5",
                      "model": "exa-research",
                      "instructions": "What species of ant are similar to honeypot ants?",
                      "status": "running"
                    },
                    {
                      "researchId": "01jszdfs0052sg4jc552sg4jc5",
                      "model": "exa-research",
                      "instructions": "What species of ant are similar to honeypot ants?",
                      "status": "completed",
                      "output": "Melophorus bagoti"
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "Get a research request by id",
        "tags": [
          "Research"
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets": {
      "post": {
        "description": "Creates a new Webset with optional search, import, and enrichment configurations. The Webset will automatically begin processing once created.\n\nYou can specify an `externalId` to reference the Webset with your own identifiers for easier integration.",
        "operationId": "websets-create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "search": {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "query": {
                        "type": [
                          "string"
                        ],
                        "minLength": 1,
                        "maxLength": 5000,
                        "description": "Natural language search query describing what you are looking for.\n\nBe specific and descriptive about your requirements, characteristics, and any constraints that help narrow down the results.\n\nAny URLs provided will be crawled and used as additional context for the search.",
                        "examples": [
                          "Marketing agencies based in the US, that focus on consumer products.",
                          "AI startups in Europe that raised Series A funding in 2024",
                          "SaaS companies with 50-200 employees in the fintech space"
                        ]
                      },
                      "count": {
                        "default": 10,
                        "type": [
                          "number"
                        ],
                        "minimum": 1,
                        "description": "Number of Items the Webset will attempt to find.\n\nThe actual number of Items found may be less than this number depending on the search complexity."
                      },
                      "entity": {
                        "oneOf": [
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "company",
                                "default": "company"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Company"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "person",
                                "default": "person"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Person"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "article",
                                "default": "article"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Article"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "research_paper",
                                "default": "research_paper"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Research Paper"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "custom",
                                "default": "custom"
                              },
                              "description": {
                                "type": [
                                  "string"
                                ],
                                "minLength": 2,
                                "maxLength": 200
                              }
                            },
                            "required": [
                              "type",
                              "description"
                            ],
                            "title": "Custom"
                          }
                        ]
                      },
                      "criteria": {
                        "type": [
                          "array"
                        ],
                        "items": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "description": {
                              "type": [
                                "string"
                              ],
                              "minLength": 1,
                              "maxLength": 1000,
                              "description": "The description of the criterion"
                            }
                          },
                          "required": [
                            "description"
                          ]
                        },
                        "minItems": 1,
                        "maxItems": 5,
                        "description": "Criteria every item is evaluated against.\n\nIt's not required to provide your own criteria, we automatically detect the criteria from all the information provided in the query. Only use this when you need more fine control."
                      },
                      "recall": {
                        "type": [
                          "boolean"
                        ],
                        "description": "Whether to provide an estimate of how many total relevant results could exist for this search.\nResult of the analysis will be available in the `recall` field within the search request."
                      },
                      "exclude": {
                        "type": [
                          "array"
                        ],
                        "items": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "source": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "import",
                                "webset"
                              ]
                            },
                            "id": {
                              "type": [
                                "string"
                              ],
                              "minLength": 1,
                              "description": "The ID of the source to exclude."
                            }
                          },
                          "required": [
                            "source",
                            "id"
                          ]
                        },
                        "description": "Sources (existing imports or websets) to exclude from search results. Any results found within these sources will be omitted to prevent finding them during search."
                      },
                      "scope": {
                        "type": [
                          "array"
                        ],
                        "items": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "source": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "import",
                                "webset"
                              ]
                            },
                            "id": {
                              "type": [
                                "string"
                              ],
                              "minLength": 1,
                              "description": "The ID of the source to search."
                            },
                            "relationship": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "definition": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                },
                                "limit": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 1,
                                  "maximum": 10
                                }
                              },
                              "required": [
                                "definition",
                                "limit"
                              ]
                            }
                          },
                          "required": [
                            "source",
                            "id"
                          ]
                        },
                        "description": "Limit the search to specific sources (existing imports or websets). Any results found within these sources matching the search criteria will be included in the Webset."
                      }
                    },
                    "required": [
                      "query"
                    ],
                    "description": "Create initial search for the Webset."
                  },
                  "import": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "source": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "import",
                            "webset"
                          ]
                        },
                        "id": {
                          "type": [
                            "string"
                          ],
                          "minLength": 1,
                          "description": "The ID of the source to search."
                        }
                      },
                      "required": [
                        "source",
                        "id"
                      ]
                    },
                    "description": "Import data from existing Websets and Imports into this Webset."
                  },
                  "enrichments": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "description": {
                          "type": [
                            "string"
                          ],
                          "minLength": 1,
                          "maxLength": 5000,
                          "description": "Provide a description of the enrichment task you want to perform to each Webset Item."
                        },
                        "format": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "text",
                            "date",
                            "number",
                            "options",
                            "email",
                            "phone",
                            "url"
                          ],
                          "description": "Format of the enrichment response.\n\nWe automatically select the best format based on the description. If you want to explicitly specify the format, you can do so here."
                        },
                        "options": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "label": {
                                "type": [
                                  "string"
                                ],
                                "description": "The label of the option"
                              }
                            },
                            "required": [
                              "label"
                            ]
                          },
                          "minItems": 1,
                          "maxItems": 150,
                          "description": "When the format is options, the different options for the enrichment agent to choose from."
                        },
                        "metadata": {
                          "description": "Set of key-value pairs you want to associate with this object.",
                          "type": [
                            "object"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string"
                            ],
                            "maxLength": 1000
                          }
                        }
                      },
                      "required": [
                        "description"
                      ]
                    },
                    "description": "Add enrichments to extract additional data from found items.\n\nEnrichments automatically search for and extract specific information (like contact details, funding data, employee counts, etc.) from each item added to your Webset."
                  },
                  "exclude": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "source": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "import",
                            "webset"
                          ]
                        },
                        "id": {
                          "type": [
                            "string"
                          ],
                          "minLength": 1,
                          "description": "The ID of the source to exclude."
                        }
                      },
                      "required": [
                        "source",
                        "id"
                      ]
                    },
                    "description": "Global exclusion sources (existing imports or websets) that apply to all operations within this Webset. Any results found within these sources will be omitted across all search and import operations."
                  },
                  "externalId": {
                    "type": [
                      "string"
                    ],
                    "maxLength": 300,
                    "description": "The external identifier for the webset.\n\nYou can use this to reference the Webset by your own internal identifiers."
                  },
                  "metadata": {
                    "description": "Set of key-value pairs you want to associate with this object.",
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string"
                      ],
                      "maxLength": 1000
                    }
                  }
                },
                "examples": [
                  {
                    "search": {
                      "query": "Marketing agencies based in the US, that focus on consumer products.",
                      "count": 10
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webset created",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the webset"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset",
                      "default": "webset"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "idle",
                        "pending",
                        "running",
                        "paused"
                      ],
                      "description": "The status of the webset",
                      "title": "WebsetStatus"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "The external identifier for the webset",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the webset",
                      "nullable": true
                    },
                    "searches": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the search"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset_search",
                            "default": "webset_search"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "created",
                              "pending",
                              "running",
                              "completed",
                              "canceled"
                            ],
                            "description": "The status of the search",
                            "title": "WebsetSearchStatus"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset this search belongs to"
                          },
                          "query": {
                            "description": "The query used to create the search.",
                            "type": [
                              "string"
                            ],
                            "minLength": 1,
                            "maxLength": 5000
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "criteria": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "description": {
                                  "description": "The description of the criterion",
                                  "type": [
                                    "string"
                                  ],
                                  "minLength": 1,
                                  "maxLength": 1000
                                },
                                "successRate": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                }
                              },
                              "required": [
                                "description",
                                "successRate"
                              ]
                            },
                            "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "minimum": 1,
                            "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                          },
                          "behavior": {
                            "type": "string",
                            "enum": [
                              "override",
                              "append"
                            ]
                          },
                          "exclude": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "source": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "import",
                                    "webset"
                                  ]
                                },
                                "id": {
                                  "type": [
                                    "string"
                                  ]
                                }
                              },
                              "required": [
                                "source",
                                "id"
                              ]
                            },
                            "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                          },
                          "scope": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "source": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "import",
                                    "webset"
                                  ]
                                },
                                "id": {
                                  "type": [
                                    "string"
                                  ]
                                },
                                "relationship": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "definition": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                    },
                                    "limit": {
                                      "type": [
                                        "number"
                                      ],
                                      "minimum": 1,
                                      "maximum": 10
                                    }
                                  },
                                  "required": [
                                    "definition",
                                    "limit"
                                  ]
                                }
                              },
                              "required": [
                                "source",
                                "id"
                              ]
                            },
                            "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                          },
                          "progress": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "found": {
                                "type": [
                                  "number"
                                ],
                                "description": "The number of results found so far"
                              },
                              "analyzed": {
                                "type": [
                                  "number"
                                ],
                                "description": "The number of results analyzed so far"
                              },
                              "completion": {
                                "type": [
                                  "number"
                                ],
                                "minimum": 0,
                                "maximum": 100,
                                "description": "The completion percentage of the search"
                              },
                              "timeLeft": {
                                "type": "number",
                                "description": "The estimated time remaining in seconds, null if unknown",
                                "nullable": true
                              }
                            },
                            "required": [
                              "found",
                              "analyzed",
                              "completion",
                              "timeLeft"
                            ],
                            "description": "The progress of the search"
                          },
                          "recall": {
                            "type": "object",
                            "properties": {
                              "expected": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "total": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The estimated total number of potential matches"
                                  },
                                  "confidence": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "high",
                                      "medium",
                                      "low"
                                    ],
                                    "description": "The confidence in the estimate"
                                  },
                                  "bounds": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "min": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The minimum estimated total number of potential matches"
                                      },
                                      "max": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The maximum estimated total number of potential matches"
                                      }
                                    },
                                    "required": [
                                      "min",
                                      "max"
                                    ]
                                  }
                                },
                                "required": [
                                  "total",
                                  "confidence",
                                  "bounds"
                                ]
                              },
                              "reasoning": {
                                "type": [
                                  "string"
                                ],
                                "description": "The reasoning for the estimate"
                              }
                            },
                            "required": [
                              "expected",
                              "reasoning"
                            ],
                            "description": "Recall metrics for the search, null if not yet computed or requested.",
                            "nullable": true
                          },
                          "metadata": {
                            "default": {},
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "canceledAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time the search was canceled",
                            "nullable": true
                          },
                          "canceledReason": {
                            "type": "string",
                            "enum": [
                              "webset_deleted",
                              "webset_canceled"
                            ]
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the search was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the search was updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "websetId",
                          "status",
                          "query",
                          "entity",
                          "criteria",
                          "count",
                          "exclude",
                          "scope",
                          "progress",
                          "recall",
                          "canceledAt",
                          "canceledReason",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The searches that have been performed on the webset."
                    },
                    "imports": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Import"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "processing",
                              "completed",
                              "failed"
                            ],
                            "description": "The status of the Import"
                          },
                          "format": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "csv",
                              "webset"
                            ],
                            "description": "The format of the import."
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "title": {
                            "type": [
                              "string"
                            ],
                            "description": "The title of the import"
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "description": "The number of entities in the import"
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "failedReason": {
                            "type": "string",
                            "enum": [
                              "invalid_format",
                              "invalid_file_content",
                              "missing_identifier"
                            ],
                            "description": "The reason the import failed",
                            "nullable": true
                          },
                          "failedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the import failed",
                            "nullable": true
                          },
                          "failedMessage": {
                            "type": "string",
                            "description": "A human readable message of the import failure",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "format",
                          "entity",
                          "title",
                          "count",
                          "metadata",
                          "failedReason",
                          "failedAt",
                          "failedMessage",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "Imports that have been performed on the webset."
                    },
                    "enrichments": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the enrichment"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset_enrichment",
                            "default": "webset_enrichment"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "canceled",
                              "completed"
                            ],
                            "description": "The status of the enrichment",
                            "title": "WebsetEnrichmentStatus"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset this enrichment belongs to."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                            "nullable": true
                          },
                          "description": {
                            "type": [
                              "string"
                            ],
                            "description": "The description of the enrichment task provided during the creation of the enrichment."
                          },
                          "format": {
                            "type": "string",
                            "enum": [
                              "text",
                              "date",
                              "number",
                              "options",
                              "email",
                              "phone",
                              "url"
                            ]
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "label": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The label of the option"
                                }
                              },
                              "required": [
                                "label"
                              ]
                            },
                            "description": "When the format is options, the different options for the enrichment agent to choose from.",
                            "title": "WebsetEnrichmentOptions",
                            "nullable": true
                          },
                          "instructions": {
                            "type": "string",
                            "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                            "nullable": true
                          },
                          "metadata": {
                            "default": {},
                            "description": "The metadata of the enrichment",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the enrichment was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the enrichment was updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "websetId",
                          "title",
                          "description",
                          "format",
                          "options",
                          "instructions",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The Enrichments to apply to the Webset Items."
                    },
                    "monitors": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Monitor"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "monitor"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "description": "The status of the Monitor"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The id of the Webset the Monitor belongs to"
                          },
                          "cadence": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "cron": {
                                "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                "type": [
                                  "string"
                                ]
                              },
                              "timezone": {
                                "description": "IANA timezone (e.g., \"America/New_York\")",
                                "default": "Etc/UTC",
                                "type": [
                                  "string"
                                ]
                              }
                            },
                            "required": [
                              "cron"
                            ],
                            "description": "How often the monitor will run"
                          },
                          "behavior": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "search",
                                "default": "search"
                              },
                              "config": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "query": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 10000,
                                    "description": "The query to search for. By default, the query from the last search is used."
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 2,
                                          "maxLength": 1000
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ]
                                    },
                                    "maxItems": 5,
                                    "description": "The criteria to search for. By default, the criteria from the last search is used."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "exclusiveMinimum": 0,
                                    "description": "The maximum number of results to find"
                                  },
                                  "behavior": {
                                    "default": "append",
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "override",
                                      "append"
                                    ],
                                    "description": "The behaviour of the Search when it is added to a Webset."
                                  }
                                },
                                "required": [
                                  "count"
                                ],
                                "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                              }
                            },
                            "required": [
                              "type",
                              "config"
                            ],
                            "description": "Behavior to perform when monitor runs"
                          },
                          "lastRun": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Monitor Run"
                              },
                              "object": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "monitor_run"
                                ],
                                "description": "The type of object"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "created",
                                  "running",
                                  "completed",
                                  "canceled",
                                  "failed"
                                ],
                                "description": "The status of the Monitor Run"
                              },
                              "monitorId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The monitor that the run is associated with"
                              },
                              "type": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "search",
                                  "refresh"
                                ],
                                "description": "The type of the Monitor Run"
                              },
                              "completedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run completed",
                                "nullable": true
                              },
                              "failedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run failed",
                                "nullable": true
                              },
                              "failedReason": {
                                "type": "string",
                                "description": "The reason the run failed",
                                "nullable": true
                              },
                              "canceledAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run was canceled",
                                "nullable": true
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was last updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "monitorId",
                              "status",
                              "type",
                              "completedAt",
                              "failedAt",
                              "failedReason",
                              "canceledAt",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "nextRunAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when the next run will occur in",
                            "nullable": true
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "websetId",
                          "cadence",
                          "behavior",
                          "lastRun",
                          "nextRunAt",
                          "metadata",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The Monitors for the Webset."
                    },
                    "streams": {
                      "type": [
                        "array"
                      ],
                      "items": {},
                      "description": "The Streams for the Webset."
                    },
                    "metadata": {
                      "default": {},
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webset was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webset was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "externalId",
                    "title",
                    "searches",
                    "imports",
                    "enrichments",
                    "monitors",
                    "streams",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          },
          "409": {
            "description": "Webset with this externalId already exists",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Create a Webset",
        "tags": [
          "Websets"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst webset = await exa.websets.create({\n  search: {\n    query: \"Tech companies in San Francisco\",\n    count: 10\n  }\n});\n\nconsole.log(`Created webset: ${webset.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nwebset = exa.websets.create(params={\n    'search': {\n        'query': 'Tech companies in San Francisco',\n        'count': 10\n    }\n})\n\nprint(f'Created webset: {webset.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "get": {
        "description": "Returns a list of Websets.\n\nYou can paginate through the results using the `cursor` parameter.",
        "operationId": "websets-list",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to paginate through the results",
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The number of Websets to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 25,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Websets",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "data": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the webset"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset",
                            "default": "webset"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "idle",
                              "pending",
                              "running",
                              "paused"
                            ],
                            "description": "The status of the webset",
                            "title": "WebsetStatus"
                          },
                          "externalId": {
                            "type": "string",
                            "description": "The external identifier for the webset",
                            "nullable": true
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the webset",
                            "nullable": true
                          },
                          "searches": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "id": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The unique identifier for the search"
                                },
                                "object": {
                                  "type": "string",
                                  "const": "webset_search",
                                  "default": "webset_search"
                                },
                                "status": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "created",
                                    "pending",
                                    "running",
                                    "completed",
                                    "canceled"
                                  ],
                                  "description": "The status of the search",
                                  "title": "WebsetSearchStatus"
                                },
                                "websetId": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The unique identifier for the Webset this search belongs to"
                                },
                                "query": {
                                  "description": "The query used to create the search.",
                                  "type": [
                                    "string"
                                  ],
                                  "minLength": 1,
                                  "maxLength": 5000
                                },
                                "entity": {
                                  "oneOf": [
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "company",
                                          "default": "company"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Company"
                                    },
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "person",
                                          "default": "person"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Person"
                                    },
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "article",
                                          "default": "article"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Article"
                                    },
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "research_paper",
                                          "default": "research_paper"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Research Paper"
                                    },
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "custom",
                                          "default": "custom"
                                        },
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 2,
                                          "maxLength": 200
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "description"
                                      ],
                                      "title": "Custom"
                                    }
                                  ]
                                },
                                "criteria": {
                                  "type": [
                                    "array"
                                  ],
                                  "items": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "description": {
                                        "description": "The description of the criterion",
                                        "type": [
                                          "string"
                                        ],
                                        "minLength": 1,
                                        "maxLength": 1000
                                      },
                                      "successRate": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                      }
                                    },
                                    "required": [
                                      "description",
                                      "successRate"
                                    ]
                                  },
                                  "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                },
                                "count": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 1,
                                  "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                },
                                "behavior": {
                                  "type": "string",
                                  "enum": [
                                    "override",
                                    "append"
                                  ]
                                },
                                "exclude": {
                                  "type": [
                                    "array"
                                  ],
                                  "items": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "source": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "import",
                                          "webset"
                                        ]
                                      },
                                      "id": {
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "source",
                                      "id"
                                    ]
                                  },
                                  "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                },
                                "scope": {
                                  "type": [
                                    "array"
                                  ],
                                  "items": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "source": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "import",
                                          "webset"
                                        ]
                                      },
                                      "id": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "relationship": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "definition": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                          },
                                          "limit": {
                                            "type": [
                                              "number"
                                            ],
                                            "minimum": 1,
                                            "maximum": 10
                                          }
                                        },
                                        "required": [
                                          "definition",
                                          "limit"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "source",
                                      "id"
                                    ]
                                  },
                                  "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                },
                                "progress": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "found": {
                                      "type": [
                                        "number"
                                      ],
                                      "description": "The number of results found so far"
                                    },
                                    "analyzed": {
                                      "type": [
                                        "number"
                                      ],
                                      "description": "The number of results analyzed so far"
                                    },
                                    "completion": {
                                      "type": [
                                        "number"
                                      ],
                                      "minimum": 0,
                                      "maximum": 100,
                                      "description": "The completion percentage of the search"
                                    },
                                    "timeLeft": {
                                      "type": "number",
                                      "description": "The estimated time remaining in seconds, null if unknown",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "found",
                                    "analyzed",
                                    "completion",
                                    "timeLeft"
                                  ],
                                  "description": "The progress of the search"
                                },
                                "recall": {
                                  "type": "object",
                                  "properties": {
                                    "expected": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "total": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The estimated total number of potential matches"
                                        },
                                        "confidence": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "high",
                                            "medium",
                                            "low"
                                          ],
                                          "description": "The confidence in the estimate"
                                        },
                                        "bounds": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "min": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The minimum estimated total number of potential matches"
                                            },
                                            "max": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The maximum estimated total number of potential matches"
                                            }
                                          },
                                          "required": [
                                            "min",
                                            "max"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "total",
                                        "confidence",
                                        "bounds"
                                      ]
                                    },
                                    "reasoning": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "The reasoning for the estimate"
                                    }
                                  },
                                  "required": [
                                    "expected",
                                    "reasoning"
                                  ],
                                  "description": "Recall metrics for the search, null if not yet computed or requested.",
                                  "nullable": true
                                },
                                "metadata": {
                                  "default": {},
                                  "description": "Set of key-value pairs you want to associate with this object.",
                                  "type": [
                                    "object"
                                  ],
                                  "additionalProperties": {
                                    "type": [
                                      "string"
                                    ],
                                    "maxLength": 1000
                                  }
                                },
                                "canceledAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time the search was canceled",
                                  "nullable": true
                                },
                                "canceledReason": {
                                  "type": "string",
                                  "enum": [
                                    "webset_deleted",
                                    "webset_canceled"
                                  ]
                                },
                                "createdAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "The date and time the search was created"
                                },
                                "updatedAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "The date and time the search was updated"
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "websetId",
                                "status",
                                "query",
                                "entity",
                                "criteria",
                                "count",
                                "exclude",
                                "scope",
                                "progress",
                                "recall",
                                "canceledAt",
                                "canceledReason",
                                "createdAt",
                                "updatedAt"
                              ]
                            },
                            "description": "The searches that have been performed on the webset."
                          },
                          "imports": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "id": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The unique identifier for the Import"
                                },
                                "object": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "import"
                                  ],
                                  "description": "The type of object"
                                },
                                "status": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "pending",
                                    "processing",
                                    "completed",
                                    "failed"
                                  ],
                                  "description": "The status of the Import"
                                },
                                "format": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "csv",
                                    "webset"
                                  ],
                                  "description": "The format of the import."
                                },
                                "entity": {
                                  "oneOf": [
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "company",
                                          "default": "company"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Company"
                                    },
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "person",
                                          "default": "person"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Person"
                                    },
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "article",
                                          "default": "article"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Article"
                                    },
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "research_paper",
                                          "default": "research_paper"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Research Paper"
                                    },
                                    {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "const": "custom",
                                          "default": "custom"
                                        },
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 2,
                                          "maxLength": 200
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "description"
                                      ],
                                      "title": "Custom"
                                    }
                                  ]
                                },
                                "title": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The title of the import"
                                },
                                "count": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The number of entities in the import"
                                },
                                "metadata": {
                                  "description": "Set of key-value pairs you want to associate with this object.",
                                  "type": [
                                    "object"
                                  ],
                                  "additionalProperties": {
                                    "type": [
                                      "string"
                                    ],
                                    "maxLength": 1000
                                  }
                                },
                                "failedReason": {
                                  "type": "string",
                                  "enum": [
                                    "invalid_format",
                                    "invalid_file_content",
                                    "missing_identifier"
                                  ],
                                  "description": "The reason the import failed",
                                  "nullable": true
                                },
                                "failedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the import failed",
                                  "nullable": true
                                },
                                "failedMessage": {
                                  "type": "string",
                                  "description": "A human readable message of the import failure",
                                  "nullable": true
                                },
                                "createdAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the import was created"
                                },
                                "updatedAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the import was last updated"
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "status",
                                "format",
                                "entity",
                                "title",
                                "count",
                                "metadata",
                                "failedReason",
                                "failedAt",
                                "failedMessage",
                                "createdAt",
                                "updatedAt"
                              ]
                            },
                            "description": "Imports that have been performed on the webset."
                          },
                          "enrichments": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "id": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The unique identifier for the enrichment"
                                },
                                "object": {
                                  "type": "string",
                                  "const": "webset_enrichment",
                                  "default": "webset_enrichment"
                                },
                                "status": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "pending",
                                    "canceled",
                                    "completed"
                                  ],
                                  "description": "The status of the enrichment",
                                  "title": "WebsetEnrichmentStatus"
                                },
                                "websetId": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The unique identifier for the Webset this enrichment belongs to."
                                },
                                "title": {
                                  "type": "string",
                                  "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                  "nullable": true
                                },
                                "description": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The description of the enrichment task provided during the creation of the enrichment."
                                },
                                "format": {
                                  "type": "string",
                                  "enum": [
                                    "text",
                                    "date",
                                    "number",
                                    "options",
                                    "email",
                                    "phone",
                                    "url"
                                  ]
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "label": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The label of the option"
                                      }
                                    },
                                    "required": [
                                      "label"
                                    ]
                                  },
                                  "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                  "title": "WebsetEnrichmentOptions",
                                  "nullable": true
                                },
                                "instructions": {
                                  "type": "string",
                                  "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                  "nullable": true
                                },
                                "metadata": {
                                  "default": {},
                                  "description": "The metadata of the enrichment",
                                  "type": [
                                    "object"
                                  ],
                                  "additionalProperties": {
                                    "type": [
                                      "string"
                                    ],
                                    "maxLength": 1000
                                  }
                                },
                                "createdAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "The date and time the enrichment was created"
                                },
                                "updatedAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "The date and time the enrichment was updated"
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "status",
                                "websetId",
                                "title",
                                "description",
                                "format",
                                "options",
                                "instructions",
                                "createdAt",
                                "updatedAt"
                              ]
                            },
                            "description": "The Enrichments to apply to the Webset Items."
                          },
                          "monitors": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "id": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The unique identifier for the Monitor"
                                },
                                "object": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "monitor"
                                  ],
                                  "description": "The type of object"
                                },
                                "status": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "enabled",
                                    "disabled"
                                  ],
                                  "description": "The status of the Monitor"
                                },
                                "websetId": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The id of the Webset the Monitor belongs to"
                                },
                                "cadence": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "cron": {
                                      "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                      "type": [
                                        "string"
                                      ]
                                    },
                                    "timezone": {
                                      "description": "IANA timezone (e.g., \"America/New_York\")",
                                      "default": "Etc/UTC",
                                      "type": [
                                        "string"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "cron"
                                  ],
                                  "description": "How often the monitor will run"
                                },
                                "behavior": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "search",
                                      "default": "search"
                                    },
                                    "config": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "query": {
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 2,
                                          "maxLength": 10000,
                                          "description": "The query to search for. By default, the query from the last search is used."
                                        },
                                        "criteria": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "description": {
                                                "type": [
                                                  "string"
                                                ],
                                                "minLength": 2,
                                                "maxLength": 1000
                                              }
                                            },
                                            "required": [
                                              "description"
                                            ]
                                          },
                                          "maxItems": 5,
                                          "description": "The criteria to search for. By default, the criteria from the last search is used."
                                        },
                                        "entity": {
                                          "oneOf": [
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "company",
                                                  "default": "company"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Company"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "person",
                                                  "default": "person"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Person"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "article",
                                                  "default": "article"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Article"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "research_paper",
                                                  "default": "research_paper"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Research Paper"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "custom",
                                                  "default": "custom"
                                                },
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 200
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "description"
                                              ],
                                              "title": "Custom"
                                            }
                                          ]
                                        },
                                        "count": {
                                          "type": [
                                            "number"
                                          ],
                                          "exclusiveMinimum": 0,
                                          "description": "The maximum number of results to find"
                                        },
                                        "behavior": {
                                          "default": "append",
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "override",
                                            "append"
                                          ],
                                          "description": "The behaviour of the Search when it is added to a Webset."
                                        }
                                      },
                                      "required": [
                                        "count"
                                      ],
                                      "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "config"
                                  ],
                                  "description": "Behavior to perform when monitor runs"
                                },
                                "lastRun": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "The unique identifier for the Monitor Run"
                                    },
                                    "object": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "monitor_run"
                                      ],
                                      "description": "The type of object"
                                    },
                                    "status": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "created",
                                        "running",
                                        "completed",
                                        "canceled",
                                        "failed"
                                      ],
                                      "description": "The status of the Monitor Run"
                                    },
                                    "monitorId": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "The monitor that the run is associated with"
                                    },
                                    "type": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "search",
                                        "refresh"
                                      ],
                                      "description": "The type of the Monitor Run"
                                    },
                                    "completedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "When the run completed",
                                      "nullable": true
                                    },
                                    "failedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "When the run failed",
                                      "nullable": true
                                    },
                                    "failedReason": {
                                      "type": "string",
                                      "description": "The reason the run failed",
                                      "nullable": true
                                    },
                                    "canceledAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "When the run was canceled",
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "date-time",
                                      "description": "When the run was created"
                                    },
                                    "updatedAt": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "date-time",
                                      "description": "When the run was last updated"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "object",
                                    "monitorId",
                                    "status",
                                    "type",
                                    "completedAt",
                                    "failedAt",
                                    "failedReason",
                                    "canceledAt",
                                    "createdAt",
                                    "updatedAt"
                                  ]
                                },
                                "nextRunAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Date and time when the next run will occur in",
                                  "nullable": true
                                },
                                "metadata": {
                                  "description": "Set of key-value pairs you want to associate with this object.",
                                  "type": [
                                    "object"
                                  ],
                                  "additionalProperties": {
                                    "type": [
                                      "string"
                                    ],
                                    "maxLength": 1000
                                  }
                                },
                                "createdAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the monitor was created"
                                },
                                "updatedAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the monitor was last updated"
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "status",
                                "websetId",
                                "cadence",
                                "behavior",
                                "lastRun",
                                "nextRunAt",
                                "metadata",
                                "createdAt",
                                "updatedAt"
                              ]
                            },
                            "description": "The Monitors for the Webset."
                          },
                          "streams": {
                            "type": [
                              "array"
                            ],
                            "items": {},
                            "description": "The Streams for the Webset."
                          },
                          "metadata": {
                            "default": {},
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the webset was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the webset was updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "externalId",
                          "title",
                          "searches",
                          "imports",
                          "enrichments",
                          "monitors",
                          "streams",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The list of websets"
                    },
                    "hasMore": {
                      "type": [
                        "boolean"
                      ],
                      "description": "Whether there are more results to paginate through"
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "The cursor to paginate through the next set of results",
                      "nullable": true
                    }
                  },
                  "required": [
                    "data",
                    "hasMore",
                    "nextCursor"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "List all Websets",
        "tags": [
          "Websets"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\n// List websets with optional pagination\nconst websets = await exa.websets.list({\n  limit: 20  // Optional: max results per page\n});\n\nconsole.log(`Found ${websets.data.length} websets`);\nwebsets.data.forEach(webset => {\n  console.log(`- ${webset.id}: ${webset.status}`);\n});"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\n# List websets with optional pagination\nwebsets_response = exa.websets.list(\n    limit=20  # Optional: max results per page\n)\n\nprint(f\"Found {len(websets_response.data)} websets\")\nfor webset in websets_response.data:\n    print(f\"- {webset.id}: {webset.status}\")"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{id}": {
      "get": {
        "operationId": "websets-get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expand",
            "required": false,
            "in": "query",
            "description": "Expand the response with the specified resources",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webset",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the webset"
                        },
                        "object": {
                          "type": "string",
                          "const": "webset",
                          "default": "webset"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "idle",
                            "pending",
                            "running",
                            "paused"
                          ],
                          "description": "The status of the webset",
                          "title": "WebsetStatus"
                        },
                        "externalId": {
                          "type": "string",
                          "description": "The external identifier for the webset",
                          "nullable": true
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the webset",
                          "nullable": true
                        },
                        "searches": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the search"
                              },
                              "object": {
                                "type": "string",
                                "const": "webset_search",
                                "default": "webset_search"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "created",
                                  "pending",
                                  "running",
                                  "completed",
                                  "canceled"
                                ],
                                "description": "The status of the search",
                                "title": "WebsetSearchStatus"
                              },
                              "websetId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Webset this search belongs to"
                              },
                              "query": {
                                "description": "The query used to create the search.",
                                "type": [
                                  "string"
                                ],
                                "minLength": 1,
                                "maxLength": 5000
                              },
                              "entity": {
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "company",
                                        "default": "company"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Company"
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "person",
                                        "default": "person"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Person"
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "article",
                                        "default": "article"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Article"
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "research_paper",
                                        "default": "research_paper"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Research Paper"
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "custom",
                                        "default": "custom"
                                      },
                                      "description": {
                                        "type": [
                                          "string"
                                        ],
                                        "minLength": 2,
                                        "maxLength": 200
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "description"
                                    ],
                                    "title": "Custom"
                                  }
                                ]
                              },
                              "criteria": {
                                "type": [
                                  "array"
                                ],
                                "items": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "description": {
                                      "description": "The description of the criterion",
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 1,
                                      "maxLength": 1000
                                    },
                                    "successRate": {
                                      "type": [
                                        "number"
                                      ],
                                      "minimum": 0,
                                      "maximum": 100,
                                      "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                    }
                                  },
                                  "required": [
                                    "description",
                                    "successRate"
                                  ]
                                },
                                "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                              },
                              "count": {
                                "type": [
                                  "number"
                                ],
                                "minimum": 1,
                                "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                              },
                              "behavior": {
                                "type": "string",
                                "enum": [
                                  "override",
                                  "append"
                                ]
                              },
                              "exclude": {
                                "type": [
                                  "array"
                                ],
                                "items": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "source": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "import",
                                        "webset"
                                      ]
                                    },
                                    "id": {
                                      "type": [
                                        "string"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "source",
                                    "id"
                                  ]
                                },
                                "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                              },
                              "scope": {
                                "type": [
                                  "array"
                                ],
                                "items": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "source": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "import",
                                        "webset"
                                      ]
                                    },
                                    "id": {
                                      "type": [
                                        "string"
                                      ]
                                    },
                                    "relationship": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "definition": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                        },
                                        "limit": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 1,
                                          "maximum": 10
                                        }
                                      },
                                      "required": [
                                        "definition",
                                        "limit"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "source",
                                    "id"
                                  ]
                                },
                                "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                              },
                              "progress": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "found": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The number of results found so far"
                                  },
                                  "analyzed": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The number of results analyzed so far"
                                  },
                                  "completion": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 0,
                                    "maximum": 100,
                                    "description": "The completion percentage of the search"
                                  },
                                  "timeLeft": {
                                    "type": "number",
                                    "description": "The estimated time remaining in seconds, null if unknown",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "found",
                                  "analyzed",
                                  "completion",
                                  "timeLeft"
                                ],
                                "description": "The progress of the search"
                              },
                              "recall": {
                                "type": "object",
                                "properties": {
                                  "expected": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "total": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The estimated total number of potential matches"
                                      },
                                      "confidence": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "high",
                                          "medium",
                                          "low"
                                        ],
                                        "description": "The confidence in the estimate"
                                      },
                                      "bounds": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "min": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The minimum estimated total number of potential matches"
                                          },
                                          "max": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The maximum estimated total number of potential matches"
                                          }
                                        },
                                        "required": [
                                          "min",
                                          "max"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "total",
                                      "confidence",
                                      "bounds"
                                    ]
                                  },
                                  "reasoning": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The reasoning for the estimate"
                                  }
                                },
                                "required": [
                                  "expected",
                                  "reasoning"
                                ],
                                "description": "Recall metrics for the search, null if not yet computed or requested.",
                                "nullable": true
                              },
                              "metadata": {
                                "default": {},
                                "description": "Set of key-value pairs you want to associate with this object.",
                                "type": [
                                  "object"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string"
                                  ],
                                  "maxLength": 1000
                                }
                              },
                              "canceledAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the search was canceled",
                                "nullable": true
                              },
                              "canceledReason": {
                                "type": "string",
                                "enum": [
                                  "webset_deleted",
                                  "webset_canceled"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the search was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the search was updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "websetId",
                              "status",
                              "query",
                              "entity",
                              "criteria",
                              "count",
                              "exclude",
                              "scope",
                              "progress",
                              "recall",
                              "canceledAt",
                              "canceledReason",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "description": "The searches that have been performed on the webset."
                        },
                        "imports": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Import"
                              },
                              "object": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "import"
                                ],
                                "description": "The type of object"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "pending",
                                  "processing",
                                  "completed",
                                  "failed"
                                ],
                                "description": "The status of the Import"
                              },
                              "format": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "csv",
                                  "webset"
                                ],
                                "description": "The format of the import."
                              },
                              "entity": {
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "company",
                                        "default": "company"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Company"
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "person",
                                        "default": "person"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Person"
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "article",
                                        "default": "article"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Article"
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "research_paper",
                                        "default": "research_paper"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Research Paper"
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "custom",
                                        "default": "custom"
                                      },
                                      "description": {
                                        "type": [
                                          "string"
                                        ],
                                        "minLength": 2,
                                        "maxLength": 200
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "description"
                                    ],
                                    "title": "Custom"
                                  }
                                ]
                              },
                              "title": {
                                "type": [
                                  "string"
                                ],
                                "description": "The title of the import"
                              },
                              "count": {
                                "type": [
                                  "number"
                                ],
                                "description": "The number of entities in the import"
                              },
                              "metadata": {
                                "description": "Set of key-value pairs you want to associate with this object.",
                                "type": [
                                  "object"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string"
                                  ],
                                  "maxLength": 1000
                                }
                              },
                              "failedReason": {
                                "type": "string",
                                "enum": [
                                  "invalid_format",
                                  "invalid_file_content",
                                  "missing_identifier"
                                ],
                                "description": "The reason the import failed",
                                "nullable": true
                              },
                              "failedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the import failed",
                                "nullable": true
                              },
                              "failedMessage": {
                                "type": "string",
                                "description": "A human readable message of the import failure",
                                "nullable": true
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the import was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the import was last updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "status",
                              "format",
                              "entity",
                              "title",
                              "count",
                              "metadata",
                              "failedReason",
                              "failedAt",
                              "failedMessage",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "description": "Imports that have been performed on the webset."
                        },
                        "enrichments": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the enrichment"
                              },
                              "object": {
                                "type": "string",
                                "const": "webset_enrichment",
                                "default": "webset_enrichment"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "pending",
                                  "canceled",
                                  "completed"
                                ],
                                "description": "The status of the enrichment",
                                "title": "WebsetEnrichmentStatus"
                              },
                              "websetId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Webset this enrichment belongs to."
                              },
                              "title": {
                                "type": "string",
                                "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                "nullable": true
                              },
                              "description": {
                                "type": [
                                  "string"
                                ],
                                "description": "The description of the enrichment task provided during the creation of the enrichment."
                              },
                              "format": {
                                "type": "string",
                                "enum": [
                                  "text",
                                  "date",
                                  "number",
                                  "options",
                                  "email",
                                  "phone",
                                  "url"
                                ]
                              },
                              "options": {
                                "type": "array",
                                "items": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "label": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "The label of the option"
                                    }
                                  },
                                  "required": [
                                    "label"
                                  ]
                                },
                                "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                "title": "WebsetEnrichmentOptions",
                                "nullable": true
                              },
                              "instructions": {
                                "type": "string",
                                "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                "nullable": true
                              },
                              "metadata": {
                                "default": {},
                                "description": "The metadata of the enrichment",
                                "type": [
                                  "object"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string"
                                  ],
                                  "maxLength": 1000
                                }
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the enrichment was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the enrichment was updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "status",
                              "websetId",
                              "title",
                              "description",
                              "format",
                              "options",
                              "instructions",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "description": "The Enrichments to apply to the Webset Items."
                        },
                        "monitors": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Monitor"
                              },
                              "object": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "monitor"
                                ],
                                "description": "The type of object"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "description": "The status of the Monitor"
                              },
                              "websetId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The id of the Webset the Monitor belongs to"
                              },
                              "cadence": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "cron": {
                                    "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                    "type": [
                                      "string"
                                    ]
                                  },
                                  "timezone": {
                                    "description": "IANA timezone (e.g., \"America/New_York\")",
                                    "default": "Etc/UTC",
                                    "type": [
                                      "string"
                                    ]
                                  }
                                },
                                "required": [
                                  "cron"
                                ],
                                "description": "How often the monitor will run"
                              },
                              "behavior": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "search",
                                    "default": "search"
                                  },
                                  "config": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "query": {
                                        "type": [
                                          "string"
                                        ],
                                        "minLength": 2,
                                        "maxLength": 10000,
                                        "description": "The query to search for. By default, the query from the last search is used."
                                      },
                                      "criteria": {
                                        "type": [
                                          "array"
                                        ],
                                        "items": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "description": {
                                              "type": [
                                                "string"
                                              ],
                                              "minLength": 2,
                                              "maxLength": 1000
                                            }
                                          },
                                          "required": [
                                            "description"
                                          ]
                                        },
                                        "maxItems": 5,
                                        "description": "The criteria to search for. By default, the criteria from the last search is used."
                                      },
                                      "entity": {
                                        "oneOf": [
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "company",
                                                "default": "company"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "title": "Company"
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "person",
                                                "default": "person"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "title": "Person"
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "article",
                                                "default": "article"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "title": "Article"
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "research_paper",
                                                "default": "research_paper"
                                              }
                                            },
                                            "required": [
                                              "type"
                                            ],
                                            "title": "Research Paper"
                                          },
                                          {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "const": "custom",
                                                "default": "custom"
                                              },
                                              "description": {
                                                "type": [
                                                  "string"
                                                ],
                                                "minLength": 2,
                                                "maxLength": 200
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "description"
                                            ],
                                            "title": "Custom"
                                          }
                                        ]
                                      },
                                      "count": {
                                        "type": [
                                          "number"
                                        ],
                                        "exclusiveMinimum": 0,
                                        "description": "The maximum number of results to find"
                                      },
                                      "behavior": {
                                        "default": "append",
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "override",
                                          "append"
                                        ],
                                        "description": "The behaviour of the Search when it is added to a Webset."
                                      }
                                    },
                                    "required": [
                                      "count"
                                    ],
                                    "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                  }
                                },
                                "required": [
                                  "type",
                                  "config"
                                ],
                                "description": "Behavior to perform when monitor runs"
                              },
                              "lastRun": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor Run"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor_run"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "running",
                                      "completed",
                                      "canceled",
                                      "failed"
                                    ],
                                    "description": "The status of the Monitor Run"
                                  },
                                  "monitorId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The monitor that the run is associated with"
                                  },
                                  "type": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "search",
                                      "refresh"
                                    ],
                                    "description": "The type of the Monitor Run"
                                  },
                                  "completedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the run completed",
                                    "nullable": true
                                  },
                                  "failedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the run failed",
                                    "nullable": true
                                  },
                                  "failedReason": {
                                    "type": "string",
                                    "description": "The reason the run failed",
                                    "nullable": true
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the run was canceled",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the run was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the run was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "monitorId",
                                  "status",
                                  "type",
                                  "completedAt",
                                  "failedAt",
                                  "failedReason",
                                  "canceledAt",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "nextRunAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date and time when the next run will occur in",
                                "nullable": true
                              },
                              "metadata": {
                                "description": "Set of key-value pairs you want to associate with this object.",
                                "type": [
                                  "object"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string"
                                  ],
                                  "maxLength": 1000
                                }
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the monitor was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the monitor was last updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "status",
                              "websetId",
                              "cadence",
                              "behavior",
                              "lastRun",
                              "nextRunAt",
                              "metadata",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "description": "The Monitors for the Webset."
                        },
                        "streams": {
                          "type": [
                            "array"
                          ],
                          "items": {},
                          "description": "The Streams for the Webset."
                        },
                        "metadata": {
                          "default": {},
                          "description": "Set of key-value pairs you want to associate with this object.",
                          "type": [
                            "object"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string"
                            ],
                            "maxLength": 1000
                          }
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the webset was created"
                        },
                        "updatedAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the webset was updated"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "status",
                        "externalId",
                        "title",
                        "searches",
                        "imports",
                        "enrichments",
                        "monitors",
                        "streams",
                        "createdAt",
                        "updatedAt"
                      ]
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "items": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Webset Item"
                              },
                              "object": {
                                "type": "string",
                                "const": "webset_item",
                                "default": "webset_item"
                              },
                              "source": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "search",
                                  "import"
                                ],
                                "description": "The source of the Item"
                              },
                              "sourceId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the source"
                              },
                              "websetId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Webset this Item belongs to."
                              },
                              "properties": {
                                "oneOf": [
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "person",
                                        "default": "person"
                                      },
                                      "url": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "uri",
                                        "description": "The URL of the person profile"
                                      },
                                      "description": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "Short description of the relevance of the person"
                                      },
                                      "person": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "The name of the person"
                                          },
                                          "location": {
                                            "type": "string",
                                            "description": "The location of the person",
                                            "nullable": true
                                          },
                                          "position": {
                                            "type": "string",
                                            "description": "The current work position of the person",
                                            "nullable": true
                                          },
                                          "company": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": [
                                                  "string"
                                                ],
                                                "description": "The name of the company"
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "The location the person is working at the company",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "location"
                                            ],
                                            "title": "WebsetItemPersonCompanyPropertiesFields",
                                            "nullable": true
                                          },
                                          "pictureUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "The image URL of the person",
                                            "nullable": true
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "location",
                                          "position",
                                          "company",
                                          "pictureUrl"
                                        ],
                                        "title": "WebsetItemPersonPropertiesFields"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "url",
                                      "description",
                                      "person"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "company",
                                        "default": "company"
                                      },
                                      "url": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "uri",
                                        "description": "The URL of the company website"
                                      },
                                      "description": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "Short description of the relevance of the company"
                                      },
                                      "content": {
                                        "type": "string",
                                        "description": "The text content of the company website",
                                        "nullable": true
                                      },
                                      "company": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "name": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "The name of the company"
                                          },
                                          "location": {
                                            "type": "string",
                                            "description": "The main location of the company",
                                            "nullable": true
                                          },
                                          "employees": {
                                            "type": "number",
                                            "description": "The number of employees of the company",
                                            "nullable": true
                                          },
                                          "industry": {
                                            "type": "string",
                                            "description": "The industry of the company",
                                            "nullable": true
                                          },
                                          "about": {
                                            "type": "string",
                                            "description": "A short description of the company",
                                            "nullable": true
                                          },
                                          "logoUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "The logo URL of the company",
                                            "nullable": true
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "location",
                                          "employees",
                                          "industry",
                                          "about",
                                          "logoUrl"
                                        ],
                                        "title": "WebsetItemCompanyPropertiesFields"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "url",
                                      "description",
                                      "content",
                                      "company"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "article",
                                        "default": "article"
                                      },
                                      "url": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "uri",
                                        "description": "The URL of the article"
                                      },
                                      "description": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "Short description of the relevance of the article"
                                      },
                                      "content": {
                                        "type": "string",
                                        "description": "The text content for the article",
                                        "nullable": true
                                      },
                                      "article": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "title": {
                                            "type": "string",
                                            "description": "The title of the article",
                                            "nullable": true
                                          },
                                          "author": {
                                            "type": "string",
                                            "description": "The author(s) of the article",
                                            "nullable": true
                                          },
                                          "publishedAt": {
                                            "type": "string",
                                            "description": "The date and time the article was published",
                                            "nullable": true
                                          }
                                        },
                                        "required": [
                                          "title",
                                          "author",
                                          "publishedAt"
                                        ],
                                        "title": "WebsetItemArticlePropertiesFields"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "url",
                                      "description",
                                      "content",
                                      "article"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "research_paper",
                                        "default": "research_paper"
                                      },
                                      "url": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "uri",
                                        "description": "The URL of the research paper"
                                      },
                                      "description": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "Short description of the relevance of the research paper"
                                      },
                                      "content": {
                                        "type": "string",
                                        "description": "The text content of the research paper",
                                        "nullable": true
                                      },
                                      "researchPaper": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "title": {
                                            "type": "string",
                                            "description": "The title of the research paper",
                                            "nullable": true
                                          },
                                          "author": {
                                            "type": "string",
                                            "description": "The author(s) of the research paper",
                                            "nullable": true
                                          },
                                          "publishedAt": {
                                            "type": "string",
                                            "description": "The date and time the research paper was published",
                                            "nullable": true
                                          }
                                        },
                                        "required": [
                                          "title",
                                          "author",
                                          "publishedAt"
                                        ],
                                        "title": "WebsetItemResearchPaperPropertiesFields"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "url",
                                      "description",
                                      "content",
                                      "researchPaper"
                                    ]
                                  },
                                  {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "custom",
                                        "default": "custom"
                                      },
                                      "url": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "uri",
                                        "description": "The URL of the Item"
                                      },
                                      "description": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "Short description of the Item"
                                      },
                                      "content": {
                                        "type": "string",
                                        "description": "The text content of the Item",
                                        "nullable": true
                                      },
                                      "custom": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "title": {
                                            "type": "string",
                                            "description": "The title of the website",
                                            "nullable": true
                                          },
                                          "author": {
                                            "type": "string",
                                            "description": "The author(s) of the website",
                                            "nullable": true
                                          },
                                          "publishedAt": {
                                            "type": "string",
                                            "description": "The date and time the website was published",
                                            "nullable": true
                                          }
                                        },
                                        "required": [
                                          "title",
                                          "author",
                                          "publishedAt"
                                        ],
                                        "title": "WebsetItemCustomPropertiesFields"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "url",
                                      "description",
                                      "content",
                                      "custom"
                                    ]
                                  }
                                ],
                                "description": "The properties of the Item"
                              },
                              "evaluations": {
                                "type": [
                                  "array"
                                ],
                                "items": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "criterion": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "The description of the criterion"
                                    },
                                    "reasoning": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "The reasoning for the result of the evaluation"
                                    },
                                    "satisfied": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "yes",
                                        "no",
                                        "unclear"
                                      ],
                                      "description": "The satisfaction of the criterion"
                                    },
                                    "references": {
                                      "default": [],
                                      "type": [
                                        "array"
                                      ],
                                      "items": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "title": {
                                            "type": "string",
                                            "description": "The title of the reference",
                                            "nullable": true
                                          },
                                          "snippet": {
                                            "type": "string",
                                            "description": "The relevant snippet of the reference content",
                                            "nullable": true
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the reference"
                                          }
                                        },
                                        "required": [
                                          "title",
                                          "snippet",
                                          "url"
                                        ]
                                      },
                                      "description": "The references used to generate the result."
                                    }
                                  },
                                  "required": [
                                    "criterion",
                                    "reasoning",
                                    "satisfied"
                                  ]
                                },
                                "description": "The criteria evaluations of the item"
                              },
                              "enrichments": {
                                "type": "array",
                                "items": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "object": {
                                      "type": "string",
                                      "const": "enrichment_result",
                                      "default": "enrichment_result"
                                    },
                                    "status": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "pending",
                                        "completed",
                                        "canceled"
                                      ],
                                      "description": "The status of the enrichment result."
                                    },
                                    "format": {
                                      "type": "string",
                                      "enum": [
                                        "text",
                                        "date",
                                        "number",
                                        "options",
                                        "email",
                                        "phone",
                                        "url"
                                      ]
                                    },
                                    "result": {
                                      "type": "array",
                                      "items": {
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "description": "The result of the enrichment.",
                                      "nullable": true
                                    },
                                    "reasoning": {
                                      "type": "string",
                                      "description": "The reasoning for the result when an Agent is used.",
                                      "nullable": true
                                    },
                                    "references": {
                                      "type": [
                                        "array"
                                      ],
                                      "items": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "title": {
                                            "type": "string",
                                            "description": "The title of the reference",
                                            "nullable": true
                                          },
                                          "snippet": {
                                            "type": "string",
                                            "description": "The relevant snippet of the reference content",
                                            "nullable": true
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the reference"
                                          }
                                        },
                                        "required": [
                                          "title",
                                          "snippet",
                                          "url"
                                        ]
                                      },
                                      "description": "The references used to generate the result."
                                    },
                                    "enrichmentId": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "The id of the Enrichment that generated the result"
                                    }
                                  },
                                  "required": [
                                    "object",
                                    "status",
                                    "format",
                                    "result",
                                    "reasoning",
                                    "references",
                                    "enrichmentId"
                                  ]
                                },
                                "description": "The enrichments results of the Webset item",
                                "nullable": true
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the item was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the item was last updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "source",
                              "sourceId",
                              "websetId",
                              "properties",
                              "evaluations",
                              "enrichments",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "description": "When expand query parameter contains `items`, this will contain the items in the webset"
                        }
                      }
                    }
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          },
          "404": {
            "description": "Webset not found",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Get a Webset",
        "tags": [
          "Websets"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst webset = await exa.websets.get('webset_id');\n\nconsole.log(`Webset: ${webset.id} - ${webset.status}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nwebset = exa.websets.get('webset_id')\n\nprint(f'Webset: {webset.id} - {webset.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "post": {
        "operationId": "websets-update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "metadata": {
                    "description": "Set of key-value pairs you want to associate with this object.",
                    "type": "object",
                    "additionalProperties": {
                      "type": [
                        "string"
                      ],
                      "maxLength": 1000
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webset updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the webset"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset",
                      "default": "webset"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "idle",
                        "pending",
                        "running",
                        "paused"
                      ],
                      "description": "The status of the webset",
                      "title": "WebsetStatus"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "The external identifier for the webset",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the webset",
                      "nullable": true
                    },
                    "searches": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the search"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset_search",
                            "default": "webset_search"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "created",
                              "pending",
                              "running",
                              "completed",
                              "canceled"
                            ],
                            "description": "The status of the search",
                            "title": "WebsetSearchStatus"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset this search belongs to"
                          },
                          "query": {
                            "description": "The query used to create the search.",
                            "type": [
                              "string"
                            ],
                            "minLength": 1,
                            "maxLength": 5000
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "criteria": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "description": {
                                  "description": "The description of the criterion",
                                  "type": [
                                    "string"
                                  ],
                                  "minLength": 1,
                                  "maxLength": 1000
                                },
                                "successRate": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                }
                              },
                              "required": [
                                "description",
                                "successRate"
                              ]
                            },
                            "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "minimum": 1,
                            "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                          },
                          "behavior": {
                            "type": "string",
                            "enum": [
                              "override",
                              "append"
                            ]
                          },
                          "exclude": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "source": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "import",
                                    "webset"
                                  ]
                                },
                                "id": {
                                  "type": [
                                    "string"
                                  ]
                                }
                              },
                              "required": [
                                "source",
                                "id"
                              ]
                            },
                            "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                          },
                          "scope": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "source": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "import",
                                    "webset"
                                  ]
                                },
                                "id": {
                                  "type": [
                                    "string"
                                  ]
                                },
                                "relationship": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "definition": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                    },
                                    "limit": {
                                      "type": [
                                        "number"
                                      ],
                                      "minimum": 1,
                                      "maximum": 10
                                    }
                                  },
                                  "required": [
                                    "definition",
                                    "limit"
                                  ]
                                }
                              },
                              "required": [
                                "source",
                                "id"
                              ]
                            },
                            "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                          },
                          "progress": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "found": {
                                "type": [
                                  "number"
                                ],
                                "description": "The number of results found so far"
                              },
                              "analyzed": {
                                "type": [
                                  "number"
                                ],
                                "description": "The number of results analyzed so far"
                              },
                              "completion": {
                                "type": [
                                  "number"
                                ],
                                "minimum": 0,
                                "maximum": 100,
                                "description": "The completion percentage of the search"
                              },
                              "timeLeft": {
                                "type": "number",
                                "description": "The estimated time remaining in seconds, null if unknown",
                                "nullable": true
                              }
                            },
                            "required": [
                              "found",
                              "analyzed",
                              "completion",
                              "timeLeft"
                            ],
                            "description": "The progress of the search"
                          },
                          "recall": {
                            "type": "object",
                            "properties": {
                              "expected": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "total": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The estimated total number of potential matches"
                                  },
                                  "confidence": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "high",
                                      "medium",
                                      "low"
                                    ],
                                    "description": "The confidence in the estimate"
                                  },
                                  "bounds": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "min": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The minimum estimated total number of potential matches"
                                      },
                                      "max": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The maximum estimated total number of potential matches"
                                      }
                                    },
                                    "required": [
                                      "min",
                                      "max"
                                    ]
                                  }
                                },
                                "required": [
                                  "total",
                                  "confidence",
                                  "bounds"
                                ]
                              },
                              "reasoning": {
                                "type": [
                                  "string"
                                ],
                                "description": "The reasoning for the estimate"
                              }
                            },
                            "required": [
                              "expected",
                              "reasoning"
                            ],
                            "description": "Recall metrics for the search, null if not yet computed or requested.",
                            "nullable": true
                          },
                          "metadata": {
                            "default": {},
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "canceledAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time the search was canceled",
                            "nullable": true
                          },
                          "canceledReason": {
                            "type": "string",
                            "enum": [
                              "webset_deleted",
                              "webset_canceled"
                            ]
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the search was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the search was updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "websetId",
                          "status",
                          "query",
                          "entity",
                          "criteria",
                          "count",
                          "exclude",
                          "scope",
                          "progress",
                          "recall",
                          "canceledAt",
                          "canceledReason",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The searches that have been performed on the webset."
                    },
                    "imports": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Import"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "processing",
                              "completed",
                              "failed"
                            ],
                            "description": "The status of the Import"
                          },
                          "format": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "csv",
                              "webset"
                            ],
                            "description": "The format of the import."
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "title": {
                            "type": [
                              "string"
                            ],
                            "description": "The title of the import"
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "description": "The number of entities in the import"
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "failedReason": {
                            "type": "string",
                            "enum": [
                              "invalid_format",
                              "invalid_file_content",
                              "missing_identifier"
                            ],
                            "description": "The reason the import failed",
                            "nullable": true
                          },
                          "failedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the import failed",
                            "nullable": true
                          },
                          "failedMessage": {
                            "type": "string",
                            "description": "A human readable message of the import failure",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "format",
                          "entity",
                          "title",
                          "count",
                          "metadata",
                          "failedReason",
                          "failedAt",
                          "failedMessage",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "Imports that have been performed on the webset."
                    },
                    "enrichments": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the enrichment"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset_enrichment",
                            "default": "webset_enrichment"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "canceled",
                              "completed"
                            ],
                            "description": "The status of the enrichment",
                            "title": "WebsetEnrichmentStatus"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset this enrichment belongs to."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                            "nullable": true
                          },
                          "description": {
                            "type": [
                              "string"
                            ],
                            "description": "The description of the enrichment task provided during the creation of the enrichment."
                          },
                          "format": {
                            "type": "string",
                            "enum": [
                              "text",
                              "date",
                              "number",
                              "options",
                              "email",
                              "phone",
                              "url"
                            ]
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "label": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The label of the option"
                                }
                              },
                              "required": [
                                "label"
                              ]
                            },
                            "description": "When the format is options, the different options for the enrichment agent to choose from.",
                            "title": "WebsetEnrichmentOptions",
                            "nullable": true
                          },
                          "instructions": {
                            "type": "string",
                            "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                            "nullable": true
                          },
                          "metadata": {
                            "default": {},
                            "description": "The metadata of the enrichment",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the enrichment was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the enrichment was updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "websetId",
                          "title",
                          "description",
                          "format",
                          "options",
                          "instructions",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The Enrichments to apply to the Webset Items."
                    },
                    "monitors": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Monitor"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "monitor"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "description": "The status of the Monitor"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The id of the Webset the Monitor belongs to"
                          },
                          "cadence": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "cron": {
                                "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                "type": [
                                  "string"
                                ]
                              },
                              "timezone": {
                                "description": "IANA timezone (e.g., \"America/New_York\")",
                                "default": "Etc/UTC",
                                "type": [
                                  "string"
                                ]
                              }
                            },
                            "required": [
                              "cron"
                            ],
                            "description": "How often the monitor will run"
                          },
                          "behavior": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "search",
                                "default": "search"
                              },
                              "config": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "query": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 10000,
                                    "description": "The query to search for. By default, the query from the last search is used."
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 2,
                                          "maxLength": 1000
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ]
                                    },
                                    "maxItems": 5,
                                    "description": "The criteria to search for. By default, the criteria from the last search is used."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "exclusiveMinimum": 0,
                                    "description": "The maximum number of results to find"
                                  },
                                  "behavior": {
                                    "default": "append",
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "override",
                                      "append"
                                    ],
                                    "description": "The behaviour of the Search when it is added to a Webset."
                                  }
                                },
                                "required": [
                                  "count"
                                ],
                                "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                              }
                            },
                            "required": [
                              "type",
                              "config"
                            ],
                            "description": "Behavior to perform when monitor runs"
                          },
                          "lastRun": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Monitor Run"
                              },
                              "object": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "monitor_run"
                                ],
                                "description": "The type of object"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "created",
                                  "running",
                                  "completed",
                                  "canceled",
                                  "failed"
                                ],
                                "description": "The status of the Monitor Run"
                              },
                              "monitorId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The monitor that the run is associated with"
                              },
                              "type": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "search",
                                  "refresh"
                                ],
                                "description": "The type of the Monitor Run"
                              },
                              "completedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run completed",
                                "nullable": true
                              },
                              "failedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run failed",
                                "nullable": true
                              },
                              "failedReason": {
                                "type": "string",
                                "description": "The reason the run failed",
                                "nullable": true
                              },
                              "canceledAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run was canceled",
                                "nullable": true
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was last updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "monitorId",
                              "status",
                              "type",
                              "completedAt",
                              "failedAt",
                              "failedReason",
                              "canceledAt",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "nextRunAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when the next run will occur in",
                            "nullable": true
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "websetId",
                          "cadence",
                          "behavior",
                          "lastRun",
                          "nextRunAt",
                          "metadata",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The Monitors for the Webset."
                    },
                    "streams": {
                      "type": [
                        "array"
                      ],
                      "items": {},
                      "description": "The Streams for the Webset."
                    },
                    "metadata": {
                      "default": {},
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webset was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webset was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "externalId",
                    "title",
                    "searches",
                    "imports",
                    "enrichments",
                    "monitors",
                    "streams",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          },
          "404": {
            "description": "Webset not found",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Update a Webset",
        "tags": [
          "Websets"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst webset = await exa.websets.update('webset_id', {\n  name: 'Updated Webset Name',\n  description: 'Updated description'\n});\n\nconsole.log(`Updated webset: ${webset.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nwebset = exa.websets.update('webset_id', params={\n    'name': 'Updated Webset Name',\n    'description': 'Updated description'\n})\n\nprint(f'Updated webset: {webset.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "delete": {
        "description": "Deletes a Webset.\n\nOnce deleted, the Webset and all its Items will no longer be available.",
        "operationId": "websets-delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webset deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the webset"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset",
                      "default": "webset"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "idle",
                        "pending",
                        "running",
                        "paused"
                      ],
                      "description": "The status of the webset",
                      "title": "WebsetStatus"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "The external identifier for the webset",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the webset",
                      "nullable": true
                    },
                    "searches": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the search"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset_search",
                            "default": "webset_search"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "created",
                              "pending",
                              "running",
                              "completed",
                              "canceled"
                            ],
                            "description": "The status of the search",
                            "title": "WebsetSearchStatus"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset this search belongs to"
                          },
                          "query": {
                            "description": "The query used to create the search.",
                            "type": [
                              "string"
                            ],
                            "minLength": 1,
                            "maxLength": 5000
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "criteria": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "description": {
                                  "description": "The description of the criterion",
                                  "type": [
                                    "string"
                                  ],
                                  "minLength": 1,
                                  "maxLength": 1000
                                },
                                "successRate": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                }
                              },
                              "required": [
                                "description",
                                "successRate"
                              ]
                            },
                            "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "minimum": 1,
                            "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                          },
                          "behavior": {
                            "type": "string",
                            "enum": [
                              "override",
                              "append"
                            ]
                          },
                          "exclude": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "source": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "import",
                                    "webset"
                                  ]
                                },
                                "id": {
                                  "type": [
                                    "string"
                                  ]
                                }
                              },
                              "required": [
                                "source",
                                "id"
                              ]
                            },
                            "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                          },
                          "scope": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "source": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "import",
                                    "webset"
                                  ]
                                },
                                "id": {
                                  "type": [
                                    "string"
                                  ]
                                },
                                "relationship": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "definition": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                    },
                                    "limit": {
                                      "type": [
                                        "number"
                                      ],
                                      "minimum": 1,
                                      "maximum": 10
                                    }
                                  },
                                  "required": [
                                    "definition",
                                    "limit"
                                  ]
                                }
                              },
                              "required": [
                                "source",
                                "id"
                              ]
                            },
                            "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                          },
                          "progress": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "found": {
                                "type": [
                                  "number"
                                ],
                                "description": "The number of results found so far"
                              },
                              "analyzed": {
                                "type": [
                                  "number"
                                ],
                                "description": "The number of results analyzed so far"
                              },
                              "completion": {
                                "type": [
                                  "number"
                                ],
                                "minimum": 0,
                                "maximum": 100,
                                "description": "The completion percentage of the search"
                              },
                              "timeLeft": {
                                "type": "number",
                                "description": "The estimated time remaining in seconds, null if unknown",
                                "nullable": true
                              }
                            },
                            "required": [
                              "found",
                              "analyzed",
                              "completion",
                              "timeLeft"
                            ],
                            "description": "The progress of the search"
                          },
                          "recall": {
                            "type": "object",
                            "properties": {
                              "expected": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "total": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The estimated total number of potential matches"
                                  },
                                  "confidence": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "high",
                                      "medium",
                                      "low"
                                    ],
                                    "description": "The confidence in the estimate"
                                  },
                                  "bounds": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "min": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The minimum estimated total number of potential matches"
                                      },
                                      "max": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The maximum estimated total number of potential matches"
                                      }
                                    },
                                    "required": [
                                      "min",
                                      "max"
                                    ]
                                  }
                                },
                                "required": [
                                  "total",
                                  "confidence",
                                  "bounds"
                                ]
                              },
                              "reasoning": {
                                "type": [
                                  "string"
                                ],
                                "description": "The reasoning for the estimate"
                              }
                            },
                            "required": [
                              "expected",
                              "reasoning"
                            ],
                            "description": "Recall metrics for the search, null if not yet computed or requested.",
                            "nullable": true
                          },
                          "metadata": {
                            "default": {},
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "canceledAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time the search was canceled",
                            "nullable": true
                          },
                          "canceledReason": {
                            "type": "string",
                            "enum": [
                              "webset_deleted",
                              "webset_canceled"
                            ]
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the search was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the search was updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "websetId",
                          "status",
                          "query",
                          "entity",
                          "criteria",
                          "count",
                          "exclude",
                          "scope",
                          "progress",
                          "recall",
                          "canceledAt",
                          "canceledReason",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The searches that have been performed on the webset."
                    },
                    "imports": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Import"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "processing",
                              "completed",
                              "failed"
                            ],
                            "description": "The status of the Import"
                          },
                          "format": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "csv",
                              "webset"
                            ],
                            "description": "The format of the import."
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "title": {
                            "type": [
                              "string"
                            ],
                            "description": "The title of the import"
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "description": "The number of entities in the import"
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "failedReason": {
                            "type": "string",
                            "enum": [
                              "invalid_format",
                              "invalid_file_content",
                              "missing_identifier"
                            ],
                            "description": "The reason the import failed",
                            "nullable": true
                          },
                          "failedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the import failed",
                            "nullable": true
                          },
                          "failedMessage": {
                            "type": "string",
                            "description": "A human readable message of the import failure",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "format",
                          "entity",
                          "title",
                          "count",
                          "metadata",
                          "failedReason",
                          "failedAt",
                          "failedMessage",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "Imports that have been performed on the webset."
                    },
                    "enrichments": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the enrichment"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset_enrichment",
                            "default": "webset_enrichment"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "canceled",
                              "completed"
                            ],
                            "description": "The status of the enrichment",
                            "title": "WebsetEnrichmentStatus"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset this enrichment belongs to."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                            "nullable": true
                          },
                          "description": {
                            "type": [
                              "string"
                            ],
                            "description": "The description of the enrichment task provided during the creation of the enrichment."
                          },
                          "format": {
                            "type": "string",
                            "enum": [
                              "text",
                              "date",
                              "number",
                              "options",
                              "email",
                              "phone",
                              "url"
                            ]
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "label": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The label of the option"
                                }
                              },
                              "required": [
                                "label"
                              ]
                            },
                            "description": "When the format is options, the different options for the enrichment agent to choose from.",
                            "title": "WebsetEnrichmentOptions",
                            "nullable": true
                          },
                          "instructions": {
                            "type": "string",
                            "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                            "nullable": true
                          },
                          "metadata": {
                            "default": {},
                            "description": "The metadata of the enrichment",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the enrichment was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the enrichment was updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "websetId",
                          "title",
                          "description",
                          "format",
                          "options",
                          "instructions",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The Enrichments to apply to the Webset Items."
                    },
                    "monitors": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Monitor"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "monitor"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "description": "The status of the Monitor"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The id of the Webset the Monitor belongs to"
                          },
                          "cadence": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "cron": {
                                "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                "type": [
                                  "string"
                                ]
                              },
                              "timezone": {
                                "description": "IANA timezone (e.g., \"America/New_York\")",
                                "default": "Etc/UTC",
                                "type": [
                                  "string"
                                ]
                              }
                            },
                            "required": [
                              "cron"
                            ],
                            "description": "How often the monitor will run"
                          },
                          "behavior": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "search",
                                "default": "search"
                              },
                              "config": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "query": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 10000,
                                    "description": "The query to search for. By default, the query from the last search is used."
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 2,
                                          "maxLength": 1000
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ]
                                    },
                                    "maxItems": 5,
                                    "description": "The criteria to search for. By default, the criteria from the last search is used."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "exclusiveMinimum": 0,
                                    "description": "The maximum number of results to find"
                                  },
                                  "behavior": {
                                    "default": "append",
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "override",
                                      "append"
                                    ],
                                    "description": "The behaviour of the Search when it is added to a Webset."
                                  }
                                },
                                "required": [
                                  "count"
                                ],
                                "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                              }
                            },
                            "required": [
                              "type",
                              "config"
                            ],
                            "description": "Behavior to perform when monitor runs"
                          },
                          "lastRun": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Monitor Run"
                              },
                              "object": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "monitor_run"
                                ],
                                "description": "The type of object"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "created",
                                  "running",
                                  "completed",
                                  "canceled",
                                  "failed"
                                ],
                                "description": "The status of the Monitor Run"
                              },
                              "monitorId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The monitor that the run is associated with"
                              },
                              "type": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "search",
                                  "refresh"
                                ],
                                "description": "The type of the Monitor Run"
                              },
                              "completedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run completed",
                                "nullable": true
                              },
                              "failedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run failed",
                                "nullable": true
                              },
                              "failedReason": {
                                "type": "string",
                                "description": "The reason the run failed",
                                "nullable": true
                              },
                              "canceledAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run was canceled",
                                "nullable": true
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was last updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "monitorId",
                              "status",
                              "type",
                              "completedAt",
                              "failedAt",
                              "failedReason",
                              "canceledAt",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "nextRunAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when the next run will occur in",
                            "nullable": true
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "websetId",
                          "cadence",
                          "behavior",
                          "lastRun",
                          "nextRunAt",
                          "metadata",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The Monitors for the Webset."
                    },
                    "streams": {
                      "type": [
                        "array"
                      ],
                      "items": {},
                      "description": "The Streams for the Webset."
                    },
                    "metadata": {
                      "default": {},
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webset was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webset was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "externalId",
                    "title",
                    "searches",
                    "imports",
                    "enrichments",
                    "monitors",
                    "streams",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          },
          "404": {
            "description": "Webset not found",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Delete a Webset",
        "tags": [
          "Websets"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nawait exa.websets.delete('webset_id');\n\nconsole.log('Webset deleted successfully');"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nexa.websets.delete('webset_id')\n\nprint('Webset deleted successfully')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{id}/cancel": {
      "post": {
        "description": "Cancels all operations being performed on a Webset.\n\nAny enrichment or search will be stopped and the Webset will be marked as `idle`.",
        "operationId": "websets-cancel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webset canceled",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the webset"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset",
                      "default": "webset"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "idle",
                        "pending",
                        "running",
                        "paused"
                      ],
                      "description": "The status of the webset",
                      "title": "WebsetStatus"
                    },
                    "externalId": {
                      "type": "string",
                      "description": "The external identifier for the webset",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the webset",
                      "nullable": true
                    },
                    "searches": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the search"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset_search",
                            "default": "webset_search"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "created",
                              "pending",
                              "running",
                              "completed",
                              "canceled"
                            ],
                            "description": "The status of the search",
                            "title": "WebsetSearchStatus"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset this search belongs to"
                          },
                          "query": {
                            "description": "The query used to create the search.",
                            "type": [
                              "string"
                            ],
                            "minLength": 1,
                            "maxLength": 5000
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "criteria": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "description": {
                                  "description": "The description of the criterion",
                                  "type": [
                                    "string"
                                  ],
                                  "minLength": 1,
                                  "maxLength": 1000
                                },
                                "successRate": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                }
                              },
                              "required": [
                                "description",
                                "successRate"
                              ]
                            },
                            "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "minimum": 1,
                            "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                          },
                          "behavior": {
                            "type": "string",
                            "enum": [
                              "override",
                              "append"
                            ]
                          },
                          "exclude": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "source": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "import",
                                    "webset"
                                  ]
                                },
                                "id": {
                                  "type": [
                                    "string"
                                  ]
                                }
                              },
                              "required": [
                                "source",
                                "id"
                              ]
                            },
                            "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                          },
                          "scope": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "source": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "import",
                                    "webset"
                                  ]
                                },
                                "id": {
                                  "type": [
                                    "string"
                                  ]
                                },
                                "relationship": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "definition": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                    },
                                    "limit": {
                                      "type": [
                                        "number"
                                      ],
                                      "minimum": 1,
                                      "maximum": 10
                                    }
                                  },
                                  "required": [
                                    "definition",
                                    "limit"
                                  ]
                                }
                              },
                              "required": [
                                "source",
                                "id"
                              ]
                            },
                            "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                          },
                          "progress": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "found": {
                                "type": [
                                  "number"
                                ],
                                "description": "The number of results found so far"
                              },
                              "analyzed": {
                                "type": [
                                  "number"
                                ],
                                "description": "The number of results analyzed so far"
                              },
                              "completion": {
                                "type": [
                                  "number"
                                ],
                                "minimum": 0,
                                "maximum": 100,
                                "description": "The completion percentage of the search"
                              },
                              "timeLeft": {
                                "type": "number",
                                "description": "The estimated time remaining in seconds, null if unknown",
                                "nullable": true
                              }
                            },
                            "required": [
                              "found",
                              "analyzed",
                              "completion",
                              "timeLeft"
                            ],
                            "description": "The progress of the search"
                          },
                          "recall": {
                            "type": "object",
                            "properties": {
                              "expected": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "total": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The estimated total number of potential matches"
                                  },
                                  "confidence": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "high",
                                      "medium",
                                      "low"
                                    ],
                                    "description": "The confidence in the estimate"
                                  },
                                  "bounds": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "min": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The minimum estimated total number of potential matches"
                                      },
                                      "max": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The maximum estimated total number of potential matches"
                                      }
                                    },
                                    "required": [
                                      "min",
                                      "max"
                                    ]
                                  }
                                },
                                "required": [
                                  "total",
                                  "confidence",
                                  "bounds"
                                ]
                              },
                              "reasoning": {
                                "type": [
                                  "string"
                                ],
                                "description": "The reasoning for the estimate"
                              }
                            },
                            "required": [
                              "expected",
                              "reasoning"
                            ],
                            "description": "Recall metrics for the search, null if not yet computed or requested.",
                            "nullable": true
                          },
                          "metadata": {
                            "default": {},
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "canceledAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time the search was canceled",
                            "nullable": true
                          },
                          "canceledReason": {
                            "type": "string",
                            "enum": [
                              "webset_deleted",
                              "webset_canceled"
                            ]
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the search was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the search was updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "websetId",
                          "status",
                          "query",
                          "entity",
                          "criteria",
                          "count",
                          "exclude",
                          "scope",
                          "progress",
                          "recall",
                          "canceledAt",
                          "canceledReason",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The searches that have been performed on the webset."
                    },
                    "imports": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Import"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "processing",
                              "completed",
                              "failed"
                            ],
                            "description": "The status of the Import"
                          },
                          "format": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "csv",
                              "webset"
                            ],
                            "description": "The format of the import."
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "title": {
                            "type": [
                              "string"
                            ],
                            "description": "The title of the import"
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "description": "The number of entities in the import"
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "failedReason": {
                            "type": "string",
                            "enum": [
                              "invalid_format",
                              "invalid_file_content",
                              "missing_identifier"
                            ],
                            "description": "The reason the import failed",
                            "nullable": true
                          },
                          "failedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the import failed",
                            "nullable": true
                          },
                          "failedMessage": {
                            "type": "string",
                            "description": "A human readable message of the import failure",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "format",
                          "entity",
                          "title",
                          "count",
                          "metadata",
                          "failedReason",
                          "failedAt",
                          "failedMessage",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "Imports that have been performed on the webset."
                    },
                    "enrichments": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the enrichment"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset_enrichment",
                            "default": "webset_enrichment"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "canceled",
                              "completed"
                            ],
                            "description": "The status of the enrichment",
                            "title": "WebsetEnrichmentStatus"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset this enrichment belongs to."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                            "nullable": true
                          },
                          "description": {
                            "type": [
                              "string"
                            ],
                            "description": "The description of the enrichment task provided during the creation of the enrichment."
                          },
                          "format": {
                            "type": "string",
                            "enum": [
                              "text",
                              "date",
                              "number",
                              "options",
                              "email",
                              "phone",
                              "url"
                            ]
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "label": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The label of the option"
                                }
                              },
                              "required": [
                                "label"
                              ]
                            },
                            "description": "When the format is options, the different options for the enrichment agent to choose from.",
                            "title": "WebsetEnrichmentOptions",
                            "nullable": true
                          },
                          "instructions": {
                            "type": "string",
                            "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                            "nullable": true
                          },
                          "metadata": {
                            "default": {},
                            "description": "The metadata of the enrichment",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the enrichment was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the enrichment was updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "websetId",
                          "title",
                          "description",
                          "format",
                          "options",
                          "instructions",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The Enrichments to apply to the Webset Items."
                    },
                    "monitors": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Monitor"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "monitor"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "description": "The status of the Monitor"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The id of the Webset the Monitor belongs to"
                          },
                          "cadence": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "cron": {
                                "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                "type": [
                                  "string"
                                ]
                              },
                              "timezone": {
                                "description": "IANA timezone (e.g., \"America/New_York\")",
                                "default": "Etc/UTC",
                                "type": [
                                  "string"
                                ]
                              }
                            },
                            "required": [
                              "cron"
                            ],
                            "description": "How often the monitor will run"
                          },
                          "behavior": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "search",
                                "default": "search"
                              },
                              "config": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "query": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 10000,
                                    "description": "The query to search for. By default, the query from the last search is used."
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 2,
                                          "maxLength": 1000
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ]
                                    },
                                    "maxItems": 5,
                                    "description": "The criteria to search for. By default, the criteria from the last search is used."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "exclusiveMinimum": 0,
                                    "description": "The maximum number of results to find"
                                  },
                                  "behavior": {
                                    "default": "append",
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "override",
                                      "append"
                                    ],
                                    "description": "The behaviour of the Search when it is added to a Webset."
                                  }
                                },
                                "required": [
                                  "count"
                                ],
                                "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                              }
                            },
                            "required": [
                              "type",
                              "config"
                            ],
                            "description": "Behavior to perform when monitor runs"
                          },
                          "lastRun": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Monitor Run"
                              },
                              "object": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "monitor_run"
                                ],
                                "description": "The type of object"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "created",
                                  "running",
                                  "completed",
                                  "canceled",
                                  "failed"
                                ],
                                "description": "The status of the Monitor Run"
                              },
                              "monitorId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The monitor that the run is associated with"
                              },
                              "type": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "search",
                                  "refresh"
                                ],
                                "description": "The type of the Monitor Run"
                              },
                              "completedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run completed",
                                "nullable": true
                              },
                              "failedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run failed",
                                "nullable": true
                              },
                              "failedReason": {
                                "type": "string",
                                "description": "The reason the run failed",
                                "nullable": true
                              },
                              "canceledAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run was canceled",
                                "nullable": true
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was last updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "monitorId",
                              "status",
                              "type",
                              "completedAt",
                              "failedAt",
                              "failedReason",
                              "canceledAt",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "nextRunAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when the next run will occur in",
                            "nullable": true
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "websetId",
                          "cadence",
                          "behavior",
                          "lastRun",
                          "nextRunAt",
                          "metadata",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The Monitors for the Webset."
                    },
                    "streams": {
                      "type": [
                        "array"
                      ],
                      "items": {},
                      "description": "The Streams for the Webset."
                    },
                    "metadata": {
                      "default": {},
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webset was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webset was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "externalId",
                    "title",
                    "searches",
                    "imports",
                    "enrichments",
                    "monitors",
                    "streams",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Cancel a running Webset",
        "tags": [
          "Websets"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst webset = await exa.websets.cancel('webset_id');\n\nconsole.log(`Cancelled webset: ${webset.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nwebset = exa.websets.cancel('webset_id')\n\nprint(f'Cancelled webset: {webset.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/preview": {
      "post": {
        "description": "Preview how a search query will be decomposed before creating a webset. This endpoint performs the same query analysis that happens during webset creation, allowing you to see the detected entity type, generated search criteria, and available enrichment columns in advance.\n\nUse this to help users understand how their search will be interpreted before committing to a full webset creation.",
        "operationId": "websets-preview",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "query": {
                    "type": [
                      "string"
                    ],
                    "minLength": 1,
                    "maxLength": 5000,
                    "description": "Natural language search query describing what you are looking for.\n\nBe specific and descriptive about your requirements, characteristics, and any constraints that help narrow down the results.",
                    "examples": [
                      "Marketing agencies based in the US, that focus on consumer products. Get brands worked with and city",
                      "AI startups in Europe that raised Series A funding in 2024",
                      "SaaS companies with 50-200 employees in the fintech space"
                    ]
                  },
                  "entity": {
                    "oneOf": [
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "company",
                            "default": "company"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Company"
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "person",
                            "default": "person"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Person"
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "article",
                            "default": "article"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Article"
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "research_paper",
                            "default": "research_paper"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Research Paper"
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "custom",
                            "default": "custom"
                          },
                          "description": {
                            "type": [
                              "string"
                            ],
                            "minLength": 2,
                            "maxLength": 200
                          }
                        },
                        "required": [
                          "type",
                          "description"
                        ],
                        "title": "Custom"
                      }
                    ]
                  }
                },
                "required": [
                  "query"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preview of the webset",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "search": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "entity": {
                          "oneOf": [
                            {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "company",
                                  "default": "company"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "title": "Company"
                            },
                            {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "person",
                                  "default": "person"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "title": "Person"
                            },
                            {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "article",
                                  "default": "article"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "title": "Article"
                            },
                            {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "research_paper",
                                  "default": "research_paper"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "title": "Research Paper"
                            },
                            {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "custom",
                                  "default": "custom"
                                },
                                "description": {
                                  "type": [
                                    "string"
                                  ],
                                  "minLength": 2,
                                  "maxLength": 200
                                }
                              },
                              "required": [
                                "type",
                                "description"
                              ],
                              "title": "Custom"
                            }
                          ],
                          "description": "Detected entity from the query."
                        },
                        "criteria": {
                          "type": [
                            "array"
                          ],
                          "items": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "description": {
                                "type": [
                                  "string"
                                ]
                              }
                            },
                            "required": [
                              "description"
                            ]
                          },
                          "description": "Detected criteria from the query."
                        }
                      },
                      "required": [
                        "entity",
                        "criteria"
                      ]
                    },
                    "enrichments": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "description": {
                            "type": [
                              "string"
                            ],
                            "description": "Description of the enrichment."
                          },
                          "format": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "text",
                              "date",
                              "number",
                              "options",
                              "email",
                              "phone",
                              "url"
                            ],
                            "description": "Format of the enrichment."
                          },
                          "options": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "label": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "Label of the option."
                                }
                              },
                              "required": [
                                "label"
                              ]
                            },
                            "description": "When format is options, the options detected from the query."
                          }
                        },
                        "required": [
                          "description",
                          "format"
                        ]
                      },
                      "description": "Detected enrichments from the query."
                    }
                  },
                  "required": [
                    "search",
                    "enrichments"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          },
          "422": {
            "description": "Unable to detect entity or criteria from query",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Preview a webset",
        "tags": [
          "Websets Preview"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst preview = await exa.websets.preview({\n  query: \"Marketing agencies based in the US, that focus on consumer products. Get brands worked with and city\"\n});\n\nconsole.log('Search criteria:', preview.search.criteria);\nconsole.log('Available enrichments:', preview.enrichments.length);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\npreview = exa.websets.preview(params={\n    'query': 'Marketing agencies based in the US, that focus on consumer products. Get brands worked with and city'\n})\n\nprint('Search criteria:', preview.search.criteria)\nprint('Available enrichments:', len(preview.enrichments))"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{webset}/items/{id}": {
      "get": {
        "description": "Returns a Webset Item.",
        "operationId": "websets-items-get",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Webset item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webset Item",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset Item"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset_item",
                      "default": "webset_item"
                    },
                    "source": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "search",
                        "import"
                      ],
                      "description": "The source of the Item"
                    },
                    "sourceId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the source"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset this Item belongs to."
                    },
                    "properties": {
                      "oneOf": [
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "person",
                              "default": "person"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the person profile"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the relevance of the person"
                            },
                            "person": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "name": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The name of the person"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the person",
                                  "nullable": true
                                },
                                "position": {
                                  "type": "string",
                                  "description": "The current work position of the person",
                                  "nullable": true
                                },
                                "company": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "The name of the company"
                                    },
                                    "location": {
                                      "type": "string",
                                      "description": "The location the person is working at the company",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "location"
                                  ],
                                  "title": "WebsetItemPersonCompanyPropertiesFields",
                                  "nullable": true
                                },
                                "pictureUrl": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The image URL of the person",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "name",
                                "location",
                                "position",
                                "company",
                                "pictureUrl"
                              ],
                              "title": "WebsetItemPersonPropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "person"
                          ]
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "company",
                              "default": "company"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the company website"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the relevance of the company"
                            },
                            "content": {
                              "type": "string",
                              "description": "The text content of the company website",
                              "nullable": true
                            },
                            "company": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "name": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The name of the company"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The main location of the company",
                                  "nullable": true
                                },
                                "employees": {
                                  "type": "number",
                                  "description": "The number of employees of the company",
                                  "nullable": true
                                },
                                "industry": {
                                  "type": "string",
                                  "description": "The industry of the company",
                                  "nullable": true
                                },
                                "about": {
                                  "type": "string",
                                  "description": "A short description of the company",
                                  "nullable": true
                                },
                                "logoUrl": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The logo URL of the company",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "name",
                                "location",
                                "employees",
                                "industry",
                                "about",
                                "logoUrl"
                              ],
                              "title": "WebsetItemCompanyPropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "content",
                            "company"
                          ]
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "article",
                              "default": "article"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the article"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the relevance of the article"
                            },
                            "content": {
                              "type": "string",
                              "description": "The text content for the article",
                              "nullable": true
                            },
                            "article": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the article",
                                  "nullable": true
                                },
                                "author": {
                                  "type": "string",
                                  "description": "The author(s) of the article",
                                  "nullable": true
                                },
                                "publishedAt": {
                                  "type": "string",
                                  "description": "The date and time the article was published",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "title",
                                "author",
                                "publishedAt"
                              ],
                              "title": "WebsetItemArticlePropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "content",
                            "article"
                          ]
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "research_paper",
                              "default": "research_paper"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the research paper"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the relevance of the research paper"
                            },
                            "content": {
                              "type": "string",
                              "description": "The text content of the research paper",
                              "nullable": true
                            },
                            "researchPaper": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the research paper",
                                  "nullable": true
                                },
                                "author": {
                                  "type": "string",
                                  "description": "The author(s) of the research paper",
                                  "nullable": true
                                },
                                "publishedAt": {
                                  "type": "string",
                                  "description": "The date and time the research paper was published",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "title",
                                "author",
                                "publishedAt"
                              ],
                              "title": "WebsetItemResearchPaperPropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "content",
                            "researchPaper"
                          ]
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "custom",
                              "default": "custom"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the Item"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the Item"
                            },
                            "content": {
                              "type": "string",
                              "description": "The text content of the Item",
                              "nullable": true
                            },
                            "custom": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the website",
                                  "nullable": true
                                },
                                "author": {
                                  "type": "string",
                                  "description": "The author(s) of the website",
                                  "nullable": true
                                },
                                "publishedAt": {
                                  "type": "string",
                                  "description": "The date and time the website was published",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "title",
                                "author",
                                "publishedAt"
                              ],
                              "title": "WebsetItemCustomPropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "content",
                            "custom"
                          ]
                        }
                      ],
                      "description": "The properties of the Item"
                    },
                    "evaluations": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "criterion": {
                            "type": [
                              "string"
                            ],
                            "description": "The description of the criterion"
                          },
                          "reasoning": {
                            "type": [
                              "string"
                            ],
                            "description": "The reasoning for the result of the evaluation"
                          },
                          "satisfied": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "yes",
                              "no",
                              "unclear"
                            ],
                            "description": "The satisfaction of the criterion"
                          },
                          "references": {
                            "default": [],
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the reference",
                                  "nullable": true
                                },
                                "snippet": {
                                  "type": "string",
                                  "description": "The relevant snippet of the reference content",
                                  "nullable": true
                                },
                                "url": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "uri",
                                  "description": "The URL of the reference"
                                }
                              },
                              "required": [
                                "title",
                                "snippet",
                                "url"
                              ]
                            },
                            "description": "The references used to generate the result."
                          }
                        },
                        "required": [
                          "criterion",
                          "reasoning",
                          "satisfied"
                        ]
                      },
                      "description": "The criteria evaluations of the item"
                    },
                    "enrichments": {
                      "type": "array",
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "object": {
                            "type": "string",
                            "const": "enrichment_result",
                            "default": "enrichment_result"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "completed",
                              "canceled"
                            ],
                            "description": "The status of the enrichment result."
                          },
                          "format": {
                            "type": "string",
                            "enum": [
                              "text",
                              "date",
                              "number",
                              "options",
                              "email",
                              "phone",
                              "url"
                            ]
                          },
                          "result": {
                            "type": "array",
                            "items": {
                              "type": [
                                "string"
                              ]
                            },
                            "description": "The result of the enrichment.",
                            "nullable": true
                          },
                          "reasoning": {
                            "type": "string",
                            "description": "The reasoning for the result when an Agent is used.",
                            "nullable": true
                          },
                          "references": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the reference",
                                  "nullable": true
                                },
                                "snippet": {
                                  "type": "string",
                                  "description": "The relevant snippet of the reference content",
                                  "nullable": true
                                },
                                "url": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "uri",
                                  "description": "The URL of the reference"
                                }
                              },
                              "required": [
                                "title",
                                "snippet",
                                "url"
                              ]
                            },
                            "description": "The references used to generate the result."
                          },
                          "enrichmentId": {
                            "type": [
                              "string"
                            ],
                            "description": "The id of the Enrichment that generated the result"
                          }
                        },
                        "required": [
                          "object",
                          "status",
                          "format",
                          "result",
                          "reasoning",
                          "references",
                          "enrichmentId"
                        ]
                      },
                      "description": "The enrichments results of the Webset item",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the item was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the item was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "source",
                    "sourceId",
                    "websetId",
                    "properties",
                    "evaluations",
                    "enrichments",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Get an Item",
        "tags": [
          "Items"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst item = await exa.websets.items.get('webset_id', 'item_id');\n\nconsole.log(`Item: ${item.id} - ${item.properties.name}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nitem = exa.websets.items.get('webset_id', 'item_id')\n\nprint(f'Item: {item.id} - {item.properties.name}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "delete": {
        "description": "Deletes an Item from the Webset.\n\nThis will cancel any enrichment process for it.",
        "operationId": "websets-items-delete",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Webset item",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webset Item deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset Item"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset_item",
                      "default": "webset_item"
                    },
                    "source": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "search",
                        "import"
                      ],
                      "description": "The source of the Item"
                    },
                    "sourceId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the source"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset this Item belongs to."
                    },
                    "properties": {
                      "oneOf": [
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "person",
                              "default": "person"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the person profile"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the relevance of the person"
                            },
                            "person": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "name": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The name of the person"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The location of the person",
                                  "nullable": true
                                },
                                "position": {
                                  "type": "string",
                                  "description": "The current work position of the person",
                                  "nullable": true
                                },
                                "company": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "The name of the company"
                                    },
                                    "location": {
                                      "type": "string",
                                      "description": "The location the person is working at the company",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "location"
                                  ],
                                  "title": "WebsetItemPersonCompanyPropertiesFields",
                                  "nullable": true
                                },
                                "pictureUrl": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The image URL of the person",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "name",
                                "location",
                                "position",
                                "company",
                                "pictureUrl"
                              ],
                              "title": "WebsetItemPersonPropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "person"
                          ]
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "company",
                              "default": "company"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the company website"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the relevance of the company"
                            },
                            "content": {
                              "type": "string",
                              "description": "The text content of the company website",
                              "nullable": true
                            },
                            "company": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "name": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The name of the company"
                                },
                                "location": {
                                  "type": "string",
                                  "description": "The main location of the company",
                                  "nullable": true
                                },
                                "employees": {
                                  "type": "number",
                                  "description": "The number of employees of the company",
                                  "nullable": true
                                },
                                "industry": {
                                  "type": "string",
                                  "description": "The industry of the company",
                                  "nullable": true
                                },
                                "about": {
                                  "type": "string",
                                  "description": "A short description of the company",
                                  "nullable": true
                                },
                                "logoUrl": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "The logo URL of the company",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "name",
                                "location",
                                "employees",
                                "industry",
                                "about",
                                "logoUrl"
                              ],
                              "title": "WebsetItemCompanyPropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "content",
                            "company"
                          ]
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "article",
                              "default": "article"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the article"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the relevance of the article"
                            },
                            "content": {
                              "type": "string",
                              "description": "The text content for the article",
                              "nullable": true
                            },
                            "article": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the article",
                                  "nullable": true
                                },
                                "author": {
                                  "type": "string",
                                  "description": "The author(s) of the article",
                                  "nullable": true
                                },
                                "publishedAt": {
                                  "type": "string",
                                  "description": "The date and time the article was published",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "title",
                                "author",
                                "publishedAt"
                              ],
                              "title": "WebsetItemArticlePropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "content",
                            "article"
                          ]
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "research_paper",
                              "default": "research_paper"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the research paper"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the relevance of the research paper"
                            },
                            "content": {
                              "type": "string",
                              "description": "The text content of the research paper",
                              "nullable": true
                            },
                            "researchPaper": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the research paper",
                                  "nullable": true
                                },
                                "author": {
                                  "type": "string",
                                  "description": "The author(s) of the research paper",
                                  "nullable": true
                                },
                                "publishedAt": {
                                  "type": "string",
                                  "description": "The date and time the research paper was published",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "title",
                                "author",
                                "publishedAt"
                              ],
                              "title": "WebsetItemResearchPaperPropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "content",
                            "researchPaper"
                          ]
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "custom",
                              "default": "custom"
                            },
                            "url": {
                              "type": [
                                "string"
                              ],
                              "format": "uri",
                              "description": "The URL of the Item"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "description": "Short description of the Item"
                            },
                            "content": {
                              "type": "string",
                              "description": "The text content of the Item",
                              "nullable": true
                            },
                            "custom": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the website",
                                  "nullable": true
                                },
                                "author": {
                                  "type": "string",
                                  "description": "The author(s) of the website",
                                  "nullable": true
                                },
                                "publishedAt": {
                                  "type": "string",
                                  "description": "The date and time the website was published",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "title",
                                "author",
                                "publishedAt"
                              ],
                              "title": "WebsetItemCustomPropertiesFields"
                            }
                          },
                          "required": [
                            "type",
                            "url",
                            "description",
                            "content",
                            "custom"
                          ]
                        }
                      ],
                      "description": "The properties of the Item"
                    },
                    "evaluations": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "criterion": {
                            "type": [
                              "string"
                            ],
                            "description": "The description of the criterion"
                          },
                          "reasoning": {
                            "type": [
                              "string"
                            ],
                            "description": "The reasoning for the result of the evaluation"
                          },
                          "satisfied": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "yes",
                              "no",
                              "unclear"
                            ],
                            "description": "The satisfaction of the criterion"
                          },
                          "references": {
                            "default": [],
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the reference",
                                  "nullable": true
                                },
                                "snippet": {
                                  "type": "string",
                                  "description": "The relevant snippet of the reference content",
                                  "nullable": true
                                },
                                "url": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "uri",
                                  "description": "The URL of the reference"
                                }
                              },
                              "required": [
                                "title",
                                "snippet",
                                "url"
                              ]
                            },
                            "description": "The references used to generate the result."
                          }
                        },
                        "required": [
                          "criterion",
                          "reasoning",
                          "satisfied"
                        ]
                      },
                      "description": "The criteria evaluations of the item"
                    },
                    "enrichments": {
                      "type": "array",
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "object": {
                            "type": "string",
                            "const": "enrichment_result",
                            "default": "enrichment_result"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "completed",
                              "canceled"
                            ],
                            "description": "The status of the enrichment result."
                          },
                          "format": {
                            "type": "string",
                            "enum": [
                              "text",
                              "date",
                              "number",
                              "options",
                              "email",
                              "phone",
                              "url"
                            ]
                          },
                          "result": {
                            "type": "array",
                            "items": {
                              "type": [
                                "string"
                              ]
                            },
                            "description": "The result of the enrichment.",
                            "nullable": true
                          },
                          "reasoning": {
                            "type": "string",
                            "description": "The reasoning for the result when an Agent is used.",
                            "nullable": true
                          },
                          "references": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title of the reference",
                                  "nullable": true
                                },
                                "snippet": {
                                  "type": "string",
                                  "description": "The relevant snippet of the reference content",
                                  "nullable": true
                                },
                                "url": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "uri",
                                  "description": "The URL of the reference"
                                }
                              },
                              "required": [
                                "title",
                                "snippet",
                                "url"
                              ]
                            },
                            "description": "The references used to generate the result."
                          },
                          "enrichmentId": {
                            "type": [
                              "string"
                            ],
                            "description": "The id of the Enrichment that generated the result"
                          }
                        },
                        "required": [
                          "object",
                          "status",
                          "format",
                          "result",
                          "reasoning",
                          "references",
                          "enrichmentId"
                        ]
                      },
                      "description": "The enrichments results of the Webset item",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the item was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the item was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "source",
                    "sourceId",
                    "websetId",
                    "properties",
                    "evaluations",
                    "enrichments",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Delete an Item",
        "tags": [
          "Items"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nawait exa.websets.items.delete('webset_id', 'item_id');\n\nconsole.log('Item deleted successfully');"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nexa.websets.items.delete('webset_id', 'item_id')\n\nprint('Item deleted successfully')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{webset}/items": {
      "get": {
        "description": "Returns a list of Webset Items.\n\nYou can paginate through the Items using the `cursor` parameter.",
        "operationId": "websets-items-list",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to paginate through the results",
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "sourceId",
            "required": false,
            "in": "query",
            "description": "The id of the source",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webset Items",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "data": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset Item"
                          },
                          "object": {
                            "type": "string",
                            "const": "webset_item",
                            "default": "webset_item"
                          },
                          "source": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "search",
                              "import"
                            ],
                            "description": "The source of the Item"
                          },
                          "sourceId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the source"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Webset this Item belongs to."
                          },
                          "properties": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  },
                                  "url": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "uri",
                                    "description": "The URL of the person profile"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "Short description of the relevance of the person"
                                  },
                                  "person": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The name of the person"
                                      },
                                      "location": {
                                        "type": "string",
                                        "description": "The location of the person",
                                        "nullable": true
                                      },
                                      "position": {
                                        "type": "string",
                                        "description": "The current work position of the person",
                                        "nullable": true
                                      },
                                      "company": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "The name of the company"
                                          },
                                          "location": {
                                            "type": "string",
                                            "description": "The location the person is working at the company",
                                            "nullable": true
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "location"
                                        ],
                                        "title": "WebsetItemPersonCompanyPropertiesFields",
                                        "nullable": true
                                      },
                                      "pictureUrl": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The image URL of the person",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "location",
                                      "position",
                                      "company",
                                      "pictureUrl"
                                    ],
                                    "title": "WebsetItemPersonPropertiesFields"
                                  }
                                },
                                "required": [
                                  "type",
                                  "url",
                                  "description",
                                  "person"
                                ]
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  },
                                  "url": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "uri",
                                    "description": "The URL of the company website"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "Short description of the relevance of the company"
                                  },
                                  "content": {
                                    "type": "string",
                                    "description": "The text content of the company website",
                                    "nullable": true
                                  },
                                  "company": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The name of the company"
                                      },
                                      "location": {
                                        "type": "string",
                                        "description": "The main location of the company",
                                        "nullable": true
                                      },
                                      "employees": {
                                        "type": "number",
                                        "description": "The number of employees of the company",
                                        "nullable": true
                                      },
                                      "industry": {
                                        "type": "string",
                                        "description": "The industry of the company",
                                        "nullable": true
                                      },
                                      "about": {
                                        "type": "string",
                                        "description": "A short description of the company",
                                        "nullable": true
                                      },
                                      "logoUrl": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "The logo URL of the company",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "location",
                                      "employees",
                                      "industry",
                                      "about",
                                      "logoUrl"
                                    ],
                                    "title": "WebsetItemCompanyPropertiesFields"
                                  }
                                },
                                "required": [
                                  "type",
                                  "url",
                                  "description",
                                  "content",
                                  "company"
                                ]
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  },
                                  "url": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "uri",
                                    "description": "The URL of the article"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "Short description of the relevance of the article"
                                  },
                                  "content": {
                                    "type": "string",
                                    "description": "The text content for the article",
                                    "nullable": true
                                  },
                                  "article": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the article",
                                        "nullable": true
                                      },
                                      "author": {
                                        "type": "string",
                                        "description": "The author(s) of the article",
                                        "nullable": true
                                      },
                                      "publishedAt": {
                                        "type": "string",
                                        "description": "The date and time the article was published",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "title",
                                      "author",
                                      "publishedAt"
                                    ],
                                    "title": "WebsetItemArticlePropertiesFields"
                                  }
                                },
                                "required": [
                                  "type",
                                  "url",
                                  "description",
                                  "content",
                                  "article"
                                ]
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  },
                                  "url": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "uri",
                                    "description": "The URL of the research paper"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "Short description of the relevance of the research paper"
                                  },
                                  "content": {
                                    "type": "string",
                                    "description": "The text content of the research paper",
                                    "nullable": true
                                  },
                                  "researchPaper": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the research paper",
                                        "nullable": true
                                      },
                                      "author": {
                                        "type": "string",
                                        "description": "The author(s) of the research paper",
                                        "nullable": true
                                      },
                                      "publishedAt": {
                                        "type": "string",
                                        "description": "The date and time the research paper was published",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "title",
                                      "author",
                                      "publishedAt"
                                    ],
                                    "title": "WebsetItemResearchPaperPropertiesFields"
                                  }
                                },
                                "required": [
                                  "type",
                                  "url",
                                  "description",
                                  "content",
                                  "researchPaper"
                                ]
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "url": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "uri",
                                    "description": "The URL of the Item"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "Short description of the Item"
                                  },
                                  "content": {
                                    "type": "string",
                                    "description": "The text content of the Item",
                                    "nullable": true
                                  },
                                  "custom": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the website",
                                        "nullable": true
                                      },
                                      "author": {
                                        "type": "string",
                                        "description": "The author(s) of the website",
                                        "nullable": true
                                      },
                                      "publishedAt": {
                                        "type": "string",
                                        "description": "The date and time the website was published",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "title",
                                      "author",
                                      "publishedAt"
                                    ],
                                    "title": "WebsetItemCustomPropertiesFields"
                                  }
                                },
                                "required": [
                                  "type",
                                  "url",
                                  "description",
                                  "content",
                                  "custom"
                                ]
                              }
                            ],
                            "description": "The properties of the Item"
                          },
                          "evaluations": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "criterion": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The description of the criterion"
                                },
                                "reasoning": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The reasoning for the result of the evaluation"
                                },
                                "satisfied": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "yes",
                                    "no",
                                    "unclear"
                                  ],
                                  "description": "The satisfaction of the criterion"
                                },
                                "references": {
                                  "default": [],
                                  "type": [
                                    "array"
                                  ],
                                  "items": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the reference",
                                        "nullable": true
                                      },
                                      "snippet": {
                                        "type": "string",
                                        "description": "The relevant snippet of the reference content",
                                        "nullable": true
                                      },
                                      "url": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "uri",
                                        "description": "The URL of the reference"
                                      }
                                    },
                                    "required": [
                                      "title",
                                      "snippet",
                                      "url"
                                    ]
                                  },
                                  "description": "The references used to generate the result."
                                }
                              },
                              "required": [
                                "criterion",
                                "reasoning",
                                "satisfied"
                              ]
                            },
                            "description": "The criteria evaluations of the item"
                          },
                          "enrichments": {
                            "type": "array",
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "object": {
                                  "type": "string",
                                  "const": "enrichment_result",
                                  "default": "enrichment_result"
                                },
                                "status": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "pending",
                                    "completed",
                                    "canceled"
                                  ],
                                  "description": "The status of the enrichment result."
                                },
                                "format": {
                                  "type": "string",
                                  "enum": [
                                    "text",
                                    "date",
                                    "number",
                                    "options",
                                    "email",
                                    "phone",
                                    "url"
                                  ]
                                },
                                "result": {
                                  "type": "array",
                                  "items": {
                                    "type": [
                                      "string"
                                    ]
                                  },
                                  "description": "The result of the enrichment.",
                                  "nullable": true
                                },
                                "reasoning": {
                                  "type": "string",
                                  "description": "The reasoning for the result when an Agent is used.",
                                  "nullable": true
                                },
                                "references": {
                                  "type": [
                                    "array"
                                  ],
                                  "items": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "title": {
                                        "type": "string",
                                        "description": "The title of the reference",
                                        "nullable": true
                                      },
                                      "snippet": {
                                        "type": "string",
                                        "description": "The relevant snippet of the reference content",
                                        "nullable": true
                                      },
                                      "url": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "uri",
                                        "description": "The URL of the reference"
                                      }
                                    },
                                    "required": [
                                      "title",
                                      "snippet",
                                      "url"
                                    ]
                                  },
                                  "description": "The references used to generate the result."
                                },
                                "enrichmentId": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The id of the Enrichment that generated the result"
                                }
                              },
                              "required": [
                                "object",
                                "status",
                                "format",
                                "result",
                                "reasoning",
                                "references",
                                "enrichmentId"
                              ]
                            },
                            "description": "The enrichments results of the Webset item",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the item was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the item was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "source",
                          "sourceId",
                          "websetId",
                          "properties",
                          "evaluations",
                          "enrichments",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The list of webset items"
                    },
                    "hasMore": {
                      "type": [
                        "boolean"
                      ],
                      "description": "Whether there are more Items to paginate through"
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "The cursor to paginate through the next set of Items",
                      "nullable": true
                    }
                  },
                  "required": [
                    "data",
                    "hasMore",
                    "nextCursor"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "List all Items for a Webset",
        "tags": [
          "Items"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst items = await exa.websets.items.list('webset_id', {\n  limit: 20\n});\n\nconsole.log(`Found ${items.data.length} items`);\nitems.data.forEach(item => {\n  console.log(`- ${item.id}: ${item.properties.name}`);\n});"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nitems = exa.websets.items.list('webset_id', limit=20)\n\nprint(f'Found {len(items.data)} items')\nfor item in items.data:\n    print(f'- {item.id}: {item.properties.name}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{webset}/enrichments": {
      "post": {
        "description": "Create an Enrichment for a Webset.",
        "operationId": "websets-enrichments-create",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "description": {
                    "type": [
                      "string"
                    ],
                    "minLength": 1,
                    "maxLength": 5000,
                    "description": "Provide a description of the enrichment task you want to perform to each Webset Item."
                  },
                  "format": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "text",
                      "date",
                      "number",
                      "options",
                      "email",
                      "phone",
                      "url"
                    ],
                    "description": "Format of the enrichment response.\n\nWe automatically select the best format based on the description. If you want to explicitly specify the format, you can do so here."
                  },
                  "options": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "label": {
                          "type": [
                            "string"
                          ],
                          "description": "The label of the option"
                        }
                      },
                      "required": [
                        "label"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 150,
                    "description": "When the format is options, the different options for the enrichment agent to choose from."
                  },
                  "metadata": {
                    "description": "Set of key-value pairs you want to associate with this object.",
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string"
                      ],
                      "maxLength": 1000
                    }
                  }
                },
                "required": [
                  "description"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enrichment created",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the enrichment"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset_enrichment",
                      "default": "webset_enrichment"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "pending",
                        "canceled",
                        "completed"
                      ],
                      "description": "The status of the enrichment",
                      "title": "WebsetEnrichmentStatus"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset this enrichment belongs to."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                      "nullable": true
                    },
                    "description": {
                      "type": [
                        "string"
                      ],
                      "description": "The description of the enrichment task provided during the creation of the enrichment."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "text",
                        "date",
                        "number",
                        "options",
                        "email",
                        "phone",
                        "url"
                      ]
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "label": {
                            "type": [
                              "string"
                            ],
                            "description": "The label of the option"
                          }
                        },
                        "required": [
                          "label"
                        ]
                      },
                      "description": "When the format is options, the different options for the enrichment agent to choose from.",
                      "title": "WebsetEnrichmentOptions",
                      "nullable": true
                    },
                    "instructions": {
                      "type": "string",
                      "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "The metadata of the enrichment",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the enrichment was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the enrichment was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "websetId",
                    "title",
                    "description",
                    "format",
                    "options",
                    "instructions",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Create an Enrichment",
        "tags": [
          "Enrichments"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst enrichment = await exa.websets.enrichments.create('webset_id', {\n  description: 'Company revenue information',\n  format: 'text'\n});\n\nconsole.log(`Created enrichment: ${enrichment.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nenrichment = exa.websets.enrichments.create('webset_id', params={\n    'description': 'Company revenue information',\n    'format': 'text'\n})\n\nprint(f'Created enrichment: {enrichment.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{webset}/enrichments/{id}": {
      "patch": {
        "description": "Update an Enrichment configuration for a Webset.",
        "operationId": "websets-enrichments-update",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "description": {
                    "type": [
                      "string"
                    ],
                    "minLength": 1,
                    "maxLength": 5000,
                    "description": "Provide a description of the enrichment task you want to perform to each Webset Item."
                  },
                  "format": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "text",
                      "date",
                      "number",
                      "options",
                      "email",
                      "phone",
                      "url"
                    ],
                    "description": "Format of the enrichment response.\n\nWe automatically select the best format based on the description. If you want to explicitly specify the format, you can do so here."
                  },
                  "options": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "label": {
                          "type": [
                            "string"
                          ],
                          "description": "The label of the option"
                        }
                      },
                      "required": [
                        "label"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 150,
                    "description": "When the format is options, the different options for the enrichment agent to choose from."
                  },
                  "metadata": {
                    "description": "Set of key-value pairs you want to associate with this object.",
                    "type": "object",
                    "additionalProperties": {
                      "type": [
                        "string"
                      ],
                      "maxLength": 1000
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Update an Enrichment",
        "tags": [
          "Enrichments"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst enrichment = await exa.websets.enrichments.update('webset_id', 'enrichment_id', {\n  description: 'Updated company revenue and growth metrics',\n  format: 'number'\n});\n\nconsole.log(`Updated enrichment: ${enrichment.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nenrichment = exa.websets.enrichments.update('webset_id', 'enrichment_id', params={\n    'description': 'Updated company revenue and growth metrics',\n    'format': 'number'\n})\n\nprint(f'Updated enrichment: {enrichment.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "get": {
        "operationId": "websets-enrichments-get",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Enrichment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enrichment",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the enrichment"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset_enrichment",
                      "default": "webset_enrichment"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "pending",
                        "canceled",
                        "completed"
                      ],
                      "description": "The status of the enrichment",
                      "title": "WebsetEnrichmentStatus"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset this enrichment belongs to."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                      "nullable": true
                    },
                    "description": {
                      "type": [
                        "string"
                      ],
                      "description": "The description of the enrichment task provided during the creation of the enrichment."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "text",
                        "date",
                        "number",
                        "options",
                        "email",
                        "phone",
                        "url"
                      ]
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "label": {
                            "type": [
                              "string"
                            ],
                            "description": "The label of the option"
                          }
                        },
                        "required": [
                          "label"
                        ]
                      },
                      "description": "When the format is options, the different options for the enrichment agent to choose from.",
                      "title": "WebsetEnrichmentOptions",
                      "nullable": true
                    },
                    "instructions": {
                      "type": "string",
                      "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "The metadata of the enrichment",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the enrichment was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the enrichment was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "websetId",
                    "title",
                    "description",
                    "format",
                    "options",
                    "instructions",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Get an Enrichment",
        "tags": [
          "Enrichments"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst enrichment = await exa.websets.enrichments.get('webset_id', 'enrichment_id');\n\nconsole.log(`Enrichment: ${enrichment.id} - ${enrichment.status}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nenrichment = exa.websets.enrichments.get('webset_id', 'enrichment_id')\n\nprint(f'Enrichment: {enrichment.id} - {enrichment.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "delete": {
        "description": "When deleting an Enrichment, any running enrichments will be canceled and all existing `enrichment_result` generated by this Enrichment will no longer be available.",
        "operationId": "websets-enrichments-delete",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Enrichment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enrichment deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the enrichment"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset_enrichment",
                      "default": "webset_enrichment"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "pending",
                        "canceled",
                        "completed"
                      ],
                      "description": "The status of the enrichment",
                      "title": "WebsetEnrichmentStatus"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset this enrichment belongs to."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                      "nullable": true
                    },
                    "description": {
                      "type": [
                        "string"
                      ],
                      "description": "The description of the enrichment task provided during the creation of the enrichment."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "text",
                        "date",
                        "number",
                        "options",
                        "email",
                        "phone",
                        "url"
                      ]
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "label": {
                            "type": [
                              "string"
                            ],
                            "description": "The label of the option"
                          }
                        },
                        "required": [
                          "label"
                        ]
                      },
                      "description": "When the format is options, the different options for the enrichment agent to choose from.",
                      "title": "WebsetEnrichmentOptions",
                      "nullable": true
                    },
                    "instructions": {
                      "type": "string",
                      "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "The metadata of the enrichment",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the enrichment was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the enrichment was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "websetId",
                    "title",
                    "description",
                    "format",
                    "options",
                    "instructions",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Delete an Enrichment",
        "tags": [
          "Enrichments"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nawait exa.websets.enrichments.delete('webset_id', 'enrichment_id');\n\nconsole.log('Enrichment deleted successfully');"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nexa.websets.enrichments.delete('webset_id', 'enrichment_id')\n\nprint('Enrichment deleted successfully')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{webset}/enrichments/{id}/cancel": {
      "post": {
        "description": "All running enrichments will be canceled. You can not resume an Enrichment after it has been canceled.",
        "operationId": "websets-enrichments-cancel",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id or externalId of the Webset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Enrichment",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enrichment cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the enrichment"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset_enrichment",
                      "default": "webset_enrichment"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "pending",
                        "canceled",
                        "completed"
                      ],
                      "description": "The status of the enrichment",
                      "title": "WebsetEnrichmentStatus"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset this enrichment belongs to."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                      "nullable": true
                    },
                    "description": {
                      "type": [
                        "string"
                      ],
                      "description": "The description of the enrichment task provided during the creation of the enrichment."
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "text",
                        "date",
                        "number",
                        "options",
                        "email",
                        "phone",
                        "url"
                      ]
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "label": {
                            "type": [
                              "string"
                            ],
                            "description": "The label of the option"
                          }
                        },
                        "required": [
                          "label"
                        ]
                      },
                      "description": "When the format is options, the different options for the enrichment agent to choose from.",
                      "title": "WebsetEnrichmentOptions",
                      "nullable": true
                    },
                    "instructions": {
                      "type": "string",
                      "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "The metadata of the enrichment",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the enrichment was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the enrichment was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "websetId",
                    "title",
                    "description",
                    "format",
                    "options",
                    "instructions",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Cancel a running Enrichment",
        "tags": [
          "Enrichments"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst enrichment = await exa.websets.enrichments.cancel('webset_id', 'enrichment_id');\n\nconsole.log(`Cancelled enrichment: ${enrichment.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nenrichment = exa.websets.enrichments.cancel('webset_id', 'enrichment_id')\n\nprint(f'Cancelled enrichment: {enrichment.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/webhooks": {
      "post": {
        "description": "Webhooks let you get notifications when things happen in your Websets. When you create a webhook, you choose which events you want to know about and where to send the notifications.\n\nWhen an event happens, Exa sends an HTTP POST request to your webhook URL with:\n- Event details (type, time, ID)\n- Full data of what triggered the event\n- A signature to verify the request came from Exa\n\nThe webhook starts as `active` and begins getting notifications right away. You'll get a secret key for checking webhook signatures - save this safely as it's only shown once when you create the webhook.",
        "operationId": "webhooks-create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "events": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": "string",
                      "enum": [
                        "webset.created",
                        "webset.deleted",
                        "webset.paused",
                        "webset.idle",
                        "webset.search.created",
                        "webset.search.canceled",
                        "webset.search.completed",
                        "webset.search.updated",
                        "import.created",
                        "import.completed",
                        "webset.item.created",
                        "webset.item.enriched",
                        "monitor.created",
                        "monitor.updated",
                        "monitor.deleted",
                        "monitor.run.created",
                        "monitor.run.completed",
                        "webset.export.created",
                        "webset.export.completed"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 19,
                    "description": "The events to trigger the webhook"
                  },
                  "url": {
                    "type": [
                      "string"
                    ],
                    "format": "uri",
                    "description": "The URL to send the webhook to"
                  },
                  "metadata": {
                    "description": "Set of key-value pairs you want to associate with this object.",
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string"
                      ],
                      "maxLength": 1000
                    }
                  }
                },
                "required": [
                  "events",
                  "url"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the webhook"
                    },
                    "object": {
                      "type": "string",
                      "const": "webhook",
                      "default": "webhook"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "description": "The status of the webhook",
                      "title": "WebhookStatus"
                    },
                    "events": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "webset.created",
                          "webset.deleted",
                          "webset.paused",
                          "webset.idle",
                          "webset.search.created",
                          "webset.search.canceled",
                          "webset.search.completed",
                          "webset.search.updated",
                          "import.created",
                          "import.completed",
                          "webset.item.created",
                          "webset.item.enriched",
                          "monitor.created",
                          "monitor.updated",
                          "monitor.deleted",
                          "monitor.run.created",
                          "monitor.run.completed",
                          "webset.export.created",
                          "webset.export.completed"
                        ]
                      },
                      "minItems": 1,
                      "description": "The events to trigger the webhook"
                    },
                    "url": {
                      "type": [
                        "string"
                      ],
                      "format": "uri",
                      "description": "The URL to send the webhook to"
                    },
                    "secret": {
                      "type": "string",
                      "description": "The secret to verify the webhook signature. Only returned on Webhook creation.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "The metadata of the webhook",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webhook was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webhook was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "events",
                    "url",
                    "secret",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Create a Webhook",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst webhook = await exa.websets.webhooks.create({\n  url: 'https://api.yourapp.com/webhooks/exa',\n  events: ['webset.completed', 'enrichment.completed']\n});\n\nconsole.log(`Created webhook: ${webhook.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nwebhook = exa.websets.webhooks.create(params={\n    'url': 'https://api.yourapp.com/webhooks/exa',\n    'events': ['webset.completed', 'enrichment.completed']\n})\n\nprint(f'Created webhook: {webhook.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "get": {
        "description": "Get a list of all webhooks in your account.\nThe results come in pages. Use `limit` to set how many webhooks to get per page (up to 200). Use `cursor` to get the next page of results.",
        "operationId": "webhooks-list",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to paginate through the results",
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 25,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "data": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the webhook"
                          },
                          "object": {
                            "type": "string",
                            "const": "webhook",
                            "default": "webhook"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "active",
                              "inactive"
                            ],
                            "description": "The status of the webhook",
                            "title": "WebhookStatus"
                          },
                          "events": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": "string",
                              "enum": [
                                "webset.created",
                                "webset.deleted",
                                "webset.paused",
                                "webset.idle",
                                "webset.search.created",
                                "webset.search.canceled",
                                "webset.search.completed",
                                "webset.search.updated",
                                "import.created",
                                "import.completed",
                                "webset.item.created",
                                "webset.item.enriched",
                                "monitor.created",
                                "monitor.updated",
                                "monitor.deleted",
                                "monitor.run.created",
                                "monitor.run.completed",
                                "webset.export.created",
                                "webset.export.completed"
                              ]
                            },
                            "minItems": 1,
                            "description": "The events to trigger the webhook"
                          },
                          "url": {
                            "type": [
                              "string"
                            ],
                            "format": "uri",
                            "description": "The URL to send the webhook to"
                          },
                          "secret": {
                            "type": "string",
                            "description": "The secret to verify the webhook signature. Only returned on Webhook creation.",
                            "nullable": true
                          },
                          "metadata": {
                            "default": {},
                            "description": "The metadata of the webhook",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the webhook was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the webhook was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "events",
                          "url",
                          "secret",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The list of webhooks"
                    },
                    "hasMore": {
                      "type": [
                        "boolean"
                      ],
                      "description": "Whether there are more results to paginate through"
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "The cursor to paginate through the next set of results",
                      "nullable": true
                    }
                  },
                  "required": [
                    "data",
                    "hasMore",
                    "nextCursor"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "List webhooks",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst webhooks = await exa.websets.webhooks.list();\n\nconsole.log(`Found ${webhooks.data.length} webhooks`);\nwebhooks.data.forEach(webhook => {\n  console.log(`- ${webhook.id}: ${webhook.url}`);\n});"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nwebhooks = exa.websets.webhooks.list()\n\nprint(f'Found {len(webhooks.data)} webhooks')\nfor webhook in webhooks.data:\n    print(f'- {webhook.id}: {webhook.url}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/webhooks/{id}": {
      "get": {
        "description": "Get information about a webhook using its ID.\nThe webhook secret is not shown here for security - you only get it when you first create the webhook.",
        "operationId": "webhooks-get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the webhook",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the webhook"
                    },
                    "object": {
                      "type": "string",
                      "const": "webhook",
                      "default": "webhook"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "description": "The status of the webhook",
                      "title": "WebhookStatus"
                    },
                    "events": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "webset.created",
                          "webset.deleted",
                          "webset.paused",
                          "webset.idle",
                          "webset.search.created",
                          "webset.search.canceled",
                          "webset.search.completed",
                          "webset.search.updated",
                          "import.created",
                          "import.completed",
                          "webset.item.created",
                          "webset.item.enriched",
                          "monitor.created",
                          "monitor.updated",
                          "monitor.deleted",
                          "monitor.run.created",
                          "monitor.run.completed",
                          "webset.export.created",
                          "webset.export.completed"
                        ]
                      },
                      "minItems": 1,
                      "description": "The events to trigger the webhook"
                    },
                    "url": {
                      "type": [
                        "string"
                      ],
                      "format": "uri",
                      "description": "The URL to send the webhook to"
                    },
                    "secret": {
                      "type": "string",
                      "description": "The secret to verify the webhook signature. Only returned on Webhook creation.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "The metadata of the webhook",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webhook was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webhook was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "events",
                    "url",
                    "secret",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          },
          "404": {
            "description": "Webhook not found",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Get a Webhook",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst webhook = await exa.websets.webhooks.get('webhook_id');\n\nconsole.log(`Webhook: ${webhook.id} - ${webhook.url}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nwebhook = exa.websets.webhooks.get('webhook_id')\n\nprint(f'Webhook: {webhook.id} - {webhook.url}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "patch": {
        "description": "Change a webhook's settings. You can update:\n- Events: Add or remove which events you want to hear about - URL: Change where notifications are sent - Metadata: Update custom data linked to the webhook\n\nChanges happen right away. If you change the events list, the webhook will start or stop getting notifications for those events immediately.\n\nThe webhook keeps its current status (`active` or `inactive`) when you update it.",
        "operationId": "webhooks-update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the webhook",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "events": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": "string",
                      "enum": [
                        "webset.created",
                        "webset.deleted",
                        "webset.paused",
                        "webset.idle",
                        "webset.search.created",
                        "webset.search.canceled",
                        "webset.search.completed",
                        "webset.search.updated",
                        "import.created",
                        "import.completed",
                        "webset.item.created",
                        "webset.item.enriched",
                        "monitor.created",
                        "monitor.updated",
                        "monitor.deleted",
                        "monitor.run.created",
                        "monitor.run.completed",
                        "webset.export.created",
                        "webset.export.completed"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 19,
                    "description": "The events to trigger the webhook"
                  },
                  "url": {
                    "type": [
                      "string"
                    ],
                    "format": "uri",
                    "description": "The URL to send the webhook to"
                  },
                  "metadata": {
                    "description": "Set of key-value pairs you want to associate with this object.",
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string"
                      ],
                      "maxLength": 1000
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the webhook"
                    },
                    "object": {
                      "type": "string",
                      "const": "webhook",
                      "default": "webhook"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "description": "The status of the webhook",
                      "title": "WebhookStatus"
                    },
                    "events": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "webset.created",
                          "webset.deleted",
                          "webset.paused",
                          "webset.idle",
                          "webset.search.created",
                          "webset.search.canceled",
                          "webset.search.completed",
                          "webset.search.updated",
                          "import.created",
                          "import.completed",
                          "webset.item.created",
                          "webset.item.enriched",
                          "monitor.created",
                          "monitor.updated",
                          "monitor.deleted",
                          "monitor.run.created",
                          "monitor.run.completed",
                          "webset.export.created",
                          "webset.export.completed"
                        ]
                      },
                      "minItems": 1,
                      "description": "The events to trigger the webhook"
                    },
                    "url": {
                      "type": [
                        "string"
                      ],
                      "format": "uri",
                      "description": "The URL to send the webhook to"
                    },
                    "secret": {
                      "type": "string",
                      "description": "The secret to verify the webhook signature. Only returned on Webhook creation.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "The metadata of the webhook",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webhook was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webhook was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "events",
                    "url",
                    "secret",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          },
          "404": {
            "description": "Webhook not found",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Update a Webhook",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst webhook = await exa.websets.webhooks.update('webhook_id', {\n  url: 'https://api.yourapp.com/webhooks/exa-updated',\n  events: ['webset.completed']\n});\n\nconsole.log(`Updated webhook: ${webhook.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nwebhook = exa.websets.webhooks.update('webhook_id', params={\n    'url': 'https://api.yourapp.com/webhooks/exa-updated',\n    'events': ['webset.completed']\n})\n\nprint(f'Updated webhook: {webhook.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "delete": {
        "description": "Remove a webhook from your account. Once deleted, the webhook stops getting notifications right away and cannot be brought back.\n\nImportant notes: - The webhook stops working as soon as you delete it - You cannot undo this - you'll need to create a new webhook if you want it back - Any notifications currently being sent may still complete",
        "operationId": "webhooks-delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the webhook",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the webhook"
                    },
                    "object": {
                      "type": "string",
                      "const": "webhook",
                      "default": "webhook"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "description": "The status of the webhook",
                      "title": "WebhookStatus"
                    },
                    "events": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": "string",
                        "enum": [
                          "webset.created",
                          "webset.deleted",
                          "webset.paused",
                          "webset.idle",
                          "webset.search.created",
                          "webset.search.canceled",
                          "webset.search.completed",
                          "webset.search.updated",
                          "import.created",
                          "import.completed",
                          "webset.item.created",
                          "webset.item.enriched",
                          "monitor.created",
                          "monitor.updated",
                          "monitor.deleted",
                          "monitor.run.created",
                          "monitor.run.completed",
                          "webset.export.created",
                          "webset.export.completed"
                        ]
                      },
                      "minItems": 1,
                      "description": "The events to trigger the webhook"
                    },
                    "url": {
                      "type": [
                        "string"
                      ],
                      "format": "uri",
                      "description": "The URL to send the webhook to"
                    },
                    "secret": {
                      "type": "string",
                      "description": "The secret to verify the webhook signature. Only returned on Webhook creation.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "The metadata of the webhook",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webhook was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the webhook was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "events",
                    "url",
                    "secret",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          },
          "404": {
            "description": "Webhook not found",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Delete a Webhook",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nawait exa.websets.webhooks.delete('webhook_id');\n\nconsole.log('Webhook deleted successfully');"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nexa.websets.webhooks.delete('webhook_id')\n\nprint('Webhook deleted successfully')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/webhooks/{id}/attempts": {
      "get": {
        "description": "List all attempts made by a Webhook ordered in descending order.",
        "operationId": "webhooks-attempts-list",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the webhook",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to paginate through the results",
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 25,
              "type": "number"
            }
          },
          {
            "name": "eventType",
            "required": false,
            "in": "query",
            "description": "The type of event to filter by",
            "schema": {
              "type": "string",
              "enum": [
                "webset.created",
                "webset.deleted",
                "webset.paused",
                "webset.idle",
                "webset.search.created",
                "webset.search.canceled",
                "webset.search.completed",
                "webset.search.updated",
                "import.created",
                "import.completed",
                "webset.item.created",
                "webset.item.enriched",
                "monitor.created",
                "monitor.updated",
                "monitor.deleted",
                "monitor.run.created",
                "monitor.run.completed",
                "webset.export.created",
                "webset.export.completed"
              ]
            }
          },
          {
            "name": "successful",
            "required": false,
            "in": "query",
            "description": "Filter attempts by their success status",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of webhook attempts",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "data": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the webhook attempt"
                          },
                          "object": {
                            "type": "string",
                            "const": "webhook_attempt",
                            "default": "webhook_attempt"
                          },
                          "eventId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the event"
                          },
                          "eventType": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "webset.created",
                              "webset.deleted",
                              "webset.paused",
                              "webset.idle",
                              "webset.search.created",
                              "webset.search.canceled",
                              "webset.search.completed",
                              "webset.search.updated",
                              "import.created",
                              "import.completed",
                              "webset.item.created",
                              "webset.item.enriched",
                              "monitor.created",
                              "monitor.updated",
                              "monitor.deleted",
                              "monitor.run.created",
                              "monitor.run.completed",
                              "webset.export.created",
                              "webset.export.completed"
                            ],
                            "description": "The type of event"
                          },
                          "webhookId": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the webhook"
                          },
                          "url": {
                            "type": [
                              "string"
                            ],
                            "description": "The URL that was used during the attempt"
                          },
                          "successful": {
                            "description": "Whether the attempt was successful",
                            "type": [
                              "boolean"
                            ]
                          },
                          "responseHeaders": {
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ]
                            },
                            "description": "The headers of the response"
                          },
                          "responseBody": {
                            "type": "string",
                            "description": "The body of the response",
                            "nullable": true
                          },
                          "responseStatusCode": {
                            "type": [
                              "number"
                            ],
                            "description": "The status code of the response"
                          },
                          "attempt": {
                            "type": [
                              "number"
                            ],
                            "description": "The attempt number of the webhook"
                          },
                          "attemptedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "The date and time the webhook attempt was made"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "eventId",
                          "eventType",
                          "webhookId",
                          "url",
                          "successful",
                          "responseHeaders",
                          "responseBody",
                          "responseStatusCode",
                          "attempt",
                          "attemptedAt"
                        ]
                      },
                      "description": "The list of webhook attempts"
                    },
                    "hasMore": {
                      "type": [
                        "boolean"
                      ],
                      "description": "Whether there are more results to paginate through"
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "The cursor to paginate through the next set of results",
                      "nullable": true
                    }
                  },
                  "required": [
                    "data",
                    "hasMore",
                    "nextCursor"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "List webhook attempts",
        "tags": [
          "Webhooks Attempts"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst attempts = await exa.websets.webhooks.listAttempts('webhook_id', {\n  limit: 20\n});\n\nconsole.log(`Found ${attempts.data.length} webhook attempts`);\nattempts.data.forEach(attempt => {\n  console.log(`- ${attempt.id}: ${attempt.status}`);\n});"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nattempts = exa.websets.webhooks.attempts.list('webhook_id')\n\nprint(f'Found {len(attempts.data)} webhook attempts')\nfor attempt in attempts.data:\n    print(f'- {attempt.id}: {attempt.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/events": {
      "get": {
        "description": "List all events that have occurred in the system.\n\nYou can paginate through the results using the `cursor` parameter.",
        "operationId": "events-list",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to paginate through the results",
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 25,
              "type": "number"
            }
          },
          {
            "name": "types",
            "required": false,
            "in": "query",
            "description": "The types of events to filter by",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "webset.created",
                  "webset.deleted",
                  "webset.paused",
                  "webset.idle",
                  "webset.search.created",
                  "webset.search.canceled",
                  "webset.search.completed",
                  "webset.search.updated",
                  "import.created",
                  "import.completed",
                  "webset.item.created",
                  "webset.item.enriched",
                  "monitor.created",
                  "monitor.updated",
                  "monitor.deleted",
                  "monitor.run.created",
                  "monitor.run.completed",
                  "webset.export.created",
                  "webset.export.completed"
                ]
              }
            }
          },
          {
            "name": "createdBefore",
            "required": false,
            "in": "query",
            "description": "Filter events created before or at this timestamp (inclusive). Must be a valid ISO 8601 datetime string. All times are in UTC.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "required": false,
            "in": "query",
            "description": "Filter events created after or at this timestamp (inclusive). Must be a valid ISO 8601 datetime string. All times are in UTC.",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "data": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "discriminator": {
                          "propertyName": "type"
                        },
                        "oneOf": [
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.created",
                                "default": "webset.created"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the webset"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset",
                                    "default": "webset"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "idle",
                                      "pending",
                                      "running",
                                      "paused"
                                    ],
                                    "description": "The status of the webset",
                                    "title": "WebsetStatus"
                                  },
                                  "externalId": {
                                    "type": "string",
                                    "description": "The external identifier for the webset",
                                    "nullable": true
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the webset",
                                    "nullable": true
                                  },
                                  "searches": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the search"
                                        },
                                        "object": {
                                          "type": "string",
                                          "const": "webset_search",
                                          "default": "webset_search"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "created",
                                            "pending",
                                            "running",
                                            "completed",
                                            "canceled"
                                          ],
                                          "description": "The status of the search",
                                          "title": "WebsetSearchStatus"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Webset this search belongs to"
                                        },
                                        "query": {
                                          "description": "The query used to create the search.",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 5000
                                        },
                                        "entity": {
                                          "oneOf": [
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "company",
                                                  "default": "company"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Company"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "person",
                                                  "default": "person"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Person"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "article",
                                                  "default": "article"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Article"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "research_paper",
                                                  "default": "research_paper"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Research Paper"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "custom",
                                                  "default": "custom"
                                                },
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 200
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "description"
                                              ],
                                              "title": "Custom"
                                            }
                                          ]
                                        },
                                        "criteria": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "description": {
                                                "description": "The description of the criterion",
                                                "type": [
                                                  "string"
                                                ],
                                                "minLength": 1,
                                                "maxLength": 1000
                                              },
                                              "successRate": {
                                                "type": [
                                                  "number"
                                                ],
                                                "minimum": 0,
                                                "maximum": 100,
                                                "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                              }
                                            },
                                            "required": [
                                              "description",
                                              "successRate"
                                            ]
                                          },
                                          "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                        },
                                        "count": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 1,
                                          "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                        },
                                        "behavior": {
                                          "type": "string",
                                          "enum": [
                                            "override",
                                            "append"
                                          ]
                                        },
                                        "exclude": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "import",
                                                  "webset"
                                                ]
                                              },
                                              "id": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "source",
                                              "id"
                                            ]
                                          },
                                          "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                        },
                                        "scope": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "import",
                                                  "webset"
                                                ]
                                              },
                                              "id": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "relationship": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "definition": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                                  },
                                                  "limit": {
                                                    "type": [
                                                      "number"
                                                    ],
                                                    "minimum": 1,
                                                    "maximum": 10
                                                  }
                                                },
                                                "required": [
                                                  "definition",
                                                  "limit"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "source",
                                              "id"
                                            ]
                                          },
                                          "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                        },
                                        "progress": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "found": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The number of results found so far"
                                            },
                                            "analyzed": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The number of results analyzed so far"
                                            },
                                            "completion": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 0,
                                              "maximum": 100,
                                              "description": "The completion percentage of the search"
                                            },
                                            "timeLeft": {
                                              "type": "number",
                                              "description": "The estimated time remaining in seconds, null if unknown",
                                              "nullable": true
                                            }
                                          },
                                          "required": [
                                            "found",
                                            "analyzed",
                                            "completion",
                                            "timeLeft"
                                          ],
                                          "description": "The progress of the search"
                                        },
                                        "recall": {
                                          "type": "object",
                                          "properties": {
                                            "expected": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "total": {
                                                  "type": [
                                                    "number"
                                                  ],
                                                  "description": "The estimated total number of potential matches"
                                                },
                                                "confidence": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "high",
                                                    "medium",
                                                    "low"
                                                  ],
                                                  "description": "The confidence in the estimate"
                                                },
                                                "bounds": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "min": {
                                                      "type": [
                                                        "number"
                                                      ],
                                                      "description": "The minimum estimated total number of potential matches"
                                                    },
                                                    "max": {
                                                      "type": [
                                                        "number"
                                                      ],
                                                      "description": "The maximum estimated total number of potential matches"
                                                    }
                                                  },
                                                  "required": [
                                                    "min",
                                                    "max"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "total",
                                                "confidence",
                                                "bounds"
                                              ]
                                            },
                                            "reasoning": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The reasoning for the estimate"
                                            }
                                          },
                                          "required": [
                                            "expected",
                                            "reasoning"
                                          ],
                                          "description": "Recall metrics for the search, null if not yet computed or requested.",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "default": {},
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "canceledAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The date and time the search was canceled",
                                          "nullable": true
                                        },
                                        "canceledReason": {
                                          "type": "string",
                                          "enum": [
                                            "webset_deleted",
                                            "webset_canceled"
                                          ]
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the search was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the search was updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "websetId",
                                        "status",
                                        "query",
                                        "entity",
                                        "criteria",
                                        "count",
                                        "exclude",
                                        "scope",
                                        "progress",
                                        "recall",
                                        "canceledAt",
                                        "canceledReason",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The searches that have been performed on the webset."
                                  },
                                  "imports": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Import"
                                        },
                                        "object": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import"
                                          ],
                                          "description": "The type of object"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "processing",
                                            "completed",
                                            "failed"
                                          ],
                                          "description": "The status of the Import"
                                        },
                                        "format": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "csv",
                                            "webset"
                                          ],
                                          "description": "The format of the import."
                                        },
                                        "entity": {
                                          "oneOf": [
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "company",
                                                  "default": "company"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Company"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "person",
                                                  "default": "person"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Person"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "article",
                                                  "default": "article"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Article"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "research_paper",
                                                  "default": "research_paper"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Research Paper"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "custom",
                                                  "default": "custom"
                                                },
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 200
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "description"
                                              ],
                                              "title": "Custom"
                                            }
                                          ]
                                        },
                                        "title": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The title of the import"
                                        },
                                        "count": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The number of entities in the import"
                                        },
                                        "metadata": {
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "failedReason": {
                                          "type": "string",
                                          "enum": [
                                            "invalid_format",
                                            "invalid_file_content",
                                            "missing_identifier"
                                          ],
                                          "description": "The reason the import failed",
                                          "nullable": true
                                        },
                                        "failedAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "When the import failed",
                                          "nullable": true
                                        },
                                        "failedMessage": {
                                          "type": "string",
                                          "description": "A human readable message of the import failure",
                                          "nullable": true
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the import was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the import was last updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "format",
                                        "entity",
                                        "title",
                                        "count",
                                        "metadata",
                                        "failedReason",
                                        "failedAt",
                                        "failedMessage",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "Imports that have been performed on the webset."
                                  },
                                  "enrichments": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the enrichment"
                                        },
                                        "object": {
                                          "type": "string",
                                          "const": "webset_enrichment",
                                          "default": "webset_enrichment"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "canceled",
                                            "completed"
                                          ],
                                          "description": "The status of the enrichment",
                                          "title": "WebsetEnrichmentStatus"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Webset this enrichment belongs to."
                                        },
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                          "nullable": true
                                        },
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The description of the enrichment task provided during the creation of the enrichment."
                                        },
                                        "format": {
                                          "type": "string",
                                          "enum": [
                                            "text",
                                            "date",
                                            "number",
                                            "options",
                                            "email",
                                            "phone",
                                            "url"
                                          ]
                                        },
                                        "options": {
                                          "type": "array",
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "label": {
                                                "type": [
                                                  "string"
                                                ],
                                                "description": "The label of the option"
                                              }
                                            },
                                            "required": [
                                              "label"
                                            ]
                                          },
                                          "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                          "title": "WebsetEnrichmentOptions",
                                          "nullable": true
                                        },
                                        "instructions": {
                                          "type": "string",
                                          "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "default": {},
                                          "description": "The metadata of the enrichment",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the enrichment was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the enrichment was updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "websetId",
                                        "title",
                                        "description",
                                        "format",
                                        "options",
                                        "instructions",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The Enrichments to apply to the Webset Items."
                                  },
                                  "monitors": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Monitor"
                                        },
                                        "object": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "monitor"
                                          ],
                                          "description": "The type of object"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "enabled",
                                            "disabled"
                                          ],
                                          "description": "The status of the Monitor"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The id of the Webset the Monitor belongs to"
                                        },
                                        "cadence": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "cron": {
                                              "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "timezone": {
                                              "description": "IANA timezone (e.g., \"America/New_York\")",
                                              "default": "Etc/UTC",
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "cron"
                                          ],
                                          "description": "How often the monitor will run"
                                        },
                                        "behavior": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "search",
                                              "default": "search"
                                            },
                                            "config": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "query": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 10000,
                                                  "description": "The query to search for. By default, the query from the last search is used."
                                                },
                                                "criteria": {
                                                  "type": [
                                                    "array"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "object"
                                                    ],
                                                    "properties": {
                                                      "description": {
                                                        "type": [
                                                          "string"
                                                        ],
                                                        "minLength": 2,
                                                        "maxLength": 1000
                                                      }
                                                    },
                                                    "required": [
                                                      "description"
                                                    ]
                                                  },
                                                  "maxItems": 5,
                                                  "description": "The criteria to search for. By default, the criteria from the last search is used."
                                                },
                                                "entity": {
                                                  "oneOf": [
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "company",
                                                          "default": "company"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Company"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "person",
                                                          "default": "person"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Person"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "article",
                                                          "default": "article"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Article"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "research_paper",
                                                          "default": "research_paper"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Research Paper"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "custom",
                                                          "default": "custom"
                                                        },
                                                        "description": {
                                                          "type": [
                                                            "string"
                                                          ],
                                                          "minLength": 2,
                                                          "maxLength": 200
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "description"
                                                      ],
                                                      "title": "Custom"
                                                    }
                                                  ]
                                                },
                                                "count": {
                                                  "type": [
                                                    "number"
                                                  ],
                                                  "exclusiveMinimum": 0,
                                                  "description": "The maximum number of results to find"
                                                },
                                                "behavior": {
                                                  "default": "append",
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "override",
                                                    "append"
                                                  ],
                                                  "description": "The behaviour of the Search when it is added to a Webset."
                                                }
                                              },
                                              "required": [
                                                "count"
                                              ],
                                              "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "config"
                                          ],
                                          "description": "Behavior to perform when monitor runs"
                                        },
                                        "lastRun": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The unique identifier for the Monitor Run"
                                            },
                                            "object": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "monitor_run"
                                              ],
                                              "description": "The type of object"
                                            },
                                            "status": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "created",
                                                "running",
                                                "completed",
                                                "canceled",
                                                "failed"
                                              ],
                                              "description": "The status of the Monitor Run"
                                            },
                                            "monitorId": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The monitor that the run is associated with"
                                            },
                                            "type": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "search",
                                                "refresh"
                                              ],
                                              "description": "The type of the Monitor Run"
                                            },
                                            "completedAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run completed",
                                              "nullable": true
                                            },
                                            "failedAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run failed",
                                              "nullable": true
                                            },
                                            "failedReason": {
                                              "type": "string",
                                              "description": "The reason the run failed",
                                              "nullable": true
                                            },
                                            "canceledAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run was canceled",
                                              "nullable": true
                                            },
                                            "createdAt": {
                                              "type": [
                                                "string"
                                              ],
                                              "format": "date-time",
                                              "description": "When the run was created"
                                            },
                                            "updatedAt": {
                                              "type": [
                                                "string"
                                              ],
                                              "format": "date-time",
                                              "description": "When the run was last updated"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "object",
                                            "monitorId",
                                            "status",
                                            "type",
                                            "completedAt",
                                            "failedAt",
                                            "failedReason",
                                            "canceledAt",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        },
                                        "nextRunAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "Date and time when the next run will occur in",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the monitor was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the monitor was last updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "websetId",
                                        "cadence",
                                        "behavior",
                                        "lastRun",
                                        "nextRunAt",
                                        "metadata",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The Monitors for the Webset."
                                  },
                                  "streams": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {},
                                    "description": "The Streams for the Webset."
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the webset was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the webset was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "externalId",
                                  "title",
                                  "searches",
                                  "imports",
                                  "enrichments",
                                  "monitors",
                                  "streams",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetCreatedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.deleted",
                                "default": "webset.deleted"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the webset"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset",
                                    "default": "webset"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "idle",
                                      "pending",
                                      "running",
                                      "paused"
                                    ],
                                    "description": "The status of the webset",
                                    "title": "WebsetStatus"
                                  },
                                  "externalId": {
                                    "type": "string",
                                    "description": "The external identifier for the webset",
                                    "nullable": true
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the webset",
                                    "nullable": true
                                  },
                                  "searches": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the search"
                                        },
                                        "object": {
                                          "type": "string",
                                          "const": "webset_search",
                                          "default": "webset_search"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "created",
                                            "pending",
                                            "running",
                                            "completed",
                                            "canceled"
                                          ],
                                          "description": "The status of the search",
                                          "title": "WebsetSearchStatus"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Webset this search belongs to"
                                        },
                                        "query": {
                                          "description": "The query used to create the search.",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 5000
                                        },
                                        "entity": {
                                          "oneOf": [
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "company",
                                                  "default": "company"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Company"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "person",
                                                  "default": "person"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Person"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "article",
                                                  "default": "article"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Article"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "research_paper",
                                                  "default": "research_paper"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Research Paper"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "custom",
                                                  "default": "custom"
                                                },
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 200
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "description"
                                              ],
                                              "title": "Custom"
                                            }
                                          ]
                                        },
                                        "criteria": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "description": {
                                                "description": "The description of the criterion",
                                                "type": [
                                                  "string"
                                                ],
                                                "minLength": 1,
                                                "maxLength": 1000
                                              },
                                              "successRate": {
                                                "type": [
                                                  "number"
                                                ],
                                                "minimum": 0,
                                                "maximum": 100,
                                                "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                              }
                                            },
                                            "required": [
                                              "description",
                                              "successRate"
                                            ]
                                          },
                                          "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                        },
                                        "count": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 1,
                                          "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                        },
                                        "behavior": {
                                          "type": "string",
                                          "enum": [
                                            "override",
                                            "append"
                                          ]
                                        },
                                        "exclude": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "import",
                                                  "webset"
                                                ]
                                              },
                                              "id": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "source",
                                              "id"
                                            ]
                                          },
                                          "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                        },
                                        "scope": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "import",
                                                  "webset"
                                                ]
                                              },
                                              "id": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "relationship": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "definition": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                                  },
                                                  "limit": {
                                                    "type": [
                                                      "number"
                                                    ],
                                                    "minimum": 1,
                                                    "maximum": 10
                                                  }
                                                },
                                                "required": [
                                                  "definition",
                                                  "limit"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "source",
                                              "id"
                                            ]
                                          },
                                          "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                        },
                                        "progress": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "found": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The number of results found so far"
                                            },
                                            "analyzed": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The number of results analyzed so far"
                                            },
                                            "completion": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 0,
                                              "maximum": 100,
                                              "description": "The completion percentage of the search"
                                            },
                                            "timeLeft": {
                                              "type": "number",
                                              "description": "The estimated time remaining in seconds, null if unknown",
                                              "nullable": true
                                            }
                                          },
                                          "required": [
                                            "found",
                                            "analyzed",
                                            "completion",
                                            "timeLeft"
                                          ],
                                          "description": "The progress of the search"
                                        },
                                        "recall": {
                                          "type": "object",
                                          "properties": {
                                            "expected": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "total": {
                                                  "type": [
                                                    "number"
                                                  ],
                                                  "description": "The estimated total number of potential matches"
                                                },
                                                "confidence": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "high",
                                                    "medium",
                                                    "low"
                                                  ],
                                                  "description": "The confidence in the estimate"
                                                },
                                                "bounds": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "min": {
                                                      "type": [
                                                        "number"
                                                      ],
                                                      "description": "The minimum estimated total number of potential matches"
                                                    },
                                                    "max": {
                                                      "type": [
                                                        "number"
                                                      ],
                                                      "description": "The maximum estimated total number of potential matches"
                                                    }
                                                  },
                                                  "required": [
                                                    "min",
                                                    "max"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "total",
                                                "confidence",
                                                "bounds"
                                              ]
                                            },
                                            "reasoning": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The reasoning for the estimate"
                                            }
                                          },
                                          "required": [
                                            "expected",
                                            "reasoning"
                                          ],
                                          "description": "Recall metrics for the search, null if not yet computed or requested.",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "default": {},
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "canceledAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The date and time the search was canceled",
                                          "nullable": true
                                        },
                                        "canceledReason": {
                                          "type": "string",
                                          "enum": [
                                            "webset_deleted",
                                            "webset_canceled"
                                          ]
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the search was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the search was updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "websetId",
                                        "status",
                                        "query",
                                        "entity",
                                        "criteria",
                                        "count",
                                        "exclude",
                                        "scope",
                                        "progress",
                                        "recall",
                                        "canceledAt",
                                        "canceledReason",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The searches that have been performed on the webset."
                                  },
                                  "imports": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Import"
                                        },
                                        "object": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import"
                                          ],
                                          "description": "The type of object"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "processing",
                                            "completed",
                                            "failed"
                                          ],
                                          "description": "The status of the Import"
                                        },
                                        "format": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "csv",
                                            "webset"
                                          ],
                                          "description": "The format of the import."
                                        },
                                        "entity": {
                                          "oneOf": [
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "company",
                                                  "default": "company"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Company"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "person",
                                                  "default": "person"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Person"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "article",
                                                  "default": "article"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Article"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "research_paper",
                                                  "default": "research_paper"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Research Paper"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "custom",
                                                  "default": "custom"
                                                },
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 200
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "description"
                                              ],
                                              "title": "Custom"
                                            }
                                          ]
                                        },
                                        "title": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The title of the import"
                                        },
                                        "count": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The number of entities in the import"
                                        },
                                        "metadata": {
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "failedReason": {
                                          "type": "string",
                                          "enum": [
                                            "invalid_format",
                                            "invalid_file_content",
                                            "missing_identifier"
                                          ],
                                          "description": "The reason the import failed",
                                          "nullable": true
                                        },
                                        "failedAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "When the import failed",
                                          "nullable": true
                                        },
                                        "failedMessage": {
                                          "type": "string",
                                          "description": "A human readable message of the import failure",
                                          "nullable": true
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the import was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the import was last updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "format",
                                        "entity",
                                        "title",
                                        "count",
                                        "metadata",
                                        "failedReason",
                                        "failedAt",
                                        "failedMessage",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "Imports that have been performed on the webset."
                                  },
                                  "enrichments": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the enrichment"
                                        },
                                        "object": {
                                          "type": "string",
                                          "const": "webset_enrichment",
                                          "default": "webset_enrichment"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "canceled",
                                            "completed"
                                          ],
                                          "description": "The status of the enrichment",
                                          "title": "WebsetEnrichmentStatus"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Webset this enrichment belongs to."
                                        },
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                          "nullable": true
                                        },
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The description of the enrichment task provided during the creation of the enrichment."
                                        },
                                        "format": {
                                          "type": "string",
                                          "enum": [
                                            "text",
                                            "date",
                                            "number",
                                            "options",
                                            "email",
                                            "phone",
                                            "url"
                                          ]
                                        },
                                        "options": {
                                          "type": "array",
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "label": {
                                                "type": [
                                                  "string"
                                                ],
                                                "description": "The label of the option"
                                              }
                                            },
                                            "required": [
                                              "label"
                                            ]
                                          },
                                          "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                          "title": "WebsetEnrichmentOptions",
                                          "nullable": true
                                        },
                                        "instructions": {
                                          "type": "string",
                                          "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "default": {},
                                          "description": "The metadata of the enrichment",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the enrichment was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the enrichment was updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "websetId",
                                        "title",
                                        "description",
                                        "format",
                                        "options",
                                        "instructions",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The Enrichments to apply to the Webset Items."
                                  },
                                  "monitors": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Monitor"
                                        },
                                        "object": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "monitor"
                                          ],
                                          "description": "The type of object"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "enabled",
                                            "disabled"
                                          ],
                                          "description": "The status of the Monitor"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The id of the Webset the Monitor belongs to"
                                        },
                                        "cadence": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "cron": {
                                              "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "timezone": {
                                              "description": "IANA timezone (e.g., \"America/New_York\")",
                                              "default": "Etc/UTC",
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "cron"
                                          ],
                                          "description": "How often the monitor will run"
                                        },
                                        "behavior": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "search",
                                              "default": "search"
                                            },
                                            "config": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "query": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 10000,
                                                  "description": "The query to search for. By default, the query from the last search is used."
                                                },
                                                "criteria": {
                                                  "type": [
                                                    "array"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "object"
                                                    ],
                                                    "properties": {
                                                      "description": {
                                                        "type": [
                                                          "string"
                                                        ],
                                                        "minLength": 2,
                                                        "maxLength": 1000
                                                      }
                                                    },
                                                    "required": [
                                                      "description"
                                                    ]
                                                  },
                                                  "maxItems": 5,
                                                  "description": "The criteria to search for. By default, the criteria from the last search is used."
                                                },
                                                "entity": {
                                                  "oneOf": [
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "company",
                                                          "default": "company"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Company"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "person",
                                                          "default": "person"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Person"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "article",
                                                          "default": "article"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Article"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "research_paper",
                                                          "default": "research_paper"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Research Paper"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "custom",
                                                          "default": "custom"
                                                        },
                                                        "description": {
                                                          "type": [
                                                            "string"
                                                          ],
                                                          "minLength": 2,
                                                          "maxLength": 200
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "description"
                                                      ],
                                                      "title": "Custom"
                                                    }
                                                  ]
                                                },
                                                "count": {
                                                  "type": [
                                                    "number"
                                                  ],
                                                  "exclusiveMinimum": 0,
                                                  "description": "The maximum number of results to find"
                                                },
                                                "behavior": {
                                                  "default": "append",
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "override",
                                                    "append"
                                                  ],
                                                  "description": "The behaviour of the Search when it is added to a Webset."
                                                }
                                              },
                                              "required": [
                                                "count"
                                              ],
                                              "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "config"
                                          ],
                                          "description": "Behavior to perform when monitor runs"
                                        },
                                        "lastRun": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The unique identifier for the Monitor Run"
                                            },
                                            "object": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "monitor_run"
                                              ],
                                              "description": "The type of object"
                                            },
                                            "status": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "created",
                                                "running",
                                                "completed",
                                                "canceled",
                                                "failed"
                                              ],
                                              "description": "The status of the Monitor Run"
                                            },
                                            "monitorId": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The monitor that the run is associated with"
                                            },
                                            "type": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "search",
                                                "refresh"
                                              ],
                                              "description": "The type of the Monitor Run"
                                            },
                                            "completedAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run completed",
                                              "nullable": true
                                            },
                                            "failedAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run failed",
                                              "nullable": true
                                            },
                                            "failedReason": {
                                              "type": "string",
                                              "description": "The reason the run failed",
                                              "nullable": true
                                            },
                                            "canceledAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run was canceled",
                                              "nullable": true
                                            },
                                            "createdAt": {
                                              "type": [
                                                "string"
                                              ],
                                              "format": "date-time",
                                              "description": "When the run was created"
                                            },
                                            "updatedAt": {
                                              "type": [
                                                "string"
                                              ],
                                              "format": "date-time",
                                              "description": "When the run was last updated"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "object",
                                            "monitorId",
                                            "status",
                                            "type",
                                            "completedAt",
                                            "failedAt",
                                            "failedReason",
                                            "canceledAt",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        },
                                        "nextRunAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "Date and time when the next run will occur in",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the monitor was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the monitor was last updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "websetId",
                                        "cadence",
                                        "behavior",
                                        "lastRun",
                                        "nextRunAt",
                                        "metadata",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The Monitors for the Webset."
                                  },
                                  "streams": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {},
                                    "description": "The Streams for the Webset."
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the webset was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the webset was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "externalId",
                                  "title",
                                  "searches",
                                  "imports",
                                  "enrichments",
                                  "monitors",
                                  "streams",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetDeletedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.idle",
                                "default": "webset.idle"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the webset"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset",
                                    "default": "webset"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "idle",
                                      "pending",
                                      "running",
                                      "paused"
                                    ],
                                    "description": "The status of the webset",
                                    "title": "WebsetStatus"
                                  },
                                  "externalId": {
                                    "type": "string",
                                    "description": "The external identifier for the webset",
                                    "nullable": true
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the webset",
                                    "nullable": true
                                  },
                                  "searches": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the search"
                                        },
                                        "object": {
                                          "type": "string",
                                          "const": "webset_search",
                                          "default": "webset_search"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "created",
                                            "pending",
                                            "running",
                                            "completed",
                                            "canceled"
                                          ],
                                          "description": "The status of the search",
                                          "title": "WebsetSearchStatus"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Webset this search belongs to"
                                        },
                                        "query": {
                                          "description": "The query used to create the search.",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 5000
                                        },
                                        "entity": {
                                          "oneOf": [
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "company",
                                                  "default": "company"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Company"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "person",
                                                  "default": "person"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Person"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "article",
                                                  "default": "article"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Article"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "research_paper",
                                                  "default": "research_paper"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Research Paper"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "custom",
                                                  "default": "custom"
                                                },
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 200
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "description"
                                              ],
                                              "title": "Custom"
                                            }
                                          ]
                                        },
                                        "criteria": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "description": {
                                                "description": "The description of the criterion",
                                                "type": [
                                                  "string"
                                                ],
                                                "minLength": 1,
                                                "maxLength": 1000
                                              },
                                              "successRate": {
                                                "type": [
                                                  "number"
                                                ],
                                                "minimum": 0,
                                                "maximum": 100,
                                                "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                              }
                                            },
                                            "required": [
                                              "description",
                                              "successRate"
                                            ]
                                          },
                                          "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                        },
                                        "count": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 1,
                                          "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                        },
                                        "behavior": {
                                          "type": "string",
                                          "enum": [
                                            "override",
                                            "append"
                                          ]
                                        },
                                        "exclude": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "import",
                                                  "webset"
                                                ]
                                              },
                                              "id": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "source",
                                              "id"
                                            ]
                                          },
                                          "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                        },
                                        "scope": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "import",
                                                  "webset"
                                                ]
                                              },
                                              "id": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "relationship": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "definition": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                                  },
                                                  "limit": {
                                                    "type": [
                                                      "number"
                                                    ],
                                                    "minimum": 1,
                                                    "maximum": 10
                                                  }
                                                },
                                                "required": [
                                                  "definition",
                                                  "limit"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "source",
                                              "id"
                                            ]
                                          },
                                          "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                        },
                                        "progress": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "found": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The number of results found so far"
                                            },
                                            "analyzed": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The number of results analyzed so far"
                                            },
                                            "completion": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 0,
                                              "maximum": 100,
                                              "description": "The completion percentage of the search"
                                            },
                                            "timeLeft": {
                                              "type": "number",
                                              "description": "The estimated time remaining in seconds, null if unknown",
                                              "nullable": true
                                            }
                                          },
                                          "required": [
                                            "found",
                                            "analyzed",
                                            "completion",
                                            "timeLeft"
                                          ],
                                          "description": "The progress of the search"
                                        },
                                        "recall": {
                                          "type": "object",
                                          "properties": {
                                            "expected": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "total": {
                                                  "type": [
                                                    "number"
                                                  ],
                                                  "description": "The estimated total number of potential matches"
                                                },
                                                "confidence": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "high",
                                                    "medium",
                                                    "low"
                                                  ],
                                                  "description": "The confidence in the estimate"
                                                },
                                                "bounds": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "min": {
                                                      "type": [
                                                        "number"
                                                      ],
                                                      "description": "The minimum estimated total number of potential matches"
                                                    },
                                                    "max": {
                                                      "type": [
                                                        "number"
                                                      ],
                                                      "description": "The maximum estimated total number of potential matches"
                                                    }
                                                  },
                                                  "required": [
                                                    "min",
                                                    "max"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "total",
                                                "confidence",
                                                "bounds"
                                              ]
                                            },
                                            "reasoning": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The reasoning for the estimate"
                                            }
                                          },
                                          "required": [
                                            "expected",
                                            "reasoning"
                                          ],
                                          "description": "Recall metrics for the search, null if not yet computed or requested.",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "default": {},
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "canceledAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The date and time the search was canceled",
                                          "nullable": true
                                        },
                                        "canceledReason": {
                                          "type": "string",
                                          "enum": [
                                            "webset_deleted",
                                            "webset_canceled"
                                          ]
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the search was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the search was updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "websetId",
                                        "status",
                                        "query",
                                        "entity",
                                        "criteria",
                                        "count",
                                        "exclude",
                                        "scope",
                                        "progress",
                                        "recall",
                                        "canceledAt",
                                        "canceledReason",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The searches that have been performed on the webset."
                                  },
                                  "imports": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Import"
                                        },
                                        "object": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import"
                                          ],
                                          "description": "The type of object"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "processing",
                                            "completed",
                                            "failed"
                                          ],
                                          "description": "The status of the Import"
                                        },
                                        "format": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "csv",
                                            "webset"
                                          ],
                                          "description": "The format of the import."
                                        },
                                        "entity": {
                                          "oneOf": [
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "company",
                                                  "default": "company"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Company"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "person",
                                                  "default": "person"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Person"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "article",
                                                  "default": "article"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Article"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "research_paper",
                                                  "default": "research_paper"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Research Paper"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "custom",
                                                  "default": "custom"
                                                },
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 200
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "description"
                                              ],
                                              "title": "Custom"
                                            }
                                          ]
                                        },
                                        "title": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The title of the import"
                                        },
                                        "count": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The number of entities in the import"
                                        },
                                        "metadata": {
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "failedReason": {
                                          "type": "string",
                                          "enum": [
                                            "invalid_format",
                                            "invalid_file_content",
                                            "missing_identifier"
                                          ],
                                          "description": "The reason the import failed",
                                          "nullable": true
                                        },
                                        "failedAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "When the import failed",
                                          "nullable": true
                                        },
                                        "failedMessage": {
                                          "type": "string",
                                          "description": "A human readable message of the import failure",
                                          "nullable": true
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the import was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the import was last updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "format",
                                        "entity",
                                        "title",
                                        "count",
                                        "metadata",
                                        "failedReason",
                                        "failedAt",
                                        "failedMessage",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "Imports that have been performed on the webset."
                                  },
                                  "enrichments": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the enrichment"
                                        },
                                        "object": {
                                          "type": "string",
                                          "const": "webset_enrichment",
                                          "default": "webset_enrichment"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "canceled",
                                            "completed"
                                          ],
                                          "description": "The status of the enrichment",
                                          "title": "WebsetEnrichmentStatus"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Webset this enrichment belongs to."
                                        },
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                          "nullable": true
                                        },
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The description of the enrichment task provided during the creation of the enrichment."
                                        },
                                        "format": {
                                          "type": "string",
                                          "enum": [
                                            "text",
                                            "date",
                                            "number",
                                            "options",
                                            "email",
                                            "phone",
                                            "url"
                                          ]
                                        },
                                        "options": {
                                          "type": "array",
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "label": {
                                                "type": [
                                                  "string"
                                                ],
                                                "description": "The label of the option"
                                              }
                                            },
                                            "required": [
                                              "label"
                                            ]
                                          },
                                          "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                          "title": "WebsetEnrichmentOptions",
                                          "nullable": true
                                        },
                                        "instructions": {
                                          "type": "string",
                                          "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "default": {},
                                          "description": "The metadata of the enrichment",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the enrichment was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the enrichment was updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "websetId",
                                        "title",
                                        "description",
                                        "format",
                                        "options",
                                        "instructions",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The Enrichments to apply to the Webset Items."
                                  },
                                  "monitors": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Monitor"
                                        },
                                        "object": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "monitor"
                                          ],
                                          "description": "The type of object"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "enabled",
                                            "disabled"
                                          ],
                                          "description": "The status of the Monitor"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The id of the Webset the Monitor belongs to"
                                        },
                                        "cadence": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "cron": {
                                              "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "timezone": {
                                              "description": "IANA timezone (e.g., \"America/New_York\")",
                                              "default": "Etc/UTC",
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "cron"
                                          ],
                                          "description": "How often the monitor will run"
                                        },
                                        "behavior": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "search",
                                              "default": "search"
                                            },
                                            "config": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "query": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 10000,
                                                  "description": "The query to search for. By default, the query from the last search is used."
                                                },
                                                "criteria": {
                                                  "type": [
                                                    "array"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "object"
                                                    ],
                                                    "properties": {
                                                      "description": {
                                                        "type": [
                                                          "string"
                                                        ],
                                                        "minLength": 2,
                                                        "maxLength": 1000
                                                      }
                                                    },
                                                    "required": [
                                                      "description"
                                                    ]
                                                  },
                                                  "maxItems": 5,
                                                  "description": "The criteria to search for. By default, the criteria from the last search is used."
                                                },
                                                "entity": {
                                                  "oneOf": [
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "company",
                                                          "default": "company"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Company"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "person",
                                                          "default": "person"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Person"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "article",
                                                          "default": "article"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Article"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "research_paper",
                                                          "default": "research_paper"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Research Paper"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "custom",
                                                          "default": "custom"
                                                        },
                                                        "description": {
                                                          "type": [
                                                            "string"
                                                          ],
                                                          "minLength": 2,
                                                          "maxLength": 200
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "description"
                                                      ],
                                                      "title": "Custom"
                                                    }
                                                  ]
                                                },
                                                "count": {
                                                  "type": [
                                                    "number"
                                                  ],
                                                  "exclusiveMinimum": 0,
                                                  "description": "The maximum number of results to find"
                                                },
                                                "behavior": {
                                                  "default": "append",
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "override",
                                                    "append"
                                                  ],
                                                  "description": "The behaviour of the Search when it is added to a Webset."
                                                }
                                              },
                                              "required": [
                                                "count"
                                              ],
                                              "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "config"
                                          ],
                                          "description": "Behavior to perform when monitor runs"
                                        },
                                        "lastRun": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The unique identifier for the Monitor Run"
                                            },
                                            "object": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "monitor_run"
                                              ],
                                              "description": "The type of object"
                                            },
                                            "status": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "created",
                                                "running",
                                                "completed",
                                                "canceled",
                                                "failed"
                                              ],
                                              "description": "The status of the Monitor Run"
                                            },
                                            "monitorId": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The monitor that the run is associated with"
                                            },
                                            "type": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "search",
                                                "refresh"
                                              ],
                                              "description": "The type of the Monitor Run"
                                            },
                                            "completedAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run completed",
                                              "nullable": true
                                            },
                                            "failedAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run failed",
                                              "nullable": true
                                            },
                                            "failedReason": {
                                              "type": "string",
                                              "description": "The reason the run failed",
                                              "nullable": true
                                            },
                                            "canceledAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run was canceled",
                                              "nullable": true
                                            },
                                            "createdAt": {
                                              "type": [
                                                "string"
                                              ],
                                              "format": "date-time",
                                              "description": "When the run was created"
                                            },
                                            "updatedAt": {
                                              "type": [
                                                "string"
                                              ],
                                              "format": "date-time",
                                              "description": "When the run was last updated"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "object",
                                            "monitorId",
                                            "status",
                                            "type",
                                            "completedAt",
                                            "failedAt",
                                            "failedReason",
                                            "canceledAt",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        },
                                        "nextRunAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "Date and time when the next run will occur in",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the monitor was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the monitor was last updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "websetId",
                                        "cadence",
                                        "behavior",
                                        "lastRun",
                                        "nextRunAt",
                                        "metadata",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The Monitors for the Webset."
                                  },
                                  "streams": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {},
                                    "description": "The Streams for the Webset."
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the webset was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the webset was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "externalId",
                                  "title",
                                  "searches",
                                  "imports",
                                  "enrichments",
                                  "monitors",
                                  "streams",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetIdleEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.paused",
                                "default": "webset.paused"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the webset"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset",
                                    "default": "webset"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "idle",
                                      "pending",
                                      "running",
                                      "paused"
                                    ],
                                    "description": "The status of the webset",
                                    "title": "WebsetStatus"
                                  },
                                  "externalId": {
                                    "type": "string",
                                    "description": "The external identifier for the webset",
                                    "nullable": true
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the webset",
                                    "nullable": true
                                  },
                                  "searches": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the search"
                                        },
                                        "object": {
                                          "type": "string",
                                          "const": "webset_search",
                                          "default": "webset_search"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "created",
                                            "pending",
                                            "running",
                                            "completed",
                                            "canceled"
                                          ],
                                          "description": "The status of the search",
                                          "title": "WebsetSearchStatus"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Webset this search belongs to"
                                        },
                                        "query": {
                                          "description": "The query used to create the search.",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 5000
                                        },
                                        "entity": {
                                          "oneOf": [
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "company",
                                                  "default": "company"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Company"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "person",
                                                  "default": "person"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Person"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "article",
                                                  "default": "article"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Article"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "research_paper",
                                                  "default": "research_paper"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Research Paper"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "custom",
                                                  "default": "custom"
                                                },
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 200
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "description"
                                              ],
                                              "title": "Custom"
                                            }
                                          ]
                                        },
                                        "criteria": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "description": {
                                                "description": "The description of the criterion",
                                                "type": [
                                                  "string"
                                                ],
                                                "minLength": 1,
                                                "maxLength": 1000
                                              },
                                              "successRate": {
                                                "type": [
                                                  "number"
                                                ],
                                                "minimum": 0,
                                                "maximum": 100,
                                                "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                              }
                                            },
                                            "required": [
                                              "description",
                                              "successRate"
                                            ]
                                          },
                                          "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                        },
                                        "count": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 1,
                                          "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                        },
                                        "behavior": {
                                          "type": "string",
                                          "enum": [
                                            "override",
                                            "append"
                                          ]
                                        },
                                        "exclude": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "import",
                                                  "webset"
                                                ]
                                              },
                                              "id": {
                                                "type": [
                                                  "string"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "source",
                                              "id"
                                            ]
                                          },
                                          "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                        },
                                        "scope": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": [
                                                  "string"
                                                ],
                                                "enum": [
                                                  "import",
                                                  "webset"
                                                ]
                                              },
                                              "id": {
                                                "type": [
                                                  "string"
                                                ]
                                              },
                                              "relationship": {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "definition": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                                  },
                                                  "limit": {
                                                    "type": [
                                                      "number"
                                                    ],
                                                    "minimum": 1,
                                                    "maximum": 10
                                                  }
                                                },
                                                "required": [
                                                  "definition",
                                                  "limit"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "source",
                                              "id"
                                            ]
                                          },
                                          "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                        },
                                        "progress": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "found": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The number of results found so far"
                                            },
                                            "analyzed": {
                                              "type": [
                                                "number"
                                              ],
                                              "description": "The number of results analyzed so far"
                                            },
                                            "completion": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 0,
                                              "maximum": 100,
                                              "description": "The completion percentage of the search"
                                            },
                                            "timeLeft": {
                                              "type": "number",
                                              "description": "The estimated time remaining in seconds, null if unknown",
                                              "nullable": true
                                            }
                                          },
                                          "required": [
                                            "found",
                                            "analyzed",
                                            "completion",
                                            "timeLeft"
                                          ],
                                          "description": "The progress of the search"
                                        },
                                        "recall": {
                                          "type": "object",
                                          "properties": {
                                            "expected": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "total": {
                                                  "type": [
                                                    "number"
                                                  ],
                                                  "description": "The estimated total number of potential matches"
                                                },
                                                "confidence": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "high",
                                                    "medium",
                                                    "low"
                                                  ],
                                                  "description": "The confidence in the estimate"
                                                },
                                                "bounds": {
                                                  "type": [
                                                    "object"
                                                  ],
                                                  "properties": {
                                                    "min": {
                                                      "type": [
                                                        "number"
                                                      ],
                                                      "description": "The minimum estimated total number of potential matches"
                                                    },
                                                    "max": {
                                                      "type": [
                                                        "number"
                                                      ],
                                                      "description": "The maximum estimated total number of potential matches"
                                                    }
                                                  },
                                                  "required": [
                                                    "min",
                                                    "max"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "total",
                                                "confidence",
                                                "bounds"
                                              ]
                                            },
                                            "reasoning": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The reasoning for the estimate"
                                            }
                                          },
                                          "required": [
                                            "expected",
                                            "reasoning"
                                          ],
                                          "description": "Recall metrics for the search, null if not yet computed or requested.",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "default": {},
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "canceledAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The date and time the search was canceled",
                                          "nullable": true
                                        },
                                        "canceledReason": {
                                          "type": "string",
                                          "enum": [
                                            "webset_deleted",
                                            "webset_canceled"
                                          ]
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the search was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the search was updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "websetId",
                                        "status",
                                        "query",
                                        "entity",
                                        "criteria",
                                        "count",
                                        "exclude",
                                        "scope",
                                        "progress",
                                        "recall",
                                        "canceledAt",
                                        "canceledReason",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The searches that have been performed on the webset."
                                  },
                                  "imports": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Import"
                                        },
                                        "object": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import"
                                          ],
                                          "description": "The type of object"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "processing",
                                            "completed",
                                            "failed"
                                          ],
                                          "description": "The status of the Import"
                                        },
                                        "format": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "csv",
                                            "webset"
                                          ],
                                          "description": "The format of the import."
                                        },
                                        "entity": {
                                          "oneOf": [
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "company",
                                                  "default": "company"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Company"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "person",
                                                  "default": "person"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Person"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "article",
                                                  "default": "article"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Article"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "research_paper",
                                                  "default": "research_paper"
                                                }
                                              },
                                              "required": [
                                                "type"
                                              ],
                                              "title": "Research Paper"
                                            },
                                            {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "const": "custom",
                                                  "default": "custom"
                                                },
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 200
                                                }
                                              },
                                              "required": [
                                                "type",
                                                "description"
                                              ],
                                              "title": "Custom"
                                            }
                                          ]
                                        },
                                        "title": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The title of the import"
                                        },
                                        "count": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The number of entities in the import"
                                        },
                                        "metadata": {
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "failedReason": {
                                          "type": "string",
                                          "enum": [
                                            "invalid_format",
                                            "invalid_file_content",
                                            "missing_identifier"
                                          ],
                                          "description": "The reason the import failed",
                                          "nullable": true
                                        },
                                        "failedAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "When the import failed",
                                          "nullable": true
                                        },
                                        "failedMessage": {
                                          "type": "string",
                                          "description": "A human readable message of the import failure",
                                          "nullable": true
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the import was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the import was last updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "format",
                                        "entity",
                                        "title",
                                        "count",
                                        "metadata",
                                        "failedReason",
                                        "failedAt",
                                        "failedMessage",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "Imports that have been performed on the webset."
                                  },
                                  "enrichments": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the enrichment"
                                        },
                                        "object": {
                                          "type": "string",
                                          "const": "webset_enrichment",
                                          "default": "webset_enrichment"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "canceled",
                                            "completed"
                                          ],
                                          "description": "The status of the enrichment",
                                          "title": "WebsetEnrichmentStatus"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Webset this enrichment belongs to."
                                        },
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                          "nullable": true
                                        },
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The description of the enrichment task provided during the creation of the enrichment."
                                        },
                                        "format": {
                                          "type": "string",
                                          "enum": [
                                            "text",
                                            "date",
                                            "number",
                                            "options",
                                            "email",
                                            "phone",
                                            "url"
                                          ]
                                        },
                                        "options": {
                                          "type": "array",
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "label": {
                                                "type": [
                                                  "string"
                                                ],
                                                "description": "The label of the option"
                                              }
                                            },
                                            "required": [
                                              "label"
                                            ]
                                          },
                                          "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                          "title": "WebsetEnrichmentOptions",
                                          "nullable": true
                                        },
                                        "instructions": {
                                          "type": "string",
                                          "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "default": {},
                                          "description": "The metadata of the enrichment",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the enrichment was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "The date and time the enrichment was updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "websetId",
                                        "title",
                                        "description",
                                        "format",
                                        "options",
                                        "instructions",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The Enrichments to apply to the Webset Items."
                                  },
                                  "monitors": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The unique identifier for the Monitor"
                                        },
                                        "object": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "monitor"
                                          ],
                                          "description": "The type of object"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "enabled",
                                            "disabled"
                                          ],
                                          "description": "The status of the Monitor"
                                        },
                                        "websetId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The id of the Webset the Monitor belongs to"
                                        },
                                        "cadence": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "cron": {
                                              "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                              "type": [
                                                "string"
                                              ]
                                            },
                                            "timezone": {
                                              "description": "IANA timezone (e.g., \"America/New_York\")",
                                              "default": "Etc/UTC",
                                              "type": [
                                                "string"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "cron"
                                          ],
                                          "description": "How often the monitor will run"
                                        },
                                        "behavior": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "search",
                                              "default": "search"
                                            },
                                            "config": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "query": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 10000,
                                                  "description": "The query to search for. By default, the query from the last search is used."
                                                },
                                                "criteria": {
                                                  "type": [
                                                    "array"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "object"
                                                    ],
                                                    "properties": {
                                                      "description": {
                                                        "type": [
                                                          "string"
                                                        ],
                                                        "minLength": 2,
                                                        "maxLength": 1000
                                                      }
                                                    },
                                                    "required": [
                                                      "description"
                                                    ]
                                                  },
                                                  "maxItems": 5,
                                                  "description": "The criteria to search for. By default, the criteria from the last search is used."
                                                },
                                                "entity": {
                                                  "oneOf": [
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "company",
                                                          "default": "company"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Company"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "person",
                                                          "default": "person"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Person"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "article",
                                                          "default": "article"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Article"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "research_paper",
                                                          "default": "research_paper"
                                                        }
                                                      },
                                                      "required": [
                                                        "type"
                                                      ],
                                                      "title": "Research Paper"
                                                    },
                                                    {
                                                      "type": [
                                                        "object"
                                                      ],
                                                      "properties": {
                                                        "type": {
                                                          "type": "string",
                                                          "const": "custom",
                                                          "default": "custom"
                                                        },
                                                        "description": {
                                                          "type": [
                                                            "string"
                                                          ],
                                                          "minLength": 2,
                                                          "maxLength": 200
                                                        }
                                                      },
                                                      "required": [
                                                        "type",
                                                        "description"
                                                      ],
                                                      "title": "Custom"
                                                    }
                                                  ]
                                                },
                                                "count": {
                                                  "type": [
                                                    "number"
                                                  ],
                                                  "exclusiveMinimum": 0,
                                                  "description": "The maximum number of results to find"
                                                },
                                                "behavior": {
                                                  "default": "append",
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "enum": [
                                                    "override",
                                                    "append"
                                                  ],
                                                  "description": "The behaviour of the Search when it is added to a Webset."
                                                }
                                              },
                                              "required": [
                                                "count"
                                              ],
                                              "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "config"
                                          ],
                                          "description": "Behavior to perform when monitor runs"
                                        },
                                        "lastRun": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The unique identifier for the Monitor Run"
                                            },
                                            "object": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "monitor_run"
                                              ],
                                              "description": "The type of object"
                                            },
                                            "status": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "created",
                                                "running",
                                                "completed",
                                                "canceled",
                                                "failed"
                                              ],
                                              "description": "The status of the Monitor Run"
                                            },
                                            "monitorId": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The monitor that the run is associated with"
                                            },
                                            "type": {
                                              "type": [
                                                "string"
                                              ],
                                              "enum": [
                                                "search",
                                                "refresh"
                                              ],
                                              "description": "The type of the Monitor Run"
                                            },
                                            "completedAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run completed",
                                              "nullable": true
                                            },
                                            "failedAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run failed",
                                              "nullable": true
                                            },
                                            "failedReason": {
                                              "type": "string",
                                              "description": "The reason the run failed",
                                              "nullable": true
                                            },
                                            "canceledAt": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "When the run was canceled",
                                              "nullable": true
                                            },
                                            "createdAt": {
                                              "type": [
                                                "string"
                                              ],
                                              "format": "date-time",
                                              "description": "When the run was created"
                                            },
                                            "updatedAt": {
                                              "type": [
                                                "string"
                                              ],
                                              "format": "date-time",
                                              "description": "When the run was last updated"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "object",
                                            "monitorId",
                                            "status",
                                            "type",
                                            "completedAt",
                                            "failedAt",
                                            "failedReason",
                                            "canceledAt",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        },
                                        "nextRunAt": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "Date and time when the next run will occur in",
                                          "nullable": true
                                        },
                                        "metadata": {
                                          "description": "Set of key-value pairs you want to associate with this object.",
                                          "type": [
                                            "object"
                                          ],
                                          "additionalProperties": {
                                            "type": [
                                              "string"
                                            ],
                                            "maxLength": 1000
                                          }
                                        },
                                        "createdAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the monitor was created"
                                        },
                                        "updatedAt": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "date-time",
                                          "description": "When the monitor was last updated"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "object",
                                        "status",
                                        "websetId",
                                        "cadence",
                                        "behavior",
                                        "lastRun",
                                        "nextRunAt",
                                        "metadata",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    },
                                    "description": "The Monitors for the Webset."
                                  },
                                  "streams": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {},
                                    "description": "The Streams for the Webset."
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the webset was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the webset was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "externalId",
                                  "title",
                                  "searches",
                                  "imports",
                                  "enrichments",
                                  "monitors",
                                  "streams",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetPausedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.item.created",
                                "default": "webset.item.created"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset Item"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_item",
                                    "default": "webset_item"
                                  },
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "search",
                                      "import"
                                    ],
                                    "description": "The source of the Item"
                                  },
                                  "sourceId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the source"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this Item belongs to."
                                  },
                                  "properties": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the person profile"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the relevance of the person"
                                          },
                                          "person": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": [
                                                  "string"
                                                ],
                                                "description": "The name of the person"
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "The location of the person",
                                                "nullable": true
                                              },
                                              "position": {
                                                "type": "string",
                                                "description": "The current work position of the person",
                                                "nullable": true
                                              },
                                              "company": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "description": "The name of the company"
                                                  },
                                                  "location": {
                                                    "type": "string",
                                                    "description": "The location the person is working at the company",
                                                    "nullable": true
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "location"
                                                ],
                                                "title": "WebsetItemPersonCompanyPropertiesFields",
                                                "nullable": true
                                              },
                                              "pictureUrl": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "The image URL of the person",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "location",
                                              "position",
                                              "company",
                                              "pictureUrl"
                                            ],
                                            "title": "WebsetItemPersonPropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "person"
                                        ]
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the company website"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the relevance of the company"
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "The text content of the company website",
                                            "nullable": true
                                          },
                                          "company": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": [
                                                  "string"
                                                ],
                                                "description": "The name of the company"
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "The main location of the company",
                                                "nullable": true
                                              },
                                              "employees": {
                                                "type": "number",
                                                "description": "The number of employees of the company",
                                                "nullable": true
                                              },
                                              "industry": {
                                                "type": "string",
                                                "description": "The industry of the company",
                                                "nullable": true
                                              },
                                              "about": {
                                                "type": "string",
                                                "description": "A short description of the company",
                                                "nullable": true
                                              },
                                              "logoUrl": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "The logo URL of the company",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "location",
                                              "employees",
                                              "industry",
                                              "about",
                                              "logoUrl"
                                            ],
                                            "title": "WebsetItemCompanyPropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "content",
                                          "company"
                                        ]
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the article"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the relevance of the article"
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "The text content for the article",
                                            "nullable": true
                                          },
                                          "article": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the article",
                                                "nullable": true
                                              },
                                              "author": {
                                                "type": "string",
                                                "description": "The author(s) of the article",
                                                "nullable": true
                                              },
                                              "publishedAt": {
                                                "type": "string",
                                                "description": "The date and time the article was published",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "author",
                                              "publishedAt"
                                            ],
                                            "title": "WebsetItemArticlePropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "content",
                                          "article"
                                        ]
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the research paper"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the relevance of the research paper"
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "The text content of the research paper",
                                            "nullable": true
                                          },
                                          "researchPaper": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the research paper",
                                                "nullable": true
                                              },
                                              "author": {
                                                "type": "string",
                                                "description": "The author(s) of the research paper",
                                                "nullable": true
                                              },
                                              "publishedAt": {
                                                "type": "string",
                                                "description": "The date and time the research paper was published",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "author",
                                              "publishedAt"
                                            ],
                                            "title": "WebsetItemResearchPaperPropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "content",
                                          "researchPaper"
                                        ]
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the Item"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the Item"
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "The text content of the Item",
                                            "nullable": true
                                          },
                                          "custom": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the website",
                                                "nullable": true
                                              },
                                              "author": {
                                                "type": "string",
                                                "description": "The author(s) of the website",
                                                "nullable": true
                                              },
                                              "publishedAt": {
                                                "type": "string",
                                                "description": "The date and time the website was published",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "author",
                                              "publishedAt"
                                            ],
                                            "title": "WebsetItemCustomPropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "content",
                                          "custom"
                                        ]
                                      }
                                    ],
                                    "description": "The properties of the Item"
                                  },
                                  "evaluations": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "criterion": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The description of the criterion"
                                        },
                                        "reasoning": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The reasoning for the result of the evaluation"
                                        },
                                        "satisfied": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "yes",
                                            "no",
                                            "unclear"
                                          ],
                                          "description": "The satisfaction of the criterion"
                                        },
                                        "references": {
                                          "default": [],
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the reference",
                                                "nullable": true
                                              },
                                              "snippet": {
                                                "type": "string",
                                                "description": "The relevant snippet of the reference content",
                                                "nullable": true
                                              },
                                              "url": {
                                                "type": [
                                                  "string"
                                                ],
                                                "format": "uri",
                                                "description": "The URL of the reference"
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "snippet",
                                              "url"
                                            ]
                                          },
                                          "description": "The references used to generate the result."
                                        }
                                      },
                                      "required": [
                                        "criterion",
                                        "reasoning",
                                        "satisfied"
                                      ]
                                    },
                                    "description": "The criteria evaluations of the item"
                                  },
                                  "enrichments": {
                                    "type": "array",
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "object": {
                                          "type": "string",
                                          "const": "enrichment_result",
                                          "default": "enrichment_result"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "completed",
                                            "canceled"
                                          ],
                                          "description": "The status of the enrichment result."
                                        },
                                        "format": {
                                          "type": "string",
                                          "enum": [
                                            "text",
                                            "date",
                                            "number",
                                            "options",
                                            "email",
                                            "phone",
                                            "url"
                                          ]
                                        },
                                        "result": {
                                          "type": "array",
                                          "items": {
                                            "type": [
                                              "string"
                                            ]
                                          },
                                          "description": "The result of the enrichment.",
                                          "nullable": true
                                        },
                                        "reasoning": {
                                          "type": "string",
                                          "description": "The reasoning for the result when an Agent is used.",
                                          "nullable": true
                                        },
                                        "references": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the reference",
                                                "nullable": true
                                              },
                                              "snippet": {
                                                "type": "string",
                                                "description": "The relevant snippet of the reference content",
                                                "nullable": true
                                              },
                                              "url": {
                                                "type": [
                                                  "string"
                                                ],
                                                "format": "uri",
                                                "description": "The URL of the reference"
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "snippet",
                                              "url"
                                            ]
                                          },
                                          "description": "The references used to generate the result."
                                        },
                                        "enrichmentId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The id of the Enrichment that generated the result"
                                        }
                                      },
                                      "required": [
                                        "object",
                                        "status",
                                        "format",
                                        "result",
                                        "reasoning",
                                        "references",
                                        "enrichmentId"
                                      ]
                                    },
                                    "description": "The enrichments results of the Webset item",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the item was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the item was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "source",
                                  "sourceId",
                                  "websetId",
                                  "properties",
                                  "evaluations",
                                  "enrichments",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetItemCreatedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.item.enriched",
                                "default": "webset.item.enriched"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset Item"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_item",
                                    "default": "webset_item"
                                  },
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "search",
                                      "import"
                                    ],
                                    "description": "The source of the Item"
                                  },
                                  "sourceId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the source"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this Item belongs to."
                                  },
                                  "properties": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the person profile"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the relevance of the person"
                                          },
                                          "person": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": [
                                                  "string"
                                                ],
                                                "description": "The name of the person"
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "The location of the person",
                                                "nullable": true
                                              },
                                              "position": {
                                                "type": "string",
                                                "description": "The current work position of the person",
                                                "nullable": true
                                              },
                                              "company": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "description": "The name of the company"
                                                  },
                                                  "location": {
                                                    "type": "string",
                                                    "description": "The location the person is working at the company",
                                                    "nullable": true
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "location"
                                                ],
                                                "title": "WebsetItemPersonCompanyPropertiesFields",
                                                "nullable": true
                                              },
                                              "pictureUrl": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "The image URL of the person",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "location",
                                              "position",
                                              "company",
                                              "pictureUrl"
                                            ],
                                            "title": "WebsetItemPersonPropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "person"
                                        ]
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the company website"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the relevance of the company"
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "The text content of the company website",
                                            "nullable": true
                                          },
                                          "company": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "name": {
                                                "type": [
                                                  "string"
                                                ],
                                                "description": "The name of the company"
                                              },
                                              "location": {
                                                "type": "string",
                                                "description": "The main location of the company",
                                                "nullable": true
                                              },
                                              "employees": {
                                                "type": "number",
                                                "description": "The number of employees of the company",
                                                "nullable": true
                                              },
                                              "industry": {
                                                "type": "string",
                                                "description": "The industry of the company",
                                                "nullable": true
                                              },
                                              "about": {
                                                "type": "string",
                                                "description": "A short description of the company",
                                                "nullable": true
                                              },
                                              "logoUrl": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "The logo URL of the company",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "location",
                                              "employees",
                                              "industry",
                                              "about",
                                              "logoUrl"
                                            ],
                                            "title": "WebsetItemCompanyPropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "content",
                                          "company"
                                        ]
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the article"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the relevance of the article"
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "The text content for the article",
                                            "nullable": true
                                          },
                                          "article": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the article",
                                                "nullable": true
                                              },
                                              "author": {
                                                "type": "string",
                                                "description": "The author(s) of the article",
                                                "nullable": true
                                              },
                                              "publishedAt": {
                                                "type": "string",
                                                "description": "The date and time the article was published",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "author",
                                              "publishedAt"
                                            ],
                                            "title": "WebsetItemArticlePropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "content",
                                          "article"
                                        ]
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the research paper"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the relevance of the research paper"
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "The text content of the research paper",
                                            "nullable": true
                                          },
                                          "researchPaper": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the research paper",
                                                "nullable": true
                                              },
                                              "author": {
                                                "type": "string",
                                                "description": "The author(s) of the research paper",
                                                "nullable": true
                                              },
                                              "publishedAt": {
                                                "type": "string",
                                                "description": "The date and time the research paper was published",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "author",
                                              "publishedAt"
                                            ],
                                            "title": "WebsetItemResearchPaperPropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "content",
                                          "researchPaper"
                                        ]
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "url": {
                                            "type": [
                                              "string"
                                            ],
                                            "format": "uri",
                                            "description": "The URL of the Item"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "description": "Short description of the Item"
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "The text content of the Item",
                                            "nullable": true
                                          },
                                          "custom": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the website",
                                                "nullable": true
                                              },
                                              "author": {
                                                "type": "string",
                                                "description": "The author(s) of the website",
                                                "nullable": true
                                              },
                                              "publishedAt": {
                                                "type": "string",
                                                "description": "The date and time the website was published",
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "author",
                                              "publishedAt"
                                            ],
                                            "title": "WebsetItemCustomPropertiesFields"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "url",
                                          "description",
                                          "content",
                                          "custom"
                                        ]
                                      }
                                    ],
                                    "description": "The properties of the Item"
                                  },
                                  "evaluations": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "criterion": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The description of the criterion"
                                        },
                                        "reasoning": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The reasoning for the result of the evaluation"
                                        },
                                        "satisfied": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "yes",
                                            "no",
                                            "unclear"
                                          ],
                                          "description": "The satisfaction of the criterion"
                                        },
                                        "references": {
                                          "default": [],
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the reference",
                                                "nullable": true
                                              },
                                              "snippet": {
                                                "type": "string",
                                                "description": "The relevant snippet of the reference content",
                                                "nullable": true
                                              },
                                              "url": {
                                                "type": [
                                                  "string"
                                                ],
                                                "format": "uri",
                                                "description": "The URL of the reference"
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "snippet",
                                              "url"
                                            ]
                                          },
                                          "description": "The references used to generate the result."
                                        }
                                      },
                                      "required": [
                                        "criterion",
                                        "reasoning",
                                        "satisfied"
                                      ]
                                    },
                                    "description": "The criteria evaluations of the item"
                                  },
                                  "enrichments": {
                                    "type": "array",
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "object": {
                                          "type": "string",
                                          "const": "enrichment_result",
                                          "default": "enrichment_result"
                                        },
                                        "status": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "pending",
                                            "completed",
                                            "canceled"
                                          ],
                                          "description": "The status of the enrichment result."
                                        },
                                        "format": {
                                          "type": "string",
                                          "enum": [
                                            "text",
                                            "date",
                                            "number",
                                            "options",
                                            "email",
                                            "phone",
                                            "url"
                                          ]
                                        },
                                        "result": {
                                          "type": "array",
                                          "items": {
                                            "type": [
                                              "string"
                                            ]
                                          },
                                          "description": "The result of the enrichment.",
                                          "nullable": true
                                        },
                                        "reasoning": {
                                          "type": "string",
                                          "description": "The reasoning for the result when an Agent is used.",
                                          "nullable": true
                                        },
                                        "references": {
                                          "type": [
                                            "array"
                                          ],
                                          "items": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "title": {
                                                "type": "string",
                                                "description": "The title of the reference",
                                                "nullable": true
                                              },
                                              "snippet": {
                                                "type": "string",
                                                "description": "The relevant snippet of the reference content",
                                                "nullable": true
                                              },
                                              "url": {
                                                "type": [
                                                  "string"
                                                ],
                                                "format": "uri",
                                                "description": "The URL of the reference"
                                              }
                                            },
                                            "required": [
                                              "title",
                                              "snippet",
                                              "url"
                                            ]
                                          },
                                          "description": "The references used to generate the result."
                                        },
                                        "enrichmentId": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The id of the Enrichment that generated the result"
                                        }
                                      },
                                      "required": [
                                        "object",
                                        "status",
                                        "format",
                                        "result",
                                        "reasoning",
                                        "references",
                                        "enrichmentId"
                                      ]
                                    },
                                    "description": "The enrichments results of the Webset item",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the item was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the item was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "source",
                                  "sourceId",
                                  "websetId",
                                  "properties",
                                  "evaluations",
                                  "enrichments",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetItemEnrichedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.search.created",
                                "default": "webset.search.created"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the search"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_search",
                                    "default": "webset_search"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "pending",
                                      "running",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the search",
                                    "title": "WebsetSearchStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this search belongs to"
                                  },
                                  "query": {
                                    "description": "The query used to create the search.",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 5000
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "The description of the criterion",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 1000
                                        },
                                        "successRate": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "successRate"
                                      ]
                                    },
                                    "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 1,
                                    "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                  },
                                  "behavior": {
                                    "type": "string",
                                    "enum": [
                                      "override",
                                      "append"
                                    ]
                                  },
                                  "exclude": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                  },
                                  "scope": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        },
                                        "relationship": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "definition": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                            },
                                            "limit": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 1,
                                              "maximum": 10
                                            }
                                          },
                                          "required": [
                                            "definition",
                                            "limit"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                  },
                                  "progress": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "found": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results found so far"
                                      },
                                      "analyzed": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results analyzed so far"
                                      },
                                      "completion": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The completion percentage of the search"
                                      },
                                      "timeLeft": {
                                        "type": "number",
                                        "description": "The estimated time remaining in seconds, null if unknown",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "found",
                                      "analyzed",
                                      "completion",
                                      "timeLeft"
                                    ],
                                    "description": "The progress of the search"
                                  },
                                  "recall": {
                                    "type": "object",
                                    "properties": {
                                      "expected": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "total": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The estimated total number of potential matches"
                                          },
                                          "confidence": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "high",
                                              "medium",
                                              "low"
                                            ],
                                            "description": "The confidence in the estimate"
                                          },
                                          "bounds": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "min": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The minimum estimated total number of potential matches"
                                              },
                                              "max": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The maximum estimated total number of potential matches"
                                              }
                                            },
                                            "required": [
                                              "min",
                                              "max"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "total",
                                          "confidence",
                                          "bounds"
                                        ]
                                      },
                                      "reasoning": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The reasoning for the estimate"
                                      }
                                    },
                                    "required": [
                                      "expected",
                                      "reasoning"
                                    ],
                                    "description": "Recall metrics for the search, null if not yet computed or requested.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time the search was canceled",
                                    "nullable": true
                                  },
                                  "canceledReason": {
                                    "type": "string",
                                    "enum": [
                                      "webset_deleted",
                                      "webset_canceled"
                                    ]
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "websetId",
                                  "status",
                                  "query",
                                  "entity",
                                  "criteria",
                                  "count",
                                  "exclude",
                                  "scope",
                                  "progress",
                                  "recall",
                                  "canceledAt",
                                  "canceledReason",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetSearchCreatedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.search.updated",
                                "default": "webset.search.updated"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the search"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_search",
                                    "default": "webset_search"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "pending",
                                      "running",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the search",
                                    "title": "WebsetSearchStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this search belongs to"
                                  },
                                  "query": {
                                    "description": "The query used to create the search.",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 5000
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "The description of the criterion",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 1000
                                        },
                                        "successRate": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "successRate"
                                      ]
                                    },
                                    "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 1,
                                    "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                  },
                                  "behavior": {
                                    "type": "string",
                                    "enum": [
                                      "override",
                                      "append"
                                    ]
                                  },
                                  "exclude": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                  },
                                  "scope": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        },
                                        "relationship": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "definition": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                            },
                                            "limit": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 1,
                                              "maximum": 10
                                            }
                                          },
                                          "required": [
                                            "definition",
                                            "limit"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                  },
                                  "progress": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "found": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results found so far"
                                      },
                                      "analyzed": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results analyzed so far"
                                      },
                                      "completion": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The completion percentage of the search"
                                      },
                                      "timeLeft": {
                                        "type": "number",
                                        "description": "The estimated time remaining in seconds, null if unknown",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "found",
                                      "analyzed",
                                      "completion",
                                      "timeLeft"
                                    ],
                                    "description": "The progress of the search"
                                  },
                                  "recall": {
                                    "type": "object",
                                    "properties": {
                                      "expected": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "total": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The estimated total number of potential matches"
                                          },
                                          "confidence": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "high",
                                              "medium",
                                              "low"
                                            ],
                                            "description": "The confidence in the estimate"
                                          },
                                          "bounds": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "min": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The minimum estimated total number of potential matches"
                                              },
                                              "max": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The maximum estimated total number of potential matches"
                                              }
                                            },
                                            "required": [
                                              "min",
                                              "max"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "total",
                                          "confidence",
                                          "bounds"
                                        ]
                                      },
                                      "reasoning": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The reasoning for the estimate"
                                      }
                                    },
                                    "required": [
                                      "expected",
                                      "reasoning"
                                    ],
                                    "description": "Recall metrics for the search, null if not yet computed or requested.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time the search was canceled",
                                    "nullable": true
                                  },
                                  "canceledReason": {
                                    "type": "string",
                                    "enum": [
                                      "webset_deleted",
                                      "webset_canceled"
                                    ]
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "websetId",
                                  "status",
                                  "query",
                                  "entity",
                                  "criteria",
                                  "count",
                                  "exclude",
                                  "scope",
                                  "progress",
                                  "recall",
                                  "canceledAt",
                                  "canceledReason",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetSearchUpdatedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.search.canceled",
                                "default": "webset.search.canceled"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the search"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_search",
                                    "default": "webset_search"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "pending",
                                      "running",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the search",
                                    "title": "WebsetSearchStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this search belongs to"
                                  },
                                  "query": {
                                    "description": "The query used to create the search.",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 5000
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "The description of the criterion",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 1000
                                        },
                                        "successRate": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "successRate"
                                      ]
                                    },
                                    "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 1,
                                    "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                  },
                                  "behavior": {
                                    "type": "string",
                                    "enum": [
                                      "override",
                                      "append"
                                    ]
                                  },
                                  "exclude": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                  },
                                  "scope": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        },
                                        "relationship": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "definition": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                            },
                                            "limit": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 1,
                                              "maximum": 10
                                            }
                                          },
                                          "required": [
                                            "definition",
                                            "limit"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                  },
                                  "progress": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "found": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results found so far"
                                      },
                                      "analyzed": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results analyzed so far"
                                      },
                                      "completion": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The completion percentage of the search"
                                      },
                                      "timeLeft": {
                                        "type": "number",
                                        "description": "The estimated time remaining in seconds, null if unknown",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "found",
                                      "analyzed",
                                      "completion",
                                      "timeLeft"
                                    ],
                                    "description": "The progress of the search"
                                  },
                                  "recall": {
                                    "type": "object",
                                    "properties": {
                                      "expected": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "total": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The estimated total number of potential matches"
                                          },
                                          "confidence": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "high",
                                              "medium",
                                              "low"
                                            ],
                                            "description": "The confidence in the estimate"
                                          },
                                          "bounds": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "min": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The minimum estimated total number of potential matches"
                                              },
                                              "max": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The maximum estimated total number of potential matches"
                                              }
                                            },
                                            "required": [
                                              "min",
                                              "max"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "total",
                                          "confidence",
                                          "bounds"
                                        ]
                                      },
                                      "reasoning": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The reasoning for the estimate"
                                      }
                                    },
                                    "required": [
                                      "expected",
                                      "reasoning"
                                    ],
                                    "description": "Recall metrics for the search, null if not yet computed or requested.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time the search was canceled",
                                    "nullable": true
                                  },
                                  "canceledReason": {
                                    "type": "string",
                                    "enum": [
                                      "webset_deleted",
                                      "webset_canceled"
                                    ]
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "websetId",
                                  "status",
                                  "query",
                                  "entity",
                                  "criteria",
                                  "count",
                                  "exclude",
                                  "scope",
                                  "progress",
                                  "recall",
                                  "canceledAt",
                                  "canceledReason",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetSearchCanceledEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "webset.search.completed",
                                "default": "webset.search.completed"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the search"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_search",
                                    "default": "webset_search"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "pending",
                                      "running",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the search",
                                    "title": "WebsetSearchStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this search belongs to"
                                  },
                                  "query": {
                                    "description": "The query used to create the search.",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 5000
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "The description of the criterion",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 1000
                                        },
                                        "successRate": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "successRate"
                                      ]
                                    },
                                    "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 1,
                                    "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                  },
                                  "behavior": {
                                    "type": "string",
                                    "enum": [
                                      "override",
                                      "append"
                                    ]
                                  },
                                  "exclude": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                  },
                                  "scope": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        },
                                        "relationship": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "definition": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                            },
                                            "limit": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 1,
                                              "maximum": 10
                                            }
                                          },
                                          "required": [
                                            "definition",
                                            "limit"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                  },
                                  "progress": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "found": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results found so far"
                                      },
                                      "analyzed": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results analyzed so far"
                                      },
                                      "completion": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The completion percentage of the search"
                                      },
                                      "timeLeft": {
                                        "type": "number",
                                        "description": "The estimated time remaining in seconds, null if unknown",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "found",
                                      "analyzed",
                                      "completion",
                                      "timeLeft"
                                    ],
                                    "description": "The progress of the search"
                                  },
                                  "recall": {
                                    "type": "object",
                                    "properties": {
                                      "expected": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "total": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The estimated total number of potential matches"
                                          },
                                          "confidence": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "high",
                                              "medium",
                                              "low"
                                            ],
                                            "description": "The confidence in the estimate"
                                          },
                                          "bounds": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "min": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The minimum estimated total number of potential matches"
                                              },
                                              "max": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The maximum estimated total number of potential matches"
                                              }
                                            },
                                            "required": [
                                              "min",
                                              "max"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "total",
                                          "confidence",
                                          "bounds"
                                        ]
                                      },
                                      "reasoning": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The reasoning for the estimate"
                                      }
                                    },
                                    "required": [
                                      "expected",
                                      "reasoning"
                                    ],
                                    "description": "Recall metrics for the search, null if not yet computed or requested.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time the search was canceled",
                                    "nullable": true
                                  },
                                  "canceledReason": {
                                    "type": "string",
                                    "enum": [
                                      "webset_deleted",
                                      "webset_canceled"
                                    ]
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "websetId",
                                  "status",
                                  "query",
                                  "entity",
                                  "criteria",
                                  "count",
                                  "exclude",
                                  "scope",
                                  "progress",
                                  "recall",
                                  "canceledAt",
                                  "canceledReason",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "WebsetSearchCompletedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "import.created",
                                "default": "import.created"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Import"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "processing",
                                      "completed",
                                      "failed"
                                    ],
                                    "description": "The status of the Import"
                                  },
                                  "format": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "csv",
                                      "webset"
                                    ],
                                    "description": "The format of the import."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "title": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The title of the import"
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The number of entities in the import"
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "failedReason": {
                                    "type": "string",
                                    "enum": [
                                      "invalid_format",
                                      "invalid_file_content",
                                      "missing_identifier"
                                    ],
                                    "description": "The reason the import failed",
                                    "nullable": true
                                  },
                                  "failedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the import failed",
                                    "nullable": true
                                  },
                                  "failedMessage": {
                                    "type": "string",
                                    "description": "A human readable message of the import failure",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "format",
                                  "entity",
                                  "title",
                                  "count",
                                  "metadata",
                                  "failedReason",
                                  "failedAt",
                                  "failedMessage",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "ImportCreatedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "import.completed",
                                "default": "import.completed"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Import"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "processing",
                                      "completed",
                                      "failed"
                                    ],
                                    "description": "The status of the Import"
                                  },
                                  "format": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "csv",
                                      "webset"
                                    ],
                                    "description": "The format of the import."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "title": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The title of the import"
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The number of entities in the import"
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "failedReason": {
                                    "type": "string",
                                    "enum": [
                                      "invalid_format",
                                      "invalid_file_content",
                                      "missing_identifier"
                                    ],
                                    "description": "The reason the import failed",
                                    "nullable": true
                                  },
                                  "failedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the import failed",
                                    "nullable": true
                                  },
                                  "failedMessage": {
                                    "type": "string",
                                    "description": "A human readable message of the import failure",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "format",
                                  "entity",
                                  "title",
                                  "count",
                                  "metadata",
                                  "failedReason",
                                  "failedAt",
                                  "failedMessage",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "ImportCompletedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "monitor.created",
                                "default": "monitor.created"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of the Monitor"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The id of the Webset the Monitor belongs to"
                                  },
                                  "cadence": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "cron": {
                                        "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "timezone": {
                                        "description": "IANA timezone (e.g., \"America/New_York\")",
                                        "default": "Etc/UTC",
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "cron"
                                    ],
                                    "description": "How often the monitor will run"
                                  },
                                  "behavior": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "search",
                                        "default": "search"
                                      },
                                      "config": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "query": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 10000,
                                            "description": "The query to search for. By default, the query from the last search is used."
                                          },
                                          "criteria": {
                                            "type": [
                                              "array"
                                            ],
                                            "items": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 1000
                                                }
                                              },
                                              "required": [
                                                "description"
                                              ]
                                            },
                                            "maxItems": 5,
                                            "description": "The criteria to search for. By default, the criteria from the last search is used."
                                          },
                                          "entity": {
                                            "oneOf": [
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "company",
                                                    "default": "company"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Company"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "person",
                                                    "default": "person"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Person"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "article",
                                                    "default": "article"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Article"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "research_paper",
                                                    "default": "research_paper"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Research Paper"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "custom",
                                                    "default": "custom"
                                                  },
                                                  "description": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "minLength": 2,
                                                    "maxLength": 200
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "description"
                                                ],
                                                "title": "Custom"
                                              }
                                            ]
                                          },
                                          "count": {
                                            "type": [
                                              "number"
                                            ],
                                            "exclusiveMinimum": 0,
                                            "description": "The maximum number of results to find"
                                          },
                                          "behavior": {
                                            "default": "append",
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "override",
                                              "append"
                                            ],
                                            "description": "The behaviour of the Search when it is added to a Webset."
                                          }
                                        },
                                        "required": [
                                          "count"
                                        ],
                                        "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "config"
                                    ],
                                    "description": "Behavior to perform when monitor runs"
                                  },
                                  "lastRun": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The unique identifier for the Monitor Run"
                                      },
                                      "object": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "monitor_run"
                                        ],
                                        "description": "The type of object"
                                      },
                                      "status": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "created",
                                          "running",
                                          "completed",
                                          "canceled",
                                          "failed"
                                        ],
                                        "description": "The status of the Monitor Run"
                                      },
                                      "monitorId": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The monitor that the run is associated with"
                                      },
                                      "type": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "search",
                                          "refresh"
                                        ],
                                        "description": "The type of the Monitor Run"
                                      },
                                      "completedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run completed",
                                        "nullable": true
                                      },
                                      "failedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run failed",
                                        "nullable": true
                                      },
                                      "failedReason": {
                                        "type": "string",
                                        "description": "The reason the run failed",
                                        "nullable": true
                                      },
                                      "canceledAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run was canceled",
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was created"
                                      },
                                      "updatedAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was last updated"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "object",
                                      "monitorId",
                                      "status",
                                      "type",
                                      "completedAt",
                                      "failedAt",
                                      "failedReason",
                                      "canceledAt",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "nextRunAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Date and time when the next run will occur in",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "cadence",
                                  "behavior",
                                  "lastRun",
                                  "nextRunAt",
                                  "metadata",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "MonitorCreatedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "monitor.updated",
                                "default": "monitor.updated"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of the Monitor"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The id of the Webset the Monitor belongs to"
                                  },
                                  "cadence": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "cron": {
                                        "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "timezone": {
                                        "description": "IANA timezone (e.g., \"America/New_York\")",
                                        "default": "Etc/UTC",
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "cron"
                                    ],
                                    "description": "How often the monitor will run"
                                  },
                                  "behavior": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "search",
                                        "default": "search"
                                      },
                                      "config": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "query": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 10000,
                                            "description": "The query to search for. By default, the query from the last search is used."
                                          },
                                          "criteria": {
                                            "type": [
                                              "array"
                                            ],
                                            "items": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 1000
                                                }
                                              },
                                              "required": [
                                                "description"
                                              ]
                                            },
                                            "maxItems": 5,
                                            "description": "The criteria to search for. By default, the criteria from the last search is used."
                                          },
                                          "entity": {
                                            "oneOf": [
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "company",
                                                    "default": "company"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Company"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "person",
                                                    "default": "person"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Person"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "article",
                                                    "default": "article"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Article"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "research_paper",
                                                    "default": "research_paper"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Research Paper"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "custom",
                                                    "default": "custom"
                                                  },
                                                  "description": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "minLength": 2,
                                                    "maxLength": 200
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "description"
                                                ],
                                                "title": "Custom"
                                              }
                                            ]
                                          },
                                          "count": {
                                            "type": [
                                              "number"
                                            ],
                                            "exclusiveMinimum": 0,
                                            "description": "The maximum number of results to find"
                                          },
                                          "behavior": {
                                            "default": "append",
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "override",
                                              "append"
                                            ],
                                            "description": "The behaviour of the Search when it is added to a Webset."
                                          }
                                        },
                                        "required": [
                                          "count"
                                        ],
                                        "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "config"
                                    ],
                                    "description": "Behavior to perform when monitor runs"
                                  },
                                  "lastRun": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The unique identifier for the Monitor Run"
                                      },
                                      "object": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "monitor_run"
                                        ],
                                        "description": "The type of object"
                                      },
                                      "status": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "created",
                                          "running",
                                          "completed",
                                          "canceled",
                                          "failed"
                                        ],
                                        "description": "The status of the Monitor Run"
                                      },
                                      "monitorId": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The monitor that the run is associated with"
                                      },
                                      "type": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "search",
                                          "refresh"
                                        ],
                                        "description": "The type of the Monitor Run"
                                      },
                                      "completedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run completed",
                                        "nullable": true
                                      },
                                      "failedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run failed",
                                        "nullable": true
                                      },
                                      "failedReason": {
                                        "type": "string",
                                        "description": "The reason the run failed",
                                        "nullable": true
                                      },
                                      "canceledAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run was canceled",
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was created"
                                      },
                                      "updatedAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was last updated"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "object",
                                      "monitorId",
                                      "status",
                                      "type",
                                      "completedAt",
                                      "failedAt",
                                      "failedReason",
                                      "canceledAt",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "nextRunAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Date and time when the next run will occur in",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "cadence",
                                  "behavior",
                                  "lastRun",
                                  "nextRunAt",
                                  "metadata",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "MonitorUpdatedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "monitor.deleted",
                                "default": "monitor.deleted"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of the Monitor"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The id of the Webset the Monitor belongs to"
                                  },
                                  "cadence": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "cron": {
                                        "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "timezone": {
                                        "description": "IANA timezone (e.g., \"America/New_York\")",
                                        "default": "Etc/UTC",
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "cron"
                                    ],
                                    "description": "How often the monitor will run"
                                  },
                                  "behavior": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "search",
                                        "default": "search"
                                      },
                                      "config": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "query": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 10000,
                                            "description": "The query to search for. By default, the query from the last search is used."
                                          },
                                          "criteria": {
                                            "type": [
                                              "array"
                                            ],
                                            "items": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 1000
                                                }
                                              },
                                              "required": [
                                                "description"
                                              ]
                                            },
                                            "maxItems": 5,
                                            "description": "The criteria to search for. By default, the criteria from the last search is used."
                                          },
                                          "entity": {
                                            "oneOf": [
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "company",
                                                    "default": "company"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Company"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "person",
                                                    "default": "person"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Person"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "article",
                                                    "default": "article"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Article"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "research_paper",
                                                    "default": "research_paper"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Research Paper"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "custom",
                                                    "default": "custom"
                                                  },
                                                  "description": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "minLength": 2,
                                                    "maxLength": 200
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "description"
                                                ],
                                                "title": "Custom"
                                              }
                                            ]
                                          },
                                          "count": {
                                            "type": [
                                              "number"
                                            ],
                                            "exclusiveMinimum": 0,
                                            "description": "The maximum number of results to find"
                                          },
                                          "behavior": {
                                            "default": "append",
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "override",
                                              "append"
                                            ],
                                            "description": "The behaviour of the Search when it is added to a Webset."
                                          }
                                        },
                                        "required": [
                                          "count"
                                        ],
                                        "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "config"
                                    ],
                                    "description": "Behavior to perform when monitor runs"
                                  },
                                  "lastRun": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The unique identifier for the Monitor Run"
                                      },
                                      "object": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "monitor_run"
                                        ],
                                        "description": "The type of object"
                                      },
                                      "status": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "created",
                                          "running",
                                          "completed",
                                          "canceled",
                                          "failed"
                                        ],
                                        "description": "The status of the Monitor Run"
                                      },
                                      "monitorId": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The monitor that the run is associated with"
                                      },
                                      "type": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "search",
                                          "refresh"
                                        ],
                                        "description": "The type of the Monitor Run"
                                      },
                                      "completedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run completed",
                                        "nullable": true
                                      },
                                      "failedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run failed",
                                        "nullable": true
                                      },
                                      "failedReason": {
                                        "type": "string",
                                        "description": "The reason the run failed",
                                        "nullable": true
                                      },
                                      "canceledAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run was canceled",
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was created"
                                      },
                                      "updatedAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was last updated"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "object",
                                      "monitorId",
                                      "status",
                                      "type",
                                      "completedAt",
                                      "failedAt",
                                      "failedReason",
                                      "canceledAt",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "nextRunAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Date and time when the next run will occur in",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "cadence",
                                  "behavior",
                                  "lastRun",
                                  "nextRunAt",
                                  "metadata",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "MonitorDeletedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "monitor.run.created",
                                "default": "monitor.run.created"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor Run"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor_run"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "running",
                                      "completed",
                                      "canceled",
                                      "failed"
                                    ],
                                    "description": "The status of the Monitor Run"
                                  },
                                  "monitorId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The monitor that the run is associated with"
                                  },
                                  "type": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "search",
                                      "refresh"
                                    ],
                                    "description": "The type of the Monitor Run"
                                  },
                                  "completedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the run completed",
                                    "nullable": true
                                  },
                                  "failedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the run failed",
                                    "nullable": true
                                  },
                                  "failedReason": {
                                    "type": "string",
                                    "description": "The reason the run failed",
                                    "nullable": true
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the run was canceled",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the run was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the run was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "monitorId",
                                  "status",
                                  "type",
                                  "completedAt",
                                  "failedAt",
                                  "failedReason",
                                  "canceledAt",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "MonitorRunCreatedEvent"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "description": "The unique identifier for the event",
                                "type": [
                                  "string"
                                ]
                              },
                              "object": {
                                "type": "string",
                                "const": "event",
                                "default": "event"
                              },
                              "type": {
                                "type": "string",
                                "const": "monitor.run.completed",
                                "default": "monitor.run.completed"
                              },
                              "data": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor Run"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor_run"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "running",
                                      "completed",
                                      "canceled",
                                      "failed"
                                    ],
                                    "description": "The status of the Monitor Run"
                                  },
                                  "monitorId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The monitor that the run is associated with"
                                  },
                                  "type": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "search",
                                      "refresh"
                                    ],
                                    "description": "The type of the Monitor Run"
                                  },
                                  "completedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the run completed",
                                    "nullable": true
                                  },
                                  "failedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the run failed",
                                    "nullable": true
                                  },
                                  "failedReason": {
                                    "type": "string",
                                    "description": "The reason the run failed",
                                    "nullable": true
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the run was canceled",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the run was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the run was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "monitorId",
                                  "status",
                                  "type",
                                  "completedAt",
                                  "failedAt",
                                  "failedReason",
                                  "canceledAt",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "The date and time the event was created"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "type",
                              "data",
                              "createdAt"
                            ],
                            "title": "MonitorRunCompletedEvent"
                          }
                        ],
                        "title": "Event"
                      },
                      "description": "The list of events"
                    },
                    "hasMore": {
                      "type": [
                        "boolean"
                      ],
                      "description": "Whether there are more results to paginate through"
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "The cursor to paginate through the next set of results",
                      "nullable": true
                    }
                  },
                  "required": [
                    "data",
                    "hasMore",
                    "nextCursor"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "List all Events",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst events = await exa.websets.events.list({\n  limit: 20\n});\n\nconsole.log(`Found ${events.data.length} events`);\nevents.data.forEach(event => {\n  console.log(`- ${event.id}: ${event.type} at ${event.createdAt}`);\n});"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nevents = exa.websets.events.list(limit=20)\n\nprint(f'Found {len(events.data)} events')\nfor event in events.data:\n    print(f'- {event.id}: {event.type}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/events/{id}": {
      "get": {
        "description": "Get a single Event by id.\n\nYou can subscribe to Events by creating a Webhook.",
        "operationId": "events-get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the event",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "propertyName": "type"
                  },
                  "oneOf": [
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.created",
                          "default": "webset.created"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the webset"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset",
                              "default": "webset"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "idle",
                                "pending",
                                "running",
                                "paused"
                              ],
                              "description": "The status of the webset",
                              "title": "WebsetStatus"
                            },
                            "externalId": {
                              "type": "string",
                              "description": "The external identifier for the webset",
                              "nullable": true
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the webset",
                              "nullable": true
                            },
                            "searches": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the search"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_search",
                                    "default": "webset_search"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "pending",
                                      "running",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the search",
                                    "title": "WebsetSearchStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this search belongs to"
                                  },
                                  "query": {
                                    "description": "The query used to create the search.",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 5000
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "The description of the criterion",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 1000
                                        },
                                        "successRate": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "successRate"
                                      ]
                                    },
                                    "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 1,
                                    "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                  },
                                  "behavior": {
                                    "type": "string",
                                    "enum": [
                                      "override",
                                      "append"
                                    ]
                                  },
                                  "exclude": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                  },
                                  "scope": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        },
                                        "relationship": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "definition": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                            },
                                            "limit": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 1,
                                              "maximum": 10
                                            }
                                          },
                                          "required": [
                                            "definition",
                                            "limit"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                  },
                                  "progress": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "found": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results found so far"
                                      },
                                      "analyzed": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results analyzed so far"
                                      },
                                      "completion": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The completion percentage of the search"
                                      },
                                      "timeLeft": {
                                        "type": "number",
                                        "description": "The estimated time remaining in seconds, null if unknown",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "found",
                                      "analyzed",
                                      "completion",
                                      "timeLeft"
                                    ],
                                    "description": "The progress of the search"
                                  },
                                  "recall": {
                                    "type": "object",
                                    "properties": {
                                      "expected": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "total": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The estimated total number of potential matches"
                                          },
                                          "confidence": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "high",
                                              "medium",
                                              "low"
                                            ],
                                            "description": "The confidence in the estimate"
                                          },
                                          "bounds": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "min": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The minimum estimated total number of potential matches"
                                              },
                                              "max": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The maximum estimated total number of potential matches"
                                              }
                                            },
                                            "required": [
                                              "min",
                                              "max"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "total",
                                          "confidence",
                                          "bounds"
                                        ]
                                      },
                                      "reasoning": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The reasoning for the estimate"
                                      }
                                    },
                                    "required": [
                                      "expected",
                                      "reasoning"
                                    ],
                                    "description": "Recall metrics for the search, null if not yet computed or requested.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time the search was canceled",
                                    "nullable": true
                                  },
                                  "canceledReason": {
                                    "type": "string",
                                    "enum": [
                                      "webset_deleted",
                                      "webset_canceled"
                                    ]
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "websetId",
                                  "status",
                                  "query",
                                  "entity",
                                  "criteria",
                                  "count",
                                  "exclude",
                                  "scope",
                                  "progress",
                                  "recall",
                                  "canceledAt",
                                  "canceledReason",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The searches that have been performed on the webset."
                            },
                            "imports": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Import"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "processing",
                                      "completed",
                                      "failed"
                                    ],
                                    "description": "The status of the Import"
                                  },
                                  "format": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "csv",
                                      "webset"
                                    ],
                                    "description": "The format of the import."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "title": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The title of the import"
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The number of entities in the import"
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "failedReason": {
                                    "type": "string",
                                    "enum": [
                                      "invalid_format",
                                      "invalid_file_content",
                                      "missing_identifier"
                                    ],
                                    "description": "The reason the import failed",
                                    "nullable": true
                                  },
                                  "failedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the import failed",
                                    "nullable": true
                                  },
                                  "failedMessage": {
                                    "type": "string",
                                    "description": "A human readable message of the import failure",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "format",
                                  "entity",
                                  "title",
                                  "count",
                                  "metadata",
                                  "failedReason",
                                  "failedAt",
                                  "failedMessage",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "Imports that have been performed on the webset."
                            },
                            "enrichments": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the enrichment"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_enrichment",
                                    "default": "webset_enrichment"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "canceled",
                                      "completed"
                                    ],
                                    "description": "The status of the enrichment",
                                    "title": "WebsetEnrichmentStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this enrichment belongs to."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                    "nullable": true
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The description of the enrichment task provided during the creation of the enrichment."
                                  },
                                  "format": {
                                    "type": "string",
                                    "enum": [
                                      "text",
                                      "date",
                                      "number",
                                      "options",
                                      "email",
                                      "phone",
                                      "url"
                                    ]
                                  },
                                  "options": {
                                    "type": "array",
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "label": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The label of the option"
                                        }
                                      },
                                      "required": [
                                        "label"
                                      ]
                                    },
                                    "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                    "title": "WebsetEnrichmentOptions",
                                    "nullable": true
                                  },
                                  "instructions": {
                                    "type": "string",
                                    "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "The metadata of the enrichment",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the enrichment was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the enrichment was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "title",
                                  "description",
                                  "format",
                                  "options",
                                  "instructions",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The Enrichments to apply to the Webset Items."
                            },
                            "monitors": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of the Monitor"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The id of the Webset the Monitor belongs to"
                                  },
                                  "cadence": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "cron": {
                                        "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "timezone": {
                                        "description": "IANA timezone (e.g., \"America/New_York\")",
                                        "default": "Etc/UTC",
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "cron"
                                    ],
                                    "description": "How often the monitor will run"
                                  },
                                  "behavior": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "search",
                                        "default": "search"
                                      },
                                      "config": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "query": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 10000,
                                            "description": "The query to search for. By default, the query from the last search is used."
                                          },
                                          "criteria": {
                                            "type": [
                                              "array"
                                            ],
                                            "items": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 1000
                                                }
                                              },
                                              "required": [
                                                "description"
                                              ]
                                            },
                                            "maxItems": 5,
                                            "description": "The criteria to search for. By default, the criteria from the last search is used."
                                          },
                                          "entity": {
                                            "oneOf": [
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "company",
                                                    "default": "company"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Company"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "person",
                                                    "default": "person"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Person"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "article",
                                                    "default": "article"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Article"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "research_paper",
                                                    "default": "research_paper"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Research Paper"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "custom",
                                                    "default": "custom"
                                                  },
                                                  "description": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "minLength": 2,
                                                    "maxLength": 200
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "description"
                                                ],
                                                "title": "Custom"
                                              }
                                            ]
                                          },
                                          "count": {
                                            "type": [
                                              "number"
                                            ],
                                            "exclusiveMinimum": 0,
                                            "description": "The maximum number of results to find"
                                          },
                                          "behavior": {
                                            "default": "append",
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "override",
                                              "append"
                                            ],
                                            "description": "The behaviour of the Search when it is added to a Webset."
                                          }
                                        },
                                        "required": [
                                          "count"
                                        ],
                                        "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "config"
                                    ],
                                    "description": "Behavior to perform when monitor runs"
                                  },
                                  "lastRun": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The unique identifier for the Monitor Run"
                                      },
                                      "object": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "monitor_run"
                                        ],
                                        "description": "The type of object"
                                      },
                                      "status": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "created",
                                          "running",
                                          "completed",
                                          "canceled",
                                          "failed"
                                        ],
                                        "description": "The status of the Monitor Run"
                                      },
                                      "monitorId": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The monitor that the run is associated with"
                                      },
                                      "type": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "search",
                                          "refresh"
                                        ],
                                        "description": "The type of the Monitor Run"
                                      },
                                      "completedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run completed",
                                        "nullable": true
                                      },
                                      "failedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run failed",
                                        "nullable": true
                                      },
                                      "failedReason": {
                                        "type": "string",
                                        "description": "The reason the run failed",
                                        "nullable": true
                                      },
                                      "canceledAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run was canceled",
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was created"
                                      },
                                      "updatedAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was last updated"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "object",
                                      "monitorId",
                                      "status",
                                      "type",
                                      "completedAt",
                                      "failedAt",
                                      "failedReason",
                                      "canceledAt",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "nextRunAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Date and time when the next run will occur in",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "cadence",
                                  "behavior",
                                  "lastRun",
                                  "nextRunAt",
                                  "metadata",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The Monitors for the Webset."
                            },
                            "streams": {
                              "type": [
                                "array"
                              ],
                              "items": {},
                              "description": "The Streams for the Webset."
                            },
                            "metadata": {
                              "default": {},
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the webset was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the webset was updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "status",
                            "externalId",
                            "title",
                            "searches",
                            "imports",
                            "enrichments",
                            "monitors",
                            "streams",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetCreatedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.deleted",
                          "default": "webset.deleted"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the webset"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset",
                              "default": "webset"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "idle",
                                "pending",
                                "running",
                                "paused"
                              ],
                              "description": "The status of the webset",
                              "title": "WebsetStatus"
                            },
                            "externalId": {
                              "type": "string",
                              "description": "The external identifier for the webset",
                              "nullable": true
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the webset",
                              "nullable": true
                            },
                            "searches": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the search"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_search",
                                    "default": "webset_search"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "pending",
                                      "running",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the search",
                                    "title": "WebsetSearchStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this search belongs to"
                                  },
                                  "query": {
                                    "description": "The query used to create the search.",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 5000
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "The description of the criterion",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 1000
                                        },
                                        "successRate": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "successRate"
                                      ]
                                    },
                                    "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 1,
                                    "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                  },
                                  "behavior": {
                                    "type": "string",
                                    "enum": [
                                      "override",
                                      "append"
                                    ]
                                  },
                                  "exclude": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                  },
                                  "scope": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        },
                                        "relationship": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "definition": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                            },
                                            "limit": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 1,
                                              "maximum": 10
                                            }
                                          },
                                          "required": [
                                            "definition",
                                            "limit"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                  },
                                  "progress": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "found": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results found so far"
                                      },
                                      "analyzed": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results analyzed so far"
                                      },
                                      "completion": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The completion percentage of the search"
                                      },
                                      "timeLeft": {
                                        "type": "number",
                                        "description": "The estimated time remaining in seconds, null if unknown",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "found",
                                      "analyzed",
                                      "completion",
                                      "timeLeft"
                                    ],
                                    "description": "The progress of the search"
                                  },
                                  "recall": {
                                    "type": "object",
                                    "properties": {
                                      "expected": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "total": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The estimated total number of potential matches"
                                          },
                                          "confidence": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "high",
                                              "medium",
                                              "low"
                                            ],
                                            "description": "The confidence in the estimate"
                                          },
                                          "bounds": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "min": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The minimum estimated total number of potential matches"
                                              },
                                              "max": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The maximum estimated total number of potential matches"
                                              }
                                            },
                                            "required": [
                                              "min",
                                              "max"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "total",
                                          "confidence",
                                          "bounds"
                                        ]
                                      },
                                      "reasoning": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The reasoning for the estimate"
                                      }
                                    },
                                    "required": [
                                      "expected",
                                      "reasoning"
                                    ],
                                    "description": "Recall metrics for the search, null if not yet computed or requested.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time the search was canceled",
                                    "nullable": true
                                  },
                                  "canceledReason": {
                                    "type": "string",
                                    "enum": [
                                      "webset_deleted",
                                      "webset_canceled"
                                    ]
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "websetId",
                                  "status",
                                  "query",
                                  "entity",
                                  "criteria",
                                  "count",
                                  "exclude",
                                  "scope",
                                  "progress",
                                  "recall",
                                  "canceledAt",
                                  "canceledReason",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The searches that have been performed on the webset."
                            },
                            "imports": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Import"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "processing",
                                      "completed",
                                      "failed"
                                    ],
                                    "description": "The status of the Import"
                                  },
                                  "format": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "csv",
                                      "webset"
                                    ],
                                    "description": "The format of the import."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "title": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The title of the import"
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The number of entities in the import"
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "failedReason": {
                                    "type": "string",
                                    "enum": [
                                      "invalid_format",
                                      "invalid_file_content",
                                      "missing_identifier"
                                    ],
                                    "description": "The reason the import failed",
                                    "nullable": true
                                  },
                                  "failedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the import failed",
                                    "nullable": true
                                  },
                                  "failedMessage": {
                                    "type": "string",
                                    "description": "A human readable message of the import failure",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "format",
                                  "entity",
                                  "title",
                                  "count",
                                  "metadata",
                                  "failedReason",
                                  "failedAt",
                                  "failedMessage",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "Imports that have been performed on the webset."
                            },
                            "enrichments": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the enrichment"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_enrichment",
                                    "default": "webset_enrichment"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "canceled",
                                      "completed"
                                    ],
                                    "description": "The status of the enrichment",
                                    "title": "WebsetEnrichmentStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this enrichment belongs to."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                    "nullable": true
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The description of the enrichment task provided during the creation of the enrichment."
                                  },
                                  "format": {
                                    "type": "string",
                                    "enum": [
                                      "text",
                                      "date",
                                      "number",
                                      "options",
                                      "email",
                                      "phone",
                                      "url"
                                    ]
                                  },
                                  "options": {
                                    "type": "array",
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "label": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The label of the option"
                                        }
                                      },
                                      "required": [
                                        "label"
                                      ]
                                    },
                                    "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                    "title": "WebsetEnrichmentOptions",
                                    "nullable": true
                                  },
                                  "instructions": {
                                    "type": "string",
                                    "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "The metadata of the enrichment",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the enrichment was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the enrichment was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "title",
                                  "description",
                                  "format",
                                  "options",
                                  "instructions",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The Enrichments to apply to the Webset Items."
                            },
                            "monitors": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of the Monitor"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The id of the Webset the Monitor belongs to"
                                  },
                                  "cadence": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "cron": {
                                        "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "timezone": {
                                        "description": "IANA timezone (e.g., \"America/New_York\")",
                                        "default": "Etc/UTC",
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "cron"
                                    ],
                                    "description": "How often the monitor will run"
                                  },
                                  "behavior": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "search",
                                        "default": "search"
                                      },
                                      "config": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "query": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 10000,
                                            "description": "The query to search for. By default, the query from the last search is used."
                                          },
                                          "criteria": {
                                            "type": [
                                              "array"
                                            ],
                                            "items": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 1000
                                                }
                                              },
                                              "required": [
                                                "description"
                                              ]
                                            },
                                            "maxItems": 5,
                                            "description": "The criteria to search for. By default, the criteria from the last search is used."
                                          },
                                          "entity": {
                                            "oneOf": [
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "company",
                                                    "default": "company"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Company"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "person",
                                                    "default": "person"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Person"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "article",
                                                    "default": "article"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Article"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "research_paper",
                                                    "default": "research_paper"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Research Paper"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "custom",
                                                    "default": "custom"
                                                  },
                                                  "description": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "minLength": 2,
                                                    "maxLength": 200
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "description"
                                                ],
                                                "title": "Custom"
                                              }
                                            ]
                                          },
                                          "count": {
                                            "type": [
                                              "number"
                                            ],
                                            "exclusiveMinimum": 0,
                                            "description": "The maximum number of results to find"
                                          },
                                          "behavior": {
                                            "default": "append",
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "override",
                                              "append"
                                            ],
                                            "description": "The behaviour of the Search when it is added to a Webset."
                                          }
                                        },
                                        "required": [
                                          "count"
                                        ],
                                        "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "config"
                                    ],
                                    "description": "Behavior to perform when monitor runs"
                                  },
                                  "lastRun": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The unique identifier for the Monitor Run"
                                      },
                                      "object": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "monitor_run"
                                        ],
                                        "description": "The type of object"
                                      },
                                      "status": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "created",
                                          "running",
                                          "completed",
                                          "canceled",
                                          "failed"
                                        ],
                                        "description": "The status of the Monitor Run"
                                      },
                                      "monitorId": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The monitor that the run is associated with"
                                      },
                                      "type": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "search",
                                          "refresh"
                                        ],
                                        "description": "The type of the Monitor Run"
                                      },
                                      "completedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run completed",
                                        "nullable": true
                                      },
                                      "failedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run failed",
                                        "nullable": true
                                      },
                                      "failedReason": {
                                        "type": "string",
                                        "description": "The reason the run failed",
                                        "nullable": true
                                      },
                                      "canceledAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run was canceled",
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was created"
                                      },
                                      "updatedAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was last updated"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "object",
                                      "monitorId",
                                      "status",
                                      "type",
                                      "completedAt",
                                      "failedAt",
                                      "failedReason",
                                      "canceledAt",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "nextRunAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Date and time when the next run will occur in",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "cadence",
                                  "behavior",
                                  "lastRun",
                                  "nextRunAt",
                                  "metadata",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The Monitors for the Webset."
                            },
                            "streams": {
                              "type": [
                                "array"
                              ],
                              "items": {},
                              "description": "The Streams for the Webset."
                            },
                            "metadata": {
                              "default": {},
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the webset was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the webset was updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "status",
                            "externalId",
                            "title",
                            "searches",
                            "imports",
                            "enrichments",
                            "monitors",
                            "streams",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetDeletedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.idle",
                          "default": "webset.idle"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the webset"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset",
                              "default": "webset"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "idle",
                                "pending",
                                "running",
                                "paused"
                              ],
                              "description": "The status of the webset",
                              "title": "WebsetStatus"
                            },
                            "externalId": {
                              "type": "string",
                              "description": "The external identifier for the webset",
                              "nullable": true
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the webset",
                              "nullable": true
                            },
                            "searches": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the search"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_search",
                                    "default": "webset_search"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "pending",
                                      "running",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the search",
                                    "title": "WebsetSearchStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this search belongs to"
                                  },
                                  "query": {
                                    "description": "The query used to create the search.",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 5000
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "The description of the criterion",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 1000
                                        },
                                        "successRate": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "successRate"
                                      ]
                                    },
                                    "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 1,
                                    "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                  },
                                  "behavior": {
                                    "type": "string",
                                    "enum": [
                                      "override",
                                      "append"
                                    ]
                                  },
                                  "exclude": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                  },
                                  "scope": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        },
                                        "relationship": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "definition": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                            },
                                            "limit": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 1,
                                              "maximum": 10
                                            }
                                          },
                                          "required": [
                                            "definition",
                                            "limit"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                  },
                                  "progress": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "found": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results found so far"
                                      },
                                      "analyzed": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results analyzed so far"
                                      },
                                      "completion": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The completion percentage of the search"
                                      },
                                      "timeLeft": {
                                        "type": "number",
                                        "description": "The estimated time remaining in seconds, null if unknown",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "found",
                                      "analyzed",
                                      "completion",
                                      "timeLeft"
                                    ],
                                    "description": "The progress of the search"
                                  },
                                  "recall": {
                                    "type": "object",
                                    "properties": {
                                      "expected": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "total": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The estimated total number of potential matches"
                                          },
                                          "confidence": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "high",
                                              "medium",
                                              "low"
                                            ],
                                            "description": "The confidence in the estimate"
                                          },
                                          "bounds": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "min": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The minimum estimated total number of potential matches"
                                              },
                                              "max": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The maximum estimated total number of potential matches"
                                              }
                                            },
                                            "required": [
                                              "min",
                                              "max"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "total",
                                          "confidence",
                                          "bounds"
                                        ]
                                      },
                                      "reasoning": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The reasoning for the estimate"
                                      }
                                    },
                                    "required": [
                                      "expected",
                                      "reasoning"
                                    ],
                                    "description": "Recall metrics for the search, null if not yet computed or requested.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time the search was canceled",
                                    "nullable": true
                                  },
                                  "canceledReason": {
                                    "type": "string",
                                    "enum": [
                                      "webset_deleted",
                                      "webset_canceled"
                                    ]
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "websetId",
                                  "status",
                                  "query",
                                  "entity",
                                  "criteria",
                                  "count",
                                  "exclude",
                                  "scope",
                                  "progress",
                                  "recall",
                                  "canceledAt",
                                  "canceledReason",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The searches that have been performed on the webset."
                            },
                            "imports": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Import"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "processing",
                                      "completed",
                                      "failed"
                                    ],
                                    "description": "The status of the Import"
                                  },
                                  "format": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "csv",
                                      "webset"
                                    ],
                                    "description": "The format of the import."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "title": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The title of the import"
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The number of entities in the import"
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "failedReason": {
                                    "type": "string",
                                    "enum": [
                                      "invalid_format",
                                      "invalid_file_content",
                                      "missing_identifier"
                                    ],
                                    "description": "The reason the import failed",
                                    "nullable": true
                                  },
                                  "failedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the import failed",
                                    "nullable": true
                                  },
                                  "failedMessage": {
                                    "type": "string",
                                    "description": "A human readable message of the import failure",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "format",
                                  "entity",
                                  "title",
                                  "count",
                                  "metadata",
                                  "failedReason",
                                  "failedAt",
                                  "failedMessage",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "Imports that have been performed on the webset."
                            },
                            "enrichments": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the enrichment"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_enrichment",
                                    "default": "webset_enrichment"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "canceled",
                                      "completed"
                                    ],
                                    "description": "The status of the enrichment",
                                    "title": "WebsetEnrichmentStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this enrichment belongs to."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                    "nullable": true
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The description of the enrichment task provided during the creation of the enrichment."
                                  },
                                  "format": {
                                    "type": "string",
                                    "enum": [
                                      "text",
                                      "date",
                                      "number",
                                      "options",
                                      "email",
                                      "phone",
                                      "url"
                                    ]
                                  },
                                  "options": {
                                    "type": "array",
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "label": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The label of the option"
                                        }
                                      },
                                      "required": [
                                        "label"
                                      ]
                                    },
                                    "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                    "title": "WebsetEnrichmentOptions",
                                    "nullable": true
                                  },
                                  "instructions": {
                                    "type": "string",
                                    "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "The metadata of the enrichment",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the enrichment was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the enrichment was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "title",
                                  "description",
                                  "format",
                                  "options",
                                  "instructions",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The Enrichments to apply to the Webset Items."
                            },
                            "monitors": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of the Monitor"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The id of the Webset the Monitor belongs to"
                                  },
                                  "cadence": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "cron": {
                                        "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "timezone": {
                                        "description": "IANA timezone (e.g., \"America/New_York\")",
                                        "default": "Etc/UTC",
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "cron"
                                    ],
                                    "description": "How often the monitor will run"
                                  },
                                  "behavior": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "search",
                                        "default": "search"
                                      },
                                      "config": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "query": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 10000,
                                            "description": "The query to search for. By default, the query from the last search is used."
                                          },
                                          "criteria": {
                                            "type": [
                                              "array"
                                            ],
                                            "items": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 1000
                                                }
                                              },
                                              "required": [
                                                "description"
                                              ]
                                            },
                                            "maxItems": 5,
                                            "description": "The criteria to search for. By default, the criteria from the last search is used."
                                          },
                                          "entity": {
                                            "oneOf": [
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "company",
                                                    "default": "company"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Company"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "person",
                                                    "default": "person"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Person"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "article",
                                                    "default": "article"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Article"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "research_paper",
                                                    "default": "research_paper"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Research Paper"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "custom",
                                                    "default": "custom"
                                                  },
                                                  "description": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "minLength": 2,
                                                    "maxLength": 200
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "description"
                                                ],
                                                "title": "Custom"
                                              }
                                            ]
                                          },
                                          "count": {
                                            "type": [
                                              "number"
                                            ],
                                            "exclusiveMinimum": 0,
                                            "description": "The maximum number of results to find"
                                          },
                                          "behavior": {
                                            "default": "append",
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "override",
                                              "append"
                                            ],
                                            "description": "The behaviour of the Search when it is added to a Webset."
                                          }
                                        },
                                        "required": [
                                          "count"
                                        ],
                                        "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "config"
                                    ],
                                    "description": "Behavior to perform when monitor runs"
                                  },
                                  "lastRun": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The unique identifier for the Monitor Run"
                                      },
                                      "object": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "monitor_run"
                                        ],
                                        "description": "The type of object"
                                      },
                                      "status": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "created",
                                          "running",
                                          "completed",
                                          "canceled",
                                          "failed"
                                        ],
                                        "description": "The status of the Monitor Run"
                                      },
                                      "monitorId": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The monitor that the run is associated with"
                                      },
                                      "type": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "search",
                                          "refresh"
                                        ],
                                        "description": "The type of the Monitor Run"
                                      },
                                      "completedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run completed",
                                        "nullable": true
                                      },
                                      "failedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run failed",
                                        "nullable": true
                                      },
                                      "failedReason": {
                                        "type": "string",
                                        "description": "The reason the run failed",
                                        "nullable": true
                                      },
                                      "canceledAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run was canceled",
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was created"
                                      },
                                      "updatedAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was last updated"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "object",
                                      "monitorId",
                                      "status",
                                      "type",
                                      "completedAt",
                                      "failedAt",
                                      "failedReason",
                                      "canceledAt",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "nextRunAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Date and time when the next run will occur in",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "cadence",
                                  "behavior",
                                  "lastRun",
                                  "nextRunAt",
                                  "metadata",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The Monitors for the Webset."
                            },
                            "streams": {
                              "type": [
                                "array"
                              ],
                              "items": {},
                              "description": "The Streams for the Webset."
                            },
                            "metadata": {
                              "default": {},
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the webset was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the webset was updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "status",
                            "externalId",
                            "title",
                            "searches",
                            "imports",
                            "enrichments",
                            "monitors",
                            "streams",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetIdleEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.paused",
                          "default": "webset.paused"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the webset"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset",
                              "default": "webset"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "idle",
                                "pending",
                                "running",
                                "paused"
                              ],
                              "description": "The status of the webset",
                              "title": "WebsetStatus"
                            },
                            "externalId": {
                              "type": "string",
                              "description": "The external identifier for the webset",
                              "nullable": true
                            },
                            "title": {
                              "type": "string",
                              "description": "The title of the webset",
                              "nullable": true
                            },
                            "searches": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the search"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_search",
                                    "default": "webset_search"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "created",
                                      "pending",
                                      "running",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the search",
                                    "title": "WebsetSearchStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this search belongs to"
                                  },
                                  "query": {
                                    "description": "The query used to create the search.",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 5000
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "description": "The description of the criterion",
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 1000
                                        },
                                        "successRate": {
                                          "type": [
                                            "number"
                                          ],
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                        }
                                      },
                                      "required": [
                                        "description",
                                        "successRate"
                                      ]
                                    },
                                    "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 1,
                                    "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                                  },
                                  "behavior": {
                                    "type": "string",
                                    "enum": [
                                      "override",
                                      "append"
                                    ]
                                  },
                                  "exclude": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                                  },
                                  "scope": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": [
                                            "string"
                                          ],
                                          "enum": [
                                            "import",
                                            "webset"
                                          ]
                                        },
                                        "id": {
                                          "type": [
                                            "string"
                                          ]
                                        },
                                        "relationship": {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "definition": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                            },
                                            "limit": {
                                              "type": [
                                                "number"
                                              ],
                                              "minimum": 1,
                                              "maximum": 10
                                            }
                                          },
                                          "required": [
                                            "definition",
                                            "limit"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "source",
                                        "id"
                                      ]
                                    },
                                    "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                                  },
                                  "progress": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "found": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results found so far"
                                      },
                                      "analyzed": {
                                        "type": [
                                          "number"
                                        ],
                                        "description": "The number of results analyzed so far"
                                      },
                                      "completion": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "The completion percentage of the search"
                                      },
                                      "timeLeft": {
                                        "type": "number",
                                        "description": "The estimated time remaining in seconds, null if unknown",
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "found",
                                      "analyzed",
                                      "completion",
                                      "timeLeft"
                                    ],
                                    "description": "The progress of the search"
                                  },
                                  "recall": {
                                    "type": "object",
                                    "properties": {
                                      "expected": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "total": {
                                            "type": [
                                              "number"
                                            ],
                                            "description": "The estimated total number of potential matches"
                                          },
                                          "confidence": {
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "high",
                                              "medium",
                                              "low"
                                            ],
                                            "description": "The confidence in the estimate"
                                          },
                                          "bounds": {
                                            "type": [
                                              "object"
                                            ],
                                            "properties": {
                                              "min": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The minimum estimated total number of potential matches"
                                              },
                                              "max": {
                                                "type": [
                                                  "number"
                                                ],
                                                "description": "The maximum estimated total number of potential matches"
                                              }
                                            },
                                            "required": [
                                              "min",
                                              "max"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "total",
                                          "confidence",
                                          "bounds"
                                        ]
                                      },
                                      "reasoning": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The reasoning for the estimate"
                                      }
                                    },
                                    "required": [
                                      "expected",
                                      "reasoning"
                                    ],
                                    "description": "Recall metrics for the search, null if not yet computed or requested.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "canceledAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The date and time the search was canceled",
                                    "nullable": true
                                  },
                                  "canceledReason": {
                                    "type": "string",
                                    "enum": [
                                      "webset_deleted",
                                      "webset_canceled"
                                    ]
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the search was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "websetId",
                                  "status",
                                  "query",
                                  "entity",
                                  "criteria",
                                  "count",
                                  "exclude",
                                  "scope",
                                  "progress",
                                  "recall",
                                  "canceledAt",
                                  "canceledReason",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The searches that have been performed on the webset."
                            },
                            "imports": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Import"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "processing",
                                      "completed",
                                      "failed"
                                    ],
                                    "description": "The status of the Import"
                                  },
                                  "format": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "csv",
                                      "webset"
                                    ],
                                    "description": "The format of the import."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "title": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The title of the import"
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "description": "The number of entities in the import"
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "failedReason": {
                                    "type": "string",
                                    "enum": [
                                      "invalid_format",
                                      "invalid_file_content",
                                      "missing_identifier"
                                    ],
                                    "description": "The reason the import failed",
                                    "nullable": true
                                  },
                                  "failedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "When the import failed",
                                    "nullable": true
                                  },
                                  "failedMessage": {
                                    "type": "string",
                                    "description": "A human readable message of the import failure",
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the import was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "format",
                                  "entity",
                                  "title",
                                  "count",
                                  "metadata",
                                  "failedReason",
                                  "failedAt",
                                  "failedMessage",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "Imports that have been performed on the webset."
                            },
                            "enrichments": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the enrichment"
                                  },
                                  "object": {
                                    "type": "string",
                                    "const": "webset_enrichment",
                                    "default": "webset_enrichment"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "canceled",
                                      "completed"
                                    ],
                                    "description": "The status of the enrichment",
                                    "title": "WebsetEnrichmentStatus"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Webset this enrichment belongs to."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
                                    "nullable": true
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The description of the enrichment task provided during the creation of the enrichment."
                                  },
                                  "format": {
                                    "type": "string",
                                    "enum": [
                                      "text",
                                      "date",
                                      "number",
                                      "options",
                                      "email",
                                      "phone",
                                      "url"
                                    ]
                                  },
                                  "options": {
                                    "type": "array",
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "label": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The label of the option"
                                        }
                                      },
                                      "required": [
                                        "label"
                                      ]
                                    },
                                    "description": "When the format is options, the different options for the enrichment agent to choose from.",
                                    "title": "WebsetEnrichmentOptions",
                                    "nullable": true
                                  },
                                  "instructions": {
                                    "type": "string",
                                    "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "default": {},
                                    "description": "The metadata of the enrichment",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the enrichment was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "The date and time the enrichment was updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "title",
                                  "description",
                                  "format",
                                  "options",
                                  "instructions",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The Enrichments to apply to the Webset Items."
                            },
                            "monitors": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "id": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The unique identifier for the Monitor"
                                  },
                                  "object": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "monitor"
                                    ],
                                    "description": "The type of object"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "enabled",
                                      "disabled"
                                    ],
                                    "description": "The status of the Monitor"
                                  },
                                  "websetId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The id of the Webset the Monitor belongs to"
                                  },
                                  "cadence": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "cron": {
                                        "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                        "type": [
                                          "string"
                                        ]
                                      },
                                      "timezone": {
                                        "description": "IANA timezone (e.g., \"America/New_York\")",
                                        "default": "Etc/UTC",
                                        "type": [
                                          "string"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "cron"
                                    ],
                                    "description": "How often the monitor will run"
                                  },
                                  "behavior": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "const": "search",
                                        "default": "search"
                                      },
                                      "config": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "query": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 10000,
                                            "description": "The query to search for. By default, the query from the last search is used."
                                          },
                                          "criteria": {
                                            "type": [
                                              "array"
                                            ],
                                            "items": {
                                              "type": [
                                                "object"
                                              ],
                                              "properties": {
                                                "description": {
                                                  "type": [
                                                    "string"
                                                  ],
                                                  "minLength": 2,
                                                  "maxLength": 1000
                                                }
                                              },
                                              "required": [
                                                "description"
                                              ]
                                            },
                                            "maxItems": 5,
                                            "description": "The criteria to search for. By default, the criteria from the last search is used."
                                          },
                                          "entity": {
                                            "oneOf": [
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "company",
                                                    "default": "company"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Company"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "person",
                                                    "default": "person"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Person"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "article",
                                                    "default": "article"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Article"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "research_paper",
                                                    "default": "research_paper"
                                                  }
                                                },
                                                "required": [
                                                  "type"
                                                ],
                                                "title": "Research Paper"
                                              },
                                              {
                                                "type": [
                                                  "object"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "const": "custom",
                                                    "default": "custom"
                                                  },
                                                  "description": {
                                                    "type": [
                                                      "string"
                                                    ],
                                                    "minLength": 2,
                                                    "maxLength": 200
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "description"
                                                ],
                                                "title": "Custom"
                                              }
                                            ]
                                          },
                                          "count": {
                                            "type": [
                                              "number"
                                            ],
                                            "exclusiveMinimum": 0,
                                            "description": "The maximum number of results to find"
                                          },
                                          "behavior": {
                                            "default": "append",
                                            "type": [
                                              "string"
                                            ],
                                            "enum": [
                                              "override",
                                              "append"
                                            ],
                                            "description": "The behaviour of the Search when it is added to a Webset."
                                          }
                                        },
                                        "required": [
                                          "count"
                                        ],
                                        "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "config"
                                    ],
                                    "description": "Behavior to perform when monitor runs"
                                  },
                                  "lastRun": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The unique identifier for the Monitor Run"
                                      },
                                      "object": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "monitor_run"
                                        ],
                                        "description": "The type of object"
                                      },
                                      "status": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "created",
                                          "running",
                                          "completed",
                                          "canceled",
                                          "failed"
                                        ],
                                        "description": "The status of the Monitor Run"
                                      },
                                      "monitorId": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "The monitor that the run is associated with"
                                      },
                                      "type": {
                                        "type": [
                                          "string"
                                        ],
                                        "enum": [
                                          "search",
                                          "refresh"
                                        ],
                                        "description": "The type of the Monitor Run"
                                      },
                                      "completedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run completed",
                                        "nullable": true
                                      },
                                      "failedAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run failed",
                                        "nullable": true
                                      },
                                      "failedReason": {
                                        "type": "string",
                                        "description": "The reason the run failed",
                                        "nullable": true
                                      },
                                      "canceledAt": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "When the run was canceled",
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was created"
                                      },
                                      "updatedAt": {
                                        "type": [
                                          "string"
                                        ],
                                        "format": "date-time",
                                        "description": "When the run was last updated"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "object",
                                      "monitorId",
                                      "status",
                                      "type",
                                      "completedAt",
                                      "failedAt",
                                      "failedReason",
                                      "canceledAt",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "nextRunAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Date and time when the next run will occur in",
                                    "nullable": true
                                  },
                                  "metadata": {
                                    "description": "Set of key-value pairs you want to associate with this object.",
                                    "type": [
                                      "object"
                                    ],
                                    "additionalProperties": {
                                      "type": [
                                        "string"
                                      ],
                                      "maxLength": 1000
                                    }
                                  },
                                  "createdAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was created"
                                  },
                                  "updatedAt": {
                                    "type": [
                                      "string"
                                    ],
                                    "format": "date-time",
                                    "description": "When the monitor was last updated"
                                  }
                                },
                                "required": [
                                  "id",
                                  "object",
                                  "status",
                                  "websetId",
                                  "cadence",
                                  "behavior",
                                  "lastRun",
                                  "nextRunAt",
                                  "metadata",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "description": "The Monitors for the Webset."
                            },
                            "streams": {
                              "type": [
                                "array"
                              ],
                              "items": {},
                              "description": "The Streams for the Webset."
                            },
                            "metadata": {
                              "default": {},
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the webset was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the webset was updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "status",
                            "externalId",
                            "title",
                            "searches",
                            "imports",
                            "enrichments",
                            "monitors",
                            "streams",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetPausedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.item.created",
                          "default": "webset.item.created"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Webset Item"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset_item",
                              "default": "webset_item"
                            },
                            "source": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "search",
                                "import"
                              ],
                              "description": "The source of the Item"
                            },
                            "sourceId": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the source"
                            },
                            "websetId": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Webset this Item belongs to."
                            },
                            "properties": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the person profile"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the relevance of the person"
                                    },
                                    "person": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The name of the person"
                                        },
                                        "location": {
                                          "type": "string",
                                          "description": "The location of the person",
                                          "nullable": true
                                        },
                                        "position": {
                                          "type": "string",
                                          "description": "The current work position of the person",
                                          "nullable": true
                                        },
                                        "company": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The name of the company"
                                            },
                                            "location": {
                                              "type": "string",
                                              "description": "The location the person is working at the company",
                                              "nullable": true
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "location"
                                          ],
                                          "title": "WebsetItemPersonCompanyPropertiesFields",
                                          "nullable": true
                                        },
                                        "pictureUrl": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The image URL of the person",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "location",
                                        "position",
                                        "company",
                                        "pictureUrl"
                                      ],
                                      "title": "WebsetItemPersonPropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "person"
                                  ]
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the company website"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the relevance of the company"
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "The text content of the company website",
                                      "nullable": true
                                    },
                                    "company": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The name of the company"
                                        },
                                        "location": {
                                          "type": "string",
                                          "description": "The main location of the company",
                                          "nullable": true
                                        },
                                        "employees": {
                                          "type": "number",
                                          "description": "The number of employees of the company",
                                          "nullable": true
                                        },
                                        "industry": {
                                          "type": "string",
                                          "description": "The industry of the company",
                                          "nullable": true
                                        },
                                        "about": {
                                          "type": "string",
                                          "description": "A short description of the company",
                                          "nullable": true
                                        },
                                        "logoUrl": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The logo URL of the company",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "location",
                                        "employees",
                                        "industry",
                                        "about",
                                        "logoUrl"
                                      ],
                                      "title": "WebsetItemCompanyPropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "content",
                                    "company"
                                  ]
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the article"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the relevance of the article"
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "The text content for the article",
                                      "nullable": true
                                    },
                                    "article": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the article",
                                          "nullable": true
                                        },
                                        "author": {
                                          "type": "string",
                                          "description": "The author(s) of the article",
                                          "nullable": true
                                        },
                                        "publishedAt": {
                                          "type": "string",
                                          "description": "The date and time the article was published",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "author",
                                        "publishedAt"
                                      ],
                                      "title": "WebsetItemArticlePropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "content",
                                    "article"
                                  ]
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the research paper"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the relevance of the research paper"
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "The text content of the research paper",
                                      "nullable": true
                                    },
                                    "researchPaper": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the research paper",
                                          "nullable": true
                                        },
                                        "author": {
                                          "type": "string",
                                          "description": "The author(s) of the research paper",
                                          "nullable": true
                                        },
                                        "publishedAt": {
                                          "type": "string",
                                          "description": "The date and time the research paper was published",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "author",
                                        "publishedAt"
                                      ],
                                      "title": "WebsetItemResearchPaperPropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "content",
                                    "researchPaper"
                                  ]
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the Item"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the Item"
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "The text content of the Item",
                                      "nullable": true
                                    },
                                    "custom": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the website",
                                          "nullable": true
                                        },
                                        "author": {
                                          "type": "string",
                                          "description": "The author(s) of the website",
                                          "nullable": true
                                        },
                                        "publishedAt": {
                                          "type": "string",
                                          "description": "The date and time the website was published",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "author",
                                        "publishedAt"
                                      ],
                                      "title": "WebsetItemCustomPropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "content",
                                    "custom"
                                  ]
                                }
                              ],
                              "description": "The properties of the Item"
                            },
                            "evaluations": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "criterion": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The description of the criterion"
                                  },
                                  "reasoning": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The reasoning for the result of the evaluation"
                                  },
                                  "satisfied": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "yes",
                                      "no",
                                      "unclear"
                                    ],
                                    "description": "The satisfaction of the criterion"
                                  },
                                  "references": {
                                    "default": [],
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the reference",
                                          "nullable": true
                                        },
                                        "snippet": {
                                          "type": "string",
                                          "description": "The relevant snippet of the reference content",
                                          "nullable": true
                                        },
                                        "url": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "uri",
                                          "description": "The URL of the reference"
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "snippet",
                                        "url"
                                      ]
                                    },
                                    "description": "The references used to generate the result."
                                  }
                                },
                                "required": [
                                  "criterion",
                                  "reasoning",
                                  "satisfied"
                                ]
                              },
                              "description": "The criteria evaluations of the item"
                            },
                            "enrichments": {
                              "type": "array",
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "const": "enrichment_result",
                                    "default": "enrichment_result"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the enrichment result."
                                  },
                                  "format": {
                                    "type": "string",
                                    "enum": [
                                      "text",
                                      "date",
                                      "number",
                                      "options",
                                      "email",
                                      "phone",
                                      "url"
                                    ]
                                  },
                                  "result": {
                                    "type": "array",
                                    "items": {
                                      "type": [
                                        "string"
                                      ]
                                    },
                                    "description": "The result of the enrichment.",
                                    "nullable": true
                                  },
                                  "reasoning": {
                                    "type": "string",
                                    "description": "The reasoning for the result when an Agent is used.",
                                    "nullable": true
                                  },
                                  "references": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the reference",
                                          "nullable": true
                                        },
                                        "snippet": {
                                          "type": "string",
                                          "description": "The relevant snippet of the reference content",
                                          "nullable": true
                                        },
                                        "url": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "uri",
                                          "description": "The URL of the reference"
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "snippet",
                                        "url"
                                      ]
                                    },
                                    "description": "The references used to generate the result."
                                  },
                                  "enrichmentId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The id of the Enrichment that generated the result"
                                  }
                                },
                                "required": [
                                  "object",
                                  "status",
                                  "format",
                                  "result",
                                  "reasoning",
                                  "references",
                                  "enrichmentId"
                                ]
                              },
                              "description": "The enrichments results of the Webset item",
                              "nullable": true
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the item was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the item was last updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "source",
                            "sourceId",
                            "websetId",
                            "properties",
                            "evaluations",
                            "enrichments",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetItemCreatedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.item.enriched",
                          "default": "webset.item.enriched"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Webset Item"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset_item",
                              "default": "webset_item"
                            },
                            "source": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "search",
                                "import"
                              ],
                              "description": "The source of the Item"
                            },
                            "sourceId": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the source"
                            },
                            "websetId": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Webset this Item belongs to."
                            },
                            "properties": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the person profile"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the relevance of the person"
                                    },
                                    "person": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The name of the person"
                                        },
                                        "location": {
                                          "type": "string",
                                          "description": "The location of the person",
                                          "nullable": true
                                        },
                                        "position": {
                                          "type": "string",
                                          "description": "The current work position of the person",
                                          "nullable": true
                                        },
                                        "company": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": [
                                                "string"
                                              ],
                                              "description": "The name of the company"
                                            },
                                            "location": {
                                              "type": "string",
                                              "description": "The location the person is working at the company",
                                              "nullable": true
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "location"
                                          ],
                                          "title": "WebsetItemPersonCompanyPropertiesFields",
                                          "nullable": true
                                        },
                                        "pictureUrl": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The image URL of the person",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "location",
                                        "position",
                                        "company",
                                        "pictureUrl"
                                      ],
                                      "title": "WebsetItemPersonPropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "person"
                                  ]
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the company website"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the relevance of the company"
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "The text content of the company website",
                                      "nullable": true
                                    },
                                    "company": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "name": {
                                          "type": [
                                            "string"
                                          ],
                                          "description": "The name of the company"
                                        },
                                        "location": {
                                          "type": "string",
                                          "description": "The main location of the company",
                                          "nullable": true
                                        },
                                        "employees": {
                                          "type": "number",
                                          "description": "The number of employees of the company",
                                          "nullable": true
                                        },
                                        "industry": {
                                          "type": "string",
                                          "description": "The industry of the company",
                                          "nullable": true
                                        },
                                        "about": {
                                          "type": "string",
                                          "description": "A short description of the company",
                                          "nullable": true
                                        },
                                        "logoUrl": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The logo URL of the company",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "location",
                                        "employees",
                                        "industry",
                                        "about",
                                        "logoUrl"
                                      ],
                                      "title": "WebsetItemCompanyPropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "content",
                                    "company"
                                  ]
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the article"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the relevance of the article"
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "The text content for the article",
                                      "nullable": true
                                    },
                                    "article": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the article",
                                          "nullable": true
                                        },
                                        "author": {
                                          "type": "string",
                                          "description": "The author(s) of the article",
                                          "nullable": true
                                        },
                                        "publishedAt": {
                                          "type": "string",
                                          "description": "The date and time the article was published",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "author",
                                        "publishedAt"
                                      ],
                                      "title": "WebsetItemArticlePropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "content",
                                    "article"
                                  ]
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the research paper"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the relevance of the research paper"
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "The text content of the research paper",
                                      "nullable": true
                                    },
                                    "researchPaper": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the research paper",
                                          "nullable": true
                                        },
                                        "author": {
                                          "type": "string",
                                          "description": "The author(s) of the research paper",
                                          "nullable": true
                                        },
                                        "publishedAt": {
                                          "type": "string",
                                          "description": "The date and time the research paper was published",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "author",
                                        "publishedAt"
                                      ],
                                      "title": "WebsetItemResearchPaperPropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "content",
                                    "researchPaper"
                                  ]
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "url": {
                                      "type": [
                                        "string"
                                      ],
                                      "format": "uri",
                                      "description": "The URL of the Item"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "description": "Short description of the Item"
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "The text content of the Item",
                                      "nullable": true
                                    },
                                    "custom": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the website",
                                          "nullable": true
                                        },
                                        "author": {
                                          "type": "string",
                                          "description": "The author(s) of the website",
                                          "nullable": true
                                        },
                                        "publishedAt": {
                                          "type": "string",
                                          "description": "The date and time the website was published",
                                          "nullable": true
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "author",
                                        "publishedAt"
                                      ],
                                      "title": "WebsetItemCustomPropertiesFields"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url",
                                    "description",
                                    "content",
                                    "custom"
                                  ]
                                }
                              ],
                              "description": "The properties of the Item"
                            },
                            "evaluations": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "criterion": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The description of the criterion"
                                  },
                                  "reasoning": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The reasoning for the result of the evaluation"
                                  },
                                  "satisfied": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "yes",
                                      "no",
                                      "unclear"
                                    ],
                                    "description": "The satisfaction of the criterion"
                                  },
                                  "references": {
                                    "default": [],
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the reference",
                                          "nullable": true
                                        },
                                        "snippet": {
                                          "type": "string",
                                          "description": "The relevant snippet of the reference content",
                                          "nullable": true
                                        },
                                        "url": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "uri",
                                          "description": "The URL of the reference"
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "snippet",
                                        "url"
                                      ]
                                    },
                                    "description": "The references used to generate the result."
                                  }
                                },
                                "required": [
                                  "criterion",
                                  "reasoning",
                                  "satisfied"
                                ]
                              },
                              "description": "The criteria evaluations of the item"
                            },
                            "enrichments": {
                              "type": "array",
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "const": "enrichment_result",
                                    "default": "enrichment_result"
                                  },
                                  "status": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "pending",
                                      "completed",
                                      "canceled"
                                    ],
                                    "description": "The status of the enrichment result."
                                  },
                                  "format": {
                                    "type": "string",
                                    "enum": [
                                      "text",
                                      "date",
                                      "number",
                                      "options",
                                      "email",
                                      "phone",
                                      "url"
                                    ]
                                  },
                                  "result": {
                                    "type": "array",
                                    "items": {
                                      "type": [
                                        "string"
                                      ]
                                    },
                                    "description": "The result of the enrichment.",
                                    "nullable": true
                                  },
                                  "reasoning": {
                                    "type": "string",
                                    "description": "The reasoning for the result when an Agent is used.",
                                    "nullable": true
                                  },
                                  "references": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the reference",
                                          "nullable": true
                                        },
                                        "snippet": {
                                          "type": "string",
                                          "description": "The relevant snippet of the reference content",
                                          "nullable": true
                                        },
                                        "url": {
                                          "type": [
                                            "string"
                                          ],
                                          "format": "uri",
                                          "description": "The URL of the reference"
                                        }
                                      },
                                      "required": [
                                        "title",
                                        "snippet",
                                        "url"
                                      ]
                                    },
                                    "description": "The references used to generate the result."
                                  },
                                  "enrichmentId": {
                                    "type": [
                                      "string"
                                    ],
                                    "description": "The id of the Enrichment that generated the result"
                                  }
                                },
                                "required": [
                                  "object",
                                  "status",
                                  "format",
                                  "result",
                                  "reasoning",
                                  "references",
                                  "enrichmentId"
                                ]
                              },
                              "description": "The enrichments results of the Webset item",
                              "nullable": true
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the item was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the item was last updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "source",
                            "sourceId",
                            "websetId",
                            "properties",
                            "evaluations",
                            "enrichments",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetItemEnrichedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.search.created",
                          "default": "webset.search.created"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the search"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset_search",
                              "default": "webset_search"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "created",
                                "pending",
                                "running",
                                "completed",
                                "canceled"
                              ],
                              "description": "The status of the search",
                              "title": "WebsetSearchStatus"
                            },
                            "websetId": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Webset this search belongs to"
                            },
                            "query": {
                              "description": "The query used to create the search.",
                              "type": [
                                "string"
                              ],
                              "minLength": 1,
                              "maxLength": 5000
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "criteria": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "The description of the criterion",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 1000
                                  },
                                  "successRate": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 0,
                                    "maximum": 100,
                                    "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                  }
                                },
                                "required": [
                                  "description",
                                  "successRate"
                                ]
                              },
                              "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "minimum": 1,
                              "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                            },
                            "behavior": {
                              "type": "string",
                              "enum": [
                                "override",
                                "append"
                              ]
                            },
                            "exclude": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import",
                                      "webset"
                                    ]
                                  },
                                  "id": {
                                    "type": [
                                      "string"
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "id"
                                ]
                              },
                              "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                            },
                            "scope": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import",
                                      "webset"
                                    ]
                                  },
                                  "id": {
                                    "type": [
                                      "string"
                                    ]
                                  },
                                  "relationship": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "definition": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                      },
                                      "limit": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 1,
                                        "maximum": 10
                                      }
                                    },
                                    "required": [
                                      "definition",
                                      "limit"
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "id"
                                ]
                              },
                              "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                            },
                            "progress": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "found": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The number of results found so far"
                                },
                                "analyzed": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The number of results analyzed so far"
                                },
                                "completion": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "The completion percentage of the search"
                                },
                                "timeLeft": {
                                  "type": "number",
                                  "description": "The estimated time remaining in seconds, null if unknown",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "found",
                                "analyzed",
                                "completion",
                                "timeLeft"
                              ],
                              "description": "The progress of the search"
                            },
                            "recall": {
                              "type": "object",
                              "properties": {
                                "expected": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "total": {
                                      "type": [
                                        "number"
                                      ],
                                      "description": "The estimated total number of potential matches"
                                    },
                                    "confidence": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "high",
                                        "medium",
                                        "low"
                                      ],
                                      "description": "The confidence in the estimate"
                                    },
                                    "bounds": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "min": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The minimum estimated total number of potential matches"
                                        },
                                        "max": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The maximum estimated total number of potential matches"
                                        }
                                      },
                                      "required": [
                                        "min",
                                        "max"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "total",
                                    "confidence",
                                    "bounds"
                                  ]
                                },
                                "reasoning": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The reasoning for the estimate"
                                }
                              },
                              "required": [
                                "expected",
                                "reasoning"
                              ],
                              "description": "Recall metrics for the search, null if not yet computed or requested.",
                              "nullable": true
                            },
                            "metadata": {
                              "default": {},
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "canceledAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time the search was canceled",
                              "nullable": true
                            },
                            "canceledReason": {
                              "type": "string",
                              "enum": [
                                "webset_deleted",
                                "webset_canceled"
                              ]
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the search was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the search was updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "websetId",
                            "status",
                            "query",
                            "entity",
                            "criteria",
                            "count",
                            "exclude",
                            "scope",
                            "progress",
                            "recall",
                            "canceledAt",
                            "canceledReason",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetSearchCreatedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.search.updated",
                          "default": "webset.search.updated"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the search"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset_search",
                              "default": "webset_search"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "created",
                                "pending",
                                "running",
                                "completed",
                                "canceled"
                              ],
                              "description": "The status of the search",
                              "title": "WebsetSearchStatus"
                            },
                            "websetId": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Webset this search belongs to"
                            },
                            "query": {
                              "description": "The query used to create the search.",
                              "type": [
                                "string"
                              ],
                              "minLength": 1,
                              "maxLength": 5000
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "criteria": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "The description of the criterion",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 1000
                                  },
                                  "successRate": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 0,
                                    "maximum": 100,
                                    "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                  }
                                },
                                "required": [
                                  "description",
                                  "successRate"
                                ]
                              },
                              "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "minimum": 1,
                              "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                            },
                            "behavior": {
                              "type": "string",
                              "enum": [
                                "override",
                                "append"
                              ]
                            },
                            "exclude": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import",
                                      "webset"
                                    ]
                                  },
                                  "id": {
                                    "type": [
                                      "string"
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "id"
                                ]
                              },
                              "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                            },
                            "scope": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import",
                                      "webset"
                                    ]
                                  },
                                  "id": {
                                    "type": [
                                      "string"
                                    ]
                                  },
                                  "relationship": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "definition": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                      },
                                      "limit": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 1,
                                        "maximum": 10
                                      }
                                    },
                                    "required": [
                                      "definition",
                                      "limit"
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "id"
                                ]
                              },
                              "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                            },
                            "progress": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "found": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The number of results found so far"
                                },
                                "analyzed": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The number of results analyzed so far"
                                },
                                "completion": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "The completion percentage of the search"
                                },
                                "timeLeft": {
                                  "type": "number",
                                  "description": "The estimated time remaining in seconds, null if unknown",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "found",
                                "analyzed",
                                "completion",
                                "timeLeft"
                              ],
                              "description": "The progress of the search"
                            },
                            "recall": {
                              "type": "object",
                              "properties": {
                                "expected": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "total": {
                                      "type": [
                                        "number"
                                      ],
                                      "description": "The estimated total number of potential matches"
                                    },
                                    "confidence": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "high",
                                        "medium",
                                        "low"
                                      ],
                                      "description": "The confidence in the estimate"
                                    },
                                    "bounds": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "min": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The minimum estimated total number of potential matches"
                                        },
                                        "max": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The maximum estimated total number of potential matches"
                                        }
                                      },
                                      "required": [
                                        "min",
                                        "max"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "total",
                                    "confidence",
                                    "bounds"
                                  ]
                                },
                                "reasoning": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The reasoning for the estimate"
                                }
                              },
                              "required": [
                                "expected",
                                "reasoning"
                              ],
                              "description": "Recall metrics for the search, null if not yet computed or requested.",
                              "nullable": true
                            },
                            "metadata": {
                              "default": {},
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "canceledAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time the search was canceled",
                              "nullable": true
                            },
                            "canceledReason": {
                              "type": "string",
                              "enum": [
                                "webset_deleted",
                                "webset_canceled"
                              ]
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the search was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the search was updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "websetId",
                            "status",
                            "query",
                            "entity",
                            "criteria",
                            "count",
                            "exclude",
                            "scope",
                            "progress",
                            "recall",
                            "canceledAt",
                            "canceledReason",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetSearchUpdatedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.search.canceled",
                          "default": "webset.search.canceled"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the search"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset_search",
                              "default": "webset_search"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "created",
                                "pending",
                                "running",
                                "completed",
                                "canceled"
                              ],
                              "description": "The status of the search",
                              "title": "WebsetSearchStatus"
                            },
                            "websetId": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Webset this search belongs to"
                            },
                            "query": {
                              "description": "The query used to create the search.",
                              "type": [
                                "string"
                              ],
                              "minLength": 1,
                              "maxLength": 5000
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "criteria": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "The description of the criterion",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 1000
                                  },
                                  "successRate": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 0,
                                    "maximum": 100,
                                    "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                  }
                                },
                                "required": [
                                  "description",
                                  "successRate"
                                ]
                              },
                              "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "minimum": 1,
                              "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                            },
                            "behavior": {
                              "type": "string",
                              "enum": [
                                "override",
                                "append"
                              ]
                            },
                            "exclude": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import",
                                      "webset"
                                    ]
                                  },
                                  "id": {
                                    "type": [
                                      "string"
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "id"
                                ]
                              },
                              "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                            },
                            "scope": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import",
                                      "webset"
                                    ]
                                  },
                                  "id": {
                                    "type": [
                                      "string"
                                    ]
                                  },
                                  "relationship": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "definition": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                      },
                                      "limit": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 1,
                                        "maximum": 10
                                      }
                                    },
                                    "required": [
                                      "definition",
                                      "limit"
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "id"
                                ]
                              },
                              "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                            },
                            "progress": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "found": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The number of results found so far"
                                },
                                "analyzed": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The number of results analyzed so far"
                                },
                                "completion": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "The completion percentage of the search"
                                },
                                "timeLeft": {
                                  "type": "number",
                                  "description": "The estimated time remaining in seconds, null if unknown",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "found",
                                "analyzed",
                                "completion",
                                "timeLeft"
                              ],
                              "description": "The progress of the search"
                            },
                            "recall": {
                              "type": "object",
                              "properties": {
                                "expected": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "total": {
                                      "type": [
                                        "number"
                                      ],
                                      "description": "The estimated total number of potential matches"
                                    },
                                    "confidence": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "high",
                                        "medium",
                                        "low"
                                      ],
                                      "description": "The confidence in the estimate"
                                    },
                                    "bounds": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "min": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The minimum estimated total number of potential matches"
                                        },
                                        "max": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The maximum estimated total number of potential matches"
                                        }
                                      },
                                      "required": [
                                        "min",
                                        "max"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "total",
                                    "confidence",
                                    "bounds"
                                  ]
                                },
                                "reasoning": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The reasoning for the estimate"
                                }
                              },
                              "required": [
                                "expected",
                                "reasoning"
                              ],
                              "description": "Recall metrics for the search, null if not yet computed or requested.",
                              "nullable": true
                            },
                            "metadata": {
                              "default": {},
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "canceledAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time the search was canceled",
                              "nullable": true
                            },
                            "canceledReason": {
                              "type": "string",
                              "enum": [
                                "webset_deleted",
                                "webset_canceled"
                              ]
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the search was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the search was updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "websetId",
                            "status",
                            "query",
                            "entity",
                            "criteria",
                            "count",
                            "exclude",
                            "scope",
                            "progress",
                            "recall",
                            "canceledAt",
                            "canceledReason",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetSearchCanceledEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "webset.search.completed",
                          "default": "webset.search.completed"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the search"
                            },
                            "object": {
                              "type": "string",
                              "const": "webset_search",
                              "default": "webset_search"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "created",
                                "pending",
                                "running",
                                "completed",
                                "canceled"
                              ],
                              "description": "The status of the search",
                              "title": "WebsetSearchStatus"
                            },
                            "websetId": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Webset this search belongs to"
                            },
                            "query": {
                              "description": "The query used to create the search.",
                              "type": [
                                "string"
                              ],
                              "minLength": 1,
                              "maxLength": 5000
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "criteria": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "The description of the criterion",
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 1000
                                  },
                                  "successRate": {
                                    "type": [
                                      "number"
                                    ],
                                    "minimum": 0,
                                    "maximum": 100,
                                    "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                                  }
                                },
                                "required": [
                                  "description",
                                  "successRate"
                                ]
                              },
                              "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "minimum": 1,
                              "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                            },
                            "behavior": {
                              "type": "string",
                              "enum": [
                                "override",
                                "append"
                              ]
                            },
                            "exclude": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import",
                                      "webset"
                                    ]
                                  },
                                  "id": {
                                    "type": [
                                      "string"
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "id"
                                ]
                              },
                              "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                            },
                            "scope": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "source": {
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "import",
                                      "webset"
                                    ]
                                  },
                                  "id": {
                                    "type": [
                                      "string"
                                    ]
                                  },
                                  "relationship": {
                                    "type": [
                                      "object"
                                    ],
                                    "properties": {
                                      "definition": {
                                        "type": [
                                          "string"
                                        ],
                                        "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                                      },
                                      "limit": {
                                        "type": [
                                          "number"
                                        ],
                                        "minimum": 1,
                                        "maximum": 10
                                      }
                                    },
                                    "required": [
                                      "definition",
                                      "limit"
                                    ]
                                  }
                                },
                                "required": [
                                  "source",
                                  "id"
                                ]
                              },
                              "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                            },
                            "progress": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "found": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The number of results found so far"
                                },
                                "analyzed": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The number of results analyzed so far"
                                },
                                "completion": {
                                  "type": [
                                    "number"
                                  ],
                                  "minimum": 0,
                                  "maximum": 100,
                                  "description": "The completion percentage of the search"
                                },
                                "timeLeft": {
                                  "type": "number",
                                  "description": "The estimated time remaining in seconds, null if unknown",
                                  "nullable": true
                                }
                              },
                              "required": [
                                "found",
                                "analyzed",
                                "completion",
                                "timeLeft"
                              ],
                              "description": "The progress of the search"
                            },
                            "recall": {
                              "type": "object",
                              "properties": {
                                "expected": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "total": {
                                      "type": [
                                        "number"
                                      ],
                                      "description": "The estimated total number of potential matches"
                                    },
                                    "confidence": {
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "high",
                                        "medium",
                                        "low"
                                      ],
                                      "description": "The confidence in the estimate"
                                    },
                                    "bounds": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "min": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The minimum estimated total number of potential matches"
                                        },
                                        "max": {
                                          "type": [
                                            "number"
                                          ],
                                          "description": "The maximum estimated total number of potential matches"
                                        }
                                      },
                                      "required": [
                                        "min",
                                        "max"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "total",
                                    "confidence",
                                    "bounds"
                                  ]
                                },
                                "reasoning": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The reasoning for the estimate"
                                }
                              },
                              "required": [
                                "expected",
                                "reasoning"
                              ],
                              "description": "Recall metrics for the search, null if not yet computed or requested.",
                              "nullable": true
                            },
                            "metadata": {
                              "default": {},
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "canceledAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The date and time the search was canceled",
                              "nullable": true
                            },
                            "canceledReason": {
                              "type": "string",
                              "enum": [
                                "webset_deleted",
                                "webset_canceled"
                              ]
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the search was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "The date and time the search was updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "websetId",
                            "status",
                            "query",
                            "entity",
                            "criteria",
                            "count",
                            "exclude",
                            "scope",
                            "progress",
                            "recall",
                            "canceledAt",
                            "canceledReason",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "WebsetSearchCompletedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "import.created",
                          "default": "import.created"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Import"
                            },
                            "object": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "import"
                              ],
                              "description": "The type of object"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "failed"
                              ],
                              "description": "The status of the Import"
                            },
                            "format": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "csv",
                                "webset"
                              ],
                              "description": "The format of the import."
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "title": {
                              "type": [
                                "string"
                              ],
                              "description": "The title of the import"
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "description": "The number of entities in the import"
                            },
                            "metadata": {
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "failedReason": {
                              "type": "string",
                              "enum": [
                                "invalid_format",
                                "invalid_file_content",
                                "missing_identifier"
                              ],
                              "description": "The reason the import failed",
                              "nullable": true
                            },
                            "failedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "When the import failed",
                              "nullable": true
                            },
                            "failedMessage": {
                              "type": "string",
                              "description": "A human readable message of the import failure",
                              "nullable": true
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the import was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the import was last updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "status",
                            "format",
                            "entity",
                            "title",
                            "count",
                            "metadata",
                            "failedReason",
                            "failedAt",
                            "failedMessage",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "ImportCreatedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "import.completed",
                          "default": "import.completed"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Import"
                            },
                            "object": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "import"
                              ],
                              "description": "The type of object"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "failed"
                              ],
                              "description": "The status of the Import"
                            },
                            "format": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "csv",
                                "webset"
                              ],
                              "description": "The format of the import."
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "title": {
                              "type": [
                                "string"
                              ],
                              "description": "The title of the import"
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "description": "The number of entities in the import"
                            },
                            "metadata": {
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "failedReason": {
                              "type": "string",
                              "enum": [
                                "invalid_format",
                                "invalid_file_content",
                                "missing_identifier"
                              ],
                              "description": "The reason the import failed",
                              "nullable": true
                            },
                            "failedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "When the import failed",
                              "nullable": true
                            },
                            "failedMessage": {
                              "type": "string",
                              "description": "A human readable message of the import failure",
                              "nullable": true
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the import was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the import was last updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "status",
                            "format",
                            "entity",
                            "title",
                            "count",
                            "metadata",
                            "failedReason",
                            "failedAt",
                            "failedMessage",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "ImportCompletedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "monitor.created",
                          "default": "monitor.created"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Monitor"
                            },
                            "object": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "monitor"
                              ],
                              "description": "The type of object"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "enabled",
                                "disabled"
                              ],
                              "description": "The status of the Monitor"
                            },
                            "websetId": {
                              "type": [
                                "string"
                              ],
                              "description": "The id of the Webset the Monitor belongs to"
                            },
                            "cadence": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "cron": {
                                  "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                  "type": [
                                    "string"
                                  ]
                                },
                                "timezone": {
                                  "description": "IANA timezone (e.g., \"America/New_York\")",
                                  "default": "Etc/UTC",
                                  "type": [
                                    "string"
                                  ]
                                }
                              },
                              "required": [
                                "cron"
                              ],
                              "description": "How often the monitor will run"
                            },
                            "behavior": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "search",
                                  "default": "search"
                                },
                                "config": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "query": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 10000,
                                      "description": "The query to search for. By default, the query from the last search is used."
                                    },
                                    "criteria": {
                                      "type": [
                                        "array"
                                      ],
                                      "items": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 1000
                                          }
                                        },
                                        "required": [
                                          "description"
                                        ]
                                      },
                                      "maxItems": 5,
                                      "description": "The criteria to search for. By default, the criteria from the last search is used."
                                    },
                                    "entity": {
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "company",
                                              "default": "company"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Company"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "person",
                                              "default": "person"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Person"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "article",
                                              "default": "article"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Article"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "research_paper",
                                              "default": "research_paper"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Research Paper"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "custom",
                                              "default": "custom"
                                            },
                                            "description": {
                                              "type": [
                                                "string"
                                              ],
                                              "minLength": 2,
                                              "maxLength": 200
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "description"
                                          ],
                                          "title": "Custom"
                                        }
                                      ]
                                    },
                                    "count": {
                                      "type": [
                                        "number"
                                      ],
                                      "exclusiveMinimum": 0,
                                      "description": "The maximum number of results to find"
                                    },
                                    "behavior": {
                                      "default": "append",
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "override",
                                        "append"
                                      ],
                                      "description": "The behaviour of the Search when it is added to a Webset."
                                    }
                                  },
                                  "required": [
                                    "count"
                                  ],
                                  "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                }
                              },
                              "required": [
                                "type",
                                "config"
                              ],
                              "description": "Behavior to perform when monitor runs"
                            },
                            "lastRun": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "id": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The unique identifier for the Monitor Run"
                                },
                                "object": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "monitor_run"
                                  ],
                                  "description": "The type of object"
                                },
                                "status": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "created",
                                    "running",
                                    "completed",
                                    "canceled",
                                    "failed"
                                  ],
                                  "description": "The status of the Monitor Run"
                                },
                                "monitorId": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The monitor that the run is associated with"
                                },
                                "type": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "search",
                                    "refresh"
                                  ],
                                  "description": "The type of the Monitor Run"
                                },
                                "completedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the run completed",
                                  "nullable": true
                                },
                                "failedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the run failed",
                                  "nullable": true
                                },
                                "failedReason": {
                                  "type": "string",
                                  "description": "The reason the run failed",
                                  "nullable": true
                                },
                                "canceledAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the run was canceled",
                                  "nullable": true
                                },
                                "createdAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the run was created"
                                },
                                "updatedAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the run was last updated"
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "monitorId",
                                "status",
                                "type",
                                "completedAt",
                                "failedAt",
                                "failedReason",
                                "canceledAt",
                                "createdAt",
                                "updatedAt"
                              ]
                            },
                            "nextRunAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Date and time when the next run will occur in",
                              "nullable": true
                            },
                            "metadata": {
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the monitor was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the monitor was last updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "status",
                            "websetId",
                            "cadence",
                            "behavior",
                            "lastRun",
                            "nextRunAt",
                            "metadata",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "MonitorCreatedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "monitor.updated",
                          "default": "monitor.updated"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Monitor"
                            },
                            "object": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "monitor"
                              ],
                              "description": "The type of object"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "enabled",
                                "disabled"
                              ],
                              "description": "The status of the Monitor"
                            },
                            "websetId": {
                              "type": [
                                "string"
                              ],
                              "description": "The id of the Webset the Monitor belongs to"
                            },
                            "cadence": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "cron": {
                                  "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                  "type": [
                                    "string"
                                  ]
                                },
                                "timezone": {
                                  "description": "IANA timezone (e.g., \"America/New_York\")",
                                  "default": "Etc/UTC",
                                  "type": [
                                    "string"
                                  ]
                                }
                              },
                              "required": [
                                "cron"
                              ],
                              "description": "How often the monitor will run"
                            },
                            "behavior": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "search",
                                  "default": "search"
                                },
                                "config": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "query": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 10000,
                                      "description": "The query to search for. By default, the query from the last search is used."
                                    },
                                    "criteria": {
                                      "type": [
                                        "array"
                                      ],
                                      "items": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 1000
                                          }
                                        },
                                        "required": [
                                          "description"
                                        ]
                                      },
                                      "maxItems": 5,
                                      "description": "The criteria to search for. By default, the criteria from the last search is used."
                                    },
                                    "entity": {
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "company",
                                              "default": "company"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Company"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "person",
                                              "default": "person"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Person"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "article",
                                              "default": "article"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Article"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "research_paper",
                                              "default": "research_paper"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Research Paper"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "custom",
                                              "default": "custom"
                                            },
                                            "description": {
                                              "type": [
                                                "string"
                                              ],
                                              "minLength": 2,
                                              "maxLength": 200
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "description"
                                          ],
                                          "title": "Custom"
                                        }
                                      ]
                                    },
                                    "count": {
                                      "type": [
                                        "number"
                                      ],
                                      "exclusiveMinimum": 0,
                                      "description": "The maximum number of results to find"
                                    },
                                    "behavior": {
                                      "default": "append",
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "override",
                                        "append"
                                      ],
                                      "description": "The behaviour of the Search when it is added to a Webset."
                                    }
                                  },
                                  "required": [
                                    "count"
                                  ],
                                  "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                }
                              },
                              "required": [
                                "type",
                                "config"
                              ],
                              "description": "Behavior to perform when monitor runs"
                            },
                            "lastRun": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "id": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The unique identifier for the Monitor Run"
                                },
                                "object": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "monitor_run"
                                  ],
                                  "description": "The type of object"
                                },
                                "status": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "created",
                                    "running",
                                    "completed",
                                    "canceled",
                                    "failed"
                                  ],
                                  "description": "The status of the Monitor Run"
                                },
                                "monitorId": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The monitor that the run is associated with"
                                },
                                "type": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "search",
                                    "refresh"
                                  ],
                                  "description": "The type of the Monitor Run"
                                },
                                "completedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the run completed",
                                  "nullable": true
                                },
                                "failedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the run failed",
                                  "nullable": true
                                },
                                "failedReason": {
                                  "type": "string",
                                  "description": "The reason the run failed",
                                  "nullable": true
                                },
                                "canceledAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the run was canceled",
                                  "nullable": true
                                },
                                "createdAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the run was created"
                                },
                                "updatedAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the run was last updated"
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "monitorId",
                                "status",
                                "type",
                                "completedAt",
                                "failedAt",
                                "failedReason",
                                "canceledAt",
                                "createdAt",
                                "updatedAt"
                              ]
                            },
                            "nextRunAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Date and time when the next run will occur in",
                              "nullable": true
                            },
                            "metadata": {
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the monitor was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the monitor was last updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "status",
                            "websetId",
                            "cadence",
                            "behavior",
                            "lastRun",
                            "nextRunAt",
                            "metadata",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "MonitorUpdatedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "monitor.deleted",
                          "default": "monitor.deleted"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Monitor"
                            },
                            "object": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "monitor"
                              ],
                              "description": "The type of object"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "enabled",
                                "disabled"
                              ],
                              "description": "The status of the Monitor"
                            },
                            "websetId": {
                              "type": [
                                "string"
                              ],
                              "description": "The id of the Webset the Monitor belongs to"
                            },
                            "cadence": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "cron": {
                                  "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                  "type": [
                                    "string"
                                  ]
                                },
                                "timezone": {
                                  "description": "IANA timezone (e.g., \"America/New_York\")",
                                  "default": "Etc/UTC",
                                  "type": [
                                    "string"
                                  ]
                                }
                              },
                              "required": [
                                "cron"
                              ],
                              "description": "How often the monitor will run"
                            },
                            "behavior": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "const": "search",
                                  "default": "search"
                                },
                                "config": {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "query": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 10000,
                                      "description": "The query to search for. By default, the query from the last search is used."
                                    },
                                    "criteria": {
                                      "type": [
                                        "array"
                                      ],
                                      "items": {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 1000
                                          }
                                        },
                                        "required": [
                                          "description"
                                        ]
                                      },
                                      "maxItems": 5,
                                      "description": "The criteria to search for. By default, the criteria from the last search is used."
                                    },
                                    "entity": {
                                      "oneOf": [
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "company",
                                              "default": "company"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Company"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "person",
                                              "default": "person"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Person"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "article",
                                              "default": "article"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Article"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "research_paper",
                                              "default": "research_paper"
                                            }
                                          },
                                          "required": [
                                            "type"
                                          ],
                                          "title": "Research Paper"
                                        },
                                        {
                                          "type": [
                                            "object"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "const": "custom",
                                              "default": "custom"
                                            },
                                            "description": {
                                              "type": [
                                                "string"
                                              ],
                                              "minLength": 2,
                                              "maxLength": 200
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "description"
                                          ],
                                          "title": "Custom"
                                        }
                                      ]
                                    },
                                    "count": {
                                      "type": [
                                        "number"
                                      ],
                                      "exclusiveMinimum": 0,
                                      "description": "The maximum number of results to find"
                                    },
                                    "behavior": {
                                      "default": "append",
                                      "type": [
                                        "string"
                                      ],
                                      "enum": [
                                        "override",
                                        "append"
                                      ],
                                      "description": "The behaviour of the Search when it is added to a Webset."
                                    }
                                  },
                                  "required": [
                                    "count"
                                  ],
                                  "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                                }
                              },
                              "required": [
                                "type",
                                "config"
                              ],
                              "description": "Behavior to perform when monitor runs"
                            },
                            "lastRun": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "id": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The unique identifier for the Monitor Run"
                                },
                                "object": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "monitor_run"
                                  ],
                                  "description": "The type of object"
                                },
                                "status": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "created",
                                    "running",
                                    "completed",
                                    "canceled",
                                    "failed"
                                  ],
                                  "description": "The status of the Monitor Run"
                                },
                                "monitorId": {
                                  "type": [
                                    "string"
                                  ],
                                  "description": "The monitor that the run is associated with"
                                },
                                "type": {
                                  "type": [
                                    "string"
                                  ],
                                  "enum": [
                                    "search",
                                    "refresh"
                                  ],
                                  "description": "The type of the Monitor Run"
                                },
                                "completedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the run completed",
                                  "nullable": true
                                },
                                "failedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the run failed",
                                  "nullable": true
                                },
                                "failedReason": {
                                  "type": "string",
                                  "description": "The reason the run failed",
                                  "nullable": true
                                },
                                "canceledAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "When the run was canceled",
                                  "nullable": true
                                },
                                "createdAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the run was created"
                                },
                                "updatedAt": {
                                  "type": [
                                    "string"
                                  ],
                                  "format": "date-time",
                                  "description": "When the run was last updated"
                                }
                              },
                              "required": [
                                "id",
                                "object",
                                "monitorId",
                                "status",
                                "type",
                                "completedAt",
                                "failedAt",
                                "failedReason",
                                "canceledAt",
                                "createdAt",
                                "updatedAt"
                              ]
                            },
                            "nextRunAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Date and time when the next run will occur in",
                              "nullable": true
                            },
                            "metadata": {
                              "description": "Set of key-value pairs you want to associate with this object.",
                              "type": [
                                "object"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string"
                                ],
                                "maxLength": 1000
                              }
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the monitor was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the monitor was last updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "status",
                            "websetId",
                            "cadence",
                            "behavior",
                            "lastRun",
                            "nextRunAt",
                            "metadata",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "MonitorDeletedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "monitor.run.created",
                          "default": "monitor.run.created"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Monitor Run"
                            },
                            "object": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "monitor_run"
                              ],
                              "description": "The type of object"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "created",
                                "running",
                                "completed",
                                "canceled",
                                "failed"
                              ],
                              "description": "The status of the Monitor Run"
                            },
                            "monitorId": {
                              "type": [
                                "string"
                              ],
                              "description": "The monitor that the run is associated with"
                            },
                            "type": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "search",
                                "refresh"
                              ],
                              "description": "The type of the Monitor Run"
                            },
                            "completedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "When the run completed",
                              "nullable": true
                            },
                            "failedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "When the run failed",
                              "nullable": true
                            },
                            "failedReason": {
                              "type": "string",
                              "description": "The reason the run failed",
                              "nullable": true
                            },
                            "canceledAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "When the run was canceled",
                              "nullable": true
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the run was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the run was last updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "monitorId",
                            "status",
                            "type",
                            "completedAt",
                            "failedAt",
                            "failedReason",
                            "canceledAt",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "MonitorRunCreatedEvent"
                    },
                    {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "description": "The unique identifier for the event",
                          "type": [
                            "string"
                          ]
                        },
                        "object": {
                          "type": "string",
                          "const": "event",
                          "default": "event"
                        },
                        "type": {
                          "type": "string",
                          "const": "monitor.run.completed",
                          "default": "monitor.run.completed"
                        },
                        "data": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "id": {
                              "type": [
                                "string"
                              ],
                              "description": "The unique identifier for the Monitor Run"
                            },
                            "object": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "monitor_run"
                              ],
                              "description": "The type of object"
                            },
                            "status": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "created",
                                "running",
                                "completed",
                                "canceled",
                                "failed"
                              ],
                              "description": "The status of the Monitor Run"
                            },
                            "monitorId": {
                              "type": [
                                "string"
                              ],
                              "description": "The monitor that the run is associated with"
                            },
                            "type": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "search",
                                "refresh"
                              ],
                              "description": "The type of the Monitor Run"
                            },
                            "completedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "When the run completed",
                              "nullable": true
                            },
                            "failedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "When the run failed",
                              "nullable": true
                            },
                            "failedReason": {
                              "type": "string",
                              "description": "The reason the run failed",
                              "nullable": true
                            },
                            "canceledAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "When the run was canceled",
                              "nullable": true
                            },
                            "createdAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the run was created"
                            },
                            "updatedAt": {
                              "type": [
                                "string"
                              ],
                              "format": "date-time",
                              "description": "When the run was last updated"
                            }
                          },
                          "required": [
                            "id",
                            "object",
                            "monitorId",
                            "status",
                            "type",
                            "completedAt",
                            "failedAt",
                            "failedReason",
                            "canceledAt",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "The date and time the event was created"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "type",
                        "data",
                        "createdAt"
                      ],
                      "title": "MonitorRunCompletedEvent"
                    }
                  ],
                  "title": "Event"
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          },
          "404": {
            "description": "Event not found",
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Get an Event",
        "tags": [
          "Events"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst event = await exa.websets.events.get('event_id');\n\nconsole.log(`Event: ${event.id} - ${event.type}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nevent = exa.websets.events.get('event_id')\n\nprint(f'Event: {event.id} - {event.type}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{webset}/searches": {
      "post": {
        "description": "Creates a new Search for the Webset.\n\nThe default behavior is to reuse the previous Search results and evaluate them against the new criteria.",
        "operationId": "websets-searches-create",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id of the Webset",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "count": {
                    "type": [
                      "number"
                    ],
                    "minimum": 1,
                    "description": "Number of Items the Search will attempt to find.\n\nThe actual number of Items found may be less than this number depending on the query complexity."
                  },
                  "query": {
                    "type": [
                      "string"
                    ],
                    "minLength": 1,
                    "maxLength": 5000,
                    "description": "Natural language search query describing what you are looking for.\n\nBe specific and descriptive about your requirements, characteristics, and any constraints that help narrow down the results.\n\nAny URLs provided will be crawled and used as additional context for the search.",
                    "examples": [
                      "Marketing agencies based in the US, that focus on consumer products. Get brands worked with and city",
                      "AI startups in Europe that raised Series A funding in 2024",
                      "SaaS companies with 50-200 employees in the fintech space"
                    ]
                  },
                  "entity": {
                    "oneOf": [
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "company",
                            "default": "company"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Company"
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "person",
                            "default": "person"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Person"
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "article",
                            "default": "article"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Article"
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "research_paper",
                            "default": "research_paper"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "title": "Research Paper"
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "custom",
                            "default": "custom"
                          },
                          "description": {
                            "type": [
                              "string"
                            ],
                            "minLength": 2,
                            "maxLength": 200
                          }
                        },
                        "required": [
                          "type",
                          "description"
                        ],
                        "title": "Custom"
                      }
                    ]
                  },
                  "criteria": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "description": {
                          "type": [
                            "string"
                          ],
                          "minLength": 1,
                          "maxLength": 1000,
                          "description": "The description of the criterion"
                        }
                      },
                      "required": [
                        "description"
                      ]
                    },
                    "minItems": 1,
                    "maxItems": 5,
                    "description": "Criteria every item is evaluated against.\n\nIt's not required to provide your own criteria, we automatically detect the criteria from all the information provided in the query. Only use this when you need more fine control."
                  },
                  "exclude": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "source": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "import",
                            "webset"
                          ]
                        },
                        "id": {
                          "description": "The ID of the source to exclude.",
                          "type": [
                            "string"
                          ],
                          "minLength": 1
                        }
                      },
                      "required": [
                        "source",
                        "id"
                      ]
                    },
                    "description": "Sources (existing imports or websets) to exclude from search results. Any results found within these sources will be omitted to prevent finding them during search."
                  },
                  "scope": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "source": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "import",
                            "webset"
                          ]
                        },
                        "id": {
                          "type": [
                            "string"
                          ],
                          "minLength": 1,
                          "description": "The ID of the source to search."
                        },
                        "relationship": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "definition": {
                              "type": [
                                "string"
                              ],
                              "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                            },
                            "limit": {
                              "type": [
                                "number"
                              ],
                              "minimum": 1,
                              "maximum": 10
                            }
                          },
                          "required": [
                            "definition",
                            "limit"
                          ]
                        }
                      },
                      "required": [
                        "source",
                        "id"
                      ]
                    },
                    "description": "Limit the search to specific sources (existing imports). Any results found within these sources matching the search criteria will be included in the Webset."
                  },
                  "recall": {
                    "type": [
                      "boolean"
                    ],
                    "description": "Whether to provide an estimate of how many total relevant results could exist for this search.\nResult of the analysis will be available in the `recall` field within the search request."
                  },
                  "behavior": {
                    "type": "string",
                    "enum": [
                      "override",
                      "append"
                    ]
                  },
                  "metadata": {
                    "description": "Set of key-value pairs you want to associate with this object.",
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string"
                      ],
                      "maxLength": 1000
                    }
                  }
                },
                "required": [
                  "count",
                  "query"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webset Search created",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the search"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset_search",
                      "default": "webset_search"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "created",
                        "pending",
                        "running",
                        "completed",
                        "canceled"
                      ],
                      "description": "The status of the search",
                      "title": "WebsetSearchStatus"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset this search belongs to"
                    },
                    "query": {
                      "description": "The query used to create the search.",
                      "type": [
                        "string"
                      ],
                      "minLength": 1,
                      "maxLength": 5000
                    },
                    "entity": {
                      "oneOf": [
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "company",
                              "default": "company"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Company"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "person",
                              "default": "person"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Person"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "article",
                              "default": "article"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Article"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "research_paper",
                              "default": "research_paper"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Research Paper"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "custom",
                              "default": "custom"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 200
                            }
                          },
                          "required": [
                            "type",
                            "description"
                          ],
                          "title": "Custom"
                        }
                      ]
                    },
                    "criteria": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "description": {
                            "description": "The description of the criterion",
                            "type": [
                              "string"
                            ],
                            "minLength": 1,
                            "maxLength": 1000
                          },
                          "successRate": {
                            "type": [
                              "number"
                            ],
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                          }
                        },
                        "required": [
                          "description",
                          "successRate"
                        ]
                      },
                      "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                    },
                    "count": {
                      "type": [
                        "number"
                      ],
                      "minimum": 1,
                      "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                    },
                    "behavior": {
                      "type": "string",
                      "enum": [
                        "override",
                        "append"
                      ]
                    },
                    "exclude": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "source": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import",
                              "webset"
                            ]
                          },
                          "id": {
                            "type": [
                              "string"
                            ]
                          }
                        },
                        "required": [
                          "source",
                          "id"
                        ]
                      },
                      "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                    },
                    "scope": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "source": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import",
                              "webset"
                            ]
                          },
                          "id": {
                            "type": [
                              "string"
                            ]
                          },
                          "relationship": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "definition": {
                                "type": [
                                  "string"
                                ],
                                "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                              },
                              "limit": {
                                "type": [
                                  "number"
                                ],
                                "minimum": 1,
                                "maximum": 10
                              }
                            },
                            "required": [
                              "definition",
                              "limit"
                            ]
                          }
                        },
                        "required": [
                          "source",
                          "id"
                        ]
                      },
                      "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                    },
                    "progress": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "found": {
                          "type": [
                            "number"
                          ],
                          "description": "The number of results found so far"
                        },
                        "analyzed": {
                          "type": [
                            "number"
                          ],
                          "description": "The number of results analyzed so far"
                        },
                        "completion": {
                          "type": [
                            "number"
                          ],
                          "minimum": 0,
                          "maximum": 100,
                          "description": "The completion percentage of the search"
                        },
                        "timeLeft": {
                          "type": "number",
                          "description": "The estimated time remaining in seconds, null if unknown",
                          "nullable": true
                        }
                      },
                      "required": [
                        "found",
                        "analyzed",
                        "completion",
                        "timeLeft"
                      ],
                      "description": "The progress of the search"
                    },
                    "recall": {
                      "type": "object",
                      "properties": {
                        "expected": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "total": {
                              "type": [
                                "number"
                              ],
                              "description": "The estimated total number of potential matches"
                            },
                            "confidence": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "high",
                                "medium",
                                "low"
                              ],
                              "description": "The confidence in the estimate"
                            },
                            "bounds": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "min": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The minimum estimated total number of potential matches"
                                },
                                "max": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The maximum estimated total number of potential matches"
                                }
                              },
                              "required": [
                                "min",
                                "max"
                              ]
                            }
                          },
                          "required": [
                            "total",
                            "confidence",
                            "bounds"
                          ]
                        },
                        "reasoning": {
                          "type": [
                            "string"
                          ],
                          "description": "The reasoning for the estimate"
                        }
                      },
                      "required": [
                        "expected",
                        "reasoning"
                      ],
                      "description": "Recall metrics for the search, null if not yet computed or requested.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "canceledAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the search was canceled",
                      "nullable": true
                    },
                    "canceledReason": {
                      "type": "string",
                      "enum": [
                        "webset_deleted",
                        "webset_canceled"
                      ]
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the search was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the search was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "websetId",
                    "status",
                    "query",
                    "entity",
                    "criteria",
                    "count",
                    "exclude",
                    "scope",
                    "progress",
                    "recall",
                    "canceledAt",
                    "canceledReason",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Create a Search",
        "tags": [
          "Searches"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst search = await exa.websets.searches.create('webset_id', {\n  query: 'additional companies to add',\n  count: 5\n});\n\nconsole.log(`Created search: ${search.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nsearch = exa.websets.searches.create('webset_id', params={\n    'query': 'additional companies to add',\n    'count': 5\n})\n\nprint(f'Created search: {search.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{webset}/searches/{id}": {
      "get": {
        "description": "Gets a Search by id",
        "operationId": "websets-searches-get",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id of the Webset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Search",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the search"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset_search",
                      "default": "webset_search"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "created",
                        "pending",
                        "running",
                        "completed",
                        "canceled"
                      ],
                      "description": "The status of the search",
                      "title": "WebsetSearchStatus"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset this search belongs to"
                    },
                    "query": {
                      "description": "The query used to create the search.",
                      "type": [
                        "string"
                      ],
                      "minLength": 1,
                      "maxLength": 5000
                    },
                    "entity": {
                      "oneOf": [
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "company",
                              "default": "company"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Company"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "person",
                              "default": "person"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Person"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "article",
                              "default": "article"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Article"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "research_paper",
                              "default": "research_paper"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Research Paper"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "custom",
                              "default": "custom"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 200
                            }
                          },
                          "required": [
                            "type",
                            "description"
                          ],
                          "title": "Custom"
                        }
                      ]
                    },
                    "criteria": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "description": {
                            "description": "The description of the criterion",
                            "type": [
                              "string"
                            ],
                            "minLength": 1,
                            "maxLength": 1000
                          },
                          "successRate": {
                            "type": [
                              "number"
                            ],
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                          }
                        },
                        "required": [
                          "description",
                          "successRate"
                        ]
                      },
                      "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                    },
                    "count": {
                      "type": [
                        "number"
                      ],
                      "minimum": 1,
                      "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                    },
                    "behavior": {
                      "type": "string",
                      "enum": [
                        "override",
                        "append"
                      ]
                    },
                    "exclude": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "source": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import",
                              "webset"
                            ]
                          },
                          "id": {
                            "type": [
                              "string"
                            ]
                          }
                        },
                        "required": [
                          "source",
                          "id"
                        ]
                      },
                      "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                    },
                    "scope": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "source": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import",
                              "webset"
                            ]
                          },
                          "id": {
                            "type": [
                              "string"
                            ]
                          },
                          "relationship": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "definition": {
                                "type": [
                                  "string"
                                ],
                                "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                              },
                              "limit": {
                                "type": [
                                  "number"
                                ],
                                "minimum": 1,
                                "maximum": 10
                              }
                            },
                            "required": [
                              "definition",
                              "limit"
                            ]
                          }
                        },
                        "required": [
                          "source",
                          "id"
                        ]
                      },
                      "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                    },
                    "progress": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "found": {
                          "type": [
                            "number"
                          ],
                          "description": "The number of results found so far"
                        },
                        "analyzed": {
                          "type": [
                            "number"
                          ],
                          "description": "The number of results analyzed so far"
                        },
                        "completion": {
                          "type": [
                            "number"
                          ],
                          "minimum": 0,
                          "maximum": 100,
                          "description": "The completion percentage of the search"
                        },
                        "timeLeft": {
                          "type": "number",
                          "description": "The estimated time remaining in seconds, null if unknown",
                          "nullable": true
                        }
                      },
                      "required": [
                        "found",
                        "analyzed",
                        "completion",
                        "timeLeft"
                      ],
                      "description": "The progress of the search"
                    },
                    "recall": {
                      "type": "object",
                      "properties": {
                        "expected": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "total": {
                              "type": [
                                "number"
                              ],
                              "description": "The estimated total number of potential matches"
                            },
                            "confidence": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "high",
                                "medium",
                                "low"
                              ],
                              "description": "The confidence in the estimate"
                            },
                            "bounds": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "min": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The minimum estimated total number of potential matches"
                                },
                                "max": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The maximum estimated total number of potential matches"
                                }
                              },
                              "required": [
                                "min",
                                "max"
                              ]
                            }
                          },
                          "required": [
                            "total",
                            "confidence",
                            "bounds"
                          ]
                        },
                        "reasoning": {
                          "type": [
                            "string"
                          ],
                          "description": "The reasoning for the estimate"
                        }
                      },
                      "required": [
                        "expected",
                        "reasoning"
                      ],
                      "description": "Recall metrics for the search, null if not yet computed or requested.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "canceledAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the search was canceled",
                      "nullable": true
                    },
                    "canceledReason": {
                      "type": "string",
                      "enum": [
                        "webset_deleted",
                        "webset_canceled"
                      ]
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the search was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the search was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "websetId",
                    "status",
                    "query",
                    "entity",
                    "criteria",
                    "count",
                    "exclude",
                    "scope",
                    "progress",
                    "recall",
                    "canceledAt",
                    "canceledReason",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Get a Search",
        "tags": [
          "Searches"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst search = await exa.websets.searches.get('webset_id', 'search_id');\n\nconsole.log(`Search: ${search.id} - ${search.status}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nsearch = exa.websets.searches.get('webset_id', 'search_id')\n\nprint(f'Search: {search.id} - {search.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/websets/{webset}/searches/{id}/cancel": {
      "post": {
        "description": "Cancels a currently running Search.\n\nYou can cancel all searches at once by using the `websets/:webset/cancel` endpoint.",
        "operationId": "websets-searches-cancel",
        "parameters": [
          {
            "name": "webset",
            "required": true,
            "in": "path",
            "description": "The id of the Webset",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Search",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search canceled",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the search"
                    },
                    "object": {
                      "type": "string",
                      "const": "webset_search",
                      "default": "webset_search"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "created",
                        "pending",
                        "running",
                        "completed",
                        "canceled"
                      ],
                      "description": "The status of the search",
                      "title": "WebsetSearchStatus"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Webset this search belongs to"
                    },
                    "query": {
                      "description": "The query used to create the search.",
                      "type": [
                        "string"
                      ],
                      "minLength": 1,
                      "maxLength": 5000
                    },
                    "entity": {
                      "oneOf": [
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "company",
                              "default": "company"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Company"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "person",
                              "default": "person"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Person"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "article",
                              "default": "article"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Article"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "research_paper",
                              "default": "research_paper"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Research Paper"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "custom",
                              "default": "custom"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 200
                            }
                          },
                          "required": [
                            "type",
                            "description"
                          ],
                          "title": "Custom"
                        }
                      ]
                    },
                    "criteria": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "description": {
                            "description": "The description of the criterion",
                            "type": [
                              "string"
                            ],
                            "minLength": 1,
                            "maxLength": 1000
                          },
                          "successRate": {
                            "type": [
                              "number"
                            ],
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                          }
                        },
                        "required": [
                          "description",
                          "successRate"
                        ]
                      },
                      "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
                    },
                    "count": {
                      "type": [
                        "number"
                      ],
                      "minimum": 1,
                      "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
                    },
                    "behavior": {
                      "type": "string",
                      "enum": [
                        "override",
                        "append"
                      ]
                    },
                    "exclude": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "source": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import",
                              "webset"
                            ]
                          },
                          "id": {
                            "type": [
                              "string"
                            ]
                          }
                        },
                        "required": [
                          "source",
                          "id"
                        ]
                      },
                      "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
                    },
                    "scope": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "source": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import",
                              "webset"
                            ]
                          },
                          "id": {
                            "type": [
                              "string"
                            ]
                          },
                          "relationship": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "definition": {
                                "type": [
                                  "string"
                                ],
                                "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                              },
                              "limit": {
                                "type": [
                                  "number"
                                ],
                                "minimum": 1,
                                "maximum": 10
                              }
                            },
                            "required": [
                              "definition",
                              "limit"
                            ]
                          }
                        },
                        "required": [
                          "source",
                          "id"
                        ]
                      },
                      "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
                    },
                    "progress": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "found": {
                          "type": [
                            "number"
                          ],
                          "description": "The number of results found so far"
                        },
                        "analyzed": {
                          "type": [
                            "number"
                          ],
                          "description": "The number of results analyzed so far"
                        },
                        "completion": {
                          "type": [
                            "number"
                          ],
                          "minimum": 0,
                          "maximum": 100,
                          "description": "The completion percentage of the search"
                        },
                        "timeLeft": {
                          "type": "number",
                          "description": "The estimated time remaining in seconds, null if unknown",
                          "nullable": true
                        }
                      },
                      "required": [
                        "found",
                        "analyzed",
                        "completion",
                        "timeLeft"
                      ],
                      "description": "The progress of the search"
                    },
                    "recall": {
                      "type": "object",
                      "properties": {
                        "expected": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "total": {
                              "type": [
                                "number"
                              ],
                              "description": "The estimated total number of potential matches"
                            },
                            "confidence": {
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "high",
                                "medium",
                                "low"
                              ],
                              "description": "The confidence in the estimate"
                            },
                            "bounds": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "min": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The minimum estimated total number of potential matches"
                                },
                                "max": {
                                  "type": [
                                    "number"
                                  ],
                                  "description": "The maximum estimated total number of potential matches"
                                }
                              },
                              "required": [
                                "min",
                                "max"
                              ]
                            }
                          },
                          "required": [
                            "total",
                            "confidence",
                            "bounds"
                          ]
                        },
                        "reasoning": {
                          "type": [
                            "string"
                          ],
                          "description": "The reasoning for the estimate"
                        }
                      },
                      "required": [
                        "expected",
                        "reasoning"
                      ],
                      "description": "Recall metrics for the search, null if not yet computed or requested.",
                      "nullable": true
                    },
                    "metadata": {
                      "default": {},
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "canceledAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time the search was canceled",
                      "nullable": true
                    },
                    "canceledReason": {
                      "type": "string",
                      "enum": [
                        "webset_deleted",
                        "webset_canceled"
                      ]
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the search was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "The date and time the search was updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "websetId",
                    "status",
                    "query",
                    "entity",
                    "criteria",
                    "count",
                    "exclude",
                    "scope",
                    "progress",
                    "recall",
                    "canceledAt",
                    "canceledReason",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Cancel a running Search",
        "tags": [
          "Searches"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst search = await exa.websets.searches.cancel('webset_id', 'search_id');\n\nconsole.log(`Cancelled search: ${search.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nsearch = exa.websets.searches.cancel('webset_id', 'search_id')\n\nprint(f'Cancelled search: {search.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/monitors": {
      "post": {
        "description": "Creates a new `Monitor` to continuously keep your Websets updated with fresh data.\n\nMonitors automatically run on your defined schedule to ensure your Websets stay current without manual intervention:\n\n- **Find new content**: Execute `search` operations to discover fresh items matching your criteria\n- **Update existing content**: Run `refresh` operations to update items contents and enrichments\n- **Automated scheduling**: Configure `cron` expressions and `timezone` for precise scheduling control",
        "operationId": "monitors-create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "websetId": {
                    "type": [
                      "string"
                    ],
                    "description": "The id of the Webset"
                  },
                  "cadence": {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "cron": {
                        "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                        "type": [
                          "string"
                        ]
                      },
                      "timezone": {
                        "description": "IANA timezone (e.g., \"America/New_York\")",
                        "default": "Etc/UTC",
                        "type": [
                          "string"
                        ]
                      }
                    },
                    "required": [
                      "cron"
                    ],
                    "description": "How often the monitor will run"
                  },
                  "behavior": {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "search",
                        "default": "search"
                      },
                      "config": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "query": {
                            "type": [
                              "string"
                            ],
                            "minLength": 2,
                            "maxLength": 10000,
                            "description": "The query to search for. By default, the query from the last search is used."
                          },
                          "criteria": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "description": {
                                  "type": [
                                    "string"
                                  ],
                                  "minLength": 2,
                                  "maxLength": 1000
                                }
                              },
                              "required": [
                                "description"
                              ]
                            },
                            "maxItems": 5,
                            "description": "The criteria to search for. By default, the criteria from the last search is used."
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "exclusiveMinimum": 0,
                            "description": "The maximum number of results to find"
                          },
                          "behavior": {
                            "default": "append",
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "override",
                              "append"
                            ],
                            "description": "The behaviour of the Search when it is added to a Webset."
                          }
                        },
                        "required": [
                          "count"
                        ],
                        "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                      }
                    },
                    "required": [
                      "type",
                      "config"
                    ],
                    "description": "Behavior to perform when monitor runs"
                  },
                  "metadata": {
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string"
                      ]
                    }
                  }
                },
                "required": [
                  "websetId",
                  "cadence",
                  "behavior"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Monitor created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Monitor"
                    },
                    "object": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "monitor"
                      ],
                      "description": "The type of object"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "enabled",
                        "disabled"
                      ],
                      "description": "The status of the Monitor"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The id of the Webset the Monitor belongs to"
                    },
                    "cadence": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "cron": {
                          "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                          "type": [
                            "string"
                          ]
                        },
                        "timezone": {
                          "description": "IANA timezone (e.g., \"America/New_York\")",
                          "default": "Etc/UTC",
                          "type": [
                            "string"
                          ]
                        }
                      },
                      "required": [
                        "cron"
                      ],
                      "description": "How often the monitor will run"
                    },
                    "behavior": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "search",
                          "default": "search"
                        },
                        "config": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "query": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 10000,
                              "description": "The query to search for. By default, the query from the last search is used."
                            },
                            "criteria": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 1000
                                  }
                                },
                                "required": [
                                  "description"
                                ]
                              },
                              "maxItems": 5,
                              "description": "The criteria to search for. By default, the criteria from the last search is used."
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "exclusiveMinimum": 0,
                              "description": "The maximum number of results to find"
                            },
                            "behavior": {
                              "default": "append",
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "override",
                                "append"
                              ],
                              "description": "The behaviour of the Search when it is added to a Webset."
                            }
                          },
                          "required": [
                            "count"
                          ],
                          "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                        }
                      },
                      "required": [
                        "type",
                        "config"
                      ],
                      "description": "Behavior to perform when monitor runs"
                    },
                    "lastRun": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the Monitor Run"
                        },
                        "object": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "monitor_run"
                          ],
                          "description": "The type of object"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "created",
                            "running",
                            "completed",
                            "canceled",
                            "failed"
                          ],
                          "description": "The status of the Monitor Run"
                        },
                        "monitorId": {
                          "type": [
                            "string"
                          ],
                          "description": "The monitor that the run is associated with"
                        },
                        "type": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "search",
                            "refresh"
                          ],
                          "description": "The type of the Monitor Run"
                        },
                        "completedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run completed",
                          "nullable": true
                        },
                        "failedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run failed",
                          "nullable": true
                        },
                        "failedReason": {
                          "type": "string",
                          "description": "The reason the run failed",
                          "nullable": true
                        },
                        "canceledAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run was canceled",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "When the run was created"
                        },
                        "updatedAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "When the run was last updated"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "monitorId",
                        "status",
                        "type",
                        "completedAt",
                        "failedAt",
                        "failedReason",
                        "canceledAt",
                        "createdAt",
                        "updatedAt"
                      ]
                    },
                    "nextRunAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the next run will occur in",
                      "nullable": true
                    },
                    "metadata": {
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the monitor was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the monitor was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "websetId",
                    "cadence",
                    "behavior",
                    "lastRun",
                    "nextRunAt",
                    "metadata",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Create a Monitor",
        "tags": [
          "Monitors"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst monitor = await exa.websets.monitors.create({\n  websetId: 'webset_id',\n  cadence: {\n    cron: '0 9 * * 1', // Every Monday at 9 AM\n    timezone: 'America/New_York'\n  },\n  behavior: {\n    type: 'search',\n    config: {\n      behavior: 'append',\n      query: 'new companies to monitor',\n      count: 10\n    }\n  }\n});\n\nconsole.log(`Created monitor: ${monitor.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nmonitor = exa.websets.monitors.create(params={\n    'websetId': 'webset_id',\n    'cadence': {\n        'cron': '0 9 * * 1',  # Every Monday at 9 AM\n        'timezone': 'America/New_York'\n    },\n    'behavior': {\n        'type': 'search',\n        'config': {\n            'behavior': 'append',\n            'query': 'new companies to monitor',\n            'count': 10\n        }\n    }\n})\n\nprint(f'Created monitor: {monitor.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "get": {
        "description": "Lists all monitors for the Webset.",
        "operationId": "monitors-list",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to paginate through the results",
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 25,
              "type": "number"
            }
          },
          {
            "name": "websetId",
            "required": false,
            "in": "query",
            "description": "The id of the Webset to list monitors for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of monitors",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "data": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Monitor"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "monitor"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "description": "The status of the Monitor"
                          },
                          "websetId": {
                            "type": [
                              "string"
                            ],
                            "description": "The id of the Webset the Monitor belongs to"
                          },
                          "cadence": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "cron": {
                                "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                                "type": [
                                  "string"
                                ]
                              },
                              "timezone": {
                                "description": "IANA timezone (e.g., \"America/New_York\")",
                                "default": "Etc/UTC",
                                "type": [
                                  "string"
                                ]
                              }
                            },
                            "required": [
                              "cron"
                            ],
                            "description": "How often the monitor will run"
                          },
                          "behavior": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "search",
                                "default": "search"
                              },
                              "config": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "query": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 10000,
                                    "description": "The query to search for. By default, the query from the last search is used."
                                  },
                                  "criteria": {
                                    "type": [
                                      "array"
                                    ],
                                    "items": {
                                      "type": [
                                        "object"
                                      ],
                                      "properties": {
                                        "description": {
                                          "type": [
                                            "string"
                                          ],
                                          "minLength": 2,
                                          "maxLength": 1000
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ]
                                    },
                                    "maxItems": 5,
                                    "description": "The criteria to search for. By default, the criteria from the last search is used."
                                  },
                                  "entity": {
                                    "oneOf": [
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "company",
                                            "default": "company"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Company"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "person",
                                            "default": "person"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Person"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "article",
                                            "default": "article"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Article"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "research_paper",
                                            "default": "research_paper"
                                          }
                                        },
                                        "required": [
                                          "type"
                                        ],
                                        "title": "Research Paper"
                                      },
                                      {
                                        "type": [
                                          "object"
                                        ],
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "const": "custom",
                                            "default": "custom"
                                          },
                                          "description": {
                                            "type": [
                                              "string"
                                            ],
                                            "minLength": 2,
                                            "maxLength": 200
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "description"
                                        ],
                                        "title": "Custom"
                                      }
                                    ]
                                  },
                                  "count": {
                                    "type": [
                                      "number"
                                    ],
                                    "exclusiveMinimum": 0,
                                    "description": "The maximum number of results to find"
                                  },
                                  "behavior": {
                                    "default": "append",
                                    "type": [
                                      "string"
                                    ],
                                    "enum": [
                                      "override",
                                      "append"
                                    ],
                                    "description": "The behaviour of the Search when it is added to a Webset."
                                  }
                                },
                                "required": [
                                  "count"
                                ],
                                "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                              }
                            },
                            "required": [
                              "type",
                              "config"
                            ],
                            "description": "Behavior to perform when monitor runs"
                          },
                          "lastRun": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "id": {
                                "type": [
                                  "string"
                                ],
                                "description": "The unique identifier for the Monitor Run"
                              },
                              "object": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "monitor_run"
                                ],
                                "description": "The type of object"
                              },
                              "status": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "created",
                                  "running",
                                  "completed",
                                  "canceled",
                                  "failed"
                                ],
                                "description": "The status of the Monitor Run"
                              },
                              "monitorId": {
                                "type": [
                                  "string"
                                ],
                                "description": "The monitor that the run is associated with"
                              },
                              "type": {
                                "type": [
                                  "string"
                                ],
                                "enum": [
                                  "search",
                                  "refresh"
                                ],
                                "description": "The type of the Monitor Run"
                              },
                              "completedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run completed",
                                "nullable": true
                              },
                              "failedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run failed",
                                "nullable": true
                              },
                              "failedReason": {
                                "type": "string",
                                "description": "The reason the run failed",
                                "nullable": true
                              },
                              "canceledAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "When the run was canceled",
                                "nullable": true
                              },
                              "createdAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was created"
                              },
                              "updatedAt": {
                                "type": [
                                  "string"
                                ],
                                "format": "date-time",
                                "description": "When the run was last updated"
                              }
                            },
                            "required": [
                              "id",
                              "object",
                              "monitorId",
                              "status",
                              "type",
                              "completedAt",
                              "failedAt",
                              "failedReason",
                              "canceledAt",
                              "createdAt",
                              "updatedAt"
                            ]
                          },
                          "nextRunAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when the next run will occur in",
                            "nullable": true
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the monitor was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "websetId",
                          "cadence",
                          "behavior",
                          "lastRun",
                          "nextRunAt",
                          "metadata",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The list of monitors"
                    },
                    "hasMore": {
                      "type": [
                        "boolean"
                      ],
                      "description": "Whether there are more results to paginate through"
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "The cursor to paginate through the next set of results",
                      "nullable": true
                    }
                  },
                  "required": [
                    "data",
                    "hasMore",
                    "nextCursor"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "List Monitors",
        "tags": [
          "Monitors"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst monitors = await exa.websets.monitors.list({\n  webset_id: 'webset_id'\n});\n\nconsole.log(`Found ${monitors.data.length} monitors`);\nmonitors.data.forEach(monitor => {\n  console.log(`- ${monitor.id}: ${monitor.status}`);\n});"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nmonitors = exa.websets.monitors.list(webset_id='webset_id')\n\nprint(f'Found {len(monitors.data)} monitors')\nfor monitor in monitors.data:\n    print(f'- {monitor.id}: {monitor.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/monitors/{id}": {
      "get": {
        "description": "Gets a specific monitor.",
        "operationId": "monitors-get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Monitor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monitor details",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Monitor"
                    },
                    "object": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "monitor"
                      ],
                      "description": "The type of object"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "enabled",
                        "disabled"
                      ],
                      "description": "The status of the Monitor"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The id of the Webset the Monitor belongs to"
                    },
                    "cadence": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "cron": {
                          "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                          "type": [
                            "string"
                          ]
                        },
                        "timezone": {
                          "description": "IANA timezone (e.g., \"America/New_York\")",
                          "default": "Etc/UTC",
                          "type": [
                            "string"
                          ]
                        }
                      },
                      "required": [
                        "cron"
                      ],
                      "description": "How often the monitor will run"
                    },
                    "behavior": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "search",
                          "default": "search"
                        },
                        "config": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "query": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 10000,
                              "description": "The query to search for. By default, the query from the last search is used."
                            },
                            "criteria": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 1000
                                  }
                                },
                                "required": [
                                  "description"
                                ]
                              },
                              "maxItems": 5,
                              "description": "The criteria to search for. By default, the criteria from the last search is used."
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "exclusiveMinimum": 0,
                              "description": "The maximum number of results to find"
                            },
                            "behavior": {
                              "default": "append",
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "override",
                                "append"
                              ],
                              "description": "The behaviour of the Search when it is added to a Webset."
                            }
                          },
                          "required": [
                            "count"
                          ],
                          "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                        }
                      },
                      "required": [
                        "type",
                        "config"
                      ],
                      "description": "Behavior to perform when monitor runs"
                    },
                    "lastRun": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the Monitor Run"
                        },
                        "object": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "monitor_run"
                          ],
                          "description": "The type of object"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "created",
                            "running",
                            "completed",
                            "canceled",
                            "failed"
                          ],
                          "description": "The status of the Monitor Run"
                        },
                        "monitorId": {
                          "type": [
                            "string"
                          ],
                          "description": "The monitor that the run is associated with"
                        },
                        "type": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "search",
                            "refresh"
                          ],
                          "description": "The type of the Monitor Run"
                        },
                        "completedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run completed",
                          "nullable": true
                        },
                        "failedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run failed",
                          "nullable": true
                        },
                        "failedReason": {
                          "type": "string",
                          "description": "The reason the run failed",
                          "nullable": true
                        },
                        "canceledAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run was canceled",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "When the run was created"
                        },
                        "updatedAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "When the run was last updated"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "monitorId",
                        "status",
                        "type",
                        "completedAt",
                        "failedAt",
                        "failedReason",
                        "canceledAt",
                        "createdAt",
                        "updatedAt"
                      ]
                    },
                    "nextRunAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the next run will occur in",
                      "nullable": true
                    },
                    "metadata": {
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the monitor was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the monitor was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "websetId",
                    "cadence",
                    "behavior",
                    "lastRun",
                    "nextRunAt",
                    "metadata",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Get Monitor",
        "tags": [
          "Monitors"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst monitor = await exa.websets.monitors.get('monitor_id');\n\nconsole.log(`Monitor: ${monitor.id} - ${monitor.status}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nmonitor = exa.websets.monitors.get('monitor_id')\n\nprint(f'Monitor: {monitor.id} - {monitor.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "patch": {
        "description": "Updates a monitor configuration.",
        "operationId": "monitors-update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Monitor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "status": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "enabled",
                      "disabled"
                    ],
                    "description": "The status of the monitor."
                  },
                  "metadata": {
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string"
                      ]
                    }
                  },
                  "cadence": {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "cron": {
                        "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                        "type": [
                          "string"
                        ]
                      },
                      "timezone": {
                        "description": "IANA timezone (e.g., \"America/New_York\")",
                        "default": "Etc/UTC",
                        "type": [
                          "string"
                        ]
                      }
                    },
                    "required": [
                      "cron"
                    ]
                  },
                  "behavior": {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "const": "search",
                        "default": "search"
                      },
                      "config": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "query": {
                            "type": [
                              "string"
                            ],
                            "minLength": 2,
                            "maxLength": 10000,
                            "description": "The query to search for. By default, the query from the last search is used."
                          },
                          "criteria": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "object"
                              ],
                              "properties": {
                                "description": {
                                  "type": [
                                    "string"
                                  ],
                                  "minLength": 2,
                                  "maxLength": 1000
                                }
                              },
                              "required": [
                                "description"
                              ]
                            },
                            "maxItems": 5,
                            "description": "The criteria to search for. By default, the criteria from the last search is used."
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "exclusiveMinimum": 0,
                            "description": "The maximum number of results to find"
                          },
                          "behavior": {
                            "default": "append",
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "override",
                              "append"
                            ],
                            "description": "The behaviour of the Search when it is added to a Webset."
                          }
                        },
                        "required": [
                          "count"
                        ],
                        "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                      }
                    },
                    "required": [
                      "type",
                      "config"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Monitor updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Monitor"
                    },
                    "object": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "monitor"
                      ],
                      "description": "The type of object"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "enabled",
                        "disabled"
                      ],
                      "description": "The status of the Monitor"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The id of the Webset the Monitor belongs to"
                    },
                    "cadence": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "cron": {
                          "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                          "type": [
                            "string"
                          ]
                        },
                        "timezone": {
                          "description": "IANA timezone (e.g., \"America/New_York\")",
                          "default": "Etc/UTC",
                          "type": [
                            "string"
                          ]
                        }
                      },
                      "required": [
                        "cron"
                      ],
                      "description": "How often the monitor will run"
                    },
                    "behavior": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "search",
                          "default": "search"
                        },
                        "config": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "query": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 10000,
                              "description": "The query to search for. By default, the query from the last search is used."
                            },
                            "criteria": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 1000
                                  }
                                },
                                "required": [
                                  "description"
                                ]
                              },
                              "maxItems": 5,
                              "description": "The criteria to search for. By default, the criteria from the last search is used."
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "exclusiveMinimum": 0,
                              "description": "The maximum number of results to find"
                            },
                            "behavior": {
                              "default": "append",
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "override",
                                "append"
                              ],
                              "description": "The behaviour of the Search when it is added to a Webset."
                            }
                          },
                          "required": [
                            "count"
                          ],
                          "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                        }
                      },
                      "required": [
                        "type",
                        "config"
                      ],
                      "description": "Behavior to perform when monitor runs"
                    },
                    "lastRun": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the Monitor Run"
                        },
                        "object": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "monitor_run"
                          ],
                          "description": "The type of object"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "created",
                            "running",
                            "completed",
                            "canceled",
                            "failed"
                          ],
                          "description": "The status of the Monitor Run"
                        },
                        "monitorId": {
                          "type": [
                            "string"
                          ],
                          "description": "The monitor that the run is associated with"
                        },
                        "type": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "search",
                            "refresh"
                          ],
                          "description": "The type of the Monitor Run"
                        },
                        "completedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run completed",
                          "nullable": true
                        },
                        "failedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run failed",
                          "nullable": true
                        },
                        "failedReason": {
                          "type": "string",
                          "description": "The reason the run failed",
                          "nullable": true
                        },
                        "canceledAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run was canceled",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "When the run was created"
                        },
                        "updatedAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "When the run was last updated"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "monitorId",
                        "status",
                        "type",
                        "completedAt",
                        "failedAt",
                        "failedReason",
                        "canceledAt",
                        "createdAt",
                        "updatedAt"
                      ]
                    },
                    "nextRunAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the next run will occur in",
                      "nullable": true
                    },
                    "metadata": {
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the monitor was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the monitor was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "websetId",
                    "cadence",
                    "behavior",
                    "lastRun",
                    "nextRunAt",
                    "metadata",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Update Monitor",
        "tags": [
          "Monitors"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst monitor = await exa.websets.monitors.update('monitor_id', {\n  cadence: {\n    cron: '0 14 * * *', // Every day at 2 PM\n    timezone: 'America/New_York'\n  }\n});\n\nconsole.log(`Updated monitor: ${monitor.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nmonitor = exa.websets.monitors.update('monitor_id', params={\n    'cadence': {\n        'cron': '0 14 * * *',  # Every day at 2 PM\n        'timezone': 'America/New_York'\n    }\n})\n\nprint(f'Updated monitor: {monitor.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "delete": {
        "description": "Deletes a monitor.",
        "operationId": "monitors-delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Monitor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monitor deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Monitor"
                    },
                    "object": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "monitor"
                      ],
                      "description": "The type of object"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "enabled",
                        "disabled"
                      ],
                      "description": "The status of the Monitor"
                    },
                    "websetId": {
                      "type": [
                        "string"
                      ],
                      "description": "The id of the Webset the Monitor belongs to"
                    },
                    "cadence": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "cron": {
                          "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                          "type": [
                            "string"
                          ]
                        },
                        "timezone": {
                          "description": "IANA timezone (e.g., \"America/New_York\")",
                          "default": "Etc/UTC",
                          "type": [
                            "string"
                          ]
                        }
                      },
                      "required": [
                        "cron"
                      ],
                      "description": "How often the monitor will run"
                    },
                    "behavior": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "search",
                          "default": "search"
                        },
                        "config": {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "query": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 10000,
                              "description": "The query to search for. By default, the query from the last search is used."
                            },
                            "criteria": {
                              "type": [
                                "array"
                              ],
                              "items": {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 1000
                                  }
                                },
                                "required": [
                                  "description"
                                ]
                              },
                              "maxItems": 5,
                              "description": "The criteria to search for. By default, the criteria from the last search is used."
                            },
                            "entity": {
                              "oneOf": [
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "company",
                                      "default": "company"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Company"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "person",
                                      "default": "person"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Person"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "article",
                                      "default": "article"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Article"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "research_paper",
                                      "default": "research_paper"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "title": "Research Paper"
                                },
                                {
                                  "type": [
                                    "object"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "const": "custom",
                                      "default": "custom"
                                    },
                                    "description": {
                                      "type": [
                                        "string"
                                      ],
                                      "minLength": 2,
                                      "maxLength": 200
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "description"
                                  ],
                                  "title": "Custom"
                                }
                              ]
                            },
                            "count": {
                              "type": [
                                "number"
                              ],
                              "exclusiveMinimum": 0,
                              "description": "The maximum number of results to find"
                            },
                            "behavior": {
                              "default": "append",
                              "type": [
                                "string"
                              ],
                              "enum": [
                                "override",
                                "append"
                              ],
                              "description": "The behaviour of the Search when it is added to a Webset."
                            }
                          },
                          "required": [
                            "count"
                          ],
                          "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
                        }
                      },
                      "required": [
                        "type",
                        "config"
                      ],
                      "description": "Behavior to perform when monitor runs"
                    },
                    "lastRun": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "id": {
                          "type": [
                            "string"
                          ],
                          "description": "The unique identifier for the Monitor Run"
                        },
                        "object": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "monitor_run"
                          ],
                          "description": "The type of object"
                        },
                        "status": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "created",
                            "running",
                            "completed",
                            "canceled",
                            "failed"
                          ],
                          "description": "The status of the Monitor Run"
                        },
                        "monitorId": {
                          "type": [
                            "string"
                          ],
                          "description": "The monitor that the run is associated with"
                        },
                        "type": {
                          "type": [
                            "string"
                          ],
                          "enum": [
                            "search",
                            "refresh"
                          ],
                          "description": "The type of the Monitor Run"
                        },
                        "completedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run completed",
                          "nullable": true
                        },
                        "failedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run failed",
                          "nullable": true
                        },
                        "failedReason": {
                          "type": "string",
                          "description": "The reason the run failed",
                          "nullable": true
                        },
                        "canceledAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "When the run was canceled",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "When the run was created"
                        },
                        "updatedAt": {
                          "type": [
                            "string"
                          ],
                          "format": "date-time",
                          "description": "When the run was last updated"
                        }
                      },
                      "required": [
                        "id",
                        "object",
                        "monitorId",
                        "status",
                        "type",
                        "completedAt",
                        "failedAt",
                        "failedReason",
                        "canceledAt",
                        "createdAt",
                        "updatedAt"
                      ]
                    },
                    "nextRunAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the next run will occur in",
                      "nullable": true
                    },
                    "metadata": {
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the monitor was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the monitor was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "websetId",
                    "cadence",
                    "behavior",
                    "lastRun",
                    "nextRunAt",
                    "metadata",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Delete Monitor",
        "tags": [
          "Monitors"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nawait exa.websets.monitors.delete('monitor_id');\n\nconsole.log('Monitor deleted successfully');"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nexa.websets.monitors.delete('monitor_id')\n\nprint('Monitor deleted successfully')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/monitors/{monitor}/runs": {
      "get": {
        "description": "Lists all runs for the Monitor.",
        "operationId": "monitors-runs-list",
        "parameters": [
          {
            "name": "monitor",
            "required": true,
            "in": "path",
            "description": "The id of the Monitor to list runs for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of monitor runs",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "data": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Monitor Run"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "monitor_run"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "created",
                              "running",
                              "completed",
                              "canceled",
                              "failed"
                            ],
                            "description": "The status of the Monitor Run"
                          },
                          "monitorId": {
                            "type": [
                              "string"
                            ],
                            "description": "The monitor that the run is associated with"
                          },
                          "type": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "search",
                              "refresh"
                            ],
                            "description": "The type of the Monitor Run"
                          },
                          "completedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the run completed",
                            "nullable": true
                          },
                          "failedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the run failed",
                            "nullable": true
                          },
                          "failedReason": {
                            "type": "string",
                            "description": "The reason the run failed",
                            "nullable": true
                          },
                          "canceledAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the run was canceled",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the run was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the run was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "monitorId",
                          "status",
                          "type",
                          "completedAt",
                          "failedAt",
                          "failedReason",
                          "canceledAt",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The list of monitor runs"
                    },
                    "hasMore": {
                      "type": [
                        "boolean"
                      ],
                      "description": "Whether there are more results to paginate through"
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "The cursor to paginate through the next set of results",
                      "nullable": true
                    }
                  },
                  "required": [
                    "data",
                    "hasMore",
                    "nextCursor"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "List Monitor Runs",
        "tags": [
          "Monitors Runs"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst runs = await exa.websets.monitors.runs.list('monitor_id');\n\nconsole.log(`Found ${runs.data.length} monitor runs`);\nruns.data.forEach(run => {\n  console.log(`- ${run.id}: ${run.status}`);\n});"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nruns = exa.websets.monitors.runs.list('monitor_id')\n\nprint(f'Found {len(runs.data)} monitor runs')\nfor run in runs.data:\n    print(f'- {run.id}: {run.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/monitors/{monitor}/runs/{id}": {
      "get": {
        "description": "Gets a specific monitor run.",
        "operationId": "monitors-runs-get",
        "parameters": [
          {
            "name": "monitor",
            "required": true,
            "in": "path",
            "description": "The id of the Monitor to get the run for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monitor run details",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Monitor Run"
                    },
                    "object": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "monitor_run"
                      ],
                      "description": "The type of object"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "created",
                        "running",
                        "completed",
                        "canceled",
                        "failed"
                      ],
                      "description": "The status of the Monitor Run"
                    },
                    "monitorId": {
                      "type": [
                        "string"
                      ],
                      "description": "The monitor that the run is associated with"
                    },
                    "type": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "search",
                        "refresh"
                      ],
                      "description": "The type of the Monitor Run"
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the run completed",
                      "nullable": true
                    },
                    "failedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the run failed",
                      "nullable": true
                    },
                    "failedReason": {
                      "type": "string",
                      "description": "The reason the run failed",
                      "nullable": true
                    },
                    "canceledAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the run was canceled",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the run was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the run was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "monitorId",
                    "status",
                    "type",
                    "completedAt",
                    "failedAt",
                    "failedReason",
                    "canceledAt",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Get Monitor Run",
        "tags": [
          "Monitors Runs"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst run = await exa.websets.monitors.runs.get('monitor_id', 'run_id');\n\nconsole.log(`Monitor run: ${run.id} - ${run.status}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nrun = exa.websets.monitors.runs.get('monitor_id', 'run_id')\n\nprint(f'Monitor run: {run.id} - {run.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/imports": {
      "post": {
        "description": "Creates a new import to upload your data into Websets. Imports can be used to:\n\n- **Enrich**: Enhance your data with additional information using our AI-powered enrichment engine\n- **Search**: Query your data using Websets' agentic search with natural language filters\n- **Exclude**: Prevent duplicate or already known results from appearing in your searches\n\nOnce the import is created, you can upload your data to the returned `uploadUrl` until `uploadValidUntil` (by default 1 hour).",
        "operationId": "imports-create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "discriminator": {
                  "propertyName": "format"
                },
                "oneOf": [
                  {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "size": {
                        "type": [
                          "number"
                        ],
                        "maximum": 50000000,
                        "description": "The size of the file in bytes. Maximum size is 50 MB."
                      },
                      "count": {
                        "type": [
                          "number"
                        ],
                        "description": "The number of records to import"
                      },
                      "title": {
                        "type": [
                          "string"
                        ],
                        "description": "The title of the import"
                      },
                      "format": {
                        "type": [
                          "string"
                        ],
                        "enum": [
                          "csv"
                        ],
                        "description": "When the import is in CSV format, we expect a column containing the key identifier for the entity - for now URL. If not provided, import will fail to be processed."
                      },
                      "metadata": {
                        "description": "Set of key-value pairs you want to associate with this object.",
                        "type": [
                          "object"
                        ],
                        "additionalProperties": {
                          "type": [
                            "string"
                          ],
                          "maxLength": 1000
                        }
                      },
                      "entity": {
                        "oneOf": [
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "company",
                                "default": "company"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Company"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "person",
                                "default": "person"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Person"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "article",
                                "default": "article"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Article"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "research_paper",
                                "default": "research_paper"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "title": "Research Paper"
                          },
                          {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "custom",
                                "default": "custom"
                              },
                              "description": {
                                "type": [
                                  "string"
                                ],
                                "minLength": 2,
                                "maxLength": 200
                              }
                            },
                            "required": [
                              "type",
                              "description"
                            ],
                            "title": "Custom"
                          }
                        ],
                        "description": "What type of entity the import contains (e.g. People, Companies, etc.), and thus should be attempted to be resolved as."
                      },
                      "csv": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "identifier": {
                            "type": [
                              "integer"
                            ],
                            "minimum": 0,
                            "description": "Column containing the key identifier for the entity (e.g. URL, Name, etc.). If not provided, we will try to infer it from the file."
                          }
                        },
                        "description": "When format is `csv`, these are the specific import parameters."
                      }
                    },
                    "required": [
                      "size",
                      "count",
                      "format",
                      "entity"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Import created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Import"
                    },
                    "object": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "import"
                      ],
                      "description": "The type of object"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "pending",
                        "processing",
                        "completed",
                        "failed"
                      ],
                      "description": "The status of the Import"
                    },
                    "format": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "csv",
                        "webset"
                      ],
                      "description": "The format of the import."
                    },
                    "entity": {
                      "oneOf": [
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "company",
                              "default": "company"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Company"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "person",
                              "default": "person"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Person"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "article",
                              "default": "article"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Article"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "research_paper",
                              "default": "research_paper"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Research Paper"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "custom",
                              "default": "custom"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 200
                            }
                          },
                          "required": [
                            "type",
                            "description"
                          ],
                          "title": "Custom"
                        }
                      ]
                    },
                    "title": {
                      "type": [
                        "string"
                      ],
                      "description": "The title of the import"
                    },
                    "count": {
                      "type": [
                        "number"
                      ],
                      "description": "The number of entities in the import"
                    },
                    "metadata": {
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "failedReason": {
                      "type": "string",
                      "enum": [
                        "invalid_format",
                        "invalid_file_content",
                        "missing_identifier"
                      ],
                      "description": "The reason the import failed",
                      "nullable": true
                    },
                    "failedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the import failed",
                      "nullable": true
                    },
                    "failedMessage": {
                      "type": "string",
                      "description": "A human readable message of the import failure",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the import was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the import was last updated"
                    },
                    "uploadUrl": {
                      "type": [
                        "string"
                      ],
                      "description": "The URL to upload the file to"
                    },
                    "uploadValidUntil": {
                      "type": [
                        "string"
                      ],
                      "description": "The date and time until the upload URL is valid. The upload URL will be valid for 1 hour."
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "format",
                    "entity",
                    "title",
                    "count",
                    "metadata",
                    "failedReason",
                    "failedAt",
                    "failedMessage",
                    "createdAt",
                    "updatedAt",
                    "uploadUrl",
                    "uploadValidUntil"
                  ],
                  "description": "The response to a successful import. Includes the upload URL and the upload valid until date."
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Create an Import",
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst importJob = await exa.websets.imports.create('webset_id', {\n  source: {\n    type: 'csv',\n    url: 'https://example.com/companies.csv'\n  }\n});\n\nconsole.log(`Created import: ${importJob.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nimport_job = exa.websets.imports.create('webset_id', params={\n    'source': {\n        'type': 'csv',\n        'url': 'https://example.com/companies.csv'\n    }\n})\n\nprint(f'Created import: {import_job.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "get": {
        "description": "Lists all imports for the Webset.",
        "operationId": "imports-list",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "The cursor to paginate through the results",
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "The number of results to return",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 25,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of imports",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "data": {
                      "type": [
                        "array"
                      ],
                      "items": {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "id": {
                            "type": [
                              "string"
                            ],
                            "description": "The unique identifier for the Import"
                          },
                          "object": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "import"
                            ],
                            "description": "The type of object"
                          },
                          "status": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "pending",
                              "processing",
                              "completed",
                              "failed"
                            ],
                            "description": "The status of the Import"
                          },
                          "format": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "csv",
                              "webset"
                            ],
                            "description": "The format of the import."
                          },
                          "entity": {
                            "oneOf": [
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "company",
                                    "default": "company"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Company"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "person",
                                    "default": "person"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Person"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "article",
                                    "default": "article"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Article"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "research_paper",
                                    "default": "research_paper"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "title": "Research Paper"
                              },
                              {
                                "type": [
                                  "object"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "custom",
                                    "default": "custom"
                                  },
                                  "description": {
                                    "type": [
                                      "string"
                                    ],
                                    "minLength": 2,
                                    "maxLength": 200
                                  }
                                },
                                "required": [
                                  "type",
                                  "description"
                                ],
                                "title": "Custom"
                              }
                            ]
                          },
                          "title": {
                            "type": [
                              "string"
                            ],
                            "description": "The title of the import"
                          },
                          "count": {
                            "type": [
                              "number"
                            ],
                            "description": "The number of entities in the import"
                          },
                          "metadata": {
                            "description": "Set of key-value pairs you want to associate with this object.",
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string"
                              ],
                              "maxLength": 1000
                            }
                          },
                          "failedReason": {
                            "type": "string",
                            "enum": [
                              "invalid_format",
                              "invalid_file_content",
                              "missing_identifier"
                            ],
                            "description": "The reason the import failed",
                            "nullable": true
                          },
                          "failedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "When the import failed",
                            "nullable": true
                          },
                          "failedMessage": {
                            "type": "string",
                            "description": "A human readable message of the import failure",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was created"
                          },
                          "updatedAt": {
                            "type": [
                              "string"
                            ],
                            "format": "date-time",
                            "description": "When the import was last updated"
                          }
                        },
                        "required": [
                          "id",
                          "object",
                          "status",
                          "format",
                          "entity",
                          "title",
                          "count",
                          "metadata",
                          "failedReason",
                          "failedAt",
                          "failedMessage",
                          "createdAt",
                          "updatedAt"
                        ]
                      },
                      "description": "The list of imports"
                    },
                    "hasMore": {
                      "type": [
                        "boolean"
                      ],
                      "description": "Whether there are more results to paginate through"
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "The cursor to paginate through the next set of results",
                      "nullable": true
                    }
                  },
                  "required": [
                    "data",
                    "hasMore",
                    "nextCursor"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "List Imports",
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst imports = await exa.websets.imports.list({\n  webset_id: 'webset_id'\n});\n\nconsole.log(`Found ${imports.data.length} imports`);\nimports.data.forEach(importJob => {\n  console.log(`- ${importJob.id}: ${importJob.status}`);\n});"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nimports = exa.websets.imports.list(webset_id='webset_id')\n\nprint(f'Found {len(imports.data)} imports')\nfor import_job in imports.data:\n    print(f'- {import_job.id}: {import_job.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    },
    "/v0/imports/{id}": {
      "get": {
        "description": "Gets a specific import.",
        "operationId": "imports-get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Import",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Import details",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Import"
                    },
                    "object": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "import"
                      ],
                      "description": "The type of object"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "pending",
                        "processing",
                        "completed",
                        "failed"
                      ],
                      "description": "The status of the Import"
                    },
                    "format": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "csv",
                        "webset"
                      ],
                      "description": "The format of the import."
                    },
                    "entity": {
                      "oneOf": [
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "company",
                              "default": "company"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Company"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "person",
                              "default": "person"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Person"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "article",
                              "default": "article"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Article"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "research_paper",
                              "default": "research_paper"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Research Paper"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "custom",
                              "default": "custom"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 200
                            }
                          },
                          "required": [
                            "type",
                            "description"
                          ],
                          "title": "Custom"
                        }
                      ]
                    },
                    "title": {
                      "type": [
                        "string"
                      ],
                      "description": "The title of the import"
                    },
                    "count": {
                      "type": [
                        "number"
                      ],
                      "description": "The number of entities in the import"
                    },
                    "metadata": {
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "failedReason": {
                      "type": "string",
                      "enum": [
                        "invalid_format",
                        "invalid_file_content",
                        "missing_identifier"
                      ],
                      "description": "The reason the import failed",
                      "nullable": true
                    },
                    "failedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the import failed",
                      "nullable": true
                    },
                    "failedMessage": {
                      "type": "string",
                      "description": "A human readable message of the import failure",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the import was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the import was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "format",
                    "entity",
                    "title",
                    "count",
                    "metadata",
                    "failedReason",
                    "failedAt",
                    "failedMessage",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Get Import",
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst importJob = await exa.websets.imports.get('webset_id', 'import_id');\n\nconsole.log(`Import: ${importJob.id} - ${importJob.status}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nimport_job = exa.websets.imports.get('webset_id', 'import_id')\n\nprint(f'Import: {import_job.id} - {import_job.status}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "patch": {
        "description": "Updates a import configuration.",
        "operationId": "imports-update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Import",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": [
                  "object"
                ],
                "properties": {
                  "metadata": {
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string"
                      ]
                    }
                  },
                  "title": {
                    "type": [
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Import updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Import"
                    },
                    "object": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "import"
                      ],
                      "description": "The type of object"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "pending",
                        "processing",
                        "completed",
                        "failed"
                      ],
                      "description": "The status of the Import"
                    },
                    "format": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "csv",
                        "webset"
                      ],
                      "description": "The format of the import."
                    },
                    "entity": {
                      "oneOf": [
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "company",
                              "default": "company"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Company"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "person",
                              "default": "person"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Person"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "article",
                              "default": "article"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Article"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "research_paper",
                              "default": "research_paper"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Research Paper"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "custom",
                              "default": "custom"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 200
                            }
                          },
                          "required": [
                            "type",
                            "description"
                          ],
                          "title": "Custom"
                        }
                      ]
                    },
                    "title": {
                      "type": [
                        "string"
                      ],
                      "description": "The title of the import"
                    },
                    "count": {
                      "type": [
                        "number"
                      ],
                      "description": "The number of entities in the import"
                    },
                    "metadata": {
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "failedReason": {
                      "type": "string",
                      "enum": [
                        "invalid_format",
                        "invalid_file_content",
                        "missing_identifier"
                      ],
                      "description": "The reason the import failed",
                      "nullable": true
                    },
                    "failedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the import failed",
                      "nullable": true
                    },
                    "failedMessage": {
                      "type": "string",
                      "description": "A human readable message of the import failure",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the import was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the import was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "format",
                    "entity",
                    "title",
                    "count",
                    "metadata",
                    "failedReason",
                    "failedAt",
                    "failedMessage",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Update Import",
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nconst importJob = await exa.websets.imports.update('webset_id', 'import_id', {\n  name: 'Updated Import Name'\n});\n\nconsole.log(`Updated import: ${importJob.id}`);"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nimport_job = exa.websets.imports.update('webset_id', 'import_id', params={\n    'name': 'Updated Import Name'\n})\n\nprint(f'Updated import: {import_job.id}')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      },
      "delete": {
        "description": "Deletes a import.",
        "operationId": "imports-delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the Import",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Import deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The unique identifier for the Import"
                    },
                    "object": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "import"
                      ],
                      "description": "The type of object"
                    },
                    "status": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "pending",
                        "processing",
                        "completed",
                        "failed"
                      ],
                      "description": "The status of the Import"
                    },
                    "format": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "csv",
                        "webset"
                      ],
                      "description": "The format of the import."
                    },
                    "entity": {
                      "oneOf": [
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "company",
                              "default": "company"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Company"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "person",
                              "default": "person"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Person"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "article",
                              "default": "article"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Article"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "research_paper",
                              "default": "research_paper"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Research Paper"
                        },
                        {
                          "type": [
                            "object"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "custom",
                              "default": "custom"
                            },
                            "description": {
                              "type": [
                                "string"
                              ],
                              "minLength": 2,
                              "maxLength": 200
                            }
                          },
                          "required": [
                            "type",
                            "description"
                          ],
                          "title": "Custom"
                        }
                      ]
                    },
                    "title": {
                      "type": [
                        "string"
                      ],
                      "description": "The title of the import"
                    },
                    "count": {
                      "type": [
                        "number"
                      ],
                      "description": "The number of entities in the import"
                    },
                    "metadata": {
                      "description": "Set of key-value pairs you want to associate with this object.",
                      "type": [
                        "object"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string"
                        ],
                        "maxLength": 1000
                      }
                    },
                    "failedReason": {
                      "type": "string",
                      "enum": [
                        "invalid_format",
                        "invalid_file_content",
                        "missing_identifier"
                      ],
                      "description": "The reason the import failed",
                      "nullable": true
                    },
                    "failedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the import failed",
                      "nullable": true
                    },
                    "failedMessage": {
                      "type": "string",
                      "description": "A human readable message of the import failure",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the import was created"
                    },
                    "updatedAt": {
                      "type": [
                        "string"
                      ],
                      "format": "date-time",
                      "description": "When the import was last updated"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "status",
                    "format",
                    "entity",
                    "title",
                    "count",
                    "metadata",
                    "failedReason",
                    "failedAt",
                    "failedMessage",
                    "createdAt",
                    "updatedAt"
                  ]
                }
              }
            },
            "headers": {
              "X-Request-Id": {
                "schema": {
                  "type": "string"
                },
                "description": "Unique identifier for the request.",
                "example": "req_N6SsgoiaOQOPqsYKKiw5",
                "required": true
              }
            }
          }
        },
        "summary": "Delete Import",
        "tags": [
          "Imports"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "x-codeSamples": [
          {
            "lang": "javascript",
            "label": "JavaScript",
            "source": "// npm install exa-js\nimport Exa from 'exa-js';\nconst exa = new Exa('YOUR_EXA_API_KEY');\n\nawait exa.websets.imports.delete('webset_id', 'import_id');\n\nconsole.log('Import deleted successfully');"
          },
          {
            "lang": "python",
            "label": "Python",
            "source": "# pip install exa-py\nfrom exa_py import Exa\nexa = Exa('YOUR_EXA_API_KEY')\n\nexa.websets.imports.delete('webset_id', 'import_id')\n\nprint('Import deleted successfully')"
          }
        ],
        "x-moar-original-servers": [
          {
            "url": "https://api.exa.ai/websets/",
            "description": "Production"
          }
        ],
        "x-moar-primitive-count": 0,
        "x-moar-complexity-skipped": false
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header",
        "description": "API key can be provided either via x-api-key header or Authorization header with Bearer scheme"
      },
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "description": "API key can be provided either via x-api-key header or Authorization header with Bearer scheme"
      },
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Your Exa API key"
      }
    },
    "schemas": {
      "AnswerCitation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The temporary ID for the document.",
            "example": "https://www.theguardian.com/science/2024/dec/11/spacex-valued-at-350bn-as-company-agrees-to-buy-shares-from-employees"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the search result.",
            "example": "https://www.theguardian.com/science/2024/dec/11/spacex-valued-at-350bn-as-company-agrees-to-buy-shares-from-employees"
          },
          "title": {
            "type": "string",
            "description": "The title of the search result.",
            "example": "SpaceX valued at $350bn as company agrees to buy shares from ..."
          },
          "author": {
            "type": "string",
            "nullable": true,
            "description": "If available, the author of the content.",
            "example": "Dan Milmon"
          },
          "publishedDate": {
            "type": "string",
            "nullable": true,
            "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD.",
            "example": "2023-11-16T01:36:32.547Z"
          },
          "text": {
            "type": "string",
            "description": "The full text content of each source. Only present when includeText is enabled.",
            "example": "SpaceX valued at $350bn as company agrees to buy shares from ..."
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the image associated with the search result, if available.",
            "example": "https://i.guim.co.uk/img/media/7cfee7e84b24b73c97a079c402642a333ad31e77/0_380_6176_3706/master/6176.jpg?width=1200&height=630&quality=85&auto=format&fit=crop&overlay-align=bottom%2Cleft&overlay-width=100p&overlay-base64=L2ltZy9zdGF0aWMvb3ZlcmxheXMvdGctZGVmYXVsdC5wbmc&enable=upscale&s=71ebb2fbf458c185229d02d380c01530"
          },
          "favicon": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the favicon for the search result's domain, if available.",
            "example": "https://assets.guim.co.uk/static/frontend/icons/homescreen/apple-touch-icon.svg"
          }
        }
      },
      "AnswerResult": {
        "type": "object",
        "properties": {
          "answer": {
            "type": "string",
            "description": "The generated answer based on search results.",
            "example": "$350 billion."
          },
          "citations": {
            "type": "array",
            "description": "Search results used to generate the answer.",
            "items": {
              "$ref": "#/components/schemas/AnswerCitation"
            }
          }
        }
      },
      "ContentsRequest": {
        "type": "object",
        "properties": {
          "text": {
            "oneOf": [
              {
                "type": "boolean",
                "title": "Simple text retrieval",
                "description": "If true, returns full page text with default settings. If false, disables text return."
              },
              {
                "type": "object",
                "title": "Advanced text options",
                "description": "Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.",
                "properties": {
                  "maxCharacters": {
                    "type": "integer",
                    "description": "Maximum character limit for the full page text. Useful for controlling response size and API costs.",
                    "example": 1000
                  },
                  "includeHtmlTags": {
                    "type": "boolean",
                    "default": false,
                    "description": "Include HTML tags in the response, which can help LLMs understand text structure and formatting.",
                    "example": false
                  }
                }
              }
            ]
          },
          "highlights": {
            "type": "object",
            "description": "Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.",
            "properties": {
              "numSentences": {
                "type": "integer",
                "minimum": 1,
                "description": "The number of sentences to return for each snippet.",
                "example": 1
              },
              "highlightsPerUrl": {
                "type": "integer",
                "minimum": 1,
                "description": "The number of snippets to return for each result.",
                "example": 1
              },
              "query": {
                "type": "string",
                "description": "Custom query to direct the LLM's selection of highlights.",
                "example": "Key advancements"
              }
            }
          },
          "summary": {
            "type": "object",
            "description": "Summary of the webpage",
            "properties": {
              "query": {
                "type": "string",
                "description": "Custom query for the LLM-generated summary.",
                "example": "Main developments"
              },
              "schema": {
                "type": "object",
                "description": "JSON schema for structured output from summary. \nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\n",
                "example": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "Title",
                  "type": "object",
                  "properties": {
                    "Property 1": {
                      "type": "string",
                      "description": "Description"
                    },
                    "Property 2": {
                      "type": "string",
                      "enum": [
                        "option 1",
                        "option 2",
                        "option 3"
                      ],
                      "description": "Description"
                    }
                  },
                  "required": [
                    "Property 1"
                  ]
                }
              }
            }
          },
          "livecrawl": {
            "type": "string",
            "enum": [
              "never",
              "fallback",
              "always",
              "preferred"
            ],
            "description": "Options for livecrawling pages.\n'never': Disable livecrawling (default for neural search).\n'fallback': Livecrawl when cache is empty (default for keyword search).\n'always': Always livecrawl.\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\n",
            "example": "always"
          },
          "livecrawlTimeout": {
            "type": "integer",
            "default": 10000,
            "description": "The timeout for livecrawling in milliseconds.",
            "example": 1000
          },
          "subpages": {
            "type": "integer",
            "default": 0,
            "description": "The number of subpages to crawl. The actual number crawled may be limited by system constraints.",
            "example": 1
          },
          "subpageTarget": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.",
            "example": "sources"
          },
          "extras": {
            "type": "object",
            "description": "Extra parameters to pass.",
            "properties": {
              "links": {
                "type": "integer",
                "default": 0,
                "description": "Number of URLs to return from each webpage.",
                "example": 1
              },
              "imageLinks": {
                "type": "integer",
                "default": 0,
                "description": "Number of images to return for each result.",
                "example": 1
              }
            }
          },
          "context": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                "example": true
              },
              {
                "type": "object",
                "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                "properties": {
                  "maxCharacters": {
                    "type": "integer",
                    "description": "Maximum character limit.",
                    "example": 10000
                  }
                }
              }
            ]
          }
        }
      },
      "CommonRequest": {
        "type": "object",
        "properties": {
          "numResults": {
            "type": "integer",
            "maximum": 100,
            "default": 10,
            "minimum": 1,
            "description": "Number of results to return (up to thousands of results available for custom plans)",
            "example": 10
          },
          "includeDomains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of domains to include in the search. If specified, results will only come from these domains.",
            "example": [
              "arxiv.org",
              "paperswithcode.com"
            ]
          },
          "excludeDomains": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of domains to exclude from search results. If specified, no results will be returned from these domains."
          },
          "startCrawlDate": {
            "type": "string",
            "format": "date-time",
            "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
            "example": "2023-01-01"
          },
          "endCrawlDate": {
            "type": "string",
            "format": "date-time",
            "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
            "example": "2023-12-31"
          },
          "startPublishedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
            "example": "2023-01-01"
          },
          "endPublishedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
            "example": "2023-12-31"
          },
          "includeText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.",
            "example": [
              "large language model"
            ]
          },
          "excludeText": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.",
            "example": [
              "course"
            ]
          },
          "context": {
            "oneOf": [
              {
                "type": "boolean",
                "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                "example": true
              },
              {
                "type": "object",
                "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                "properties": {
                  "maxCharacters": {
                    "type": "integer",
                    "description": "Maximum character limit.",
                    "example": 10000
                  }
                }
              }
            ]
          },
          "contents": {
            "$ref": "#/components/schemas/ContentsRequest"
          }
        }
      },
      "Result": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the search result.",
            "example": "A Comprehensive Overview of Large Language Models"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the search result.",
            "example": "https://arxiv.org/pdf/2307.06435.pdf"
          },
          "publishedDate": {
            "type": "string",
            "nullable": true,
            "description": "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD.",
            "example": "2023-11-16T01:36:32.547Z"
          },
          "author": {
            "type": "string",
            "nullable": true,
            "description": "If available, the author of the content.",
            "example": "Humza  Naveed, University of Engineering and Technology (UET), Lahore, Pakistan"
          },
          "score": {
            "type": "number",
            "nullable": true,
            "description": "A number from 0 to 1 representing similarity between the query/url and the result.",
            "example": 0.4600165784358978
          },
          "id": {
            "type": "string",
            "description": "The temporary ID for the document. Useful for /contents endpoint.",
            "example": "https://arxiv.org/abs/2307.06435"
          },
          "image": {
            "type": "string",
            "format": "uri",
            "description": "The URL of an image associated with the search result, if available.",
            "example": "https://arxiv.org/pdf/2307.06435.pdf/page_1.png"
          },
          "favicon": {
            "type": "string",
            "format": "uri",
            "description": "The URL of the favicon for the search result's domain.",
            "example": "https://arxiv.org/favicon.ico"
          }
        }
      },
      "ResultWithContent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Result"
          },
          {
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
                "description": "The full content text of the search result.",
                "example": "Abstract Large Language Models (LLMs) have recently demonstrated remarkable capabilities..."
              },
              "highlights": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of highlights extracted from the search result content.",
                "example": [
                  "Such requirements have limited their adoption..."
                ]
              },
              "highlightScores": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "float"
                },
                "description": "Array of cosine similarity scores for each highlighted",
                "example": [
                  0.4600165784358978
                ]
              },
              "summary": {
                "type": "string",
                "description": "Summary of the webpage",
                "example": "This overview paper on Large Language Models (LLMs) highlights key developments..."
              },
              "subpages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ResultWithContent"
                },
                "description": "Array of subpages for the search result.",
                "example": [
                  {
                    "id": "https://arxiv.org/abs/2303.17580",
                    "url": "https://arxiv.org/pdf/2303.17580.pdf",
                    "title": "HuggingGPT: Solving AI Tasks with ChatGPT and its Friends in Hugging Face",
                    "author": "Yongliang  Shen, Microsoft Research Asia, Kaitao  Song, Microsoft Research Asia, Xu  Tan, Microsoft Research Asia, Dongsheng  Li, Microsoft Research Asia, Weiming  Lu, Microsoft Research Asia, Yueting  Zhuang, Microsoft Research Asia, yzhuang@zju.edu.cn, Zhejiang  University, Microsoft Research Asia, Microsoft  Research, Microsoft Research Asia",
                    "publishedDate": "2023-11-16T01:36:20.486Z",
                    "text": "HuggingGPT: Solving AI Tasks with ChatGPT and its Friends in Hugging Face Date Published: 2023-05-25 Authors: Yongliang Shen, Microsoft Research Asia Kaitao Song, Microsoft Research Asia Xu Tan, Microsoft Research Asia Dongsheng Li, Microsoft Research Asia Weiming Lu, Microsoft Research Asia Yueting Zhuang, Microsoft Research Asia, yzhuang@zju.edu.cn Zhejiang University, Microsoft Research Asia Microsoft Research, Microsoft Research Asia Abstract Solving complicated AI tasks with different domains and modalities is a key step toward artificial general intelligence. While there are abundant AI models available for different domains and modalities, they cannot handle complicated AI tasks. Considering large language models (LLMs) have exhibited exceptional ability in language understanding, generation, interaction, and reasoning, we advocate that LLMs could act as a controller to manage existing AI models to solve complicated AI tasks and language could be a generic interface to empower t",
                    "summary": "HuggingGPT is a framework using ChatGPT as a central controller to orchestrate various AI models from Hugging Face to solve complex tasks. ChatGPT plans the task, selects appropriate models based on their descriptions, executes subtasks, and summarizes the results. This approach addresses limitations of LLMs by allowing them to handle multimodal data (vision, speech) and coordinate multiple models for complex tasks, paving the way for more advanced AI systems.",
                    "highlights": [
                      "2) Recently, some researchers started to investigate the integration of using tools or models in LLMs  ."
                    ],
                    "highlightScores": [
                      0.32679107785224915
                    ]
                  }
                ]
              },
              "extras": {
                "type": "object",
                "description": "Results from extras.",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of links from the search result.",
                    "example": []
                  }
                }
              }
            }
          }
        ]
      },
      "CostDollars": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "format": "float",
            "description": "Total dollar cost for your request",
            "example": 0.005
          },
          "breakDown": {
            "type": "array",
            "description": "Breakdown of costs by operation type",
            "items": {
              "type": "object",
              "properties": {
                "search": {
                  "type": "number",
                  "format": "float",
                  "description": "Cost of your search operations",
                  "example": 0.005
                },
                "contents": {
                  "type": "number",
                  "format": "float",
                  "description": "Cost of your content operations",
                  "example": 0
                },
                "breakdown": {
                  "type": "object",
                  "properties": {
                    "keywordSearch": {
                      "type": "number",
                      "format": "float",
                      "description": "Cost of your keyword search operations",
                      "example": 0
                    },
                    "neuralSearch": {
                      "type": "number",
                      "format": "float",
                      "description": "Cost of your neural search operations",
                      "example": 0.005
                    },
                    "contentText": {
                      "type": "number",
                      "format": "float",
                      "description": "Cost of your text content retrieval",
                      "example": 0
                    },
                    "contentHighlight": {
                      "type": "number",
                      "format": "float",
                      "description": "Cost of your highlight generation",
                      "example": 0
                    },
                    "contentSummary": {
                      "type": "number",
                      "format": "float",
                      "description": "Cost of your summary generation",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "perRequestPrices": {
            "type": "object",
            "description": "Standard price per request for different operations",
            "properties": {
              "neuralSearch_1_25_results": {
                "type": "number",
                "format": "float",
                "description": "Standard price for neural search with 1-25 results",
                "example": 0.005
              },
              "neuralSearch_26_100_results": {
                "type": "number",
                "format": "float",
                "description": "Standard price for neural search with 26-100 results",
                "example": 0.025
              },
              "neuralSearch_100_plus_results": {
                "type": "number",
                "format": "float",
                "description": "Standard price for neural search with 100+ results",
                "example": 1
              },
              "keywordSearch_1_100_results": {
                "type": "number",
                "format": "float",
                "description": "Standard price for keyword search with 1-100 results",
                "example": 0.0025
              },
              "keywordSearch_100_plus_results": {
                "type": "number",
                "format": "float",
                "description": "Standard price for keyword search with 100+ results",
                "example": 3
              }
            }
          },
          "perPagePrices": {
            "type": "object",
            "description": "Standard price per page for different content operations",
            "properties": {
              "contentText": {
                "type": "number",
                "format": "float",
                "description": "Standard price per page for text content",
                "example": 0.001
              },
              "contentHighlight": {
                "type": "number",
                "format": "float",
                "description": "Standard price per page for highlights",
                "example": 0.001
              },
              "contentSummary": {
                "type": "number",
                "format": "float",
                "description": "Standard price per page for summaries",
                "example": 0.001
              }
            }
          }
        }
      },
      "ListResearchResponseDto": {
        "type": [
          "object"
        ],
        "properties": {
          "data": {
            "type": [
              "array"
            ],
            "items": {
              "discriminator": {
                "propertyName": "status"
              },
              "examples": [
                {
                  "researchId": "01jszdfs0052sg4jc552sg4jc5",
                  "model": "exa-research",
                  "instructions": "What species of ant are similar to honeypot ants?",
                  "status": "running"
                },
                {
                  "researchId": "01jszdfs0052sg4jc552sg4jc5",
                  "model": "exa-research",
                  "instructions": "What species of ant are similar to honeypot ants?",
                  "status": "completed",
                  "output": "Melophorus bagoti"
                }
              ],
              "$ref": "#/components/schemas/ResearchDtoClass"
            },
            "description": "The list of research requests"
          },
          "hasMore": {
            "type": [
              "boolean"
            ],
            "description": "Whether there are more results to paginate through"
          },
          "nextCursor": {
            "type": [
              "string",
              "null"
            ],
            "description": "The cursor to paginate through the next set of results"
          }
        },
        "required": [
          "data",
          "hasMore",
          "nextCursor"
        ]
      },
      "ResearchCreateRequestDtoClass": {
        "type": [
          "object"
        ],
        "properties": {
          "model": {
            "default": "exa-research",
            "type": [
              "string"
            ],
            "enum": [
              "exa-research",
              "exa-research-pro"
            ]
          },
          "instructions": {
            "type": [
              "string"
            ],
            "maxLength": 4096,
            "description": "Instructions for what research should be conducted"
          },
          "outputSchema": {
            "type": [
              "object"
            ],
            "additionalProperties": {}
          }
        },
        "required": [
          "instructions"
        ],
        "examples": [
          {
            "model": "exa-research",
            "instructions": "What species of ant are similar to honeypot ants?"
          }
        ]
      },
      "ResearchDtoClass": {
        "discriminator": {
          "propertyName": "status"
        },
        "oneOf": [
          {
            "type": [
              "object"
            ],
            "properties": {
              "researchId": {
                "type": [
                  "string"
                ],
                "description": "The unique identifier for the research request"
              },
              "createdAt": {
                "type": [
                  "number"
                ],
                "description": "Milliseconds since epoch time"
              },
              "model": {
                "default": "exa-research",
                "type": [
                  "string"
                ],
                "enum": [
                  "exa-research",
                  "exa-research-pro"
                ],
                "description": "The model used for the research request"
              },
              "instructions": {
                "type": [
                  "string"
                ],
                "description": "The instructions given to this research request"
              },
              "status": {
                "type": [
                  "string"
                ],
                "enum": [
                  "pending"
                ]
              }
            },
            "required": [
              "researchId",
              "createdAt",
              "instructions",
              "status"
            ]
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "researchId": {
                "type": [
                  "string"
                ],
                "description": "The unique identifier for the research request"
              },
              "createdAt": {
                "type": [
                  "number"
                ],
                "description": "Milliseconds since epoch time"
              },
              "model": {
                "default": "exa-research",
                "type": [
                  "string"
                ],
                "enum": [
                  "exa-research",
                  "exa-research-pro"
                ],
                "description": "The model used for the research request"
              },
              "instructions": {
                "type": [
                  "string"
                ],
                "description": "The instructions given to this research request"
              },
              "status": {
                "type": [
                  "string"
                ],
                "enum": [
                  "running"
                ]
              },
              "events": {
                "type": [
                  "array"
                ],
                "items": {
                  "$ref": "#/components/schemas/ResearchEventDtoClass"
                }
              }
            },
            "required": [
              "researchId",
              "createdAt",
              "instructions",
              "status"
            ]
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "researchId": {
                "type": [
                  "string"
                ],
                "description": "The unique identifier for the research request"
              },
              "createdAt": {
                "type": [
                  "number"
                ],
                "description": "Milliseconds since epoch time"
              },
              "model": {
                "default": "exa-research",
                "type": [
                  "string"
                ],
                "enum": [
                  "exa-research",
                  "exa-research-pro"
                ],
                "description": "The model used for the research request"
              },
              "instructions": {
                "type": [
                  "string"
                ],
                "description": "The instructions given to this research request"
              },
              "status": {
                "type": [
                  "string"
                ],
                "enum": [
                  "completed"
                ]
              },
              "events": {
                "type": [
                  "array"
                ],
                "items": {
                  "$ref": "#/components/schemas/ResearchEventDtoClass"
                }
              },
              "output": {
                "type": [
                  "object"
                ],
                "properties": {
                  "content": {
                    "type": [
                      "string"
                    ]
                  },
                  "parsed": {
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {}
                  }
                },
                "required": [
                  "content"
                ]
              },
              "costDollars": {
                "type": [
                  "object"
                ],
                "properties": {
                  "total": {
                    "type": [
                      "number"
                    ]
                  },
                  "numSearches": {
                    "type": [
                      "number"
                    ]
                  },
                  "numPages": {
                    "type": [
                      "number"
                    ]
                  },
                  "reasoningTokens": {
                    "type": [
                      "number"
                    ]
                  }
                },
                "required": [
                  "total",
                  "numSearches",
                  "numPages",
                  "reasoningTokens"
                ]
              }
            },
            "required": [
              "researchId",
              "createdAt",
              "instructions",
              "status",
              "output",
              "costDollars"
            ]
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "researchId": {
                "type": [
                  "string"
                ],
                "description": "The unique identifier for the research request"
              },
              "createdAt": {
                "type": [
                  "number"
                ],
                "description": "Milliseconds since epoch time"
              },
              "model": {
                "default": "exa-research",
                "type": [
                  "string"
                ],
                "enum": [
                  "exa-research",
                  "exa-research-pro"
                ],
                "description": "The model used for the research request"
              },
              "instructions": {
                "type": [
                  "string"
                ],
                "description": "The instructions given to this research request"
              },
              "status": {
                "type": [
                  "string"
                ],
                "enum": [
                  "canceled"
                ]
              },
              "events": {
                "type": [
                  "array"
                ],
                "items": {
                  "$ref": "#/components/schemas/ResearchEventDtoClass"
                }
              }
            },
            "required": [
              "researchId",
              "createdAt",
              "instructions",
              "status"
            ]
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "researchId": {
                "type": [
                  "string"
                ],
                "description": "The unique identifier for the research request"
              },
              "createdAt": {
                "type": [
                  "number"
                ],
                "description": "Milliseconds since epoch time"
              },
              "model": {
                "default": "exa-research",
                "type": [
                  "string"
                ],
                "enum": [
                  "exa-research",
                  "exa-research-pro"
                ],
                "description": "The model used for the research request"
              },
              "instructions": {
                "type": [
                  "string"
                ],
                "description": "The instructions given to this research request"
              },
              "status": {
                "type": [
                  "string"
                ],
                "enum": [
                  "failed"
                ]
              },
              "events": {
                "type": [
                  "array"
                ],
                "items": {
                  "$ref": "#/components/schemas/ResearchEventDtoClass"
                }
              },
              "error": {
                "type": [
                  "string"
                ],
                "description": "A message indicating why the request failed"
              }
            },
            "required": [
              "researchId",
              "createdAt",
              "instructions",
              "status",
              "error"
            ]
          }
        ],
        "examples": [
          {
            "researchId": "01jszdfs0052sg4jc552sg4jc5",
            "model": "exa-research",
            "instructions": "What species of ant are similar to honeypot ants?",
            "status": "running"
          },
          {
            "researchId": "01jszdfs0052sg4jc552sg4jc5",
            "model": "exa-research",
            "instructions": "What species of ant are similar to honeypot ants?",
            "status": "completed",
            "output": "Melophorus bagoti"
          }
        ]
      },
      "ResearchOperationDtoClass": {
        "discriminator": {
          "propertyName": "type"
        },
        "oneOf": [
          {
            "type": [
              "object"
            ],
            "properties": {
              "type": {
                "type": [
                  "string"
                ],
                "enum": [
                  "think"
                ]
              },
              "content": {
                "type": [
                  "string"
                ]
              }
            },
            "required": [
              "type",
              "content"
            ]
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "type": {
                "type": [
                  "string"
                ],
                "enum": [
                  "search"
                ]
              },
              "searchType": {
                "type": [
                  "string"
                ],
                "enum": [
                  "neural",
                  "keyword",
                  "auto",
                  "fast"
                ]
              },
              "goal": {
                "type": [
                  "string"
                ]
              },
              "query": {
                "type": [
                  "string"
                ]
              },
              "results": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "url": {
                      "type": [
                        "string"
                      ]
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              },
              "pageTokens": {
                "type": [
                  "number"
                ]
              }
            },
            "required": [
              "type",
              "searchType",
              "query",
              "results",
              "pageTokens"
            ]
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "type": {
                "type": [
                  "string"
                ],
                "enum": [
                  "crawl"
                ]
              },
              "goal": {
                "type": [
                  "string"
                ]
              },
              "result": {
                "type": [
                  "object"
                ],
                "properties": {
                  "url": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "required": [
                  "url"
                ]
              },
              "pageTokens": {
                "type": [
                  "number"
                ]
              }
            },
            "required": [
              "type",
              "result",
              "pageTokens"
            ]
          }
        ]
      },
      "ResearchEventDtoClass": {
        "oneOf": [
          {
            "discriminator": {
              "propertyName": "eventType"
            },
            "oneOf": [
              {
                "type": [
                  "object"
                ],
                "properties": {
                  "eventType": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "research-definition"
                    ]
                  },
                  "instructions": {
                    "type": [
                      "string"
                    ]
                  },
                  "outputSchema": {
                    "type": [
                      "object"
                    ],
                    "additionalProperties": {}
                  },
                  "createdAt": {
                    "type": [
                      "number"
                    ],
                    "description": "Milliseconds since epoch time"
                  },
                  "researchId": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "required": [
                  "eventType",
                  "instructions",
                  "createdAt",
                  "researchId"
                ]
              },
              {
                "type": [
                  "object"
                ],
                "properties": {
                  "eventType": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "research-output"
                    ]
                  },
                  "output": {
                    "discriminator": {
                      "propertyName": "outputType"
                    },
                    "oneOf": [
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "outputType": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "completed"
                            ]
                          },
                          "costDollars": {
                            "type": [
                              "object"
                            ],
                            "properties": {
                              "total": {
                                "type": [
                                  "number"
                                ]
                              },
                              "numSearches": {
                                "type": [
                                  "number"
                                ]
                              },
                              "numPages": {
                                "type": [
                                  "number"
                                ]
                              },
                              "reasoningTokens": {
                                "type": [
                                  "number"
                                ]
                              }
                            },
                            "required": [
                              "total",
                              "numSearches",
                              "numPages",
                              "reasoningTokens"
                            ]
                          },
                          "content": {
                            "type": [
                              "string"
                            ]
                          },
                          "parsed": {
                            "type": [
                              "object"
                            ],
                            "additionalProperties": {}
                          }
                        },
                        "required": [
                          "outputType",
                          "costDollars",
                          "content"
                        ]
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "outputType": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "failed"
                            ]
                          },
                          "error": {
                            "type": [
                              "string"
                            ]
                          }
                        },
                        "required": [
                          "outputType",
                          "error"
                        ]
                      }
                    ]
                  },
                  "createdAt": {
                    "type": [
                      "number"
                    ],
                    "description": "Milliseconds since epoch time"
                  },
                  "researchId": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "required": [
                  "eventType",
                  "output",
                  "createdAt",
                  "researchId"
                ]
              }
            ]
          },
          {
            "discriminator": {
              "propertyName": "eventType"
            },
            "oneOf": [
              {
                "type": [
                  "object"
                ],
                "properties": {
                  "eventType": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "plan-definition"
                    ]
                  },
                  "planId": {
                    "type": [
                      "string"
                    ]
                  },
                  "createdAt": {
                    "type": [
                      "number"
                    ],
                    "description": "Milliseconds since epoch time"
                  },
                  "researchId": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "required": [
                  "eventType",
                  "planId",
                  "createdAt",
                  "researchId"
                ]
              },
              {
                "type": [
                  "object"
                ],
                "properties": {
                  "eventType": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "plan-operation"
                    ]
                  },
                  "planId": {
                    "type": [
                      "string"
                    ]
                  },
                  "operationId": {
                    "type": [
                      "string"
                    ]
                  },
                  "data": {
                    "discriminator": {
                      "propertyName": "type"
                    },
                    "$ref": "#/components/schemas/ResearchOperationDtoClass"
                  },
                  "createdAt": {
                    "type": [
                      "number"
                    ],
                    "description": "Milliseconds since epoch time"
                  },
                  "researchId": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "required": [
                  "eventType",
                  "planId",
                  "operationId",
                  "data",
                  "createdAt",
                  "researchId"
                ]
              },
              {
                "type": [
                  "object"
                ],
                "properties": {
                  "eventType": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "plan-output"
                    ]
                  },
                  "planId": {
                    "type": [
                      "string"
                    ]
                  },
                  "output": {
                    "discriminator": {
                      "propertyName": "outputType"
                    },
                    "oneOf": [
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "outputType": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "tasks"
                            ]
                          },
                          "reasoning": {
                            "type": [
                              "string"
                            ]
                          },
                          "tasksInstructions": {
                            "type": [
                              "array"
                            ],
                            "items": {
                              "type": [
                                "string"
                              ]
                            }
                          }
                        },
                        "required": [
                          "outputType",
                          "reasoning",
                          "tasksInstructions"
                        ]
                      },
                      {
                        "type": [
                          "object"
                        ],
                        "properties": {
                          "outputType": {
                            "type": [
                              "string"
                            ],
                            "enum": [
                              "stop"
                            ]
                          },
                          "reasoning": {
                            "type": [
                              "string"
                            ]
                          }
                        },
                        "required": [
                          "outputType",
                          "reasoning"
                        ]
                      }
                    ]
                  },
                  "createdAt": {
                    "type": [
                      "number"
                    ],
                    "description": "Milliseconds since epoch time"
                  },
                  "researchId": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "required": [
                  "eventType",
                  "planId",
                  "output",
                  "createdAt",
                  "researchId"
                ]
              }
            ]
          },
          {
            "discriminator": {
              "propertyName": "eventType"
            },
            "oneOf": [
              {
                "type": [
                  "object"
                ],
                "properties": {
                  "eventType": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "task-definition"
                    ]
                  },
                  "planId": {
                    "type": [
                      "string"
                    ]
                  },
                  "taskId": {
                    "type": [
                      "string"
                    ]
                  },
                  "instructions": {
                    "type": [
                      "string"
                    ]
                  },
                  "createdAt": {
                    "type": [
                      "number"
                    ],
                    "description": "Milliseconds since epoch time"
                  },
                  "researchId": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "required": [
                  "eventType",
                  "planId",
                  "taskId",
                  "instructions",
                  "createdAt",
                  "researchId"
                ]
              },
              {
                "type": [
                  "object"
                ],
                "properties": {
                  "eventType": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "task-operation"
                    ]
                  },
                  "planId": {
                    "type": [
                      "string"
                    ]
                  },
                  "taskId": {
                    "type": [
                      "string"
                    ]
                  },
                  "operationId": {
                    "type": [
                      "string"
                    ]
                  },
                  "data": {
                    "discriminator": {
                      "propertyName": "type"
                    },
                    "$ref": "#/components/schemas/ResearchOperationDtoClass"
                  },
                  "createdAt": {
                    "type": [
                      "number"
                    ],
                    "description": "Milliseconds since epoch time"
                  },
                  "researchId": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "required": [
                  "eventType",
                  "planId",
                  "taskId",
                  "operationId",
                  "data",
                  "createdAt",
                  "researchId"
                ]
              },
              {
                "type": [
                  "object"
                ],
                "properties": {
                  "eventType": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "task-output"
                    ]
                  },
                  "planId": {
                    "type": [
                      "string"
                    ]
                  },
                  "taskId": {
                    "type": [
                      "string"
                    ]
                  },
                  "output": {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "outputType": {
                        "type": [
                          "string"
                        ],
                        "enum": [
                          "completed"
                        ]
                      },
                      "content": {
                        "type": [
                          "string"
                        ]
                      }
                    },
                    "required": [
                      "outputType",
                      "content"
                    ]
                  },
                  "createdAt": {
                    "type": [
                      "number"
                    ],
                    "description": "Milliseconds since epoch time"
                  },
                  "researchId": {
                    "type": [
                      "string"
                    ]
                  }
                },
                "required": [
                  "eventType",
                  "planId",
                  "taskId",
                  "output",
                  "createdAt",
                  "researchId"
                ]
              }
            ]
          }
        ]
      },
      "CompanyEntity": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "company",
            "default": "company"
          }
        },
        "required": [
          "type"
        ],
        "title": "Company"
      },
      "PersonEntity": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "person",
            "default": "person"
          }
        },
        "required": [
          "type"
        ],
        "title": "Person"
      },
      "ArticleEntity": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "article",
            "default": "article"
          }
        },
        "required": [
          "type"
        ],
        "title": "Article"
      },
      "ResearchPaperEntity": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "research_paper",
            "default": "research_paper"
          }
        },
        "required": [
          "type"
        ],
        "title": "Research Paper"
      },
      "CustomEntity": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "custom",
            "default": "custom"
          },
          "description": {
            "type": [
              "string"
            ],
            "minLength": 2,
            "maxLength": 200
          }
        },
        "required": [
          "type",
          "description"
        ],
        "title": "Custom"
      },
      "Entity": {
        "oneOf": [
          {
            "type": [
              "object"
            ],
            "$ref": "#/components/schemas/CompanyEntity"
          },
          {
            "type": [
              "object"
            ],
            "$ref": "#/components/schemas/PersonEntity"
          },
          {
            "type": [
              "object"
            ],
            "$ref": "#/components/schemas/ArticleEntity"
          },
          {
            "type": [
              "object"
            ],
            "$ref": "#/components/schemas/ResearchPaperEntity"
          },
          {
            "type": [
              "object"
            ],
            "$ref": "#/components/schemas/CustomEntity"
          }
        ]
      },
      "CreateCriterionParameters": {
        "type": [
          "object"
        ],
        "properties": {
          "description": {
            "type": [
              "string"
            ],
            "minLength": 1,
            "maxLength": 1000,
            "description": "The description of the criterion"
          }
        },
        "required": [
          "description"
        ]
      },
      "CreateEnrichmentParameters": {
        "type": [
          "object"
        ],
        "properties": {
          "description": {
            "type": [
              "string"
            ],
            "minLength": 1,
            "maxLength": 5000,
            "description": "Provide a description of the enrichment task you want to perform to each Webset Item."
          },
          "format": {
            "type": [
              "string"
            ],
            "enum": [
              "text",
              "date",
              "number",
              "options",
              "email",
              "phone",
              "url"
            ],
            "description": "Format of the enrichment response.\n\nWe automatically select the best format based on the description. If you want to explicitly specify the format, you can do so here."
          },
          "options": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "label": {
                  "type": [
                    "string"
                  ],
                  "description": "The label of the option"
                }
              },
              "required": [
                "label"
              ]
            },
            "minItems": 1,
            "maxItems": 150,
            "description": "When the format is options, the different options for the enrichment agent to choose from."
          },
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          }
        },
        "required": [
          "description"
        ]
      },
      "CreateWebsetParameters": {
        "type": [
          "object"
        ],
        "properties": {
          "search": {
            "type": [
              "object"
            ],
            "properties": {
              "query": {
                "type": [
                  "string"
                ],
                "minLength": 1,
                "maxLength": 5000,
                "description": "Natural language search query describing what you are looking for.\n\nBe specific and descriptive about your requirements, characteristics, and any constraints that help narrow down the results.\n\nAny URLs provided will be crawled and used as additional context for the search.",
                "examples": [
                  "Marketing agencies based in the US, that focus on consumer products.",
                  "AI startups in Europe that raised Series A funding in 2024",
                  "SaaS companies with 50-200 employees in the fintech space"
                ]
              },
              "count": {
                "default": 10,
                "type": [
                  "number"
                ],
                "minimum": 1,
                "description": "Number of Items the Webset will attempt to find.\n\nThe actual number of Items found may be less than this number depending on the search complexity."
              },
              "entity": {
                "$ref": "#/components/schemas/Entity",
                "description": "Entity the Webset will return results for.\n\nIt is not required to provide it, we automatically detect the entity from all the information provided in the query. Only use this when you need more fine control."
              },
              "criteria": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "object"
                  ],
                  "$ref": "#/components/schemas/CreateCriterionParameters",
                  "title": "CreateCriterionParameters"
                },
                "minItems": 1,
                "maxItems": 5,
                "description": "Criteria every item is evaluated against.\n\nIt's not required to provide your own criteria, we automatically detect the criteria from all the information provided in the query. Only use this when you need more fine control."
              },
              "recall": {
                "type": [
                  "boolean"
                ],
                "description": "Whether to provide an estimate of how many total relevant results could exist for this search.\nResult of the analysis will be available in the `recall` field within the search request."
              },
              "exclude": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "source": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "import",
                        "webset"
                      ]
                    },
                    "id": {
                      "type": [
                        "string"
                      ],
                      "minLength": 1,
                      "description": "The ID of the source to exclude."
                    }
                  },
                  "required": [
                    "source",
                    "id"
                  ]
                },
                "description": "Sources (existing imports or websets) to exclude from search results. Any results found within these sources will be omitted to prevent finding them during search."
              },
              "scope": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "source": {
                      "type": [
                        "string"
                      ],
                      "enum": [
                        "import",
                        "webset"
                      ]
                    },
                    "id": {
                      "type": [
                        "string"
                      ],
                      "minLength": 1,
                      "description": "The ID of the source to search."
                    },
                    "relationship": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "definition": {
                          "type": [
                            "string"
                          ],
                          "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                        },
                        "limit": {
                          "type": [
                            "number"
                          ],
                          "minimum": 1,
                          "maximum": 10
                        }
                      },
                      "required": [
                        "definition",
                        "limit"
                      ]
                    }
                  },
                  "required": [
                    "source",
                    "id"
                  ]
                },
                "description": "Limit the search to specific sources (existing imports or websets). Any results found within these sources matching the search criteria will be included in the Webset."
              }
            },
            "required": [
              "query"
            ],
            "description": "Create initial search for the Webset."
          },
          "import": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "source": {
                  "type": [
                    "string"
                  ],
                  "enum": [
                    "import",
                    "webset"
                  ]
                },
                "id": {
                  "type": [
                    "string"
                  ],
                  "minLength": 1,
                  "description": "The ID of the source to search."
                }
              },
              "required": [
                "source",
                "id"
              ]
            },
            "description": "Import data from existing Websets and Imports into this Webset."
          },
          "enrichments": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/CreateEnrichmentParameters",
              "title": "CreateEnrichmentParameters"
            },
            "description": "Add enrichments to extract additional data from found items.\n\nEnrichments automatically search for and extract specific information (like contact details, funding data, employee counts, etc.) from each item added to your Webset."
          },
          "exclude": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "source": {
                  "type": [
                    "string"
                  ],
                  "enum": [
                    "import",
                    "webset"
                  ]
                },
                "id": {
                  "type": [
                    "string"
                  ],
                  "minLength": 1,
                  "description": "The ID of the source to exclude."
                }
              },
              "required": [
                "source",
                "id"
              ]
            },
            "description": "Global exclusion sources (existing imports or websets) that apply to all operations within this Webset. Any results found within these sources will be omitted across all search and import operations."
          },
          "externalId": {
            "type": [
              "string"
            ],
            "maxLength": 300,
            "description": "The external identifier for the webset.\n\nYou can use this to reference the Webset by your own internal identifiers."
          },
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          }
        },
        "examples": [
          {
            "search": {
              "query": "Marketing agencies based in the US, that focus on consumer products.",
              "count": 10
            }
          }
        ]
      },
      "WebsetSearch": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the search"
          },
          "object": {
            "type": "string",
            "const": "webset_search",
            "default": "webset_search"
          },
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "created",
              "pending",
              "running",
              "completed",
              "canceled"
            ],
            "description": "The status of the search",
            "title": "WebsetSearchStatus"
          },
          "websetId": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the Webset this search belongs to"
          },
          "query": {
            "description": "The query used to create the search.",
            "type": [
              "string"
            ],
            "minLength": 1,
            "maxLength": 5000
          },
          "entity": {
            "$ref": "#/components/schemas/Entity",
            "description": "The entity the search will return results for.\n\nWhen no entity is provided during creation, we will automatically select the best entity based on the query.",
            "nullable": true
          },
          "criteria": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "description": {
                  "description": "The description of the criterion",
                  "type": [
                    "string"
                  ],
                  "minLength": 1,
                  "maxLength": 1000
                },
                "successRate": {
                  "type": [
                    "number"
                  ],
                  "minimum": 0,
                  "maximum": 100,
                  "description": "Value between 0 and 100 representing the percentage of results that meet the criterion."
                }
              },
              "required": [
                "description",
                "successRate"
              ]
            },
            "description": "The criteria the search will use to evaluate the results. If not provided, we will automatically generate them for you."
          },
          "count": {
            "type": [
              "number"
            ],
            "minimum": 1,
            "description": "The number of results the search will attempt to find. The actual number of results may be less than this number depending on the search complexity."
          },
          "behavior": {
            "default": "override",
            "type": [
              "string"
            ],
            "$ref": "#/components/schemas/WebsetSearchBehavior",
            "description": "The behavior of the search when it is added to a Webset.\n\n- `override`: the search will replace the existing Items found in the Webset and evaluate them against the new criteria. Any Items that don't match the new criteria will be discarded.\n- `append`: the search will add the new Items found to the existing Webset. Any Items that don't match the new criteria will be discarded."
          },
          "exclude": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "source": {
                  "type": [
                    "string"
                  ],
                  "enum": [
                    "import",
                    "webset"
                  ]
                },
                "id": {
                  "type": [
                    "string"
                  ]
                }
              },
              "required": [
                "source",
                "id"
              ]
            },
            "description": "Sources (existing imports or websets) used to omit certain results to be found during the search."
          },
          "scope": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "source": {
                  "type": [
                    "string"
                  ],
                  "enum": [
                    "import",
                    "webset"
                  ]
                },
                "id": {
                  "type": [
                    "string"
                  ]
                },
                "relationship": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "definition": {
                      "type": [
                        "string"
                      ],
                      "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                    },
                    "limit": {
                      "type": [
                        "number"
                      ],
                      "minimum": 1,
                      "maximum": 10
                    }
                  },
                  "required": [
                    "definition",
                    "limit"
                  ]
                }
              },
              "required": [
                "source",
                "id"
              ]
            },
            "description": "The scope of the search. By default, there is no scope - thus searching the web.\n\nIf provided during creation, the search will only be performed on the sources provided."
          },
          "progress": {
            "type": [
              "object"
            ],
            "properties": {
              "found": {
                "type": [
                  "number"
                ],
                "description": "The number of results found so far"
              },
              "analyzed": {
                "type": [
                  "number"
                ],
                "description": "The number of results analyzed so far"
              },
              "completion": {
                "type": [
                  "number"
                ],
                "minimum": 0,
                "maximum": 100,
                "description": "The completion percentage of the search"
              },
              "timeLeft": {
                "type": "number",
                "description": "The estimated time remaining in seconds, null if unknown",
                "nullable": true
              }
            },
            "required": [
              "found",
              "analyzed",
              "completion",
              "timeLeft"
            ],
            "description": "The progress of the search"
          },
          "recall": {
            "type": "object",
            "properties": {
              "expected": {
                "type": [
                  "object"
                ],
                "properties": {
                  "total": {
                    "type": [
                      "number"
                    ],
                    "description": "The estimated total number of potential matches"
                  },
                  "confidence": {
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "high",
                      "medium",
                      "low"
                    ],
                    "description": "The confidence in the estimate"
                  },
                  "bounds": {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "min": {
                        "type": [
                          "number"
                        ],
                        "description": "The minimum estimated total number of potential matches"
                      },
                      "max": {
                        "type": [
                          "number"
                        ],
                        "description": "The maximum estimated total number of potential matches"
                      }
                    },
                    "required": [
                      "min",
                      "max"
                    ]
                  }
                },
                "required": [
                  "total",
                  "confidence",
                  "bounds"
                ]
              },
              "reasoning": {
                "type": [
                  "string"
                ],
                "description": "The reasoning for the estimate"
              }
            },
            "required": [
              "expected",
              "reasoning"
            ],
            "description": "Recall metrics for the search, null if not yet computed or requested.",
            "nullable": true
          },
          "metadata": {
            "default": {},
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          },
          "canceledAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time the search was canceled",
            "nullable": true
          },
          "canceledReason": {
            "type": "string",
            "$ref": "#/components/schemas/WebsetSearchCanceledReason",
            "description": "The reason the search was canceled",
            "nullable": true
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the search was created"
          },
          "updatedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the search was updated"
          }
        },
        "required": [
          "id",
          "object",
          "websetId",
          "status",
          "query",
          "entity",
          "criteria",
          "count",
          "exclude",
          "scope",
          "progress",
          "recall",
          "canceledAt",
          "canceledReason",
          "createdAt",
          "updatedAt"
        ]
      },
      "Import": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the Import"
          },
          "object": {
            "type": [
              "string"
            ],
            "enum": [
              "import"
            ],
            "description": "The type of object"
          },
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "pending",
              "processing",
              "completed",
              "failed"
            ],
            "description": "The status of the Import"
          },
          "format": {
            "type": [
              "string"
            ],
            "enum": [
              "csv",
              "webset"
            ],
            "description": "The format of the import."
          },
          "entity": {
            "$ref": "#/components/schemas/Entity",
            "description": "The type of entity the import contains.",
            "nullable": true
          },
          "title": {
            "type": [
              "string"
            ],
            "description": "The title of the import"
          },
          "count": {
            "type": [
              "number"
            ],
            "description": "The number of entities in the import"
          },
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          },
          "failedReason": {
            "type": "string",
            "enum": [
              "invalid_format",
              "invalid_file_content",
              "missing_identifier"
            ],
            "description": "The reason the import failed",
            "nullable": true
          },
          "failedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the import failed",
            "nullable": true
          },
          "failedMessage": {
            "type": "string",
            "description": "A human readable message of the import failure",
            "nullable": true
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "When the import was created"
          },
          "updatedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "When the import was last updated"
          }
        },
        "required": [
          "id",
          "object",
          "status",
          "format",
          "entity",
          "title",
          "count",
          "metadata",
          "failedReason",
          "failedAt",
          "failedMessage",
          "createdAt",
          "updatedAt"
        ]
      },
      "WebsetEnrichment": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the enrichment"
          },
          "object": {
            "type": "string",
            "const": "webset_enrichment",
            "default": "webset_enrichment"
          },
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "pending",
              "canceled",
              "completed"
            ],
            "description": "The status of the enrichment",
            "title": "WebsetEnrichmentStatus"
          },
          "websetId": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the Webset this enrichment belongs to."
          },
          "title": {
            "type": "string",
            "description": "The title of the enrichment.\n\nThis will be automatically generated based on the description and format.",
            "nullable": true
          },
          "description": {
            "type": [
              "string"
            ],
            "description": "The description of the enrichment task provided during the creation of the enrichment."
          },
          "format": {
            "type": "string",
            "$ref": "#/components/schemas/WebsetEnrichmentFormat",
            "description": "The format of the enrichment response.",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "label": {
                  "type": [
                    "string"
                  ],
                  "description": "The label of the option"
                }
              },
              "required": [
                "label"
              ]
            },
            "description": "When the format is options, the different options for the enrichment agent to choose from.",
            "title": "WebsetEnrichmentOptions",
            "nullable": true
          },
          "instructions": {
            "type": "string",
            "description": "The instructions for the enrichment Agent.\n\nThis will be automatically generated based on the description and format.",
            "nullable": true
          },
          "metadata": {
            "default": {},
            "description": "The metadata of the enrichment",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the enrichment was created"
          },
          "updatedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the enrichment was updated"
          }
        },
        "required": [
          "id",
          "object",
          "status",
          "websetId",
          "title",
          "description",
          "format",
          "options",
          "instructions",
          "createdAt",
          "updatedAt"
        ]
      },
      "MonitorRun": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the Monitor Run"
          },
          "object": {
            "type": [
              "string"
            ],
            "enum": [
              "monitor_run"
            ],
            "description": "The type of object"
          },
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "created",
              "running",
              "completed",
              "canceled",
              "failed"
            ],
            "description": "The status of the Monitor Run"
          },
          "monitorId": {
            "type": [
              "string"
            ],
            "description": "The monitor that the run is associated with"
          },
          "type": {
            "type": [
              "string"
            ],
            "enum": [
              "search",
              "refresh"
            ],
            "description": "The type of the Monitor Run"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the run completed",
            "nullable": true
          },
          "failedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the run failed",
            "nullable": true
          },
          "failedReason": {
            "type": "string",
            "description": "The reason the run failed",
            "nullable": true
          },
          "canceledAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the run was canceled",
            "nullable": true
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "When the run was created"
          },
          "updatedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "When the run was last updated"
          }
        },
        "required": [
          "id",
          "object",
          "monitorId",
          "status",
          "type",
          "completedAt",
          "failedAt",
          "failedReason",
          "canceledAt",
          "createdAt",
          "updatedAt"
        ]
      },
      "Monitor": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the Monitor"
          },
          "object": {
            "type": [
              "string"
            ],
            "enum": [
              "monitor"
            ],
            "description": "The type of object"
          },
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "enabled",
              "disabled"
            ],
            "description": "The status of the Monitor"
          },
          "websetId": {
            "type": [
              "string"
            ],
            "description": "The id of the Webset the Monitor belongs to"
          },
          "cadence": {
            "type": [
              "object"
            ],
            "properties": {
              "cron": {
                "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                "type": [
                  "string"
                ]
              },
              "timezone": {
                "description": "IANA timezone (e.g., \"America/New_York\")",
                "default": "Etc/UTC",
                "type": [
                  "string"
                ]
              }
            },
            "required": [
              "cron"
            ],
            "description": "How often the monitor will run"
          },
          "behavior": {
            "type": [
              "object"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "search",
                "default": "search"
              },
              "config": {
                "type": [
                  "object"
                ],
                "properties": {
                  "query": {
                    "type": [
                      "string"
                    ],
                    "minLength": 2,
                    "maxLength": 10000,
                    "description": "The query to search for. By default, the query from the last search is used."
                  },
                  "criteria": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "description": {
                          "type": [
                            "string"
                          ],
                          "minLength": 2,
                          "maxLength": 1000
                        }
                      },
                      "required": [
                        "description"
                      ]
                    },
                    "maxItems": 5,
                    "description": "The criteria to search for. By default, the criteria from the last search is used."
                  },
                  "entity": {
                    "$ref": "#/components/schemas/Entity",
                    "title": "Entity",
                    "description": "The entity to search for. By default, the entity from the last search/import is used."
                  },
                  "count": {
                    "type": [
                      "number"
                    ],
                    "exclusiveMinimum": 0,
                    "description": "The maximum number of results to find"
                  },
                  "behavior": {
                    "default": "append",
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "override",
                      "append"
                    ],
                    "description": "The behaviour of the Search when it is added to a Webset."
                  }
                },
                "required": [
                  "count"
                ],
                "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
              }
            },
            "required": [
              "type",
              "config"
            ],
            "description": "Behavior to perform when monitor runs"
          },
          "lastRun": {
            "type": "object",
            "$ref": "#/components/schemas/MonitorRun",
            "title": "MonitorRun",
            "description": "The last run of the monitor",
            "nullable": true
          },
          "nextRunAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the next run will occur in",
            "nullable": true
          },
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "When the monitor was created"
          },
          "updatedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "When the monitor was last updated"
          }
        },
        "required": [
          "id",
          "object",
          "status",
          "websetId",
          "cadence",
          "behavior",
          "lastRun",
          "nextRunAt",
          "metadata",
          "createdAt",
          "updatedAt"
        ]
      },
      "Webset": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the webset"
          },
          "object": {
            "type": "string",
            "const": "webset",
            "default": "webset"
          },
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "idle",
              "pending",
              "running",
              "paused"
            ],
            "description": "The status of the webset",
            "title": "WebsetStatus"
          },
          "externalId": {
            "type": "string",
            "description": "The external identifier for the webset",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of the webset",
            "nullable": true
          },
          "searches": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/WebsetSearch"
            },
            "description": "The searches that have been performed on the webset."
          },
          "imports": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/Import"
            },
            "description": "Imports that have been performed on the webset."
          },
          "enrichments": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/WebsetEnrichment"
            },
            "description": "The Enrichments to apply to the Webset Items."
          },
          "monitors": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/Monitor"
            },
            "description": "The Monitors for the Webset."
          },
          "streams": {
            "type": [
              "array"
            ],
            "items": {},
            "description": "The Streams for the Webset."
          },
          "metadata": {
            "default": {},
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the webset was created"
          },
          "updatedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the webset was updated"
          }
        },
        "required": [
          "id",
          "object",
          "status",
          "externalId",
          "title",
          "searches",
          "imports",
          "enrichments",
          "monitors",
          "streams",
          "createdAt",
          "updatedAt"
        ]
      },
      "WebsetItemPersonProperties": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "person",
            "default": "person"
          },
          "url": {
            "type": [
              "string"
            ],
            "format": "uri",
            "description": "The URL of the person profile"
          },
          "description": {
            "type": [
              "string"
            ],
            "description": "Short description of the relevance of the person"
          },
          "person": {
            "type": [
              "object"
            ],
            "properties": {
              "name": {
                "type": [
                  "string"
                ],
                "description": "The name of the person"
              },
              "location": {
                "type": "string",
                "description": "The location of the person",
                "nullable": true
              },
              "position": {
                "type": "string",
                "description": "The current work position of the person",
                "nullable": true
              },
              "company": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": [
                      "string"
                    ],
                    "description": "The name of the company"
                  },
                  "location": {
                    "type": "string",
                    "description": "The location the person is working at the company",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "location"
                ],
                "title": "WebsetItemPersonCompanyPropertiesFields",
                "nullable": true
              },
              "pictureUrl": {
                "type": "string",
                "format": "uri",
                "description": "The image URL of the person",
                "nullable": true
              }
            },
            "required": [
              "name",
              "location",
              "position",
              "company",
              "pictureUrl"
            ],
            "title": "WebsetItemPersonPropertiesFields"
          }
        },
        "required": [
          "type",
          "url",
          "description",
          "person"
        ]
      },
      "WebsetItemCompanyProperties": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "company",
            "default": "company"
          },
          "url": {
            "type": [
              "string"
            ],
            "format": "uri",
            "description": "The URL of the company website"
          },
          "description": {
            "type": [
              "string"
            ],
            "description": "Short description of the relevance of the company"
          },
          "content": {
            "type": "string",
            "description": "The text content of the company website",
            "nullable": true
          },
          "company": {
            "type": [
              "object"
            ],
            "properties": {
              "name": {
                "type": [
                  "string"
                ],
                "description": "The name of the company"
              },
              "location": {
                "type": "string",
                "description": "The main location of the company",
                "nullable": true
              },
              "employees": {
                "type": "number",
                "description": "The number of employees of the company",
                "nullable": true
              },
              "industry": {
                "type": "string",
                "description": "The industry of the company",
                "nullable": true
              },
              "about": {
                "type": "string",
                "description": "A short description of the company",
                "nullable": true
              },
              "logoUrl": {
                "type": "string",
                "format": "uri",
                "description": "The logo URL of the company",
                "nullable": true
              }
            },
            "required": [
              "name",
              "location",
              "employees",
              "industry",
              "about",
              "logoUrl"
            ],
            "title": "WebsetItemCompanyPropertiesFields"
          }
        },
        "required": [
          "type",
          "url",
          "description",
          "content",
          "company"
        ]
      },
      "WebsetItemArticleProperties": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "article",
            "default": "article"
          },
          "url": {
            "type": [
              "string"
            ],
            "format": "uri",
            "description": "The URL of the article"
          },
          "description": {
            "type": [
              "string"
            ],
            "description": "Short description of the relevance of the article"
          },
          "content": {
            "type": "string",
            "description": "The text content for the article",
            "nullable": true
          },
          "article": {
            "type": [
              "object"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the article",
                "nullable": true
              },
              "author": {
                "type": "string",
                "description": "The author(s) of the article",
                "nullable": true
              },
              "publishedAt": {
                "type": "string",
                "description": "The date and time the article was published",
                "nullable": true
              }
            },
            "required": [
              "title",
              "author",
              "publishedAt"
            ],
            "title": "WebsetItemArticlePropertiesFields"
          }
        },
        "required": [
          "type",
          "url",
          "description",
          "content",
          "article"
        ]
      },
      "WebsetItemResearchPaperProperties": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "research_paper",
            "default": "research_paper"
          },
          "url": {
            "type": [
              "string"
            ],
            "format": "uri",
            "description": "The URL of the research paper"
          },
          "description": {
            "type": [
              "string"
            ],
            "description": "Short description of the relevance of the research paper"
          },
          "content": {
            "type": "string",
            "description": "The text content of the research paper",
            "nullable": true
          },
          "researchPaper": {
            "type": [
              "object"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the research paper",
                "nullable": true
              },
              "author": {
                "type": "string",
                "description": "The author(s) of the research paper",
                "nullable": true
              },
              "publishedAt": {
                "type": "string",
                "description": "The date and time the research paper was published",
                "nullable": true
              }
            },
            "required": [
              "title",
              "author",
              "publishedAt"
            ],
            "title": "WebsetItemResearchPaperPropertiesFields"
          }
        },
        "required": [
          "type",
          "url",
          "description",
          "content",
          "researchPaper"
        ]
      },
      "WebsetItemCustomProperties": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "custom",
            "default": "custom"
          },
          "url": {
            "type": [
              "string"
            ],
            "format": "uri",
            "description": "The URL of the Item"
          },
          "description": {
            "type": [
              "string"
            ],
            "description": "Short description of the Item"
          },
          "content": {
            "type": "string",
            "description": "The text content of the Item",
            "nullable": true
          },
          "custom": {
            "type": [
              "object"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "The title of the website",
                "nullable": true
              },
              "author": {
                "type": "string",
                "description": "The author(s) of the website",
                "nullable": true
              },
              "publishedAt": {
                "type": "string",
                "description": "The date and time the website was published",
                "nullable": true
              }
            },
            "required": [
              "title",
              "author",
              "publishedAt"
            ],
            "title": "WebsetItemCustomPropertiesFields"
          }
        },
        "required": [
          "type",
          "url",
          "description",
          "content",
          "custom"
        ]
      },
      "WebsetItemEvaluation": {
        "type": [
          "object"
        ],
        "properties": {
          "criterion": {
            "type": [
              "string"
            ],
            "description": "The description of the criterion"
          },
          "reasoning": {
            "type": [
              "string"
            ],
            "description": "The reasoning for the result of the evaluation"
          },
          "satisfied": {
            "type": [
              "string"
            ],
            "enum": [
              "yes",
              "no",
              "unclear"
            ],
            "description": "The satisfaction of the criterion"
          },
          "references": {
            "default": [],
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the reference",
                  "nullable": true
                },
                "snippet": {
                  "type": "string",
                  "description": "The relevant snippet of the reference content",
                  "nullable": true
                },
                "url": {
                  "type": [
                    "string"
                  ],
                  "format": "uri",
                  "description": "The URL of the reference"
                }
              },
              "required": [
                "title",
                "snippet",
                "url"
              ]
            },
            "description": "The references used to generate the result."
          }
        },
        "required": [
          "criterion",
          "reasoning",
          "satisfied"
        ]
      },
      "EnrichmentResult": {
        "type": [
          "object"
        ],
        "properties": {
          "object": {
            "type": "string",
            "const": "enrichment_result",
            "default": "enrichment_result"
          },
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "pending",
              "completed",
              "canceled"
            ],
            "description": "The status of the enrichment result."
          },
          "format": {
            "type": [
              "string"
            ],
            "$ref": "#/components/schemas/WebsetEnrichmentFormat"
          },
          "result": {
            "type": "array",
            "items": {
              "type": [
                "string"
              ]
            },
            "description": "The result of the enrichment.",
            "nullable": true
          },
          "reasoning": {
            "type": "string",
            "description": "The reasoning for the result when an Agent is used.",
            "nullable": true
          },
          "references": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the reference",
                  "nullable": true
                },
                "snippet": {
                  "type": "string",
                  "description": "The relevant snippet of the reference content",
                  "nullable": true
                },
                "url": {
                  "type": [
                    "string"
                  ],
                  "format": "uri",
                  "description": "The URL of the reference"
                }
              },
              "required": [
                "title",
                "snippet",
                "url"
              ]
            },
            "description": "The references used to generate the result."
          },
          "enrichmentId": {
            "type": [
              "string"
            ],
            "description": "The id of the Enrichment that generated the result"
          }
        },
        "required": [
          "object",
          "status",
          "format",
          "result",
          "reasoning",
          "references",
          "enrichmentId"
        ]
      },
      "WebsetItem": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the Webset Item"
          },
          "object": {
            "type": "string",
            "const": "webset_item",
            "default": "webset_item"
          },
          "source": {
            "type": [
              "string"
            ],
            "enum": [
              "search",
              "import"
            ],
            "description": "The source of the Item"
          },
          "sourceId": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the source"
          },
          "websetId": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the Webset this Item belongs to."
          },
          "properties": {
            "oneOf": [
              {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetItemPersonProperties",
                "title": "Person"
              },
              {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetItemCompanyProperties",
                "title": "Company"
              },
              {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetItemArticleProperties",
                "title": "Article"
              },
              {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetItemResearchPaperProperties",
                "title": "Research Paper"
              },
              {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetItemCustomProperties",
                "title": "Custom"
              }
            ],
            "description": "The properties of the Item"
          },
          "evaluations": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/WebsetItemEvaluation"
            },
            "description": "The criteria evaluations of the item"
          },
          "enrichments": {
            "type": "array",
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/EnrichmentResult"
            },
            "description": "The enrichments results of the Webset item",
            "nullable": true
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the item was created"
          },
          "updatedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the item was last updated"
          }
        },
        "required": [
          "id",
          "object",
          "source",
          "sourceId",
          "websetId",
          "properties",
          "evaluations",
          "enrichments",
          "createdAt",
          "updatedAt"
        ]
      },
      "GetWebsetResponse": {
        "allOf": [
          {
            "type": [
              "object"
            ],
            "$ref": "#/components/schemas/Webset"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "items": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "object"
                  ],
                  "$ref": "#/components/schemas/WebsetItem"
                },
                "description": "When expand query parameter contains `items`, this will contain the items in the webset"
              }
            }
          }
        ]
      },
      "UpdateWebsetRequest": {
        "type": [
          "object"
        ],
        "properties": {
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": "object",
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            },
            "nullable": true
          }
        }
      },
      "ListWebsetsResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "data": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/Webset"
            },
            "description": "The list of websets"
          },
          "hasMore": {
            "type": [
              "boolean"
            ],
            "description": "Whether there are more results to paginate through"
          },
          "nextCursor": {
            "type": "string",
            "description": "The cursor to paginate through the next set of results",
            "nullable": true
          }
        },
        "required": [
          "data",
          "hasMore",
          "nextCursor"
        ]
      },
      "PreviewWebsetParameters": {
        "type": [
          "object"
        ],
        "properties": {
          "query": {
            "type": [
              "string"
            ],
            "minLength": 1,
            "maxLength": 5000,
            "description": "Natural language search query describing what you are looking for.\n\nBe specific and descriptive about your requirements, characteristics, and any constraints that help narrow down the results.",
            "examples": [
              "Marketing agencies based in the US, that focus on consumer products. Get brands worked with and city",
              "AI startups in Europe that raised Series A funding in 2024",
              "SaaS companies with 50-200 employees in the fintech space"
            ]
          },
          "entity": {
            "$ref": "#/components/schemas/Entity",
            "description": "Entity used to inform the decomposition.\n\nIt is not required to provide it, we automatically detect the entity from all the information provided in the query. Only use this when you need more fine control."
          }
        },
        "required": [
          "query"
        ]
      },
      "PreviewWebsetResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "search": {
            "type": [
              "object"
            ],
            "properties": {
              "entity": {
                "oneOf": [
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/CompanyEntity"
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/PersonEntity"
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/ArticleEntity"
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/ResearchPaperEntity"
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/CustomEntity"
                  }
                ],
                "description": "Detected entity from the query."
              },
              "criteria": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "description": {
                      "type": [
                        "string"
                      ]
                    }
                  },
                  "required": [
                    "description"
                  ]
                },
                "description": "Detected criteria from the query."
              }
            },
            "required": [
              "entity",
              "criteria"
            ]
          },
          "enrichments": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "description": {
                  "type": [
                    "string"
                  ],
                  "description": "Description of the enrichment."
                },
                "format": {
                  "type": [
                    "string"
                  ],
                  "enum": [
                    "text",
                    "date",
                    "number",
                    "options",
                    "email",
                    "phone",
                    "url"
                  ],
                  "description": "Format of the enrichment."
                },
                "options": {
                  "type": [
                    "array"
                  ],
                  "items": {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "label": {
                        "type": [
                          "string"
                        ],
                        "description": "Label of the option."
                      }
                    },
                    "required": [
                      "label"
                    ]
                  },
                  "description": "When format is options, the options detected from the query."
                }
              },
              "required": [
                "description",
                "format"
              ]
            },
            "description": "Detected enrichments from the query."
          }
        },
        "required": [
          "search",
          "enrichments"
        ]
      },
      "ListWebsetItemResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "data": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/WebsetItem"
            },
            "description": "The list of webset items"
          },
          "hasMore": {
            "type": [
              "boolean"
            ],
            "description": "Whether there are more Items to paginate through"
          },
          "nextCursor": {
            "type": "string",
            "description": "The cursor to paginate through the next set of Items",
            "nullable": true
          }
        },
        "required": [
          "data",
          "hasMore",
          "nextCursor"
        ]
      },
      "UpdateEnrichmentParameters": {
        "type": [
          "object"
        ],
        "properties": {
          "description": {
            "type": [
              "string"
            ],
            "minLength": 1,
            "maxLength": 5000,
            "description": "Provide a description of the enrichment task you want to perform to each Webset Item."
          },
          "format": {
            "type": [
              "string"
            ],
            "enum": [
              "text",
              "date",
              "number",
              "options",
              "email",
              "phone",
              "url"
            ],
            "description": "Format of the enrichment response.\n\nWe automatically select the best format based on the description. If you want to explicitly specify the format, you can do so here."
          },
          "options": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "label": {
                  "type": [
                    "string"
                  ],
                  "description": "The label of the option"
                }
              },
              "required": [
                "label"
              ]
            },
            "minItems": 1,
            "maxItems": 150,
            "description": "When the format is options, the different options for the enrichment agent to choose from."
          },
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": "object",
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            },
            "nullable": true
          }
        }
      },
      "CreateWebhookParameters": {
        "type": [
          "object"
        ],
        "properties": {
          "events": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "$ref": "#/components/schemas/EventType"
            },
            "minItems": 1,
            "maxItems": 19,
            "description": "The events to trigger the webhook"
          },
          "url": {
            "type": [
              "string"
            ],
            "format": "uri",
            "description": "The URL to send the webhook to"
          },
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          }
        },
        "required": [
          "events",
          "url"
        ]
      },
      "Webhook": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the webhook"
          },
          "object": {
            "type": "string",
            "const": "webhook",
            "default": "webhook"
          },
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "active",
              "inactive"
            ],
            "description": "The status of the webhook",
            "title": "WebhookStatus"
          },
          "events": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "$ref": "#/components/schemas/EventType"
            },
            "minItems": 1,
            "description": "The events to trigger the webhook"
          },
          "url": {
            "type": [
              "string"
            ],
            "format": "uri",
            "description": "The URL to send the webhook to"
          },
          "secret": {
            "type": "string",
            "description": "The secret to verify the webhook signature. Only returned on Webhook creation.",
            "nullable": true
          },
          "metadata": {
            "default": {},
            "description": "The metadata of the webhook",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the webhook was created"
          },
          "updatedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the webhook was last updated"
          }
        },
        "required": [
          "id",
          "object",
          "status",
          "events",
          "url",
          "secret",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateWebhookParameters": {
        "type": [
          "object"
        ],
        "properties": {
          "events": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "string"
              ],
              "$ref": "#/components/schemas/EventType"
            },
            "minItems": 1,
            "maxItems": 19,
            "description": "The events to trigger the webhook"
          },
          "url": {
            "type": [
              "string"
            ],
            "format": "uri",
            "description": "The URL to send the webhook to"
          },
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          }
        }
      },
      "ListWebhooksResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "data": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/Webhook"
            },
            "description": "The list of webhooks"
          },
          "hasMore": {
            "type": [
              "boolean"
            ],
            "description": "Whether there are more results to paginate through"
          },
          "nextCursor": {
            "type": "string",
            "description": "The cursor to paginate through the next set of results",
            "nullable": true
          }
        },
        "required": [
          "data",
          "hasMore",
          "nextCursor"
        ]
      },
      "WebhookAttempt": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the webhook attempt"
          },
          "object": {
            "type": "string",
            "const": "webhook_attempt",
            "default": "webhook_attempt"
          },
          "eventId": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the event"
          },
          "eventType": {
            "type": [
              "string"
            ],
            "enum": [
              "webset.created",
              "webset.deleted",
              "webset.paused",
              "webset.idle",
              "webset.search.created",
              "webset.search.canceled",
              "webset.search.completed",
              "webset.search.updated",
              "import.created",
              "import.completed",
              "webset.item.created",
              "webset.item.enriched",
              "monitor.created",
              "monitor.updated",
              "monitor.deleted",
              "monitor.run.created",
              "monitor.run.completed",
              "webset.export.created",
              "webset.export.completed"
            ],
            "description": "The type of event"
          },
          "webhookId": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the webhook"
          },
          "url": {
            "type": [
              "string"
            ],
            "description": "The URL that was used during the attempt"
          },
          "successful": {
            "description": "Whether the attempt was successful",
            "type": [
              "boolean"
            ]
          },
          "responseHeaders": {
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ]
            },
            "description": "The headers of the response"
          },
          "responseBody": {
            "type": "string",
            "description": "The body of the response",
            "nullable": true
          },
          "responseStatusCode": {
            "type": [
              "number"
            ],
            "description": "The status code of the response"
          },
          "attempt": {
            "type": [
              "number"
            ],
            "description": "The attempt number of the webhook"
          },
          "attemptedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "The date and time the webhook attempt was made"
          }
        },
        "required": [
          "id",
          "object",
          "eventId",
          "eventType",
          "webhookId",
          "url",
          "successful",
          "responseHeaders",
          "responseBody",
          "responseStatusCode",
          "attempt",
          "attemptedAt"
        ]
      },
      "ListWebhookAttemptsResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "data": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/WebhookAttempt"
            },
            "description": "The list of webhook attempts"
          },
          "hasMore": {
            "type": [
              "boolean"
            ],
            "description": "Whether there are more results to paginate through"
          },
          "nextCursor": {
            "type": "string",
            "description": "The cursor to paginate through the next set of results",
            "nullable": true
          }
        },
        "required": [
          "data",
          "hasMore",
          "nextCursor"
        ]
      },
      "Event": {
        "discriminator": {
          "propertyName": "type"
        },
        "oneOf": [
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.created",
                "default": "webset.created"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/Webset"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetCreatedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.deleted",
                "default": "webset.deleted"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/Webset"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetDeletedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.idle",
                "default": "webset.idle"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/Webset"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetIdleEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.paused",
                "default": "webset.paused"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/Webset"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetPausedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.item.created",
                "default": "webset.item.created"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetItem"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetItemCreatedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.item.enriched",
                "default": "webset.item.enriched"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetItem"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetItemEnrichedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.search.created",
                "default": "webset.search.created"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetSearch"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetSearchCreatedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.search.updated",
                "default": "webset.search.updated"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetSearch"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetSearchUpdatedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.search.canceled",
                "default": "webset.search.canceled"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetSearch"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetSearchCanceledEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "webset.search.completed",
                "default": "webset.search.completed"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/WebsetSearch"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "WebsetSearchCompletedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "import.created",
                "default": "import.created"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/Import"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "ImportCreatedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "import.completed",
                "default": "import.completed"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/Import"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "ImportCompletedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "monitor.created",
                "default": "monitor.created"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/Monitor"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "MonitorCreatedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "monitor.updated",
                "default": "monitor.updated"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/Monitor"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "MonitorUpdatedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "monitor.deleted",
                "default": "monitor.deleted"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/Monitor"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "MonitorDeletedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "monitor.run.created",
                "default": "monitor.run.created"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/MonitorRun"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "MonitorRunCreatedEvent"
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "id": {
                "description": "The unique identifier for the event",
                "type": [
                  "string"
                ]
              },
              "object": {
                "type": "string",
                "const": "event",
                "default": "event"
              },
              "type": {
                "type": "string",
                "const": "monitor.run.completed",
                "default": "monitor.run.completed"
              },
              "data": {
                "type": [
                  "object"
                ],
                "$ref": "#/components/schemas/MonitorRun"
              },
              "createdAt": {
                "type": [
                  "string"
                ],
                "format": "date-time",
                "description": "The date and time the event was created"
              }
            },
            "required": [
              "id",
              "object",
              "type",
              "data",
              "createdAt"
            ],
            "title": "MonitorRunCompletedEvent"
          }
        ],
        "title": "Event"
      },
      "ListEventsResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "data": {
            "type": [
              "array"
            ],
            "items": {
              "discriminator": {
                "propertyName": "type"
              },
              "$ref": "#/components/schemas/Event"
            },
            "description": "The list of events"
          },
          "hasMore": {
            "type": [
              "boolean"
            ],
            "description": "Whether there are more results to paginate through"
          },
          "nextCursor": {
            "type": "string",
            "description": "The cursor to paginate through the next set of results",
            "nullable": true
          }
        },
        "required": [
          "data",
          "hasMore",
          "nextCursor"
        ]
      },
      "CreateWebsetSearchParameters": {
        "type": [
          "object"
        ],
        "properties": {
          "count": {
            "type": [
              "number"
            ],
            "minimum": 1,
            "description": "Number of Items the Search will attempt to find.\n\nThe actual number of Items found may be less than this number depending on the query complexity."
          },
          "query": {
            "type": [
              "string"
            ],
            "minLength": 1,
            "maxLength": 5000,
            "description": "Natural language search query describing what you are looking for.\n\nBe specific and descriptive about your requirements, characteristics, and any constraints that help narrow down the results.\n\nAny URLs provided will be crawled and used as additional context for the search.",
            "examples": [
              "Marketing agencies based in the US, that focus on consumer products. Get brands worked with and city",
              "AI startups in Europe that raised Series A funding in 2024",
              "SaaS companies with 50-200 employees in the fintech space"
            ]
          },
          "entity": {
            "$ref": "#/components/schemas/Entity",
            "description": "Entity the search will return results for.\n\nIt is not required to provide it, we automatically detect the entity from all the information provided in the query. Only use this when you need more fine control."
          },
          "criteria": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/CreateCriterionParameters",
              "title": "CreateCriterionParameters"
            },
            "minItems": 1,
            "maxItems": 5,
            "description": "Criteria every item is evaluated against.\n\nIt's not required to provide your own criteria, we automatically detect the criteria from all the information provided in the query. Only use this when you need more fine control."
          },
          "exclude": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "source": {
                  "type": [
                    "string"
                  ],
                  "enum": [
                    "import",
                    "webset"
                  ]
                },
                "id": {
                  "description": "The ID of the source to exclude.",
                  "type": [
                    "string"
                  ],
                  "minLength": 1
                }
              },
              "required": [
                "source",
                "id"
              ]
            },
            "description": "Sources (existing imports or websets) to exclude from search results. Any results found within these sources will be omitted to prevent finding them during search."
          },
          "scope": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "properties": {
                "source": {
                  "type": [
                    "string"
                  ],
                  "enum": [
                    "import",
                    "webset"
                  ]
                },
                "id": {
                  "type": [
                    "string"
                  ],
                  "minLength": 1,
                  "description": "The ID of the source to search."
                },
                "relationship": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "definition": {
                      "type": [
                        "string"
                      ],
                      "description": "What the relationship of the entities you hope to find is relative to the entities contained in the provided source."
                    },
                    "limit": {
                      "type": [
                        "number"
                      ],
                      "minimum": 1,
                      "maximum": 10
                    }
                  },
                  "required": [
                    "definition",
                    "limit"
                  ]
                }
              },
              "required": [
                "source",
                "id"
              ]
            },
            "description": "Limit the search to specific sources (existing imports). Any results found within these sources matching the search criteria will be included in the Webset."
          },
          "recall": {
            "type": [
              "boolean"
            ],
            "description": "Whether to provide an estimate of how many total relevant results could exist for this search.\nResult of the analysis will be available in the `recall` field within the search request."
          },
          "behavior": {
            "default": "override",
            "type": [
              "string"
            ],
            "description": "How this search interacts with existing items in the Webset:\n\n- **override**: Replace existing items and evaluate all items against new criteria\n- **append**: Add new items to existing ones, keeping items that match the new criteria",
            "$ref": "#/components/schemas/WebsetSearchBehavior"
          },
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          }
        },
        "required": [
          "count",
          "query"
        ]
      },
      "CreateMonitorParameters": {
        "type": [
          "object"
        ],
        "properties": {
          "websetId": {
            "type": [
              "string"
            ],
            "description": "The id of the Webset"
          },
          "cadence": {
            "type": [
              "object"
            ],
            "properties": {
              "cron": {
                "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
                "type": [
                  "string"
                ]
              },
              "timezone": {
                "description": "IANA timezone (e.g., \"America/New_York\")",
                "default": "Etc/UTC",
                "type": [
                  "string"
                ]
              }
            },
            "required": [
              "cron"
            ],
            "description": "How often the monitor will run"
          },
          "behavior": {
            "type": [
              "object"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "search",
                "default": "search"
              },
              "config": {
                "type": [
                  "object"
                ],
                "properties": {
                  "query": {
                    "type": [
                      "string"
                    ],
                    "minLength": 2,
                    "maxLength": 10000,
                    "description": "The query to search for. By default, the query from the last search is used."
                  },
                  "criteria": {
                    "type": [
                      "array"
                    ],
                    "items": {
                      "type": [
                        "object"
                      ],
                      "properties": {
                        "description": {
                          "type": [
                            "string"
                          ],
                          "minLength": 2,
                          "maxLength": 1000
                        }
                      },
                      "required": [
                        "description"
                      ]
                    },
                    "maxItems": 5,
                    "description": "The criteria to search for. By default, the criteria from the last search is used."
                  },
                  "entity": {
                    "$ref": "#/components/schemas/Entity",
                    "title": "Entity",
                    "description": "The entity to search for. By default, the entity from the last search/import is used."
                  },
                  "count": {
                    "type": [
                      "number"
                    ],
                    "exclusiveMinimum": 0,
                    "description": "The maximum number of results to find"
                  },
                  "behavior": {
                    "default": "append",
                    "type": [
                      "string"
                    ],
                    "enum": [
                      "override",
                      "append"
                    ],
                    "description": "The behaviour of the Search when it is added to a Webset."
                  }
                },
                "required": [
                  "count"
                ],
                "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
              }
            },
            "required": [
              "type",
              "config"
            ],
            "description": "Behavior to perform when monitor runs"
          },
          "metadata": {
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ]
            }
          }
        },
        "required": [
          "websetId",
          "cadence",
          "behavior"
        ]
      },
      "ListMonitorsResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "data": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/Monitor"
            },
            "description": "The list of monitors"
          },
          "hasMore": {
            "type": [
              "boolean"
            ],
            "description": "Whether there are more results to paginate through"
          },
          "nextCursor": {
            "type": "string",
            "description": "The cursor to paginate through the next set of results",
            "nullable": true
          }
        },
        "required": [
          "data",
          "hasMore",
          "nextCursor"
        ]
      },
      "MonitorCadence": {
        "type": [
          "object"
        ],
        "properties": {
          "cron": {
            "description": "Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.",
            "type": [
              "string"
            ]
          },
          "timezone": {
            "description": "IANA timezone (e.g., \"America/New_York\")",
            "default": "Etc/UTC",
            "type": [
              "string"
            ]
          }
        },
        "required": [
          "cron"
        ]
      },
      "MonitorBehavior": {
        "type": [
          "object"
        ],
        "properties": {
          "type": {
            "type": "string",
            "const": "search",
            "default": "search"
          },
          "config": {
            "type": [
              "object"
            ],
            "properties": {
              "query": {
                "type": [
                  "string"
                ],
                "minLength": 2,
                "maxLength": 10000,
                "description": "The query to search for. By default, the query from the last search is used."
              },
              "criteria": {
                "type": [
                  "array"
                ],
                "items": {
                  "type": [
                    "object"
                  ],
                  "properties": {
                    "description": {
                      "type": [
                        "string"
                      ],
                      "minLength": 2,
                      "maxLength": 1000
                    }
                  },
                  "required": [
                    "description"
                  ]
                },
                "maxItems": 5,
                "description": "The criteria to search for. By default, the criteria from the last search is used."
              },
              "entity": {
                "$ref": "#/components/schemas/Entity",
                "title": "Entity",
                "description": "The entity to search for. By default, the entity from the last search/import is used."
              },
              "count": {
                "type": [
                  "number"
                ],
                "exclusiveMinimum": 0,
                "description": "The maximum number of results to find"
              },
              "behavior": {
                "default": "append",
                "type": [
                  "string"
                ],
                "enum": [
                  "override",
                  "append"
                ],
                "description": "The behaviour of the Search when it is added to a Webset."
              }
            },
            "required": [
              "count"
            ],
            "description": "Specify the search parameters for the Monitor.\n\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided."
          }
        },
        "required": [
          "type",
          "config"
        ]
      },
      "UpdateMonitor": {
        "type": [
          "object"
        ],
        "properties": {
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "enabled",
              "disabled"
            ],
            "description": "The status of the monitor."
          },
          "metadata": {
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ]
            }
          },
          "cadence": {
            "type": [
              "object"
            ],
            "$ref": "#/components/schemas/MonitorCadence"
          },
          "behavior": {
            "type": [
              "object"
            ],
            "$ref": "#/components/schemas/MonitorBehavior"
          }
        }
      },
      "ListMonitorRunsResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "data": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/MonitorRun"
            },
            "description": "The list of monitor runs"
          },
          "hasMore": {
            "type": [
              "boolean"
            ],
            "description": "Whether there are more results to paginate through"
          },
          "nextCursor": {
            "type": "string",
            "description": "The cursor to paginate through the next set of results",
            "nullable": true
          }
        },
        "required": [
          "data",
          "hasMore",
          "nextCursor"
        ]
      },
      "CreateImportParameters": {
        "discriminator": {
          "propertyName": "format"
        },
        "oneOf": [
          {
            "type": [
              "object"
            ],
            "properties": {
              "size": {
                "type": [
                  "number"
                ],
                "maximum": 50000000,
                "description": "The size of the file in bytes. Maximum size is 50 MB."
              },
              "count": {
                "type": [
                  "number"
                ],
                "description": "The number of records to import"
              },
              "title": {
                "type": [
                  "string"
                ],
                "description": "The title of the import"
              },
              "format": {
                "type": [
                  "string"
                ],
                "enum": [
                  "csv"
                ],
                "description": "When the import is in CSV format, we expect a column containing the key identifier for the entity - for now URL. If not provided, import will fail to be processed."
              },
              "metadata": {
                "description": "Set of key-value pairs you want to associate with this object.",
                "type": [
                  "object"
                ],
                "additionalProperties": {
                  "type": [
                    "string"
                  ],
                  "maxLength": 1000
                }
              },
              "entity": {
                "oneOf": [
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/CompanyEntity"
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/PersonEntity"
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/ArticleEntity"
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/ResearchPaperEntity"
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "$ref": "#/components/schemas/CustomEntity"
                  }
                ],
                "description": "What type of entity the import contains (e.g. People, Companies, etc.), and thus should be attempted to be resolved as."
              },
              "csv": {
                "type": [
                  "object"
                ],
                "properties": {
                  "identifier": {
                    "type": [
                      "integer"
                    ],
                    "minimum": 0,
                    "description": "Column containing the key identifier for the entity (e.g. URL, Name, etc.). If not provided, we will try to infer it from the file."
                  }
                },
                "description": "When format is `csv`, these are the specific import parameters."
              }
            },
            "required": [
              "size",
              "count",
              "format",
              "entity"
            ]
          }
        ]
      },
      "CreateImportResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "id": {
            "type": [
              "string"
            ],
            "description": "The unique identifier for the Import"
          },
          "object": {
            "type": [
              "string"
            ],
            "enum": [
              "import"
            ],
            "description": "The type of object"
          },
          "status": {
            "type": [
              "string"
            ],
            "enum": [
              "pending",
              "processing",
              "completed",
              "failed"
            ],
            "description": "The status of the Import"
          },
          "format": {
            "type": [
              "string"
            ],
            "enum": [
              "csv",
              "webset"
            ],
            "description": "The format of the import."
          },
          "entity": {
            "$ref": "#/components/schemas/Entity",
            "description": "The type of entity the import contains.",
            "nullable": true
          },
          "title": {
            "type": [
              "string"
            ],
            "description": "The title of the import"
          },
          "count": {
            "type": [
              "number"
            ],
            "description": "The number of entities in the import"
          },
          "metadata": {
            "description": "Set of key-value pairs you want to associate with this object.",
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ],
              "maxLength": 1000
            }
          },
          "failedReason": {
            "type": "string",
            "enum": [
              "invalid_format",
              "invalid_file_content",
              "missing_identifier"
            ],
            "description": "The reason the import failed",
            "nullable": true
          },
          "failedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the import failed",
            "nullable": true
          },
          "failedMessage": {
            "type": "string",
            "description": "A human readable message of the import failure",
            "nullable": true
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "When the import was created"
          },
          "updatedAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "description": "When the import was last updated"
          },
          "uploadUrl": {
            "type": [
              "string"
            ],
            "description": "The URL to upload the file to"
          },
          "uploadValidUntil": {
            "type": [
              "string"
            ],
            "description": "The date and time until the upload URL is valid. The upload URL will be valid for 1 hour."
          }
        },
        "required": [
          "id",
          "object",
          "status",
          "format",
          "entity",
          "title",
          "count",
          "metadata",
          "failedReason",
          "failedAt",
          "failedMessage",
          "createdAt",
          "updatedAt",
          "uploadUrl",
          "uploadValidUntil"
        ],
        "description": "The response to a successful import. Includes the upload URL and the upload valid until date."
      },
      "ListImportsResponse": {
        "type": [
          "object"
        ],
        "properties": {
          "data": {
            "type": [
              "array"
            ],
            "items": {
              "type": [
                "object"
              ],
              "$ref": "#/components/schemas/Import"
            },
            "description": "The list of imports"
          },
          "hasMore": {
            "type": [
              "boolean"
            ],
            "description": "Whether there are more results to paginate through"
          },
          "nextCursor": {
            "type": "string",
            "description": "The cursor to paginate through the next set of results",
            "nullable": true
          }
        },
        "required": [
          "data",
          "hasMore",
          "nextCursor"
        ]
      },
      "UpdateImport": {
        "type": [
          "object"
        ],
        "properties": {
          "metadata": {
            "type": [
              "object"
            ],
            "additionalProperties": {
              "type": [
                "string"
              ]
            }
          },
          "title": {
            "type": [
              "string"
            ]
          }
        }
      },
      "WebsetEnrichmentFormat": {
        "type": "string",
        "enum": [
          "text",
          "date",
          "number",
          "options",
          "email",
          "phone",
          "url"
        ]
      },
      "EventType": {
        "type": "string",
        "enum": [
          "webset.created",
          "webset.deleted",
          "webset.paused",
          "webset.idle",
          "webset.search.created",
          "webset.search.canceled",
          "webset.search.completed",
          "webset.search.updated",
          "import.created",
          "import.completed",
          "webset.item.created",
          "webset.item.enriched",
          "monitor.created",
          "monitor.updated",
          "monitor.deleted",
          "monitor.run.created",
          "monitor.run.completed",
          "webset.export.created",
          "webset.export.completed"
        ]
      },
      "WebsetSearchBehavior": {
        "type": "string",
        "enum": [
          "override",
          "append"
        ]
      },
      "WebsetSearchCanceledReason": {
        "type": "string",
        "enum": [
          "webset_deleted",
          "webset_canceled"
        ]
      }
    },
    "responses": {
      "SearchResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "Unique identifier for the request",
                  "example": "b5947044c4b78efa9552a7c89b306d95"
                },
                "resolvedSearchType": {
                  "type": "string",
                  "enum": [
                    "neural",
                    "keyword"
                  ],
                  "description": "The search type that was actually used for this request",
                  "example": "neural"
                },
                "results": {
                  "type": "array",
                  "description": "A list of search results containing title, URL, published date, author, and score.",
                  "items": {
                    "$ref": "#/components/schemas/ResultWithContent"
                  }
                },
                "searchType": {
                  "type": "string",
                  "enum": [
                    "neural",
                    "keyword"
                  ],
                  "description": "For auto searches, indicates which search type was selected.",
                  "example": "auto"
                },
                "context": {
                  "type": "string",
                  "description": "A formatted string of the search results ready for LLMs."
                },
                "costDollars": {
                  "$ref": "#/components/schemas/CostDollars"
                }
              }
            }
          }
        }
      },
      "FindSimilarResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "Unique identifier for the request",
                  "example": "c6958155d5c89ffa0663b7c90c407396"
                },
                "context": {
                  "type": "string",
                  "description": "A formatted string of the search results ready for LLMs."
                },
                "results": {
                  "type": "array",
                  "description": "A list of search results containing title, URL, published date, author, and score.",
                  "items": {
                    "$ref": "#/components/schemas/ResultWithContent"
                  }
                },
                "costDollars": {
                  "$ref": "#/components/schemas/CostDollars"
                }
              }
            }
          }
        }
      },
      "ContentsResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "requestId": {
                  "type": "string",
                  "description": "Unique identifier for the request",
                  "example": "e492118ccdedcba5088bfc4357a8a125"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResultWithContent"
                  }
                },
                "context": {
                  "type": "string",
                  "description": "A formatted string of the search results ready for LLMs."
                },
                "statuses": {
                  "type": "array",
                  "description": "Status information for each requested URL",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The URL that was requested",
                        "example": "https://example.com"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "success",
                          "error"
                        ],
                        "description": "Status of the content fetch operation",
                        "example": "success"
                      },
                      "error": {
                        "type": "object",
                        "nullable": true,
                        "description": "Error details, only present when status is \"error\"",
                        "properties": {
                          "tag": {
                            "type": "string",
                            "enum": [
                              "CRAWL_NOT_FOUND",
                              "CRAWL_TIMEOUT",
                              "CRAWL_LIVECRAWL_TIMEOUT",
                              "SOURCE_NOT_AVAILABLE",
                              "CRAWL_UNKNOWN_ERROR"
                            ],
                            "description": "Specific error type",
                            "example": "CRAWL_NOT_FOUND"
                          },
                          "httpStatusCode": {
                            "type": "integer",
                            "nullable": true,
                            "description": "The corresponding HTTP status code",
                            "example": 404
                          }
                        }
                      }
                    }
                  }
                },
                "costDollars": {
                  "$ref": "#/components/schemas/CostDollars"
                }
              }
            }
          }
        }
      },
      "AnswerResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/AnswerResult"
                },
                {
                  "type": "object",
                  "properties": {
                    "costDollars": {
                      "$ref": "#/components/schemas/CostDollars"
                    }
                  }
                }
              ]
            }
          },
          "text/event-stream": {
            "schema": {
              "type": "object",
              "properties": {
                "answer": {
                  "type": "string",
                  "description": "Partial answer chunk when streaming is enabled."
                },
                "citations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnswerCitation"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
