{
  "name": "Exa",
  "spec_source": "openapi_spec",
  "token_for_http_testing": "",
  "package_name": "exa_api",
  "package_dir_path": "/Users/rb/arcade/arcade-ai/toolkits/exa_api/arcade_exa_api",
  "project_dir_path": "/Users/rb/arcade/arcade-ai/toolkits/exa_api",
  "arcade_new_cmd_executed": true,
  "api_endpoint_selection_customized": false,
  "api_endpoint_for_http_testing": "",
  "authorization_type": "api_key",
  "auth_provider_id": "",
  "where_to_provide_token": "header",
  "token_key_name": "Authorization",
  "token_value": "Bearer {authorization}",
  "secrets": [
    {
      "arcade_key_name": "EXA_API_KEY",
      "service_key_name": "Authorization",
      "where_to_provide": "header",
      "formatted_value": "Bearer {authorization}"
    }
  ],
  "global_base_url": "https://api.exa.ai",
  "global_headers": {},
  "edit_operations": [],
  "uuid": "019ba33c-a79b-4337-8d58-a523771d0f3f",
  "api_endpoints": [
    {
      "name": "search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "perform_exa_search",
        "description": {
          "tagline": "Conduct a search using Exa and retrieve relevant results.",
          "detailed": "This tool performs a search using the Exa prompt-engineered query system. It retrieves a list of relevant search results based on the query, with an optional feature to include content details."
        },
        "return_annotation": "A list of relevant search results from Exa.",
        "arguments": [
          {
            "name": "search_query",
            "alternative_names": [
              "query_input",
              "exa_search_terms"
            ],
            "description": "The search query as a JSON object containing parameters for the Exa search. This object can include the main search term and any other required parameters for performing the search.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/search",
      "tags": [],
      "summary": "Search",
      "description": "Perform a search with a Exa prompt-engineered query and retrieve a list of relevant results. Optionally get contents.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "apikey"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {},
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "string",
                      "description": "The query string for the search.",
                      "example": "Latest developments in LLM capabilities"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of search. Neural uses an embeddings-based model, keyword is google-like SERP, and auto (default) intelligently combines the two. Fast uses streamlined versions of the neural and keyword models.",
                      "enum": [
                        "keyword",
                        "neural",
                        "fast",
                        "auto"
                      ],
                      "example": "auto"
                    },
                    "category": {
                      "type": "string",
                      "description": "A data category to focus on.",
                      "enum": [
                        "company",
                        "research paper",
                        "news",
                        "pdf",
                        "github",
                        "tweet",
                        "personal site",
                        "linkedin profile",
                        "financial report"
                      ],
                      "example": "research paper"
                    },
                    "userLocation": {
                      "type": "string",
                      "description": "The two-letter ISO country code of the user, e.g. US.",
                      "example": "US"
                    }
                  },
                  "required": [
                    "query"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "numResults": {
                      "type": "integer",
                      "description": "Number of results to return (up to thousands of results available for custom plans)",
                      "example": 10,
                      "minimum": 1,
                      "maximum": 100
                    },
                    "includeDomains": {
                      "type": "array",
                      "description": "List of domains to include in the search. If specified, results will only come from these domains.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "excludeDomains": {
                      "type": "array",
                      "description": "List of domains to exclude from search results. If specified, no results will be returned from these domains.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "startCrawlDate": {
                      "type": "string",
                      "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-01-01"
                    },
                    "endCrawlDate": {
                      "type": "string",
                      "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-12-31"
                    },
                    "startPublishedDate": {
                      "type": "string",
                      "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-01-01"
                    },
                    "endPublishedDate": {
                      "type": "string",
                      "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-12-31"
                    },
                    "includeText": {
                      "type": "array",
                      "description": "List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "excludeText": {
                      "type": "array",
                      "description": "List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {},
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                          "example": true
                        },
                        {
                          "type": "object",
                          "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                          "properties": {
                            "maxCharacters": {
                              "type": "integer",
                              "description": "Maximum character limit.",
                              "example": 10000
                            }
                          }
                        }
                      ]
                    },
                    "contents": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "object",
                          "properties": {},
                          "oneOf": [
                            {
                              "type": "boolean",
                              "title": "Simple text retrieval",
                              "description": "If true, returns full page text with default settings. If false, disables text return."
                            },
                            {
                              "type": "object",
                              "title": "Advanced text options",
                              "description": "Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.",
                              "properties": {
                                "maxCharacters": {
                                  "type": "integer",
                                  "description": "Maximum character limit for the full page text. Useful for controlling response size and API costs.",
                                  "example": 1000
                                },
                                "includeHtmlTags": {
                                  "type": "boolean",
                                  "description": "Include HTML tags in the response, which can help LLMs understand text structure and formatting.",
                                  "example": false
                                }
                              }
                            }
                          ]
                        },
                        "highlights": {
                          "type": "object",
                          "description": "Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.",
                          "properties": {
                            "numSentences": {
                              "type": "integer",
                              "description": "The number of sentences to return for each snippet.",
                              "example": 1,
                              "minimum": 1
                            },
                            "highlightsPerUrl": {
                              "type": "integer",
                              "description": "The number of snippets to return for each result.",
                              "example": 1,
                              "minimum": 1
                            },
                            "query": {
                              "type": "string",
                              "description": "Custom query to direct the LLM's selection of highlights.",
                              "example": "Key advancements"
                            }
                          }
                        },
                        "summary": {
                          "type": "object",
                          "description": "Summary of the webpage",
                          "properties": {
                            "query": {
                              "type": "string",
                              "description": "Custom query for the LLM-generated summary.",
                              "example": "Main developments"
                            },
                            "schema": {
                              "type": "object",
                              "description": "JSON schema for structured output from summary. \nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\n",
                              "properties": {}
                            }
                          }
                        },
                        "livecrawl": {
                          "type": "string",
                          "description": "Options for livecrawling pages.\n'never': Disable livecrawling (default for neural search).\n'fallback': Livecrawl when cache is empty (default for keyword search).\n'always': Always livecrawl.\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\n",
                          "enum": [
                            "never",
                            "fallback",
                            "always",
                            "preferred"
                          ],
                          "example": "always"
                        },
                        "livecrawlTimeout": {
                          "type": "integer",
                          "description": "The timeout for livecrawling in milliseconds.",
                          "example": 1000
                        },
                        "subpages": {
                          "type": "integer",
                          "description": "The number of subpages to crawl. The actual number crawled may be limited by system constraints.",
                          "example": 1
                        },
                        "subpageTarget": {
                          "type": "object",
                          "description": "Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.",
                          "properties": {},
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        "extras": {
                          "type": "object",
                          "description": "Extra parameters to pass.",
                          "properties": {
                            "links": {
                              "type": "integer",
                              "description": "Number of URLs to return from each webpage.",
                              "example": 1
                            },
                            "imageLinks": {
                              "type": "integer",
                              "description": "Number of images to return for each result.",
                              "example": 1
                            }
                          }
                        },
                        "context": {
                          "type": "object",
                          "properties": {},
                          "oneOf": [
                            {
                              "type": "boolean",
                              "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                              "example": true
                            },
                            {
                              "type": "object",
                              "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                              "properties": {
                                "maxCharacters": {
                                  "type": "integer",
                                  "description": "Maximum character limit.",
                                  "example": 10000
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"query\": {\n                \"type\": \"string\",\n                \"example\": \"Latest developments in LLM capabilities\",\n                \"description\": \"The query string for the search.\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"keyword\",\n                  \"neural\",\n                  \"fast\",\n                  \"auto\"\n                ],\n                \"description\": \"The type of search. Neural uses an embeddings-based model, keyword is google-like SERP, and auto (default) intelligently combines the two. Fast uses streamlined versions of the neural and keyword models.\",\n                \"example\": \"auto\",\n                \"default\": \"auto\"\n              },\n              \"category\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"company\",\n                  \"research paper\",\n                  \"news\",\n                  \"pdf\",\n                  \"github\",\n                  \"tweet\",\n                  \"personal site\",\n                  \"linkedin profile\",\n                  \"financial report\"\n                ],\n                \"description\": \"A data category to focus on.\",\n                \"example\": \"research paper\"\n              },\n              \"userLocation\": {\n                \"type\": \"string\",\n                \"description\": \"The two-letter ISO country code of the user, e.g. US.\",\n                \"example\": \"US\"\n              }\n            },\n            \"required\": [\n              \"query\"\n            ]\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"numResults\": {\n                \"type\": \"integer\",\n                \"maximum\": 100,\n                \"default\": 10,\n                \"minimum\": 1,\n                \"description\": \"Number of results to return (up to thousands of results available for custom plans)\",\n                \"example\": 10\n              },\n              \"includeDomains\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of domains to include in the search. If specified, results will only come from these domains.\",\n                \"example\": [\n                  \"arxiv.org\",\n                  \"paperswithcode.com\"\n                ]\n              },\n              \"excludeDomains\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of domains to exclude from search results. If specified, no results will be returned from these domains.\"\n              },\n              \"startCrawlDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-01-01\"\n              },\n              \"endCrawlDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-12-31\"\n              },\n              \"startPublishedDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Only links with a published date after this will be returned. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-01-01\"\n              },\n              \"endPublishedDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Only links with a published date before this will be returned. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-12-31\"\n              },\n              \"includeText\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.\",\n                \"example\": [\n                  \"large language model\"\n                ]\n              },\n              \"excludeText\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.\",\n                \"example\": [\n                  \"course\"\n                ]\n              },\n              \"context\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"boolean\",\n                    \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                    \"example\": true\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                    \"properties\": {\n                      \"maxCharacters\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum character limit.\",\n                        \"example\": 10000\n                      }\n                    }\n                  }\n                ]\n              },\n              \"contents\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"text\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"boolean\",\n                        \"title\": \"Simple text retrieval\",\n                        \"description\": \"If true, returns full page text with default settings. If false, disables text return.\"\n                      },\n                      {\n                        \"type\": \"object\",\n                        \"title\": \"Advanced text options\",\n                        \"description\": \"Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.\",\n                        \"properties\": {\n                          \"maxCharacters\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Maximum character limit for the full page text. Useful for controlling response size and API costs.\",\n                            \"example\": 1000\n                          },\n                          \"includeHtmlTags\": {\n                            \"type\": \"boolean\",\n                            \"default\": false,\n                            \"description\": \"Include HTML tags in the response, which can help LLMs understand text structure and formatting.\",\n                            \"example\": false\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  \"highlights\": {\n                    \"type\": \"object\",\n                    \"description\": \"Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.\",\n                    \"properties\": {\n                      \"numSentences\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 1,\n                        \"description\": \"The number of sentences to return for each snippet.\",\n                        \"example\": 1\n                      },\n                      \"highlightsPerUrl\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 1,\n                        \"description\": \"The number of snippets to return for each result.\",\n                        \"example\": 1\n                      },\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Custom query to direct the LLM's selection of highlights.\",\n                        \"example\": \"Key advancements\"\n                      }\n                    }\n                  },\n                  \"summary\": {\n                    \"type\": \"object\",\n                    \"description\": \"Summary of the webpage\",\n                    \"properties\": {\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Custom query for the LLM-generated summary.\",\n                        \"example\": \"Main developments\"\n                      },\n                      \"schema\": {\n                        \"type\": \"object\",\n                        \"description\": \"JSON schema for structured output from summary. \\nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\\n\",\n                        \"example\": {\n                          \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                          \"title\": \"Title\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"Property 1\": {\n                              \"type\": \"string\",\n                              \"description\": \"Description\"\n                            },\n                            \"Property 2\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"option 1\",\n                                \"option 2\",\n                                \"option 3\"\n                              ],\n                              \"description\": \"Description\"\n                            }\n                          },\n                          \"required\": [\n                            \"Property 1\"\n                          ]\n                        }\n                      }\n                    }\n                  },\n                  \"livecrawl\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"never\",\n                      \"fallback\",\n                      \"always\",\n                      \"preferred\"\n                    ],\n                    \"description\": \"Options for livecrawling pages.\\n'never': Disable livecrawling (default for neural search).\\n'fallback': Livecrawl when cache is empty (default for keyword search).\\n'always': Always livecrawl.\\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\\n\",\n                    \"example\": \"always\"\n                  },\n                  \"livecrawlTimeout\": {\n                    \"type\": \"integer\",\n                    \"default\": 10000,\n                    \"description\": \"The timeout for livecrawling in milliseconds.\",\n                    \"example\": 1000\n                  },\n                  \"subpages\": {\n                    \"type\": \"integer\",\n                    \"default\": 0,\n                    \"description\": \"The number of subpages to crawl. The actual number crawled may be limited by system constraints.\",\n                    \"example\": 1\n                  },\n                  \"subpageTarget\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"string\"\n                      },\n                      {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    ],\n                    \"description\": \"Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.\",\n                    \"example\": \"sources\"\n                  },\n                  \"extras\": {\n                    \"type\": \"object\",\n                    \"description\": \"Extra parameters to pass.\",\n                    \"properties\": {\n                      \"links\": {\n                        \"type\": \"integer\",\n                        \"default\": 0,\n                        \"description\": \"Number of URLs to return from each webpage.\",\n                        \"example\": 1\n                      },\n                      \"imageLinks\": {\n                        \"type\": \"integer\",\n                        \"default\": 0,\n                        \"description\": \"Number of images to return for each result.\",\n                        \"example\": 1\n                      }\n                    }\n                  },\n                  \"context\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"boolean\",\n                        \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                        \"example\": true\n                      },\n                      {\n                        \"type\": \"object\",\n                        \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                        \"properties\": {\n                          \"maxCharacters\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Maximum character limit.\",\n                            \"example\": 10000\n                          }\n                        }\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai",
      "original_servers": [
        {
          "url": "https://api.exa.ai"
        }
      ]
    },
    {
      "name": "findSimilar",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "find_similar_links",
        "description": {
          "tagline": "Find similar links to a given link.",
          "detailed": "This tool finds links similar to the provided link and can optionally retrieve their contents. It should be called when a user needs to discover related web pages or resources."
        },
        "return_annotation": "List of similar links based on the provided input.",
        "arguments": [
          {
            "name": "input_link_details",
            "alternative_names": [
              "link_input_data",
              "link_search_parameters"
            ],
            "description": "JSON object containing the link to find similarities for. May include optional flags for retrieving content.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/findSimilar",
      "tags": [],
      "summary": "Find similar links",
      "description": "Find similar links to the link provided. Optionally get contents.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "apikey"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {},
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The url for which you would like to find similar links.",
                      "example": "https://arxiv.org/abs/2307.06435"
                    }
                  },
                  "required": [
                    "url"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "numResults": {
                      "type": "integer",
                      "description": "Number of results to return (up to thousands of results available for custom plans)",
                      "example": 10,
                      "minimum": 1,
                      "maximum": 100
                    },
                    "includeDomains": {
                      "type": "array",
                      "description": "List of domains to include in the search. If specified, results will only come from these domains.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "excludeDomains": {
                      "type": "array",
                      "description": "List of domains to exclude from search results. If specified, no results will be returned from these domains.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "startCrawlDate": {
                      "type": "string",
                      "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-01-01"
                    },
                    "endCrawlDate": {
                      "type": "string",
                      "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-12-31"
                    },
                    "startPublishedDate": {
                      "type": "string",
                      "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-01-01"
                    },
                    "endPublishedDate": {
                      "type": "string",
                      "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-12-31"
                    },
                    "includeText": {
                      "type": "array",
                      "description": "List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "excludeText": {
                      "type": "array",
                      "description": "List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {},
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                          "example": true
                        },
                        {
                          "type": "object",
                          "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                          "properties": {
                            "maxCharacters": {
                              "type": "integer",
                              "description": "Maximum character limit.",
                              "example": 10000
                            }
                          }
                        }
                      ]
                    },
                    "contents": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "object",
                          "properties": {},
                          "oneOf": [
                            {
                              "type": "boolean",
                              "title": "Simple text retrieval",
                              "description": "If true, returns full page text with default settings. If false, disables text return."
                            },
                            {
                              "type": "object",
                              "title": "Advanced text options",
                              "description": "Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.",
                              "properties": {
                                "maxCharacters": {
                                  "type": "integer",
                                  "description": "Maximum character limit for the full page text. Useful for controlling response size and API costs.",
                                  "example": 1000
                                },
                                "includeHtmlTags": {
                                  "type": "boolean",
                                  "description": "Include HTML tags in the response, which can help LLMs understand text structure and formatting.",
                                  "example": false
                                }
                              }
                            }
                          ]
                        },
                        "highlights": {
                          "type": "object",
                          "description": "Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.",
                          "properties": {
                            "numSentences": {
                              "type": "integer",
                              "description": "The number of sentences to return for each snippet.",
                              "example": 1,
                              "minimum": 1
                            },
                            "highlightsPerUrl": {
                              "type": "integer",
                              "description": "The number of snippets to return for each result.",
                              "example": 1,
                              "minimum": 1
                            },
                            "query": {
                              "type": "string",
                              "description": "Custom query to direct the LLM's selection of highlights.",
                              "example": "Key advancements"
                            }
                          }
                        },
                        "summary": {
                          "type": "object",
                          "description": "Summary of the webpage",
                          "properties": {
                            "query": {
                              "type": "string",
                              "description": "Custom query for the LLM-generated summary.",
                              "example": "Main developments"
                            },
                            "schema": {
                              "type": "object",
                              "description": "JSON schema for structured output from summary. \nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\n",
                              "properties": {}
                            }
                          }
                        },
                        "livecrawl": {
                          "type": "string",
                          "description": "Options for livecrawling pages.\n'never': Disable livecrawling (default for neural search).\n'fallback': Livecrawl when cache is empty (default for keyword search).\n'always': Always livecrawl.\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\n",
                          "enum": [
                            "never",
                            "fallback",
                            "always",
                            "preferred"
                          ],
                          "example": "always"
                        },
                        "livecrawlTimeout": {
                          "type": "integer",
                          "description": "The timeout for livecrawling in milliseconds.",
                          "example": 1000
                        },
                        "subpages": {
                          "type": "integer",
                          "description": "The number of subpages to crawl. The actual number crawled may be limited by system constraints.",
                          "example": 1
                        },
                        "subpageTarget": {
                          "type": "object",
                          "description": "Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.",
                          "properties": {},
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        "extras": {
                          "type": "object",
                          "description": "Extra parameters to pass.",
                          "properties": {
                            "links": {
                              "type": "integer",
                              "description": "Number of URLs to return from each webpage.",
                              "example": 1
                            },
                            "imageLinks": {
                              "type": "integer",
                              "description": "Number of images to return for each result.",
                              "example": 1
                            }
                          }
                        },
                        "context": {
                          "type": "object",
                          "properties": {},
                          "oneOf": [
                            {
                              "type": "boolean",
                              "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                              "example": true
                            },
                            {
                              "type": "object",
                              "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                              "properties": {
                                "maxCharacters": {
                                  "type": "integer",
                                  "description": "Maximum character limit.",
                                  "example": 10000
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"url\": {\n                \"type\": \"string\",\n                \"example\": \"https://arxiv.org/abs/2307.06435\",\n                \"description\": \"The url for which you would like to find similar links.\"\n              }\n            },\n            \"required\": [\n              \"url\"\n            ]\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"numResults\": {\n                \"type\": \"integer\",\n                \"maximum\": 100,\n                \"default\": 10,\n                \"minimum\": 1,\n                \"description\": \"Number of results to return (up to thousands of results available for custom plans)\",\n                \"example\": 10\n              },\n              \"includeDomains\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of domains to include in the search. If specified, results will only come from these domains.\",\n                \"example\": [\n                  \"arxiv.org\",\n                  \"paperswithcode.com\"\n                ]\n              },\n              \"excludeDomains\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of domains to exclude from search results. If specified, no results will be returned from these domains.\"\n              },\n              \"startCrawlDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-01-01\"\n              },\n              \"endCrawlDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-12-31\"\n              },\n              \"startPublishedDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Only links with a published date after this will be returned. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-01-01\"\n              },\n              \"endPublishedDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Only links with a published date before this will be returned. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-12-31\"\n              },\n              \"includeText\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.\",\n                \"example\": [\n                  \"large language model\"\n                ]\n              },\n              \"excludeText\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.\",\n                \"example\": [\n                  \"course\"\n                ]\n              },\n              \"context\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"boolean\",\n                    \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                    \"example\": true\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                    \"properties\": {\n                      \"maxCharacters\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum character limit.\",\n                        \"example\": 10000\n                      }\n                    }\n                  }\n                ]\n              },\n              \"contents\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"text\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"boolean\",\n                        \"title\": \"Simple text retrieval\",\n                        \"description\": \"If true, returns full page text with default settings. If false, disables text return.\"\n                      },\n                      {\n                        \"type\": \"object\",\n                        \"title\": \"Advanced text options\",\n                        \"description\": \"Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.\",\n                        \"properties\": {\n                          \"maxCharacters\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Maximum character limit for the full page text. Useful for controlling response size and API costs.\",\n                            \"example\": 1000\n                          },\n                          \"includeHtmlTags\": {\n                            \"type\": \"boolean\",\n                            \"default\": false,\n                            \"description\": \"Include HTML tags in the response, which can help LLMs understand text structure and formatting.\",\n                            \"example\": false\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  \"highlights\": {\n                    \"type\": \"object\",\n                    \"description\": \"Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.\",\n                    \"properties\": {\n                      \"numSentences\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 1,\n                        \"description\": \"The number of sentences to return for each snippet.\",\n                        \"example\": 1\n                      },\n                      \"highlightsPerUrl\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 1,\n                        \"description\": \"The number of snippets to return for each result.\",\n                        \"example\": 1\n                      },\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Custom query to direct the LLM's selection of highlights.\",\n                        \"example\": \"Key advancements\"\n                      }\n                    }\n                  },\n                  \"summary\": {\n                    \"type\": \"object\",\n                    \"description\": \"Summary of the webpage\",\n                    \"properties\": {\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Custom query for the LLM-generated summary.\",\n                        \"example\": \"Main developments\"\n                      },\n                      \"schema\": {\n                        \"type\": \"object\",\n                        \"description\": \"JSON schema for structured output from summary. \\nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\\n\",\n                        \"example\": {\n                          \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                          \"title\": \"Title\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"Property 1\": {\n                              \"type\": \"string\",\n                              \"description\": \"Description\"\n                            },\n                            \"Property 2\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"option 1\",\n                                \"option 2\",\n                                \"option 3\"\n                              ],\n                              \"description\": \"Description\"\n                            }\n                          },\n                          \"required\": [\n                            \"Property 1\"\n                          ]\n                        }\n                      }\n                    }\n                  },\n                  \"livecrawl\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"never\",\n                      \"fallback\",\n                      \"always\",\n                      \"preferred\"\n                    ],\n                    \"description\": \"Options for livecrawling pages.\\n'never': Disable livecrawling (default for neural search).\\n'fallback': Livecrawl when cache is empty (default for keyword search).\\n'always': Always livecrawl.\\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\\n\",\n                    \"example\": \"always\"\n                  },\n                  \"livecrawlTimeout\": {\n                    \"type\": \"integer\",\n                    \"default\": 10000,\n                    \"description\": \"The timeout for livecrawling in milliseconds.\",\n                    \"example\": 1000\n                  },\n                  \"subpages\": {\n                    \"type\": \"integer\",\n                    \"default\": 0,\n                    \"description\": \"The number of subpages to crawl. The actual number crawled may be limited by system constraints.\",\n                    \"example\": 1\n                  },\n                  \"subpageTarget\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"string\"\n                      },\n                      {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    ],\n                    \"description\": \"Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.\",\n                    \"example\": \"sources\"\n                  },\n                  \"extras\": {\n                    \"type\": \"object\",\n                    \"description\": \"Extra parameters to pass.\",\n                    \"properties\": {\n                      \"links\": {\n                        \"type\": \"integer\",\n                        \"default\": 0,\n                        \"description\": \"Number of URLs to return from each webpage.\",\n                        \"example\": 1\n                      },\n                      \"imageLinks\": {\n                        \"type\": \"integer\",\n                        \"default\": 0,\n                        \"description\": \"Number of images to return for each result.\",\n                        \"example\": 1\n                      }\n                    }\n                  },\n                  \"context\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"boolean\",\n                        \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                        \"example\": true\n                      },\n                      {\n                        \"type\": \"object\",\n                        \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                        \"properties\": {\n                          \"maxCharacters\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Maximum character limit.\",\n                            \"example\": 10000\n                          }\n                        }\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai",
      "original_servers": [
        {
          "url": "https://api.exa.ai"
        }
      ]
    },
    {
      "name": "getContents",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_content_details",
        "description": {
          "tagline": "Retrieve details about specific content.",
          "detailed": "Use this tool to retrieve detailed information about specific content from the EXA service. It should be called when content details are needed for further processing or display."
        },
        "return_annotation": "Details about the requested content.",
        "arguments": [
          {
            "name": "content_request_data",
            "alternative_names": [
              "content_request_body",
              "content_details_request"
            ],
            "description": "The JSON data containing parameters to specify which content details to retrieve.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/contents",
      "tags": [],
      "summary": "Get Contents",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "apikey"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {},
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "urls": {
                      "type": "array",
                      "description": "Array of URLs to crawl (backwards compatible with 'ids' parameter).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ids": {
                      "type": "array",
                      "description": "Deprecated - use 'urls' instead. Array of document IDs obtained from searches.",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "urls"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {},
                      "oneOf": [
                        {
                          "type": "boolean",
                          "title": "Simple text retrieval",
                          "description": "If true, returns full page text with default settings. If false, disables text return."
                        },
                        {
                          "type": "object",
                          "title": "Advanced text options",
                          "description": "Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.",
                          "properties": {
                            "maxCharacters": {
                              "type": "integer",
                              "description": "Maximum character limit for the full page text. Useful for controlling response size and API costs.",
                              "example": 1000
                            },
                            "includeHtmlTags": {
                              "type": "boolean",
                              "description": "Include HTML tags in the response, which can help LLMs understand text structure and formatting.",
                              "example": false
                            }
                          }
                        }
                      ]
                    },
                    "highlights": {
                      "type": "object",
                      "description": "Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.",
                      "properties": {
                        "numSentences": {
                          "type": "integer",
                          "description": "The number of sentences to return for each snippet.",
                          "example": 1,
                          "minimum": 1
                        },
                        "highlightsPerUrl": {
                          "type": "integer",
                          "description": "The number of snippets to return for each result.",
                          "example": 1,
                          "minimum": 1
                        },
                        "query": {
                          "type": "string",
                          "description": "Custom query to direct the LLM's selection of highlights.",
                          "example": "Key advancements"
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "description": "Summary of the webpage",
                      "properties": {
                        "query": {
                          "type": "string",
                          "description": "Custom query for the LLM-generated summary.",
                          "example": "Main developments"
                        },
                        "schema": {
                          "type": "object",
                          "description": "JSON schema for structured output from summary. \nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\n",
                          "properties": {}
                        }
                      }
                    },
                    "livecrawl": {
                      "type": "string",
                      "description": "Options for livecrawling pages.\n'never': Disable livecrawling (default for neural search).\n'fallback': Livecrawl when cache is empty (default for keyword search).\n'always': Always livecrawl.\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\n",
                      "enum": [
                        "never",
                        "fallback",
                        "always",
                        "preferred"
                      ],
                      "example": "always"
                    },
                    "livecrawlTimeout": {
                      "type": "integer",
                      "description": "The timeout for livecrawling in milliseconds.",
                      "example": 1000
                    },
                    "subpages": {
                      "type": "integer",
                      "description": "The number of subpages to crawl. The actual number crawled may be limited by system constraints.",
                      "example": 1
                    },
                    "subpageTarget": {
                      "type": "object",
                      "description": "Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.",
                      "properties": {},
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    "extras": {
                      "type": "object",
                      "description": "Extra parameters to pass.",
                      "properties": {
                        "links": {
                          "type": "integer",
                          "description": "Number of URLs to return from each webpage.",
                          "example": 1
                        },
                        "imageLinks": {
                          "type": "integer",
                          "description": "Number of images to return for each result.",
                          "example": 1
                        }
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {},
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                          "example": true
                        },
                        {
                          "type": "object",
                          "description": "Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.",
                          "properties": {
                            "maxCharacters": {
                              "type": "integer",
                              "description": "Maximum character limit.",
                              "example": 10000
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"urls\": {\n                \"type\": \"array\",\n                \"description\": \"Array of URLs to crawl (backwards compatible with 'ids' parameter).\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"example\": [\n                  \"https://arxiv.org/pdf/2307.06435\"\n                ]\n              },\n              \"ids\": {\n                \"type\": \"array\",\n                \"deprecated\": true,\n                \"description\": \"Deprecated - use 'urls' instead. Array of document IDs obtained from searches.\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"example\": [\n                  \"https://arxiv.org/pdf/2307.06435\"\n                ]\n              }\n            },\n            \"required\": [\n              \"urls\"\n            ]\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"text\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"boolean\",\n                    \"title\": \"Simple text retrieval\",\n                    \"description\": \"If true, returns full page text with default settings. If false, disables text return.\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"title\": \"Advanced text options\",\n                    \"description\": \"Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.\",\n                    \"properties\": {\n                      \"maxCharacters\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum character limit for the full page text. Useful for controlling response size and API costs.\",\n                        \"example\": 1000\n                      },\n                      \"includeHtmlTags\": {\n                        \"type\": \"boolean\",\n                        \"default\": false,\n                        \"description\": \"Include HTML tags in the response, which can help LLMs understand text structure and formatting.\",\n                        \"example\": false\n                      }\n                    }\n                  }\n                ]\n              },\n              \"highlights\": {\n                \"type\": \"object\",\n                \"description\": \"Text snippets the LLM identifies as most relevant from each page. We recommend you using context instead of highlights for LLMs.\",\n                \"properties\": {\n                  \"numSentences\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"description\": \"The number of sentences to return for each snippet.\",\n                    \"example\": 1\n                  },\n                  \"highlightsPerUrl\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"description\": \"The number of snippets to return for each result.\",\n                    \"example\": 1\n                  },\n                  \"query\": {\n                    \"type\": \"string\",\n                    \"description\": \"Custom query to direct the LLM's selection of highlights.\",\n                    \"example\": \"Key advancements\"\n                  }\n                }\n              },\n              \"summary\": {\n                \"type\": \"object\",\n                \"description\": \"Summary of the webpage\",\n                \"properties\": {\n                  \"query\": {\n                    \"type\": \"string\",\n                    \"description\": \"Custom query for the LLM-generated summary.\",\n                    \"example\": \"Main developments\"\n                  },\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"description\": \"JSON schema for structured output from summary. \\nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\\n\",\n                    \"example\": {\n                      \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                      \"title\": \"Title\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"Property 1\": {\n                          \"type\": \"string\",\n                          \"description\": \"Description\"\n                        },\n                        \"Property 2\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"option 1\",\n                            \"option 2\",\n                            \"option 3\"\n                          ],\n                          \"description\": \"Description\"\n                        }\n                      },\n                      \"required\": [\n                        \"Property 1\"\n                      ]\n                    }\n                  }\n                }\n              },\n              \"livecrawl\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"never\",\n                  \"fallback\",\n                  \"always\",\n                  \"preferred\"\n                ],\n                \"description\": \"Options for livecrawling pages.\\n'never': Disable livecrawling (default for neural search).\\n'fallback': Livecrawl when cache is empty (default for keyword search).\\n'always': Always livecrawl.\\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\\n\",\n                \"example\": \"always\"\n              },\n              \"livecrawlTimeout\": {\n                \"type\": \"integer\",\n                \"default\": 10000,\n                \"description\": \"The timeout for livecrawling in milliseconds.\",\n                \"example\": 1000\n              },\n              \"subpages\": {\n                \"type\": \"integer\",\n                \"default\": 0,\n                \"description\": \"The number of subpages to crawl. The actual number crawled may be limited by system constraints.\",\n                \"example\": 1\n              },\n              \"subpageTarget\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                ],\n                \"description\": \"Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.\",\n                \"example\": \"sources\"\n              },\n              \"extras\": {\n                \"type\": \"object\",\n                \"description\": \"Extra parameters to pass.\",\n                \"properties\": {\n                  \"links\": {\n                    \"type\": \"integer\",\n                    \"default\": 0,\n                    \"description\": \"Number of URLs to return from each webpage.\",\n                    \"example\": 1\n                  },\n                  \"imageLinks\": {\n                    \"type\": \"integer\",\n                    \"default\": 0,\n                    \"description\": \"Number of images to return for each result.\",\n                    \"example\": 1\n                  }\n                }\n              },\n              \"context\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"boolean\",\n                    \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                    \"example\": true\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"Return page contents as a context string for LLM. When true, combines all result contents into one string. Context strings often perform better than highlights for LLMs.\",\n                    \"properties\": {\n                      \"maxCharacters\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum character limit.\",\n                        \"example\": 10000\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai",
      "original_servers": [
        {
          "url": "https://api.exa.ai"
        }
      ]
    },
    {
      "name": "answer",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "generate_answer_summary",
        "description": {
          "tagline": "Retrieve direct answers or detailed summaries with citations.",
          "detailed": "Use this tool to perform a search based on a query. It generates either a direct answer or a detailed summary with citations, depending on the nature of the query."
        },
        "return_annotation": "Provides a direct answer or detailed summary with citations.",
        "arguments": [
          {
            "name": "search_query",
            "alternative_names": [
              "question_input",
              "query_text"
            ],
            "description": "The question or query to be answered or summarized.",
            "endpoint_argument_name": "query"
          },
          {
            "name": "enable_streaming_response",
            "alternative_names": [
              "streaming_output_enabled",
              "use_streaming_response"
            ],
            "description": "Return the response as a server-sent events (SSE) stream if set to true.",
            "endpoint_argument_name": "stream"
          },
          {
            "name": "include_full_text",
            "alternative_names": [
              "full_text_content",
              "show_complete_text"
            ],
            "description": "If true, the response includes full text content in the search results.",
            "endpoint_argument_name": "text"
          }
        ]
      },
      "method": "POST",
      "path": "/answer",
      "tags": [],
      "summary": "Generate an answer from search results",
      "description": "Performs a search based on the query and generates either a direct answer or a detailed summary with citations, depending on the query type.\n",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "apikey"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "query",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The question or query to answer."
            },
            "description": "The question or query to answer.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The question or query to answer.",
              "example": "What is the latest valuation of SpaceX?"
            },
            "schema_required": true
          },
          {
            "name": "stream",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If true, the response is returned as a server-sent events (SSS) stream."
            },
            "description": "If true, the response is returned as a server-sent events (SSS) stream.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": "If true, the response is returned as a server-sent events (SSS) stream."
            },
            "schema_required": false
          },
          {
            "name": "text",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If true, the response includes full text content in the search results"
            },
            "description": "If true, the response includes full text content in the search results",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": "If true, the response includes full text content in the search results"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"query\"\n        ],\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The question or query to answer.\",\n            \"example\": \"What is the latest valuation of SpaceX?\",\n            \"minLength\": 1\n          },\n          \"stream\": {\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"description\": \"If true, the response is returned as a server-sent events (SSS) stream.\"\n          },\n          \"text\": {\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"description\": \"If true, the response includes full text content in the search results\"\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true,
      "base_url": "https://api.exa.ai",
      "original_servers": [
        {
          "url": "https://api.exa.ai"
        }
      ]
    },
    {
      "name": "ResearchController_listResearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_research_requests",
        "description": {
          "tagline": "Retrieve a paginated list of research requests.",
          "detailed": "Use this tool to obtain a paginated list of all research requests. Ideal for reviewing or analyzing current research queries."
        },
        "return_annotation": "A paginated list of research requests.",
        "arguments": [
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "page_cursor",
              "result_cursor"
            ],
            "description": "A string representing the position in the paginated results to continue retrieving data from.",
            "endpoint_argument_name": "cursor"
          },
          {
            "name": "results_limit",
            "alternative_names": [
              "max_results",
              "number_of_results"
            ],
            "description": "Specifies the number of research requests to return in the response. Helps manage pagination effectively.",
            "endpoint_argument_name": "limit"
          }
        ]
      },
      "method": "GET",
      "path": "/research/v1",
      "tags": [
        "Research"
      ],
      "summary": "List research requests",
      "description": "Get a paginated list of research requests",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "apikey"
      ],
      "parameters": {
        "query": [
          {
            "name": "cursor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The cursor to paginate through the results"
            },
            "description": "The cursor to paginate through the results",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of results to return"
            },
            "description": "The number of results to return",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 50
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai",
      "original_servers": [
        {
          "url": "https://api.exa.ai"
        }
      ]
    },
    {
      "name": "ResearchController_createResearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_research_request",
        "description": {
          "tagline": "Create a new research request.",
          "detailed": "Use this tool to initiate a new research request when you need to gather specific information or data."
        },
        "return_annotation": "Confirmation of research request creation.",
        "arguments": [
          {
            "name": "research_request_details",
            "alternative_names": [
              "research_query_details",
              "research_request_payload"
            ],
            "description": "JSON object containing details of the research request including parameters and criteria.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/research/v1",
      "tags": [
        "Research"
      ],
      "summary": "Create a new research request",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "apikey"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"model\": {\n            \"default\": \"exa-research\",\n            \"type\": [\n              \"string\"\n            ],\n            \"enum\": [\n              \"exa-research\",\n              \"exa-research-pro\"\n            ]\n          },\n          \"instructions\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"maxLength\": 4096,\n            \"description\": \"Instructions for what research should be conducted\"\n          },\n          \"outputSchema\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {}\n          }\n        },\n        \"required\": [\n          \"instructions\"\n        ],\n        \"examples\": [\n          {\n            \"model\": \"exa-research\",\n            \"instructions\": \"What species of ant are similar to honeypot ants?\"\n          }\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai",
      "original_servers": [
        {
          "url": "https://api.exa.ai"
        }
      ]
    },
    {
      "name": "ResearchController_getResearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_research_by_id",
        "description": {
          "tagline": "Retrieve research information using a specific ID.",
          "detailed": "Use this tool to obtain detailed research information by providing a specific research ID. Supports real-time updates with streaming."
        },
        "return_annotation": "Research details for a given ID.",
        "arguments": [
          {
            "name": "enable_streaming",
            "alternative_names": [
              "use_streaming",
              "activate_streaming"
            ],
            "description": "Set to 'true' to receive real-time streaming updates of the research information.",
            "endpoint_argument_name": "stream"
          },
          {
            "name": "event_filter",
            "alternative_names": [
              "event_types",
              "event_specification"
            ],
            "description": "Specify the events to filter for in the research retrieval. Accepts a comma-separated list of event types.",
            "endpoint_argument_name": "events"
          },
          {
            "name": "research_id",
            "alternative_names": [
              "research_identifier",
              "id_of_research"
            ],
            "description": "A string representing the unique identifier of the research to be retrieved.",
            "endpoint_argument_name": "researchId"
          }
        ]
      },
      "method": "GET",
      "path": "/research/v1/{researchId}",
      "tags": [
        "Research"
      ],
      "summary": "Get a research request by id",
      "description": "Retrieve research by ID. Add ?stream=true for real-time SSE updates.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "apikey"
      ],
      "parameters": {
        "query": [
          {
            "name": "stream",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "events",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "researchId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai",
      "original_servers": [
        {
          "url": "https://api.exa.ai"
        }
      ]
    },
    {
      "name": "websets-create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_webset",
        "description": {
          "tagline": "Create a new Webset with optional configurations.",
          "detailed": "This tool creates a new Webset with optional search, import, and enrichment configurations. The Webset processing starts automatically once it's created. You can specify an `externalId` for easier integration with your own identifiers."
        },
        "return_annotation": "Details of the newly created Webset.",
        "arguments": [
          {
            "name": "webset_configuration",
            "alternative_names": [
              "webset_options",
              "webset_setup"
            ],
            "description": "A JSON object detailing optional search, import, and enrichment configurations for the Webset. Include any necessary identifiers like `externalId`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/websets",
      "tags": [
        "Websets"
      ],
      "summary": "Create a Webset",
      "description": "Creates a new Webset with optional search, import, and enrichment configurations. The Webset will automatically begin processing once created.\n\nYou can specify an `externalId` to reference the Webset with your own identifiers for easier integration.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"search\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"properties\": {\n              \"query\": {\n                \"type\": [\n                  \"string\"\n                ],\n                \"minLength\": 1,\n                \"maxLength\": 5000,\n                \"description\": \"Natural language search query describing what you are looking for.\\n\\nBe specific and descriptive about your requirements, characteristics, and any constraints that help narrow down the results.\\n\\nAny URLs provided will be crawled and used as additional context for the search.\",\n                \"examples\": [\n                  \"Marketing agencies based in the US, that focus on consumer products.\",\n                  \"AI startups in Europe that raised Series A funding in 2024\",\n                  \"SaaS companies with 50-200 employees in the fintech space\"\n                ]\n              },\n              \"count\": {\n                \"default\": 10,\n                \"type\": [\n                  \"number\"\n                ],\n                \"minimum\": 1,\n                \"description\": \"Number of Items the Webset will attempt to find.\\n\\nThe actual number of Items found may be less than this number depending on the search complexity.\"\n              },\n              \"entity\": {\n                \"oneOf\": [\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"company\",\n                        \"default\": \"company\"\n                      }\n                    },\n                    \"required\": [\n                      \"type\"\n                    ],\n                    \"title\": \"Company\"\n                  },\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"person\",\n                        \"default\": \"person\"\n                      }\n                    },\n                    \"required\": [\n                      \"type\"\n                    ],\n                    \"title\": \"Person\"\n                  },\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"article\",\n                        \"default\": \"article\"\n                      }\n                    },\n                    \"required\": [\n                      \"type\"\n                    ],\n                    \"title\": \"Article\"\n                  },\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"research_paper\",\n                        \"default\": \"research_paper\"\n                      }\n                    },\n                    \"required\": [\n                      \"type\"\n                    ],\n                    \"title\": \"Research Paper\"\n                  },\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"custom\",\n                        \"default\": \"custom\"\n                      },\n                      \"description\": {\n                        \"type\": [\n                          \"string\"\n                        ],\n                        \"minLength\": 2,\n                        \"maxLength\": 200\n                      }\n                    },\n                    \"required\": [\n                      \"type\",\n                      \"description\"\n                    ],\n                    \"title\": \"Custom\"\n                  }\n                ]\n              },\n              \"criteria\": {\n                \"type\": [\n                  \"array\"\n                ],\n                \"items\": {\n                  \"type\": [\n                    \"object\"\n                  ],\n                  \"properties\": {\n                    \"description\": {\n                      \"type\": [\n                        \"string\"\n                      ],\n                      \"minLength\": 1,\n                      \"maxLength\": 1000,\n                      \"description\": \"The description of the criterion\"\n                    }\n                  },\n                  \"required\": [\n                    \"description\"\n                  ]\n                },\n                \"minItems\": 1,\n                \"maxItems\": 5,\n                \"description\": \"Criteria every item is evaluated against.\\n\\nIt's not required to provide your own criteria, we automatically detect the criteria from all the information provided in the query. Only use this when you need more fine control.\"\n              },\n              \"recall\": {\n                \"type\": [\n                  \"boolean\"\n                ],\n                \"description\": \"Whether to provide an estimate of how many total relevant results could exist for this search.\\nResult of the analysis will be available in the `recall` field within the search request.\"\n              },\n              \"exclude\": {\n                \"type\": [\n                  \"array\"\n                ],\n                \"items\": {\n                  \"type\": [\n                    \"object\"\n                  ],\n                  \"properties\": {\n                    \"source\": {\n                      \"type\": [\n                        \"string\"\n                      ],\n                      \"enum\": [\n                        \"import\",\n                        \"webset\"\n                      ]\n                    },\n                    \"id\": {\n                      \"type\": [\n                        \"string\"\n                      ],\n                      \"minLength\": 1,\n                      \"description\": \"The ID of the source to exclude.\"\n                    }\n                  },\n                  \"required\": [\n                    \"source\",\n                    \"id\"\n                  ]\n                },\n                \"description\": \"Sources (existing imports or websets) to exclude from search results. Any results found within these sources will be omitted to prevent finding them during search.\"\n              },\n              \"scope\": {\n                \"type\": [\n                  \"array\"\n                ],\n                \"items\": {\n                  \"type\": [\n                    \"object\"\n                  ],\n                  \"properties\": {\n                    \"source\": {\n                      \"type\": [\n                        \"string\"\n                      ],\n                      \"enum\": [\n                        \"import\",\n                        \"webset\"\n                      ]\n                    },\n                    \"id\": {\n                      \"type\": [\n                        \"string\"\n                      ],\n                      \"minLength\": 1,\n                      \"description\": \"The ID of the source to search.\"\n                    },\n                    \"relationship\": {\n                      \"type\": [\n                        \"object\"\n                      ],\n                      \"properties\": {\n                        \"definition\": {\n                          \"type\": [\n                            \"string\"\n                          ],\n                          \"description\": \"What the relationship of the entities you hope to find is relative to the entities contained in the provided source.\"\n                        },\n                        \"limit\": {\n                          \"type\": [\n                            \"number\"\n                          ],\n                          \"minimum\": 1,\n                          \"maximum\": 10\n                        }\n                      },\n                      \"required\": [\n                        \"definition\",\n                        \"limit\"\n                      ]\n                    }\n                  },\n                  \"required\": [\n                    \"source\",\n                    \"id\"\n                  ]\n                },\n                \"description\": \"Limit the search to specific sources (existing imports or websets). Any results found within these sources matching the search criteria will be included in the Webset.\"\n              }\n            },\n            \"required\": [\n              \"query\"\n            ],\n            \"description\": \"Create initial search for the Webset.\"\n          },\n          \"import\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": [\n                \"object\"\n              ],\n              \"properties\": {\n                \"source\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"enum\": [\n                    \"import\",\n                    \"webset\"\n                  ]\n                },\n                \"id\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"minLength\": 1,\n                  \"description\": \"The ID of the source to search.\"\n                }\n              },\n              \"required\": [\n                \"source\",\n                \"id\"\n              ]\n            },\n            \"description\": \"Import data from existing Websets and Imports into this Webset.\"\n          },\n          \"enrichments\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": [\n                \"object\"\n              ],\n              \"properties\": {\n                \"description\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"minLength\": 1,\n                  \"maxLength\": 5000,\n                  \"description\": \"Provide a description of the enrichment task you want to perform to each Webset Item.\"\n                },\n                \"format\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"enum\": [\n                    \"text\",\n                    \"date\",\n                    \"number\",\n                    \"options\",\n                    \"email\",\n                    \"phone\",\n                    \"url\"\n                  ],\n                  \"description\": \"Format of the enrichment response.\\n\\nWe automatically select the best format based on the description. If you want to explicitly specify the format, you can do so here.\"\n                },\n                \"options\": {\n                  \"type\": [\n                    \"array\"\n                  ],\n                  \"items\": {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"label\": {\n                        \"type\": [\n                          \"string\"\n                        ],\n                        \"description\": \"The label of the option\"\n                      }\n                    },\n                    \"required\": [\n                      \"label\"\n                    ]\n                  },\n                  \"minItems\": 1,\n                  \"maxItems\": 150,\n                  \"description\": \"When the format is options, the different options for the enrichment agent to choose from.\"\n                },\n                \"metadata\": {\n                  \"description\": \"Set of key-value pairs you want to associate with this object.\",\n                  \"type\": [\n                    \"object\"\n                  ],\n                  \"additionalProperties\": {\n                    \"type\": [\n                      \"string\"\n                    ],\n                    \"maxLength\": 1000\n                  }\n                }\n              },\n              \"required\": [\n                \"description\"\n              ]\n            },\n            \"description\": \"Add enrichments to extract additional data from found items.\\n\\nEnrichments automatically search for and extract specific information (like contact details, funding data, employee counts, etc.) from each item added to your Webset.\"\n          },\n          \"exclude\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": [\n                \"object\"\n              ],\n              \"properties\": {\n                \"source\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"enum\": [\n                    \"import\",\n                    \"webset\"\n                  ]\n                },\n                \"id\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"minLength\": 1,\n                  \"description\": \"The ID of the source to exclude.\"\n                }\n              },\n              \"required\": [\n                \"source\",\n                \"id\"\n              ]\n            },\n            \"description\": \"Global exclusion sources (existing imports or websets) that apply to all operations within this Webset. Any results found within these sources will be omitted across all search and import operations.\"\n          },\n          \"externalId\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"maxLength\": 300,\n            \"description\": \"The external identifier for the webset.\\n\\nYou can use this to reference the Webset by your own internal identifiers.\"\n          },\n          \"metadata\": {\n            \"description\": \"Set of key-value pairs you want to associate with this object.\",\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ],\n              \"maxLength\": 1000\n            }\n          }\n        },\n        \"examples\": [\n          {\n            \"search\": {\n              \"query\": \"Marketing agencies based in the US, that focus on consumer products.\",\n              \"count\": 10\n            }\n          }\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-list",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_websets",
        "description": {
          "tagline": "Retrieve a list of available websets.",
          "detailed": "Use this tool to obtain a list of websets. You can paginate through results using a cursor."
        },
        "return_annotation": "A list of websets available.",
        "arguments": [
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "result_cursor",
              "page_cursor"
            ],
            "description": "A string used to paginate through the list of Websets.",
            "endpoint_argument_name": "cursor"
          },
          {
            "name": "websets_return_limit",
            "alternative_names": [
              "max_websets",
              "websets_count"
            ],
            "description": "Specify the maximum number of Websets to return in the response.",
            "endpoint_argument_name": "limit"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/websets",
      "tags": [
        "Websets"
      ],
      "summary": "List all Websets",
      "description": "Returns a list of Websets.\n\nYou can paginate through the results using the `cursor` parameter.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [
          {
            "name": "cursor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The cursor to paginate through the results"
            },
            "description": "The cursor to paginate through the results",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of Websets to return"
            },
            "description": "The number of Websets to return",
            "required": false,
            "deprecated": false,
            "default": 25,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-get",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_webset_details",
        "description": {
          "tagline": "Retrieve detailed information about a specific webset.",
          "detailed": "This tool is used to obtain the details of a specific webset using its unique identifier. Call this when you need information related to a particular webset."
        },
        "return_annotation": "Details of the specified webset.",
        "arguments": [
          {
            "name": "webset_identifier",
            "alternative_names": [
              "webset_id",
              "webset_external_id"
            ],
            "description": "The unique identifier or external ID for the Webset to retrieve.",
            "endpoint_argument_name": "id"
          },
          {
            "name": "resources_to_expand",
            "alternative_names": [
              "expand_resources",
              "include_related_resources"
            ],
            "description": "A list of resources to include in the response for additional details.",
            "endpoint_argument_name": "expand"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/websets/{id}",
      "tags": [
        "Websets"
      ],
      "summary": "Get a Webset",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [
          {
            "name": "expand",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Expand the response with the specified resources"
            },
            "description": "Expand the response with the specified resources",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "items"
                ]
              }
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset."
            },
            "description": "The id or externalId of the Webset.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_webset",
        "description": {
          "tagline": "Update details of an existing webset.",
          "detailed": "Use this tool to update the information of a specific webset identified by its ID. Ideal for modifying webset attributes when changes are needed."
        },
        "return_annotation": "Updates a webset with the given details.",
        "arguments": [
          {
            "name": "webset_id",
            "alternative_names": [
              "webset_identifier",
              "external_webset_id"
            ],
            "description": "The unique id or externalId of the Webset to be updated. Ensure it matches a valid Webset.",
            "endpoint_argument_name": "id"
          },
          {
            "name": "webset_details",
            "alternative_names": [
              "webset_data",
              "webset_information"
            ],
            "description": "A JSON object containing the details to update for the webset. This includes any attributes that need to be changed.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/websets/{id}",
      "tags": [
        "Websets"
      ],
      "summary": "Update a Webset",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"metadata\": {\n            \"description\": \"Set of key-value pairs you want to associate with this object.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ],\n              \"maxLength\": 1000\n            },\n            \"nullable\": true\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-delete",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_webset",
        "description": {
          "tagline": "Deletes a Webset and its associated items.",
          "detailed": "Use this tool to permanently delete a Webset and all its associated items. Once deleted, it cannot be recovered."
        },
        "return_annotation": "Confirmation of the Webset deletion.",
        "arguments": [
          {
            "name": "webset_identifier",
            "alternative_names": [
              "webset_id",
              "webset_external_id"
            ],
            "description": "The unique identifier or external ID of the Webset to delete.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v0/websets/{id}",
      "tags": [
        "Websets"
      ],
      "summary": "Delete a Webset",
      "description": "Deletes a Webset.\n\nOnce deleted, the Webset and all its Items will no longer be available.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-cancel",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "cancel_webset_operations",
        "description": {
          "tagline": "Cancel all operations on a specified Webset.",
          "detailed": "Use this tool to stop any ongoing enrichment or search processes on a Webset, marking it as 'idle'."
        },
        "return_annotation": "Confirms the cancellation of operations on a Webset.",
        "arguments": [
          {
            "name": "webset_identifier",
            "alternative_names": [
              "webset_id",
              "webset_external_id"
            ],
            "description": "The ID or external ID of the Webset to cancel operations on.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/websets/{id}/cancel",
      "tags": [
        "Websets"
      ],
      "summary": "Cancel a running Webset",
      "description": "Cancels all operations being performed on a Webset.\n\nAny enrichment or search will be stopped and the Webset will be marked as `idle`.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-preview",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "preview_search_decomposition",
        "description": {
          "tagline": "Preview and analyze search query decomposition.",
          "detailed": "This tool previews how a search query will be decomposed before creating a webset, showing the detected entity type, generated search criteria, and available enrichment columns. Use it to understand the search interpretation before full webset creation."
        },
        "return_annotation": "Detected entity type, search criteria, and enrichment columns preview.",
        "arguments": [
          {
            "name": "search_query_details",
            "alternative_names": [
              "query_decomposition_input",
              "analyze_query_request"
            ],
            "description": "A JSON object detailing the search query to preview. It includes elements like the search string and any additional parameters for analysis.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/websets/preview",
      "tags": [
        "Websets Preview"
      ],
      "summary": "Preview a webset",
      "description": "Preview how a search query will be decomposed before creating a webset. This endpoint performs the same query analysis that happens during webset creation, allowing you to see the detected entity type, generated search criteria, and available enrichment columns in advance.\n\nUse this to help users understand how their search will be interpreted before committing to a full webset creation.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"query\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"minLength\": 1,\n            \"maxLength\": 5000,\n            \"description\": \"Natural language search query describing what you are looking for.\\n\\nBe specific and descriptive about your requirements, characteristics, and any constraints that help narrow down the results.\",\n            \"examples\": [\n              \"Marketing agencies based in the US, that focus on consumer products. Get brands worked with and city\",\n              \"AI startups in Europe that raised Series A funding in 2024\",\n              \"SaaS companies with 50-200 employees in the fintech space\"\n            ]\n          },\n          \"entity\": {\n            \"oneOf\": [\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"company\",\n                    \"default\": \"company\"\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ],\n                \"title\": \"Company\"\n              },\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"person\",\n                    \"default\": \"person\"\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ],\n                \"title\": \"Person\"\n              },\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"article\",\n                    \"default\": \"article\"\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ],\n                \"title\": \"Article\"\n              },\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"research_paper\",\n                    \"default\": \"research_paper\"\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ],\n                \"title\": \"Research Paper\"\n              },\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"custom\",\n                    \"default\": \"custom\"\n                  },\n                  \"description\": {\n                    \"type\": [\n                      \"string\"\n                    ],\n                    \"minLength\": 2,\n                    \"maxLength\": 200\n                  }\n                },\n                \"required\": [\n                  \"type\",\n                  \"description\"\n                ],\n                \"title\": \"Custom\"\n              }\n            ]\n          }\n        },\n        \"required\": [\n          \"query\"\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-items-get",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_webset_item",
        "description": {
          "tagline": "Retrieve a specific Webset Item by ID.",
          "detailed": "This tool is used to retrieve information about a specific Webset Item using its ID. It should be called when you need detailed information about a particular item associated with a Webset."
        },
        "return_annotation": "Details about the requested Webset Item.",
        "arguments": [
          {
            "name": "webset_identifier",
            "alternative_names": [
              "webset_id",
              "webset_external_id"
            ],
            "description": "The ID or external ID of the Webset to identify the desired Webset from which the item is to be retrieved.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "webset_item_id",
            "alternative_names": [
              "item_id",
              "webset_item_identifier"
            ],
            "description": "The unique identifier of the Webset item to retrieve.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/websets/{webset}/items/{id}",
      "tags": [
        "Items"
      ],
      "summary": "Get an Item",
      "description": "Returns a Webset Item.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Webset item"
            },
            "description": "The id of the Webset item",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-items-delete",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_webset_item",
        "description": {
          "tagline": "Delete an item from a webset and cancel its enrichment process.",
          "detailed": "Use this tool to remove an item from the specified webset. This will also cancel any ongoing enrichment process associated with the item."
        },
        "return_annotation": "Confirms deletion of the item from the webset.",
        "arguments": [
          {
            "name": "webset_identifier",
            "alternative_names": [
              "webset_id",
              "webset_external_id"
            ],
            "description": "The ID or external ID of the Webset from which the item will be deleted.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "webset_item_id",
            "alternative_names": [
              "webset_item_identifier",
              "webset_item_key"
            ],
            "description": "The unique identifier of the item to be deleted from the webset.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v0/websets/{webset}/items/{id}",
      "tags": [
        "Items"
      ],
      "summary": "Delete an Item",
      "description": "Deletes an Item from the Webset.\n\nThis will cancel any enrichment process for it.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Webset item"
            },
            "description": "The id of the Webset item",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-items-list",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_webset_items",
        "description": {
          "tagline": "Retrieve a list of items from a specific webset.",
          "detailed": "This tool fetches items from a designated webset, allowing pagination with the 'cursor' parameter if needed."
        },
        "return_annotation": "A list of items in the specified webset.",
        "arguments": [
          {
            "name": "webset_identifier",
            "alternative_names": [
              "webset_id",
              "webset_key"
            ],
            "description": "The ID or external ID of the Webset to retrieve items from.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "results_cursor",
              "page_cursor"
            ],
            "description": "A string used to paginate through the results. Pass this to retrieve the next set of items in the webset.",
            "endpoint_argument_name": "cursor"
          },
          {
            "name": "result_limit",
            "alternative_names": [
              "max_results",
              "number_of_results"
            ],
            "description": "Specify the number of results to return. This controls the size of the page in a paginated response.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "source_id",
            "alternative_names": [
              "source_identifier",
              "source_reference"
            ],
            "description": "The unique identifier for the source from which to retrieve items.",
            "endpoint_argument_name": "sourceId"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/websets/{webset}/items",
      "tags": [
        "Items"
      ],
      "summary": "List all Items for a Webset",
      "description": "Returns a list of Webset Items.\n\nYou can paginate through the Items using the `cursor` parameter.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [
          {
            "name": "cursor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The cursor to paginate through the results"
            },
            "description": "The cursor to paginate through the results",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of results to return"
            },
            "description": "The number of results to return",
            "required": false,
            "deprecated": false,
            "default": 20,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100
            },
            "schema_required": false
          },
          {
            "name": "sourceId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the source"
            },
            "description": "The id of the source",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-enrichments-create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_webset_enrichment",
        "description": {
          "tagline": "Create an enrichment for a specified webset.",
          "detailed": "This tool is used to create an enrichment for a given webset. It should be called when there is a need to enhance a webset with additional data or features."
        },
        "return_annotation": "Details of the created enrichment for the webset.",
        "arguments": [
          {
            "name": "webset_identifier",
            "alternative_names": [
              "webset_id",
              "webset_external_id"
            ],
            "description": "The ID or external ID of the webset to enrich.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "enrichment_details",
            "alternative_names": [
              "enrichment_data",
              "enrichment_content"
            ],
            "description": "A JSON object containing the details required to create the enrichment for the webset.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/websets/{webset}/enrichments",
      "tags": [
        "Enrichments"
      ],
      "summary": "Create an Enrichment",
      "description": "Create an Enrichment for a Webset.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"description\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"minLength\": 1,\n            \"maxLength\": 5000,\n            \"description\": \"Provide a description of the enrichment task you want to perform to each Webset Item.\"\n          },\n          \"format\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"enum\": [\n              \"text\",\n              \"date\",\n              \"number\",\n              \"options\",\n              \"email\",\n              \"phone\",\n              \"url\"\n            ],\n            \"description\": \"Format of the enrichment response.\\n\\nWe automatically select the best format based on the description. If you want to explicitly specify the format, you can do so here.\"\n          },\n          \"options\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": [\n                \"object\"\n              ],\n              \"properties\": {\n                \"label\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"description\": \"The label of the option\"\n                }\n              },\n              \"required\": [\n                \"label\"\n              ]\n            },\n            \"minItems\": 1,\n            \"maxItems\": 150,\n            \"description\": \"When the format is options, the different options for the enrichment agent to choose from.\"\n          },\n          \"metadata\": {\n            \"description\": \"Set of key-value pairs you want to associate with this object.\",\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ],\n              \"maxLength\": 1000\n            }\n          }\n        },\n        \"required\": [\n          \"description\"\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-enrichments-update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_webset_enrichment",
        "description": {
          "tagline": "Update an enrichment configuration for a webset.",
          "detailed": "This tool updates the enrichment configuration for a specified webset. It should be called when an existing enrichment configuration needs modification."
        },
        "return_annotation": "Confirmation of enrichment configuration update.",
        "arguments": [
          {
            "name": "webset_identifier",
            "alternative_names": [
              "webset_id",
              "webset_name"
            ],
            "description": "The identifier of the webset to be updated. Provide the specific name or ID of the webset.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "enrichment_configuration_id",
            "alternative_names": [
              "config_id",
              "enrichment_id"
            ],
            "description": "The unique identifier of the enrichment configuration to be updated.",
            "endpoint_argument_name": "id"
          },
          {
            "name": "enrichment_configuration_details",
            "alternative_names": [
              "enrichment_config_data",
              "enrichment_settings"
            ],
            "description": "A JSON object containing the details of the enrichment configuration to update.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PATCH",
      "path": "/v0/websets/{webset}/enrichments/{id}",
      "tags": [
        "Enrichments"
      ],
      "summary": "Update an Enrichment",
      "description": "Update an Enrichment configuration for a Webset.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"description\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"minLength\": 1,\n            \"maxLength\": 5000,\n            \"description\": \"Provide a description of the enrichment task you want to perform to each Webset Item.\"\n          },\n          \"format\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"enum\": [\n              \"text\",\n              \"date\",\n              \"number\",\n              \"options\",\n              \"email\",\n              \"phone\",\n              \"url\"\n            ],\n            \"description\": \"Format of the enrichment response.\\n\\nWe automatically select the best format based on the description. If you want to explicitly specify the format, you can do so here.\"\n          },\n          \"options\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": [\n                \"object\"\n              ],\n              \"properties\": {\n                \"label\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"description\": \"The label of the option\"\n                }\n              },\n              \"required\": [\n                \"label\"\n              ]\n            },\n            \"minItems\": 1,\n            \"maxItems\": 150,\n            \"description\": \"When the format is options, the different options for the enrichment agent to choose from.\"\n          },\n          \"metadata\": {\n            \"description\": \"Set of key-value pairs you want to associate with this object.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ],\n              \"maxLength\": 1000\n            },\n            \"nullable\": true\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-enrichments-get",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_enrichment_details",
        "description": {
          "tagline": "Retrieve detailed information about a specific enrichment.",
          "detailed": "Use this tool to get detailed information about a specific enrichment in a webset by providing the webset and enrichment IDs."
        },
        "return_annotation": "Details of a specific enrichment.",
        "arguments": [
          {
            "name": "webset_identifier",
            "alternative_names": [
              "webset_id",
              "webset_external_id"
            ],
            "description": "The ID or external ID of the webset to retrieve enrichment details for.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "enrichment_id",
            "alternative_names": [
              "enrichment_identifier",
              "id_of_enrichment"
            ],
            "description": "The unique identifier for the specific enrichment you want to retrieve within the webset.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/websets/{webset}/enrichments/{id}",
      "tags": [
        "Enrichments"
      ],
      "summary": "Get an Enrichment",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Enrichment"
            },
            "description": "The id of the Enrichment",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-enrichments-delete",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_enrichment",
        "description": {
          "tagline": "Delete an enrichment and cancel running processes.",
          "detailed": "Use this tool to delete an enrichment, cancel any running processes, and remove all generated enrichment results."
        },
        "return_annotation": "Confirmation of enrichment deletion and cancellation status.",
        "arguments": [
          {
            "name": "webset_id",
            "alternative_names": [
              "webset_identifier",
              "webset_external_id"
            ],
            "description": "The ID or external ID of the Webset to identify which enrichment to delete.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "enrichment_id",
            "alternative_names": [
              "enrichment_identifier",
              "enrichment_key"
            ],
            "description": "The unique identifier of the enrichment to be deleted.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v0/websets/{webset}/enrichments/{id}",
      "tags": [
        "Enrichments"
      ],
      "summary": "Delete an Enrichment",
      "description": "When deleting an Enrichment, any running enrichments will be canceled and all existing `enrichment_result` generated by this Enrichment will no longer be available.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Enrichment"
            },
            "description": "The id of the Enrichment",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-enrichments-cancel",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "cancel_enrichment_process",
        "description": {
          "tagline": "Cancel a running enrichment process.",
          "detailed": "Use this tool to cancel any currently running enrichment process. Once canceled, the process cannot be resumed."
        },
        "return_annotation": "Confirmation of enrichment cancellation.",
        "arguments": [
          {
            "name": "webset_id",
            "alternative_names": [
              "webset_identifier",
              "webset_key"
            ],
            "description": "The ID or external ID of the Webset to identify which enrichment process to cancel.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "enrichment_id",
            "alternative_names": [
              "enrichment_process_id",
              "task_id"
            ],
            "description": "The unique identifier of the enrichment process to be canceled.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/websets/{webset}/enrichments/{id}/cancel",
      "tags": [
        "Enrichments"
      ],
      "summary": "Cancel a running Enrichment",
      "description": "All running enrichments will be canceled. You can not resume an Enrichment after it has been canceled.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id or externalId of the Webset"
            },
            "description": "The id or externalId of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Enrichment"
            },
            "description": "The id of the Enrichment",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "webhooks-create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_webhook_for_notifications",
        "description": {
          "tagline": "Create webhooks to receive event notifications.",
          "detailed": "This tool allows you to set up webhooks for receiving notifications about specific events in your Websets. Upon creation, you'll specify the events to monitor and the destination URL for the notifications. The webhook activates immediately, and you'll receive a secret key for signature verification, visible only once at this point."
        },
        "return_annotation": "Details of the created webhook and a secret key for verification.",
        "arguments": [
          {
            "name": "webhook_configuration",
            "alternative_names": [
              "webhook_settings",
              "notification_events_configuration"
            ],
            "description": "A JSON object detailing the events to monitor and the destination URL for notifications.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/webhooks",
      "tags": [
        "Webhooks"
      ],
      "summary": "Create a Webhook",
      "description": "Webhooks let you get notifications when things happen in your Websets. When you create a webhook, you choose which events you want to know about and where to send the notifications.\n\nWhen an event happens, Exa sends an HTTP POST request to your webhook URL with:\n- Event details (type, time, ID)\n- Full data of what triggered the event\n- A signature to verify the request came from Exa\n\nThe webhook starts as `active` and begins getting notifications right away. You'll get a secret key for checking webhook signatures - save this safely as it's only shown once when you create the webhook.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"events\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"webset.created\",\n                \"webset.deleted\",\n                \"webset.paused\",\n                \"webset.idle\",\n                \"webset.search.created\",\n                \"webset.search.canceled\",\n                \"webset.search.completed\",\n                \"webset.search.updated\",\n                \"import.created\",\n                \"import.completed\",\n                \"webset.item.created\",\n                \"webset.item.enriched\",\n                \"monitor.created\",\n                \"monitor.updated\",\n                \"monitor.deleted\",\n                \"monitor.run.created\",\n                \"monitor.run.completed\",\n                \"webset.export.created\",\n                \"webset.export.completed\"\n              ]\n            },\n            \"minItems\": 1,\n            \"maxItems\": 19,\n            \"description\": \"The events to trigger the webhook\"\n          },\n          \"url\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"format\": \"uri\",\n            \"description\": \"The URL to send the webhook to\"\n          },\n          \"metadata\": {\n            \"description\": \"Set of key-value pairs you want to associate with this object.\",\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ],\n              \"maxLength\": 1000\n            }\n          }\n        },\n        \"required\": [\n          \"events\",\n          \"url\"\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "webhooks-list",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_webhooks_list",
        "description": {
          "tagline": "Retrieve a paginated list of all webhooks in your account.",
          "detailed": "Use this tool to get all the webhooks associated with your account, with options to paginate through results using limit and cursor parameters."
        },
        "return_annotation": "Returns a list of webhooks with pagination details.",
        "arguments": [
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "results_cursor",
              "page_cursor"
            ],
            "description": "The cursor used to navigate through pages of results for webhooks.",
            "endpoint_argument_name": "cursor"
          },
          {
            "name": "results_per_page",
            "alternative_names": [
              "webhooks_per_page",
              "items_per_page"
            ],
            "description": "The number of webhooks to return per page, up to a maximum of 200.",
            "endpoint_argument_name": "limit"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/webhooks",
      "tags": [
        "Webhooks"
      ],
      "summary": "List webhooks",
      "description": "Get a list of all webhooks in your account.\nThe results come in pages. Use `limit` to set how many webhooks to get per page (up to 200). Use `cursor` to get the next page of results.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [
          {
            "name": "cursor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The cursor to paginate through the results"
            },
            "description": "The cursor to paginate through the results",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of results to return"
            },
            "description": "The number of results to return",
            "required": false,
            "deprecated": false,
            "default": 25,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 200
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "webhooks-get",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_webhook_info",
        "description": {
          "tagline": "Retrieve details of a webhook using its ID.",
          "detailed": "This tool is used to get details about a specific webhook by providing its ID. It should be called when you need to access information about a particular webhook. The secret associated with the webhook is not included for security reasons."
        },
        "return_annotation": "Information about a specific webhook by ID.",
        "arguments": [
          {
            "name": "webhook_id",
            "alternative_names": [
              "webhook_identifier",
              "webhook_key"
            ],
            "description": "The unique identifier for the webhook you want details about.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/webhooks/{id}",
      "tags": [
        "Webhooks"
      ],
      "summary": "Get a Webhook",
      "description": "Get information about a webhook using its ID.\nThe webhook secret is not shown here for security - you only get it when you first create the webhook.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the webhook"
            },
            "description": "The id of the webhook",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "webhooks-update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_webhook_settings",
        "description": {
          "tagline": "Update a webhook's settings for events, URL, and metadata.",
          "detailed": "Use this tool to modify a webhook's configuration, including the events it tracks, the URL for notifications, and any custom metadata. Changes are applied immediately, and the webhook's status remains the same."
        },
        "return_annotation": "Confirmation of webhook settings update.",
        "arguments": [
          {
            "name": "webhook_id",
            "alternative_names": [
              "webhook_identifier",
              "webhook_reference_id"
            ],
            "description": "The unique identifier of the webhook to be updated.",
            "endpoint_argument_name": "id"
          },
          {
            "name": "webhook_update_request_body",
            "alternative_names": [
              "webhook_configuration_payload",
              "webhook_modification_data"
            ],
            "description": "JSON object containing webhook updates, such as events list, new URL, and metadata.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PATCH",
      "path": "/v0/webhooks/{id}",
      "tags": [
        "Webhooks"
      ],
      "summary": "Update a Webhook",
      "description": "Change a webhook's settings. You can update:\n- Events: Add or remove which events you want to hear about - URL: Change where notifications are sent - Metadata: Update custom data linked to the webhook\n\nChanges happen right away. If you change the events list, the webhook will start or stop getting notifications for those events immediately.\n\nThe webhook keeps its current status (`active` or `inactive`) when you update it.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the webhook"
            },
            "description": "The id of the webhook",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"events\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"webset.created\",\n                \"webset.deleted\",\n                \"webset.paused\",\n                \"webset.idle\",\n                \"webset.search.created\",\n                \"webset.search.canceled\",\n                \"webset.search.completed\",\n                \"webset.search.updated\",\n                \"import.created\",\n                \"import.completed\",\n                \"webset.item.created\",\n                \"webset.item.enriched\",\n                \"monitor.created\",\n                \"monitor.updated\",\n                \"monitor.deleted\",\n                \"monitor.run.created\",\n                \"monitor.run.completed\",\n                \"webset.export.created\",\n                \"webset.export.completed\"\n              ]\n            },\n            \"minItems\": 1,\n            \"maxItems\": 19,\n            \"description\": \"The events to trigger the webhook\"\n          },\n          \"url\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"format\": \"uri\",\n            \"description\": \"The URL to send the webhook to\"\n          },\n          \"metadata\": {\n            \"description\": \"Set of key-value pairs you want to associate with this object.\",\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ],\n              \"maxLength\": 1000\n            }\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "webhooks-delete",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_webhook",
        "description": {
          "tagline": "Remove a webhook from your account.",
          "detailed": "Use this tool to delete a webhook. Once deleted, it stops receiving notifications immediately and cannot be restored. You'll need to create a new webhook if you wish to reinstate it. Use when you need to stop a webhook permanently."
        },
        "return_annotation": "Confirms the webhook was successfully deleted.",
        "arguments": [
          {
            "name": "webhook_id",
            "alternative_names": [
              "id_of_webhook",
              "webhook_identifier"
            ],
            "description": "The unique identifier of the webhook to remove. This is necessary for specifying which webhook to delete.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v0/webhooks/{id}",
      "tags": [
        "Webhooks"
      ],
      "summary": "Delete a Webhook",
      "description": "Remove a webhook from your account. Once deleted, the webhook stops getting notifications right away and cannot be brought back.\n\nImportant notes: - The webhook stops working as soon as you delete it - You cannot undo this - you'll need to create a new webhook if you want it back - Any notifications currently being sent may still complete",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the webhook"
            },
            "description": "The id of the webhook",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "webhooks-attempts-list",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_webhook_attempts",
        "description": {
          "tagline": "Retrieve and list all webhook attempt records.",
          "detailed": "This tool retrieves all attempts made by a specific webhook, ordered in descending order. It is useful for monitoring webhook activity and diagnosing issues."
        },
        "return_annotation": "A list of webhook attempt records in descending order.",
        "arguments": [
          {
            "name": "webhook_id",
            "alternative_names": [
              "webhook_identifier",
              "webhook_unique_id"
            ],
            "description": "The unique identifier for the webhook to retrieve attempt records for.",
            "endpoint_argument_name": "id"
          },
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "result_cursor",
              "next_page_cursor"
            ],
            "description": "A string used to paginate through the webhook attempt results.",
            "endpoint_argument_name": "cursor"
          },
          {
            "name": "results_limit",
            "alternative_names": [
              "max_results",
              "number_of_results"
            ],
            "description": "Specify the maximum number of webhook attempt records to return.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "event_type_filter",
            "alternative_names": [
              "event_filter",
              "filter_by_event_type"
            ],
            "description": "Filter webhook attempts by specifying the type of event, such as 'webset.created' or 'monitor.run.completed'.",
            "endpoint_argument_name": "eventType"
          },
          {
            "name": "filter_by_successful_attempts",
            "alternative_names": [
              "filter_successful_attempts",
              "attempt_success_filter"
            ],
            "description": "Use 'true' to filter for successful webhook attempts and 'false' for unsuccessful ones.",
            "endpoint_argument_name": "successful"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/webhooks/{id}/attempts",
      "tags": [
        "Webhooks Attempts"
      ],
      "summary": "List webhook attempts",
      "description": "List all attempts made by a Webhook ordered in descending order.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [
          {
            "name": "cursor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The cursor to paginate through the results"
            },
            "description": "The cursor to paginate through the results",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of results to return"
            },
            "description": "The number of results to return",
            "required": false,
            "deprecated": false,
            "default": 25,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 200
            },
            "schema_required": false
          },
          {
            "name": "eventType",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": [
                "webset.created",
                "webset.deleted",
                "webset.paused",
                "webset.idle",
                "webset.search.created",
                "webset.search.canceled",
                "webset.search.completed",
                "webset.search.updated",
                "import.created",
                "import.completed",
                "webset.item.created",
                "webset.item.enriched",
                "monitor.created",
                "monitor.updated",
                "monitor.deleted",
                "monitor.run.created",
                "monitor.run.completed",
                "webset.export.created",
                "webset.export.completed"
              ],
              "properties": null,
              "inner_properties": null,
              "description": "The type of event to filter by"
            },
            "description": "The type of event to filter by",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string",
              "enum": [
                "webset.created",
                "webset.deleted",
                "webset.paused",
                "webset.idle",
                "webset.search.created",
                "webset.search.canceled",
                "webset.search.completed",
                "webset.search.updated",
                "import.created",
                "import.completed",
                "webset.item.created",
                "webset.item.enriched",
                "monitor.created",
                "monitor.updated",
                "monitor.deleted",
                "monitor.run.created",
                "monitor.run.completed",
                "webset.export.created",
                "webset.export.completed"
              ]
            },
            "schema_required": false
          },
          {
            "name": "successful",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter attempts by their success status"
            },
            "description": "Filter attempts by their success status",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of the webhook"
            },
            "description": "The ID of the webhook",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "events-list",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_system_events",
        "description": {
          "tagline": "Retrieve a list of all system events.",
          "detailed": "Call this tool to get a detailed list of events that have occurred within the system. Useful for auditing, monitoring, or reviewing activities. Supports pagination through a cursor parameter."
        },
        "return_annotation": "A list of events that have occurred in the system.",
        "arguments": [
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "page_cursor",
              "cursor_token"
            ],
            "description": "Cursor for paginating through event results. Use it to navigate through pages of events.",
            "endpoint_argument_name": "cursor"
          },
          {
            "name": "results_limit",
            "alternative_names": [
              "event_return_limit",
              "max_results"
            ],
            "description": "Specify the number of event results to return. This controls the size of the result set for a single request.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "event_types_filter",
            "alternative_names": [
              "event_categories",
              "filter_event_types"
            ],
            "description": "Filter events by specifying an array of event type names.",
            "endpoint_argument_name": "types"
          },
          {
            "name": "filter_created_before",
            "alternative_names": [
              "events_created_before",
              "created_before_filter"
            ],
            "description": "Filter events created before or at this timestamp (inclusive). Provide a valid ISO 8601 datetime string in UTC.",
            "endpoint_argument_name": "createdBefore"
          },
          {
            "name": "created_after",
            "alternative_names": [
              "start_timestamp",
              "from_datetime"
            ],
            "description": "Filter events created after or at this timestamp. Use a valid ISO 8601 datetime string in UTC.",
            "endpoint_argument_name": "createdAfter"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/events",
      "tags": [
        "Events"
      ],
      "summary": "List all Events",
      "description": "List all events that have occurred in the system.\n\nYou can paginate through the results using the `cursor` parameter.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [
          {
            "name": "cursor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The cursor to paginate through the results"
            },
            "description": "The cursor to paginate through the results",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of results to return"
            },
            "description": "The number of results to return",
            "required": false,
            "deprecated": false,
            "default": 25,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 200
            },
            "schema_required": false
          },
          {
            "name": "types",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The types of events to filter by"
            },
            "description": "The types of events to filter by",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "webset.created",
                  "webset.deleted",
                  "webset.paused",
                  "webset.idle",
                  "webset.search.created",
                  "webset.search.canceled",
                  "webset.search.completed",
                  "webset.search.updated",
                  "import.created",
                  "import.completed",
                  "webset.item.created",
                  "webset.item.enriched",
                  "monitor.created",
                  "monitor.updated",
                  "monitor.deleted",
                  "monitor.run.created",
                  "monitor.run.completed",
                  "webset.export.created",
                  "webset.export.completed"
                ]
              }
            },
            "schema_required": false
          },
          {
            "name": "createdBefore",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter events created before or at this timestamp (inclusive). Must be a valid ISO 8601 datetime string. All times are in UTC."
            },
            "description": "Filter events created before or at this timestamp (inclusive). Must be a valid ISO 8601 datetime string. All times are in UTC.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string",
              "format": "date-time"
            },
            "schema_required": false
          },
          {
            "name": "createdAfter",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter events created after or at this timestamp (inclusive). Must be a valid ISO 8601 datetime string. All times are in UTC."
            },
            "description": "Filter events created after or at this timestamp (inclusive). Must be a valid ISO 8601 datetime string. All times are in UTC.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string",
              "format": "date-time"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "events-get",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_event_by_id",
        "description": {
          "tagline": "Retrieve details of an event using its ID.",
          "detailed": "Use this tool to obtain information about a specific event by providing its unique identifier."
        },
        "return_annotation": "Details of the specified event.",
        "arguments": [
          {
            "name": "event_id",
            "alternative_names": [
              "event_identifier",
              "event_key"
            ],
            "description": "The unique identifier of the event to retrieve details for.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/events/{id}",
      "tags": [
        "Events"
      ],
      "summary": "Get an Event",
      "description": "Get a single Event by id.\n\nYou can subscribe to Events by creating a Webhook.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the event"
            },
            "description": "The id of the event",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-searches-create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_webset_search",
        "description": {
          "tagline": "Create a new search for a specified webset.",
          "detailed": "Use this tool to create a new search within a webset, reusing previous search results and applying new criteria."
        },
        "return_annotation": "Confirmation of new search creation for the webset.",
        "arguments": [
          {
            "name": "webset_id",
            "alternative_names": [
              "webset_identifier",
              "webset_key"
            ],
            "description": "The unique identifier for the Webset you want to create a search in.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "search_criteria",
            "alternative_names": [
              "search_parameters",
              "search_conditions"
            ],
            "description": "JSON object representing new search criteria for the webset. This specifies the parameters or conditions for the new search.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/websets/{webset}/searches",
      "tags": [
        "Searches"
      ],
      "summary": "Create a Search",
      "description": "Creates a new Search for the Webset.\n\nThe default behavior is to reuse the previous Search results and evaluate them against the new criteria.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Webset"
            },
            "description": "The id of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"count\": {\n            \"type\": [\n              \"number\"\n            ],\n            \"minimum\": 1,\n            \"description\": \"Number of Items the Search will attempt to find.\\n\\nThe actual number of Items found may be less than this number depending on the query complexity.\"\n          },\n          \"query\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"minLength\": 1,\n            \"maxLength\": 5000,\n            \"description\": \"Natural language search query describing what you are looking for.\\n\\nBe specific and descriptive about your requirements, characteristics, and any constraints that help narrow down the results.\\n\\nAny URLs provided will be crawled and used as additional context for the search.\",\n            \"examples\": [\n              \"Marketing agencies based in the US, that focus on consumer products. Get brands worked with and city\",\n              \"AI startups in Europe that raised Series A funding in 2024\",\n              \"SaaS companies with 50-200 employees in the fintech space\"\n            ]\n          },\n          \"entity\": {\n            \"oneOf\": [\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"company\",\n                    \"default\": \"company\"\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ],\n                \"title\": \"Company\"\n              },\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"person\",\n                    \"default\": \"person\"\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ],\n                \"title\": \"Person\"\n              },\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"article\",\n                    \"default\": \"article\"\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ],\n                \"title\": \"Article\"\n              },\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"research_paper\",\n                    \"default\": \"research_paper\"\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ],\n                \"title\": \"Research Paper\"\n              },\n              {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"const\": \"custom\",\n                    \"default\": \"custom\"\n                  },\n                  \"description\": {\n                    \"type\": [\n                      \"string\"\n                    ],\n                    \"minLength\": 2,\n                    \"maxLength\": 200\n                  }\n                },\n                \"required\": [\n                  \"type\",\n                  \"description\"\n                ],\n                \"title\": \"Custom\"\n              }\n            ]\n          },\n          \"criteria\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": [\n                \"object\"\n              ],\n              \"properties\": {\n                \"description\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"minLength\": 1,\n                  \"maxLength\": 1000,\n                  \"description\": \"The description of the criterion\"\n                }\n              },\n              \"required\": [\n                \"description\"\n              ]\n            },\n            \"minItems\": 1,\n            \"maxItems\": 5,\n            \"description\": \"Criteria every item is evaluated against.\\n\\nIt's not required to provide your own criteria, we automatically detect the criteria from all the information provided in the query. Only use this when you need more fine control.\"\n          },\n          \"exclude\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": [\n                \"object\"\n              ],\n              \"properties\": {\n                \"source\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"enum\": [\n                    \"import\",\n                    \"webset\"\n                  ]\n                },\n                \"id\": {\n                  \"description\": \"The ID of the source to exclude.\",\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"minLength\": 1\n                }\n              },\n              \"required\": [\n                \"source\",\n                \"id\"\n              ]\n            },\n            \"description\": \"Sources (existing imports or websets) to exclude from search results. Any results found within these sources will be omitted to prevent finding them during search.\"\n          },\n          \"scope\": {\n            \"type\": [\n              \"array\"\n            ],\n            \"items\": {\n              \"type\": [\n                \"object\"\n              ],\n              \"properties\": {\n                \"source\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"enum\": [\n                    \"import\",\n                    \"webset\"\n                  ]\n                },\n                \"id\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"minLength\": 1,\n                  \"description\": \"The ID of the source to search.\"\n                },\n                \"relationship\": {\n                  \"type\": [\n                    \"object\"\n                  ],\n                  \"properties\": {\n                    \"definition\": {\n                      \"type\": [\n                        \"string\"\n                      ],\n                      \"description\": \"What the relationship of the entities you hope to find is relative to the entities contained in the provided source.\"\n                    },\n                    \"limit\": {\n                      \"type\": [\n                        \"number\"\n                      ],\n                      \"minimum\": 1,\n                      \"maximum\": 10\n                    }\n                  },\n                  \"required\": [\n                    \"definition\",\n                    \"limit\"\n                  ]\n                }\n              },\n              \"required\": [\n                \"source\",\n                \"id\"\n              ]\n            },\n            \"description\": \"Limit the search to specific sources (existing imports). Any results found within these sources matching the search criteria will be included in the Webset.\"\n          },\n          \"recall\": {\n            \"type\": [\n              \"boolean\"\n            ],\n            \"description\": \"Whether to provide an estimate of how many total relevant results could exist for this search.\\nResult of the analysis will be available in the `recall` field within the search request.\"\n          },\n          \"behavior\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"override\",\n              \"append\"\n            ]\n          },\n          \"metadata\": {\n            \"description\": \"Set of key-value pairs you want to associate with this object.\",\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ],\n              \"maxLength\": 1000\n            }\n          }\n        },\n        \"required\": [\n          \"count\",\n          \"query\"\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-searches-get",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_search_by_id",
        "description": {
          "tagline": "Retrieve a search by its ID.",
          "detailed": "Use this tool to get detailed information about a specific search by providing its ID."
        },
        "return_annotation": "Details of the search by ID.",
        "arguments": [
          {
            "name": "webset_id",
            "alternative_names": [
              "webset_identifier",
              "webset_key"
            ],
            "description": "The ID of the Webset to retrieve the specific search.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "search_id",
            "alternative_names": [
              "id_of_search",
              "search_identifier"
            ],
            "description": "The ID of the search to retrieve details for.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/websets/{webset}/searches/{id}",
      "tags": [
        "Searches"
      ],
      "summary": "Get a Search",
      "description": "Gets a Search by id",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Webset"
            },
            "description": "The id of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Search"
            },
            "description": "The id of the Search",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "websets-searches-cancel",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "cancel_running_search",
        "description": {
          "tagline": "Cancels a currently running search operation.",
          "detailed": "This tool cancels an ongoing search by using the specified webset and search ID. Useful when you need to stop a search that is still in progress."
        },
        "return_annotation": "Confirmation of search cancellation.",
        "arguments": [
          {
            "name": "webset_id",
            "alternative_names": [
              "webset_identifier",
              "webset_reference"
            ],
            "description": "The ID of the Webset where the search is executing. Use this to specify the Webset to be canceled.",
            "endpoint_argument_name": "webset"
          },
          {
            "name": "search_id",
            "alternative_names": [
              "search_identifier",
              "search_key"
            ],
            "description": "The ID of the search to cancel. Provide the unique string identifier for the targeted search operation.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/websets/{webset}/searches/{id}/cancel",
      "tags": [
        "Searches"
      ],
      "summary": "Cancel a running Search",
      "description": "Cancels a currently running Search.\n\nYou can cancel all searches at once by using the `websets/:webset/cancel` endpoint.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webset",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Webset"
            },
            "description": "The id of the Webset",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Search"
            },
            "description": "The id of the Search",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "monitors-create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_monitor_for_websets",
        "description": {
          "tagline": "Create a scheduled monitor to update Websets with fresh data.",
          "detailed": "Use this tool to set up a new monitor that automatically updates Websets. It enables execution of 'search' and 'refresh' operations based on your defined schedule, using cron expressions and timezone settings, to keep your Websets current without manual intervention."
        },
        "return_annotation": "Details of the created monitor for Websets.",
        "arguments": [
          {
            "name": "monitor_configuration",
            "alternative_names": [
              "monitor_settings",
              "webset_monitor_parameters"
            ],
            "description": "JSON object describing the configuration for the new monitor, including schedule, search and refresh operations.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/monitors",
      "tags": [
        "Monitors"
      ],
      "summary": "Create a Monitor",
      "description": "Creates a new `Monitor` to continuously keep your Websets updated with fresh data.\n\nMonitors automatically run on your defined schedule to ensure your Websets stay current without manual intervention:\n\n- **Find new content**: Execute `search` operations to discover fresh items matching your criteria\n- **Update existing content**: Run `refresh` operations to update items contents and enrichments\n- **Automated scheduling**: Configure `cron` expressions and `timezone` for precise scheduling control",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"websetId\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"description\": \"The id of the Webset\"\n          },\n          \"cadence\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"properties\": {\n              \"cron\": {\n                \"description\": \"Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.\",\n                \"type\": [\n                  \"string\"\n                ]\n              },\n              \"timezone\": {\n                \"description\": \"IANA timezone (e.g., \\\"America/New_York\\\")\",\n                \"default\": \"Etc/UTC\",\n                \"type\": [\n                  \"string\"\n                ]\n              }\n            },\n            \"required\": [\n              \"cron\"\n            ],\n            \"description\": \"How often the monitor will run\"\n          },\n          \"behavior\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"const\": \"search\",\n                \"default\": \"search\"\n              },\n              \"config\": {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"query\": {\n                    \"type\": [\n                      \"string\"\n                    ],\n                    \"minLength\": 2,\n                    \"maxLength\": 10000,\n                    \"description\": \"The query to search for. By default, the query from the last search is used.\"\n                  },\n                  \"criteria\": {\n                    \"type\": [\n                      \"array\"\n                    ],\n                    \"items\": {\n                      \"type\": [\n                        \"object\"\n                      ],\n                      \"properties\": {\n                        \"description\": {\n                          \"type\": [\n                            \"string\"\n                          ],\n                          \"minLength\": 2,\n                          \"maxLength\": 1000\n                        }\n                      },\n                      \"required\": [\n                        \"description\"\n                      ]\n                    },\n                    \"maxItems\": 5,\n                    \"description\": \"The criteria to search for. By default, the criteria from the last search is used.\"\n                  },\n                  \"entity\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"company\",\n                            \"default\": \"company\"\n                          }\n                        },\n                        \"required\": [\n                          \"type\"\n                        ],\n                        \"title\": \"Company\"\n                      },\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"person\",\n                            \"default\": \"person\"\n                          }\n                        },\n                        \"required\": [\n                          \"type\"\n                        ],\n                        \"title\": \"Person\"\n                      },\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"article\",\n                            \"default\": \"article\"\n                          }\n                        },\n                        \"required\": [\n                          \"type\"\n                        ],\n                        \"title\": \"Article\"\n                      },\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"research_paper\",\n                            \"default\": \"research_paper\"\n                          }\n                        },\n                        \"required\": [\n                          \"type\"\n                        ],\n                        \"title\": \"Research Paper\"\n                      },\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"custom\",\n                            \"default\": \"custom\"\n                          },\n                          \"description\": {\n                            \"type\": [\n                              \"string\"\n                            ],\n                            \"minLength\": 2,\n                            \"maxLength\": 200\n                          }\n                        },\n                        \"required\": [\n                          \"type\",\n                          \"description\"\n                        ],\n                        \"title\": \"Custom\"\n                      }\n                    ]\n                  },\n                  \"count\": {\n                    \"type\": [\n                      \"number\"\n                    ],\n                    \"exclusiveMinimum\": 0,\n                    \"description\": \"The maximum number of results to find\"\n                  },\n                  \"behavior\": {\n                    \"default\": \"append\",\n                    \"type\": [\n                      \"string\"\n                    ],\n                    \"enum\": [\n                      \"override\",\n                      \"append\"\n                    ],\n                    \"description\": \"The behaviour of the Search when it is added to a Webset.\"\n                  }\n                },\n                \"required\": [\n                  \"count\"\n                ],\n                \"description\": \"Specify the search parameters for the Monitor.\\n\\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided.\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"config\"\n            ],\n            \"description\": \"Behavior to perform when monitor runs\"\n          },\n          \"metadata\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ]\n            }\n          }\n        },\n        \"required\": [\n          \"websetId\",\n          \"cadence\",\n          \"behavior\"\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "monitors-list",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_website_monitors",
        "description": {
          "tagline": "Fetch all monitors associated with a website.",
          "detailed": "Use this tool to retrieve a comprehensive list of all monitoring services set up for a specific website. This is helpful for maintenance, auditing, or upgrading processes."
        },
        "return_annotation": "A list of all monitors for the website.",
        "arguments": [
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "page_cursor",
              "result_cursor"
            ],
            "description": "The cursor for paginating through the monitor results.",
            "endpoint_argument_name": "cursor"
          },
          {
            "name": "results_limit",
            "alternative_names": [
              "max_results",
              "result_count"
            ],
            "description": "Specifies the maximum number of monitor results to return. Use for pagination.",
            "endpoint_argument_name": "limit"
          },
          {
            "name": "webset_id",
            "alternative_names": [
              "website_set_id",
              "webset_identifier"
            ],
            "description": "The unique identifier for the Webset to retrieve monitors for. This is required to specify which website's monitors you want to list.",
            "endpoint_argument_name": "websetId"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/monitors",
      "tags": [
        "Monitors"
      ],
      "summary": "List Monitors",
      "description": "Lists all monitors for the Webset.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [
          {
            "name": "cursor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The cursor to paginate through the results"
            },
            "description": "The cursor to paginate through the results",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of results to return"
            },
            "description": "The number of results to return",
            "required": false,
            "deprecated": false,
            "default": 25,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 200
            },
            "schema_required": false
          },
          {
            "name": "websetId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Webset to list monitors for"
            },
            "description": "The id of the Webset to list monitors for",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "monitors-get",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_specific_monitor",
        "description": {
          "tagline": "Retrieve details of a specific monitor using its ID.",
          "detailed": "This tool is used to obtain information about a particular monitor by providing its unique ID. Call this tool when you need to get specific details about a monitor."
        },
        "return_annotation": "Details of the specified monitor.",
        "arguments": [
          {
            "name": "monitor_id",
            "alternative_names": [
              "monitor_identifier",
              "monitor_key"
            ],
            "description": "The unique identifier of the monitor to retrieve details for.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/monitors/{id}",
      "tags": [
        "Monitors"
      ],
      "summary": "Get Monitor",
      "description": "Gets a specific monitor.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Monitor"
            },
            "description": "The id of the Monitor",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "monitors-update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_monitor_configuration",
        "description": {
          "tagline": "Update the configuration of a monitor.",
          "detailed": "Use this tool to update the settings of an existing monitor. Provide the monitor ID and new configuration details to modify its setup."
        },
        "return_annotation": "Confirmation of updated monitor configuration.",
        "arguments": [
          {
            "name": "monitor_id",
            "alternative_names": [
              "monitor_identifier",
              "id_of_monitor"
            ],
            "description": "The unique identifier for the monitor to update.",
            "endpoint_argument_name": "id"
          },
          {
            "name": "monitor_configuration_details",
            "alternative_names": [
              "monitor_settings_update",
              "monitor_config_data"
            ],
            "description": "A JSON object containing the new configuration settings for the monitor.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PATCH",
      "path": "/v0/monitors/{id}",
      "tags": [
        "Monitors"
      ],
      "summary": "Update Monitor",
      "description": "Updates a monitor configuration.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Monitor"
            },
            "description": "The id of the Monitor",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"status\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"enum\": [\n              \"enabled\",\n              \"disabled\"\n            ],\n            \"description\": \"The status of the monitor.\"\n          },\n          \"metadata\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ]\n            }\n          },\n          \"cadence\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"properties\": {\n              \"cron\": {\n                \"description\": \"Cron expression for monitor cadence (must be a valid Unix cron with 5 fields). The schedule must trigger at most once per day.\",\n                \"type\": [\n                  \"string\"\n                ]\n              },\n              \"timezone\": {\n                \"description\": \"IANA timezone (e.g., \\\"America/New_York\\\")\",\n                \"default\": \"Etc/UTC\",\n                \"type\": [\n                  \"string\"\n                ]\n              }\n            },\n            \"required\": [\n              \"cron\"\n            ]\n          },\n          \"behavior\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"const\": \"search\",\n                \"default\": \"search\"\n              },\n              \"config\": {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"query\": {\n                    \"type\": [\n                      \"string\"\n                    ],\n                    \"minLength\": 2,\n                    \"maxLength\": 10000,\n                    \"description\": \"The query to search for. By default, the query from the last search is used.\"\n                  },\n                  \"criteria\": {\n                    \"type\": [\n                      \"array\"\n                    ],\n                    \"items\": {\n                      \"type\": [\n                        \"object\"\n                      ],\n                      \"properties\": {\n                        \"description\": {\n                          \"type\": [\n                            \"string\"\n                          ],\n                          \"minLength\": 2,\n                          \"maxLength\": 1000\n                        }\n                      },\n                      \"required\": [\n                        \"description\"\n                      ]\n                    },\n                    \"maxItems\": 5,\n                    \"description\": \"The criteria to search for. By default, the criteria from the last search is used.\"\n                  },\n                  \"entity\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"company\",\n                            \"default\": \"company\"\n                          }\n                        },\n                        \"required\": [\n                          \"type\"\n                        ],\n                        \"title\": \"Company\"\n                      },\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"person\",\n                            \"default\": \"person\"\n                          }\n                        },\n                        \"required\": [\n                          \"type\"\n                        ],\n                        \"title\": \"Person\"\n                      },\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"article\",\n                            \"default\": \"article\"\n                          }\n                        },\n                        \"required\": [\n                          \"type\"\n                        ],\n                        \"title\": \"Article\"\n                      },\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"research_paper\",\n                            \"default\": \"research_paper\"\n                          }\n                        },\n                        \"required\": [\n                          \"type\"\n                        ],\n                        \"title\": \"Research Paper\"\n                      },\n                      {\n                        \"type\": [\n                          \"object\"\n                        ],\n                        \"properties\": {\n                          \"type\": {\n                            \"type\": \"string\",\n                            \"const\": \"custom\",\n                            \"default\": \"custom\"\n                          },\n                          \"description\": {\n                            \"type\": [\n                              \"string\"\n                            ],\n                            \"minLength\": 2,\n                            \"maxLength\": 200\n                          }\n                        },\n                        \"required\": [\n                          \"type\",\n                          \"description\"\n                        ],\n                        \"title\": \"Custom\"\n                      }\n                    ]\n                  },\n                  \"count\": {\n                    \"type\": [\n                      \"number\"\n                    ],\n                    \"exclusiveMinimum\": 0,\n                    \"description\": \"The maximum number of results to find\"\n                  },\n                  \"behavior\": {\n                    \"default\": \"append\",\n                    \"type\": [\n                      \"string\"\n                    ],\n                    \"enum\": [\n                      \"override\",\n                      \"append\"\n                    ],\n                    \"description\": \"The behaviour of the Search when it is added to a Webset.\"\n                  }\n                },\n                \"required\": [\n                  \"count\"\n                ],\n                \"description\": \"Specify the search parameters for the Monitor.\\n\\nBy default, the search parameters (query, entity and criteria) from the last search are used when no parameters are provided.\"\n              }\n            },\n            \"required\": [\n              \"type\",\n              \"config\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "monitors-delete",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_monitor",
        "description": {
          "tagline": "Deletes a specified monitor using its ID.",
          "detailed": "Use this tool to delete a monitor by providing its ID. It should be called when you need to remove a monitor from the system."
        },
        "return_annotation": "Confirmation of monitor deletion.",
        "arguments": [
          {
            "name": "monitor_id",
            "alternative_names": [
              "monitor_identifier",
              "monitor_ID"
            ],
            "description": "The unique identifier for the monitor to be deleted.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v0/monitors/{id}",
      "tags": [
        "Monitors"
      ],
      "summary": "Delete Monitor",
      "description": "Deletes a monitor.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Monitor"
            },
            "description": "The id of the Monitor",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "monitors-runs-list",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_monitor_runs",
        "description": {
          "tagline": "Lists all runs for a given monitor.",
          "detailed": "Use this tool to retrieve a list of all runs associated with a specific monitor. It's helpful for tracking and analyzing past monitor activities."
        },
        "return_annotation": "A list of all runs for the specified monitor.",
        "arguments": [
          {
            "name": "monitor_id",
            "alternative_names": [
              "monitor_identifier",
              "monitor_reference"
            ],
            "description": "The ID of the monitor to list all associated runs.",
            "endpoint_argument_name": "monitor"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/monitors/{monitor}/runs",
      "tags": [
        "Monitors Runs"
      ],
      "summary": "List Monitor Runs",
      "description": "Lists all runs for the Monitor.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "monitor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Monitor to list runs for"
            },
            "description": "The id of the Monitor to list runs for",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "monitors-runs-get",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_specific_monitor_run",
        "description": {
          "tagline": "Retrieve details of a specific monitor run.",
          "detailed": "This tool retrieves details of a specific monitor run by using the monitor ID and run ID. It should be called when you need to access information about a particular monitor run."
        },
        "return_annotation": "Details of a specific monitor run.",
        "arguments": [
          {
            "name": "monitor_id",
            "alternative_names": [
              "monitor_identifier",
              "monitor_unique_id"
            ],
            "description": "The unique identifier of the monitor to retrieve the run for.",
            "endpoint_argument_name": "monitor"
          },
          {
            "name": "run_id",
            "alternative_names": [
              "execution_id",
              "monitor_run_id"
            ],
            "description": "The unique identifier of the specific run to retrieve details for.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/monitors/{monitor}/runs/{id}",
      "tags": [
        "Monitors Runs"
      ],
      "summary": "Get Monitor Run",
      "description": "Gets a specific monitor run.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "monitor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Monitor to get the run for"
            },
            "description": "The id of the Monitor to get the run for",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "imports-create",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_data_import",
        "description": {
          "tagline": "Initiates a new data import for uploading data into Websets.",
          "detailed": "Use this tool to create a new import allowing you to upload and manage your data within Websets. The import facilitates data enrichment, searching with natural language filters, and exclusion of duplicates. Upon creation, you'll receive an upload URL valid for a set duration to complete the data upload."
        },
        "return_annotation": "Provides upload URL and expiration for data import.",
        "arguments": [
          {
            "name": "data_import_details",
            "alternative_names": [
              "import_request_body",
              "upload_data_payload"
            ],
            "description": "The JSON object containing data to import for Websets. This includes details for enrichment, search, or exclusion processes.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v0/imports",
      "tags": [
        "Imports"
      ],
      "summary": "Create an Import",
      "description": "Creates a new import to upload your data into Websets. Imports can be used to:\n\n- **Enrich**: Enhance your data with additional information using our AI-powered enrichment engine\n- **Search**: Query your data using Websets' agentic search with natural language filters\n- **Exclude**: Prevent duplicate or already known results from appearing in your searches\n\nOnce the import is created, you can upload your data to the returned `uploadUrl` until `uploadValidUntil` (by default 1 hour).",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {},
              "oneOf": [
                {
                  "type": [
                    "object"
                  ]
                }
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"discriminator\": {\n          \"propertyName\": \"format\"\n        },\n        \"oneOf\": [\n          {\n            \"type\": [\n              \"object\"\n            ],\n            \"properties\": {\n              \"size\": {\n                \"type\": [\n                  \"number\"\n                ],\n                \"maximum\": 50000000,\n                \"description\": \"The size of the file in bytes. Maximum size is 50 MB.\"\n              },\n              \"count\": {\n                \"type\": [\n                  \"number\"\n                ],\n                \"description\": \"The number of records to import\"\n              },\n              \"title\": {\n                \"type\": [\n                  \"string\"\n                ],\n                \"description\": \"The title of the import\"\n              },\n              \"format\": {\n                \"type\": [\n                  \"string\"\n                ],\n                \"enum\": [\n                  \"csv\"\n                ],\n                \"description\": \"When the import is in CSV format, we expect a column containing the key identifier for the entity - for now URL. If not provided, import will fail to be processed.\"\n              },\n              \"metadata\": {\n                \"description\": \"Set of key-value pairs you want to associate with this object.\",\n                \"type\": [\n                  \"object\"\n                ],\n                \"additionalProperties\": {\n                  \"type\": [\n                    \"string\"\n                  ],\n                  \"maxLength\": 1000\n                }\n              },\n              \"entity\": {\n                \"oneOf\": [\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"company\",\n                        \"default\": \"company\"\n                      }\n                    },\n                    \"required\": [\n                      \"type\"\n                    ],\n                    \"title\": \"Company\"\n                  },\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"person\",\n                        \"default\": \"person\"\n                      }\n                    },\n                    \"required\": [\n                      \"type\"\n                    ],\n                    \"title\": \"Person\"\n                  },\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"article\",\n                        \"default\": \"article\"\n                      }\n                    },\n                    \"required\": [\n                      \"type\"\n                    ],\n                    \"title\": \"Article\"\n                  },\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"research_paper\",\n                        \"default\": \"research_paper\"\n                      }\n                    },\n                    \"required\": [\n                      \"type\"\n                    ],\n                    \"title\": \"Research Paper\"\n                  },\n                  {\n                    \"type\": [\n                      \"object\"\n                    ],\n                    \"properties\": {\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"const\": \"custom\",\n                        \"default\": \"custom\"\n                      },\n                      \"description\": {\n                        \"type\": [\n                          \"string\"\n                        ],\n                        \"minLength\": 2,\n                        \"maxLength\": 200\n                      }\n                    },\n                    \"required\": [\n                      \"type\",\n                      \"description\"\n                    ],\n                    \"title\": \"Custom\"\n                  }\n                ],\n                \"description\": \"What type of entity the import contains (e.g. People, Companies, etc.), and thus should be attempted to be resolved as.\"\n              },\n              \"csv\": {\n                \"type\": [\n                  \"object\"\n                ],\n                \"properties\": {\n                  \"identifier\": {\n                    \"type\": [\n                      \"integer\"\n                    ],\n                    \"minimum\": 0,\n                    \"description\": \"Column containing the key identifier for the entity (e.g. URL, Name, etc.). If not provided, we will try to infer it from the file.\"\n                  }\n                },\n                \"description\": \"When format is `csv`, these are the specific import parameters.\"\n              }\n            },\n            \"required\": [\n              \"size\",\n              \"count\",\n              \"format\",\n              \"entity\"\n            ]\n          }\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "imports-list",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_imports",
        "description": {
          "tagline": "Retrieve all import entries for the Webset.",
          "detailed": "Use this tool to get a comprehensive list of all imports associated with the Webset, useful for tracking or auditing purposes."
        },
        "return_annotation": "A list of all imports for the Webset.",
        "arguments": [
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "results_cursor",
              "page_cursor"
            ],
            "description": "String used for paginating through results. Pass it to retrieve the next set of results.",
            "endpoint_argument_name": "cursor"
          },
          {
            "name": "results_limit",
            "alternative_names": [
              "max_results",
              "number_of_results"
            ],
            "description": "Specify the maximum number of import results to return.",
            "endpoint_argument_name": "limit"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/imports",
      "tags": [
        "Imports"
      ],
      "summary": "List Imports",
      "description": "Lists all imports for the Webset.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [
          {
            "name": "cursor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The cursor to paginate through the results"
            },
            "description": "The cursor to paginate through the results",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of results to return"
            },
            "description": "The number of results to return",
            "required": false,
            "deprecated": false,
            "default": 25,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 200
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "imports-get",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_specific_import",
        "description": {
          "tagline": "Retrieve details of a specific import.",
          "detailed": "Use this tool to get detailed information about a particular import by providing its ID."
        },
        "return_annotation": "Details of the specified import.",
        "arguments": [
          {
            "name": "import_id",
            "alternative_names": [
              "import_identifier",
              "export_id"
            ],
            "description": "The unique identifier for the specific import to retrieve details about.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "GET",
      "path": "/v0/imports/{id}",
      "tags": [
        "Imports"
      ],
      "summary": "Get Import",
      "description": "Gets a specific import.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Import"
            },
            "description": "The id of the Import",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "imports-update",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_imports_configuration",
        "description": {
          "tagline": "Update an import configuration with new settings.",
          "detailed": "Use this tool to update an existing import configuration by providing the necessary changes to its settings."
        },
        "return_annotation": "Confirmation of updated import configuration.",
        "arguments": [
          {
            "name": "import_id",
            "alternative_names": [
              "import_identifier",
              "import_key"
            ],
            "description": "The identifier for the import configuration to be updated.",
            "endpoint_argument_name": "id"
          },
          {
            "name": "import_configuration_details",
            "alternative_names": [
              "config_update_payload",
              "import_config_payload"
            ],
            "description": "JSON object containing the new settings for the import configuration. Include all necessary fields that need to be updated.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PATCH",
      "path": "/v0/imports/{id}",
      "tags": [
        "Imports"
      ],
      "summary": "Update Import",
      "description": "Updates a import configuration.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Import"
            },
            "description": "The id of the Import",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"metadata\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {\n              \"type\": [\n                \"string\"\n              ]\n            }\n          },\n          \"title\": {\n            \"type\": [\n              \"string\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    },
    {
      "name": "imports-delete",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_import",
        "description": {
          "tagline": "Delete an import by its ID.",
          "detailed": "Use this tool to delete an import record when you have the import ID."
        },
        "return_annotation": "Confirmation of import deletion.",
        "arguments": [
          {
            "name": "import_id",
            "alternative_names": [
              "import_identifier",
              "import_reference"
            ],
            "description": "The unique identifier of the import to be deleted.",
            "endpoint_argument_name": "id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v0/imports/{id}",
      "tags": [
        "Imports"
      ],
      "summary": "Delete Import",
      "description": "Deletes a import.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "api_key"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The id of the Import"
            },
            "description": "The id of the Import",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false,
      "base_url": "https://api.exa.ai/websets/",
      "original_servers": [
        {
          "url": "https://api.exa.ai/websets/",
          "description": "Production"
        }
      ]
    }
  ],
  "security_scheme_key_selected": null,
  "security_scheme_selected": {}
}
