"""Request Body Schemas for API Tools

DO NOT EDIT THIS MODULE DIRECTLY.

THIS MODULE WAS AUTO-GENERATED AND CONTAINS OpenAPI REQUEST BODY SCHEMAS
FOR TOOLS WITH COMPLEX REQUEST BODIES. ANY CHANGES TO THIS MODULE WILL
BE OVERWRITTEN BY THE TRANSPILER.
"""

from typing import Any

REQUEST_BODY_SCHEMAS: dict[str, Any] = {
    "GETCLICKUPACCESSTOKEN": '{"title": "GetAccessTokenrequest", "required": ["client_id", "client_secret", "code"], "type": "object", "properties": {"client_id": {"type": "string", "description": "OAuth app client id"}, "client_secret": {"type": "string", "description": "OAuth app client secret"}, "code": {"type": "string", "description": "Code given in redirect url"}}, "examples": [{"client_id": "your_client_id", "client_secret": "your_client_secret", "code": "authorization_code"}]}',
    "CREATETHREADEDCOMMENT": '{"type": "object", "description": "Schema reference broken: #/paths/~1v2~1task~1%7Btask_id%7D~1comment/post/requestBody/content/application~1json/schema", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1task~1%7Btask_id%7D~1comment/post/requestBody/content/application~1json/schema"}',
    "UPDATETASKCUSTOMFIELD": '{"title": "SetCustomFieldValuerequest", "anyOf": [{"type": "object", "title": "URL Custom Field", "description": "The `value` must be a string with a valid URL.", "required": ["value"], "properties": {"value": {"type": "string", "example": "https://clickup.com/api"}}}, {"type": "object", "title": "Dropdown Custom Field", "description": "Enter the universal unique identifier (UUID) of the dropdown menu option you want to set. You can find the UUIDs available for each Dropdown Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) New Dropdown Custom Field options cannot be created from this request.", "required": ["value"], "properties": {"value": {"type": "string", "example": "uuid1234"}}}, {"type": "object", "title": "Email Custom Field", "description": "The `value` must be a string with a valid email address.", "required": ["value"], "properties": {"value": {"type": "string", "example": "user@company.com"}}}, {"type": "object", "title": "Phone Custom Field", "description": "The `value` must be a string with a valid country code.", "required": ["value"], "properties": {"value": {"type": "string", "example": "+1 123 456 7890"}}}, {"type": "object", "title": "Date Custom Field", "description": "The `value` must be Unix time in milliseconds. To display the time in a Date Custom Field in ClickUp, you must include `time: true` in the `value_options` property.", "properties": {"value": {"type": "integer", "format": "int32", "example": 1667367645000}, "value_options": {"type": "object", "required": ["time"], "properties": {"time": {"type": "boolean", "example": true}}}}}, {"type": "object", "title": "Short or Long Text Custom Field", "description": "Enter a string of text.", "required": ["value"], "properties": {"value": {"type": "string", "example": "This is short or long text in a Custom Field."}}}, {"type": "object", "title": "Number Custom Field", "description": "Enter a number.", "required": ["value"], "properties": {"value": {"type": "number", "example": -28}}}, {"type": "object", "title": "Money Custom Field", "description": "You can set an amount, but not the currency of a Money Custom Field via the API. You can check the currency of a Money Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)", "required": ["value"], "properties": {"value": {"type": "number", "example": 8000}}}, {"type": "object", "title": "Task Relationship Custom Field", "description": "Enter an array of task ids in the `add` property to add them to a Task Relationship Custom Field. Enter them into the `rem` property to remove tasks from the Relationship.", "required": ["value"], "properties": {"value": {"type": "object", "properties": {"add": {"type": "array", "items": {"type": "string"}}, "rem": {"type": "array", "items": {"type": "string"}}}}}}, {"type": "object", "title": "People Custom Field", "description": "Enter an array of user ids or a Team id in the `add` property to add them to a People Custom Field. Enter them into the `rem` property to remove users from a People Custom Field. You can get a list of people in the Workspace using [Get Authorized Teams (Workspaces).](ref:getauthorizedteams)", "required": ["value"], "properties": {"value": {"type": "object", "properties": {"add": {"type": "array", "items": {"type": "number"}}, "rem": {"type": "array", "items": {"type": "number"}}}}}}, {"type": "object", "title": "Emoji (Rating) Custom Field", "description": "Enter an integer that is greater than or equal to zero and where the `count` property is greater than or equal to the `value`. You can find the `count` property for each Emoji (Rating) Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)", "required": ["value"], "properties": {"value": {"type": "integer", "format": "int32", "example": 4}}}, {"type": "object", "title": "Manual Progress Custom Field", "description": "Enter a number between the `start` and `end` values of each Manual Progress Custom Field. For example, for a field with `start: 10` and `end: 30`, sending `current: 20` will be displayed as 50% complete in ClickUp. You can find the `start` and `end` values for each Manual Progress Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)", "required": ["value"], "properties": {"value": {"type": "object", "required": ["current"], "properties": {"current": {"type": "number", "example": 20}}}}}, {"type": "object", "title": "Label Custom Field", "description": "Enter an array of the universal unique identifiers (UUIDs) of the labels you want to apply. You can find the UUIDs available for each Label Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)", "required": ["value"], "properties": {"value": {"type": "array", "items": {"type": "string", "example": ["uuid1234", "uuid9876"]}}}}, {"type": "object", "title": "Location Custom Field", "description": "Include the latitude, longitude, and formatted address as defined in the [Google Maps Geocoding API.](https://developers.google.com/maps/documentation/geocoding/overview)", "required": ["value"], "properties": {"value": {"type": "object", "properties": {"location": {"type": "object", "properties": {"lat": {"type": "number"}, "lng": {"type": "number"}}}, "formatted_address": {"type": "string"}}}}}, {"type": "object", "title": "Button Custom Field", "description": "Set a button Custom Field to `true` to "click" it. This will trigger the button\'s action as if it was clicked in the UI.", "required": ["value"], "properties": {"value": {"type": "boolean", "example": true}}}]}',
    "CREATEFOLDERFROMTEMPLATE": '{"type": "object", "required": ["name"], "properties": {"name": {"type": "string", "description": "Name of the new Folder"}, "options": {"type": "object", "description": "Options for creating the Folder", "properties": {"return_immediately": {"type": "boolean", "description": "Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\n", "default": true}, "content": {"type": "string", "description": "List description"}, "time_estimate": {"type": "boolean", "description": "Include time (hours, minutes and seconds)"}, "automation": {"type": "boolean", "description": "Import automation options"}, "include_views": {"type": "boolean", "description": "Import views"}, "old_due_date": {"type": "boolean", "description": "Import tasks due dates"}, "old_start_date": {"type": "boolean", "description": "Import tasks start dates"}, "old_followers": {"type": "boolean", "description": "Import tasks watchers"}, "comment_attachments": {"type": "boolean", "description": "Import tasks comment attachments"}, "recur_settings": {"type": "boolean", "description": "Import tasks recurring settings"}, "old_tags": {"type": "boolean", "description": "Import tasks tags"}, "old_statuses": {"type": "boolean", "description": "Import tasks status settings"}, "subtasks": {"type": "boolean", "description": "Import tasks subtasks"}, "custom_type": {"type": "boolean", "description": "Import tasks types"}, "old_assignees": {"type": "boolean", "description": "Import tasks assignees"}, "attachments": {"type": "boolean", "description": "Import tasks attachments"}, "comment": {"type": "boolean", "description": "Import tasks comments"}, "old_status": {"type": "boolean", "description": "Import tasks current statuses"}, "external_dependencies": {"type": "boolean", "description": "Import tasks external dependencies"}, "internal_dependencies": {"type": "boolean", "description": "Import tasks internal dependencies"}, "priority": {"type": "boolean", "description": "Import tasks priority"}, "custom_fields": {"type": "boolean", "description": "Import tasks Custom Fields"}, "old_checklists": {"type": "boolean", "description": "Import tasks checklists"}, "relationships": {"type": "boolean", "description": "Import tasks relationships"}, "old_subtask_assignees": {"type": "boolean", "description": "Import tasks subtasks and assignees combination"}, "start_date": {"type": "string", "format": "date-time", "description": "Project start date for remapping dates"}, "due_date": {"type": "string", "format": "date-time", "description": "Project due date for remapping dates"}, "remap_start_date": {"type": "boolean", "description": "Remap start dates"}, "skip_weekends": {"type": "boolean", "description": "Skip weekends when remapping dates"}, "archived": {"type": "integer", "enum": [1, 2, null], "description": "Include archived tasks (1 or 2 or null)"}}}}}',
    "CREATESPACEINWORKSPACE": '{"title": "CreateSpacerequest", "required": ["name", "multiple_assignees", "features"], "type": "object", "properties": {"name": {"type": "string"}, "multiple_assignees": {"type": "boolean"}, "features": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D/put/requestBody/content/application~1json/schema/properties/features", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1space~1%7Bspace_id%7D/put/requestBody/content/application~1json/schema/properties/features"}}, "examples": [{"name": "New Space Name", "multiple_assignees": true, "features": {"due_dates": {"enabled": true, "start_date": false, "remap_due_dates": true, "remap_closed_due_date": false}, "time_tracking": {"enabled": false}, "tags": {"enabled": true}, "time_estimates": {"enabled": true}, "checklists": {"enabled": true}, "custom_fields": {"enabled": true}, "remap_dependencies": {"enabled": true}, "dependency_warning": {"enabled": true}, "portfolios": {"enabled": true}}}]}',
    "UPDATECLICKUPSPACE": '{"title": "UpdateSpacerequest", "required": ["name", "color", "private", "admin_can_manage", "multiple_assignees", "features"], "type": "object", "properties": {"name": {"type": "string"}, "color": {"type": "string"}, "private": {"type": "boolean"}, "admin_can_manage": {"description": "***Note:** Allowing or restricting admins from managing private Spaces using `"admin_can_manage"` is an [Enterprise Plan](https://clickup.com/pricing) feature.*", "type": "boolean"}, "multiple_assignees": {"type": "boolean"}, "features": {"title": "Features", "required": ["due_dates", "time_tracking", "tags", "time_estimates", "checklists", "custom_fields", "remap_dependencies", "dependency_warning", "portfolios"], "type": "object", "properties": {"due_dates": {"title": "DueDates", "required": ["enabled", "start_date", "remap_due_dates", "remap_closed_due_date"], "type": "object", "properties": {"enabled": {"type": "boolean"}, "start_date": {"type": "boolean"}, "remap_due_dates": {"type": "boolean"}, "remap_closed_due_date": {"type": "boolean"}}, "examples": [{"enabled": true, "start_date": false, "remap_due_dates": true, "remap_closed_due_date": false}]}, "time_tracking": {"title": "TimeTracking", "required": ["enabled"], "type": "object", "properties": {"enabled": {"type": "boolean"}}, "examples": [{"enabled": false}]}, "tags": {"title": "Tags", "required": ["enabled"], "type": "object", "properties": {"enabled": {"type": "boolean"}}, "examples": [{"enabled": true}]}, "time_estimates": {"title": "TimeEstimates", "required": ["enabled"], "type": "object", "properties": {"enabled": {"type": "boolean"}}, "examples": [{"enabled": true}]}, "checklists": {"title": "Checklists", "required": ["enabled"], "type": "object", "properties": {"enabled": {"type": "boolean"}}, "examples": [{"enabled": true}]}, "custom_fields": {"title": "CustomFields", "required": ["enabled"], "type": "object", "properties": {"enabled": {"type": "boolean"}}, "examples": [{"enabled": true}]}, "remap_dependencies": {"title": "RemapDependencies", "required": ["enabled"], "type": "object", "properties": {"enabled": {"type": "boolean"}}, "examples": [{"enabled": true}]}, "dependency_warning": {"title": "DependencyWarning", "required": ["enabled"], "type": "object", "properties": {"enabled": {"type": "boolean"}}, "examples": [{"enabled": true}]}, "portfolios": {"title": "Portfolios", "required": ["enabled"], "type": "object", "properties": {"enabled": {"type": "boolean"}}, "examples": [{"enabled": true}]}}, "examples": [{"due_dates": {"enabled": true, "start_date": false, "remap_due_dates": true, "remap_closed_due_date": false}, "time_tracking": {"enabled": false}, "tags": {"enabled": true}, "time_estimates": {"enabled": true}, "checklists": {"enabled": true}, "custom_fields": {"enabled": true}, "remap_dependencies": {"enabled": true}, "dependency_warning": {"enabled": true}, "portfolios": {"enabled": true}}]}}, "examples": [{"name": "Updated Space Name", "color": "#7B68EE", "private": false, "admin_can_manage": false, "multiple_assignees": false, "features": {"due_dates": {"enabled": false, "start_date": false, "remap_due_dates": false, "remap_closed_due_date": false}, "time_tracking": {"enabled": false}, "tags": {"enabled": false}, "time_estimates": {"enabled": false}, "checklists": {"enabled": true}, "custom_fields": {"enabled": true}, "remap_dependencies": {"enabled": false}, "dependency_warning": {"enabled": false}, "portfolios": {"enabled": false}}}]}',
    "DELETESPACETAG": '{"title": "DeleteSpaceTagrequest", "required": ["tag"], "type": "object", "properties": {"tag": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D~1tag/post/requestBody/content/application~1json/schema/properties/tag", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1space~1%7Bspace_id%7D~1tag/post/requestBody/content/application~1json/schema/properties/tag"}}, "examples": [{"tag": {"name": "Tag name", "tag_fg": "#000000", "tag_bg": "#000000"}}]}',
    "CREATENEWCLICKUPTASK": '{"title": "CreateTaskrequest", "required": ["name"], "type": "object", "properties": {"name": {"type": "string"}, "description": {"type": "string"}, "assignees": {"type": "array", "items": {"type": "integer", "contentEncoding": "int32"}, "description": ""}, "archived": {"type": "boolean"}, "group_assignees": {"type": "array", "items": {"type": "string"}, "description": "Assign multiple user groups to the task."}, "tags": {"type": "array", "items": {"type": "string"}, "description": ""}, "status": {"type": "string"}, "priority": {"type": ["integer", "null"], "contentEncoding": "int32"}, "due_date": {"type": "integer", "contentEncoding": "int64"}, "due_date_time": {"type": "boolean"}, "time_estimate": {"type": "integer", "contentEncoding": "int32"}, "start_date": {"type": "integer", "contentEncoding": "int64"}, "start_date_time": {"type": "boolean"}, "points": {"type": "number", "description": "Add Sprint Points to the task."}, "notify_all": {"type": "boolean", "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment."}, "parent": {"description": "You can create a subtask by including an existing task ID.\\\n \\\nThe `parent` task ID you include can be a subtask, but must be in the same List specified in the path parameter.", "type": ["string", "null"]}, "markdown_content": {"type": "string", "description": "Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`."}, "links_to": {"description": "Include a task ID to create a linked dependency with your new task.", "type": ["string", "null"]}, "check_required_custom_fields": {"description": "When creating a task via API any required Custom Fields are ignored by default (`false`).\\\n \\\nYou can enforce required Custom Fields by including `check_required_custom_fields: true`.", "type": "boolean"}, "custom_fields": {"type": "array", "items": {"title": "SetCustomFieldValueOnCreateTaskrequest", "anyOf": [{"type": "object", "title": "URL Custom Field", "description": "The `value` must be a string with a valid URL.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["string", "null"], "example": "https://clickup.com/api"}}}, {"type": "object", "title": "Dropdown Custom Field", "description": "Enter the universal unique identifier (UUID) of the dropdown menu option you want to set. You can find the UUIDs available for each Dropdown Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) New Dropdown Custom Field options cannot be created from this request.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["string", "null"], "example": "uuid1234"}}}, {"type": "object", "title": "Email Custom Field", "description": "The `value` must be a string with a valid email address.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["string", "null"], "example": "user@company.com"}}}, {"type": "object", "title": "Phone Custom Field", "description": "The `value` must be a string with a valid country code.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["string", "null"], "example": "+1 123 456 7890"}}}, {"type": "object", "title": "Date Custom Field", "description": "The `value` must be Unix time in milliseconds. To display the time in a Date Custom Field in ClickUp, you must include `time: true` in the `value_options` property.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["integer", "null"], "format": "int32", "example": 1667367645000}, "value_options": {"type": "object", "properties": {"time": {"type": "boolean", "example": true}}}}}, {"type": "object", "title": "Short or Long Text Custom Field", "description": "Enter a string of text.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["string", "null"], "example": "This is short or long text in a Custom Field."}}}, {"type": "object", "title": "Number Custom Field", "description": "Enter a number.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["number", "null"], "example": -28}}}, {"type": "object", "title": "Money Custom Field", "description": "You can set an amount, but not the currency of a Money Custom Field via the API. You can check the currency of a Money Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["number", "null"], "example": 8000}}}, {"type": "object", "title": "Task Relationship Custom Field", "description": "Enter an array of task ids in the `add` property to add them to a Task Relationship Custom Field. Enter them into the `rem` property to remove tasks from the Relationship. Task Relationship Custom Fields are nullable: `"value": null`.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": "object", "properties": {"add": {"type": "array", "items": {"type": "string"}}, "rem": {"type": "array", "items": {"type": "string"}}}}}}, {"type": "object", "title": "People Custom Field", "description": "Enter an array of user ids or a Team id in the `add` property to add them to a People Custom Field. Enter them into the `rem` property to remove users from a People Custom Field. You can get a list of people in the Workspace using [Get Authorized Teams (Workspaces).](ref:getauthorizedteams) People Custom Fields are nullable: `"value": null`.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": "object", "properties": {"add": {"type": "array", "items": {"type": "number"}}, "rem": {"type": "array", "items": {"type": "number"}}}}}}, {"type": "object", "title": "Emoji (Rating) Custom Field", "description": "Enter an integer that is greater than or equal to zero and where the `count` property is greater than or equal to the `value`. You can find the `count` property for each Emoji (Rating) Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["integer", "null"], "format": "int32", "example": 4}}}, {"type": "object", "title": "Manual Progress Custom Field", "description": "Enter a number between the `start` and `end` values of each Manual Progress Custom Field. For example, for a field with `start: 10` and `end: 30`, sending `current: 20` will be displayed as 50% complete in ClickUp. You can find the `start` and `end` values for each Manual Progress Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) Manual Progress Custom Fields are nullable: `"value": null`.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": "object", "required": ["current"], "properties": {"current": {"type": "number", "example": 20}}}}}, {"type": "object", "title": "Label Custom Field", "description": "Enter an array of the universal unique identifiers (UUIDs) of the labels you want to apply. You can find the UUIDs available for each Label Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) Label Custom Fields are nullable: `"value": null`.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": "array", "items": {"type": "string", "example": ["uuid1234", "uuid9876"]}}}}, {"type": "object", "title": "Location Custom Field", "description": "Include the latitude, longitude, and formatted address as defined in the [Google Maps Geocoding API.](https://developers.google.com/maps/documentation/geocoding/overview)", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": "object", "properties": {"location": {"type": "object", "properties": {"lat": {"type": "number"}, "lng": {"type": "number"}}}, "formatted_address": {"type": "string"}}}}}, {"type": "object", "title": "Button Custom Field", "description": "Set a button Custom Field to `true` to "click" it. This will trigger the button\'s action as if it was clicked in the UI.", "required": ["id", "value"], "properties": {"id": {"type": "string"}, "value": {"type": ["boolean", "null"], "example": true}}}]}, "description": "You can include one or more Custom Fields to set them when creating a new task.\\\n \\\nCustom Fields that use object and array type values are nullable by sending `"value": null`."}, "custom_item_id": {"type": "number", "description": "The custom task type ID for this task. A value of `null` (default) creates a standard task type "Task".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."}}, "examples": [{"name": "New Task Name", "description": "New Task Description", "assignees": [183], "archived": false, "group_assignees": ["dd01f92f-48ca-446d-88a1-0beb0e8f5f14"], "tags": ["tag name 1"], "status": "Open", "priority": 3, "due_date": 1508369194377, "due_date_time": false, "time_estimate": 8640000, "start_date": 1567780450202, "start_date_time": false, "points": 3, "notify_all": true, "parent": null, "links_to": null, "check_required_custom_fields": true, "custom_fields": [{"id": "0a52c486-5f05-403b-b4fd-c512ff05131c", "value": 23}, {"id": "03efda77-c7a0-42d3-8afd-fd546353c2f5", "value": "Text field input"}]}]}',
    "UPDATETASKINCLICKUP": '{"title": "UpdateTaskrequest", "type": "object", "properties": {"custom_item_id": {"type": ["number", "null"], "description": "The custom task type ID for this task. A value of `null` (default) sets the task type to type "Task".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."}, "name": {"type": "string"}, "description": {"description": "To clear the task description, include `Description` with `" "`.", "type": "string"}, "markdown_content": {"type": "string", "description": "Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`."}, "status": {"type": "string"}, "priority": {"type": "integer", "contentEncoding": "int32"}, "due_date": {"type": "integer", "contentEncoding": "int64"}, "due_date_time": {"type": "boolean"}, "parent": {"description": "You can move a subtask to another parent task by including `"parent"` with a valid `task id`.\\\n \\\nYou cannot convert a subtask to a task by setting `"parent"` to `null`.", "type": "string"}, "time_estimate": {"type": "integer", "contentEncoding": "int32"}, "start_date": {"type": "integer", "contentEncoding": "int64"}, "start_date_time": {"type": "boolean"}, "points": {"type": "number", "description": "Update the task\'s Sprint Points."}, "assignees": {"title": "Assignees", "required": ["add", "rem"], "type": "object", "properties": {"add": {"type": "array", "items": {"type": "integer", "contentEncoding": "int32"}, "description": ""}, "rem": {"type": "array", "items": {"type": "integer", "contentEncoding": "int32"}, "description": ""}}, "examples": [{"add": [182], "rem": [183]}]}, "group_assignees": {"type": "object", "properties": {"add": {"type": "array", "items": {"type": "integer", "contentEncoding": "int32"}, "description": ""}, "rem": {"type": "array", "items": {"type": "integer", "contentEncoding": "int32"}, "description": ""}}}, "watchers": {"title": "Watchers", "required": ["add", "rem"], "type": "object", "properties": {"add": {"type": "array", "items": {"type": "integer", "contentEncoding": "int32"}, "description": ""}, "rem": {"type": "array", "items": {"type": "integer", "contentEncoding": "int32"}, "description": ""}}, "examples": [{"add": [182, 121], "rem": [183, 122]}]}, "archived": {"type": "boolean"}}, "examples": [{"name": "Updated Task Name", "description": "Updated Task Content", "status": "in progress", "priority": 1, "due_date": 1508369194377, "due_date_time": false, "parent": "abc1234", "time_estimate": 8640000, "start_date": 1567780450202, "start_date_time": false, "points": 3, "assignees": {"add": [182], "rem": [183]}, "group_assignees": {"add": ["dd01f92f-48ca-446d-88a1-0beb0e8f5f14"], "rem": ["dd01f92f-48ca-446d-88a1-0beb0e8f5f13"]}, "watchers": {"add": [182], "rem": [183]}, "archived": false}]}',
    "CREATELISTFROMFOLDERTEMPLATE": '{"type": "object", "required": ["name"], "properties": {"name": {"type": "string", "description": "Name of the new List"}, "options": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D~1list_template~1%7Btemplate_id%7D/post/requestBody/content/application~1json/schema/properties/options", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1space~1%7Bspace_id%7D~1list_template~1%7Btemplate_id%7D/post/requestBody/content/application~1json/schema/properties/options"}}}',
    "CREATELISTFROMTEMPLATE": '{"type": "object", "required": ["name"], "properties": {"name": {"type": "string", "description": "Name of the new List"}, "options": {"type": "object", "description": "Options for creating the List", "properties": {"return_immediately": {"type": "boolean", "description": "Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\n", "default": true}, "content": {"type": "string", "description": "List description"}, "time_estimate": {"type": "number", "description": "Include time (hours, minutes and seconds)"}, "automation": {"type": "boolean", "description": "Import automation settings"}, "include_views": {"type": "boolean", "description": "Import views"}, "old_due_date": {"type": "boolean", "description": "Import tasks\' due dates"}, "old_start_date": {"type": "boolean", "description": "Import tasks\' start dates"}, "old_followers": {"type": "boolean", "description": "Import tasks\' watchers"}, "comment_attachments": {"type": "boolean", "description": "Import tasks\' comment attachments"}, "recur_settings": {"type": "boolean", "description": "Import tasks\' recurring settings"}, "old_tags": {"type": "boolean", "description": "Import tasks\' tags"}, "old_statuses": {"type": "boolean", "description": "Import tasks\' status settings"}, "subtasks": {"type": "boolean", "description": "Import tasks\' subtasks"}, "custom_type": {"type": "boolean", "description": "Import tasks\' task types"}, "old_assignees": {"type": "boolean", "description": "Import tasks\' assignees"}, "attachments": {"type": "boolean", "description": "Import tasks\' attachments"}, "comment": {"type": "boolean", "description": "Import tasks\' comments"}, "old_status": {"type": "boolean", "description": "Import tasks\' current statuses"}, "external_dependencies": {"type": "boolean", "description": "Import tasks\' external dependencies"}, "internal_dependencies": {"type": "boolean", "description": "Import tasks\' internal dependencies"}, "priority": {"type": "boolean", "description": "Import tasks\' priorities"}, "custom_fields": {"type": "boolean", "description": "Import tasks\' Custom Fields"}, "old_checklists": {"type": "boolean", "description": "Import tasks\' checklists"}, "relationships": {"type": "boolean", "description": "Import tasks\' relationships"}, "old_subtask_assignees": {"type": "boolean", "description": "Import tasks\' subtask assignees"}, "start_date": {"type": "string", "format": "date-time", "description": "Project start date for remapping dates"}, "due_date": {"type": "string", "format": "date-time", "description": "Project due date for remapping dates"}, "remap_start_date": {"type": "boolean", "description": "Remap start dates"}, "skip_weekends": {"type": "boolean", "description": "Skip weekends when remapping dates"}, "archived": {"type": "integer", "enum": [1, 2, null], "description": "Include archived tasks"}}}}}',
    "CREATETIMEENTRY": '{"title": "Createatimeentryrequest", "required": ["start", "duration"], "type": "object", "properties": {"description": {"type": "string"}, "tags": {"description": "Users on the Business Plan and above can include a time tracking label.", "type": "array", "items": {"title": "Tags6", "required": ["name", "tag_fg", "tag_bg"], "type": "object", "properties": {"name": {"type": "string"}, "tag_fg": {"type": "string"}, "tag_bg": {"type": "string"}}, "examples": [{"name": "Tag name", "tag_fg": "#000000", "tag_bg": "#000000"}]}}, "start": {"type": "integer", "contentEncoding": "int64"}, "stop": {"type": "integer", "contentEncoding": "int64", "description": "The `duration` parameter can be used instead of the `stop` parameter. "}, "end": {"type": "integer", "contentEncoding": "int64"}, "billable": {"type": "boolean"}, "duration": {"description": "When there are values for both `start` and `end`, `duration` is ignored. The `stop` parameter can be used instead of the `duration` parameter.", "type": "integer", "contentEncoding": "int32"}, "assignee": {"description": "Workspace owners and admins can include any user id. Workspace members can only include their own user id.", "type": "integer", "contentEncoding": "int32"}, "tid": {"type": "string"}}, "examples": [{"description": "from api", "tags": [{"name": "name of tag", "tag_bg": "#BF55EC", "tag_fg": "#FFFFFF"}], "start": 1595282645000, "end": 1595282660000, "billable": true, "duration": 50000, "assignee": 1, "tid": "task_id"}]}',
    "UPDATETIMEENTRY": '{"title": "UpdateatimeEntryrequest", "required": ["tags", "tid"], "type": "object", "properties": {"description": {"type": "string"}, "tags": {"description": "Users on the Business Plan and above can include a time tracking label.", "type": "array", "items": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items"}}, "tag_action": {"type": "string"}, "start": {"type": "integer", "contentEncoding": "int64", "description": "When providing `start`, you must also provide `end`."}, "end": {"type": "integer", "contentEncoding": "int64", "description": "When providing `end`, you must also provide `start`."}, "tid": {"type": "string"}, "billable": {"type": "boolean"}, "duration": {"type": "integer", "contentEncoding": "int32"}}, "examples": [{"description": "", "tags": [{"name": "name of tag", "tag_bg": "#BF55EC", "tag_fg": "#FFFFFF"}], "tag_action": "add", "start": 1595289395842, "end": 1595289495842, "tid": "task_id", "billable": true, "duration": 100000}]}',
    "REMOVETAGSFROMTIMEENTRIES": '{"title": "Removetagsfromtimeentriesrequest", "required": ["time_entry_ids", "tags"], "type": "object", "properties": {"time_entry_ids": {"type": "array", "items": {"type": "string"}, "description": ""}, "tags": {"type": "array", "items": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries~1start/post/requestBody/content/application~1json/schema/properties/tags/items", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries~1start/post/requestBody/content/application~1json/schema/properties/tags/items"}, "description": ""}}, "examples": [{"time_entry_ids": ["timer_id"], "tags": [{"name": "name of tag"}]}]}',
    "ADDTAGTOTIMEENTRY": '{"title": "Addtagsfromtimeentriesrequest", "required": ["time_entry_ids", "tags"], "type": "object", "properties": {"time_entry_ids": {"type": "array", "items": {"type": "string"}, "description": ""}, "tags": {"type": "array", "items": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items"}, "description": ""}}, "examples": [{"time_entry_ids": ["timer_id"], "tags": [{"name": "name of tag", "tag_bg": "#BF55EC", "tag_fg": "#FFFFFF"}]}]}',
    "STARTTIMERCLICKUP": '{"title": "StartatimeEntryrequest", "type": "object", "properties": {"description": {"type": "string"}, "tags": {"description": "Users on the Business Plan and above can include a time tracking label.", "type": "array", "items": {"title": "Tags10", "required": ["name"], "type": "object", "properties": {"name": {"type": "string"}}, "examples": [{"name": "name of tag"}]}}, "tid": {"type": "string"}, "billable": {"type": "boolean"}}, "examples": [{"description": "from api", "tags": [{"name": "tag1"}], "tid": "task_id", "billable": false}]}',
    "CREATETEAMVIEW": '{"title": "CreateTeamViewrequest", "required": ["name", "type", "grouping", "divide", "sorting", "filters", "columns", "team_sidebar", "settings"], "type": "object", "properties": {"name": {"type": "string"}, "type": {"type": "string", "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."}, "grouping": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"}, "divide": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"}, "sorting": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"}, "filters": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"}, "columns": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"}, "team_sidebar": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"}, "settings": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"}}, "examples": [{"name": "New Team View Name", "type": "list", "grouping": {"field": "status", "dir": 1, "collapsed": [], "ignore": false}, "divide": {"field": null, "dir": null, "collapsed": []}, "sorting": {"fields": []}, "filters": {"op": "AND", "fields": [], "search": "", "show_closed": false}, "columns": {"fields": []}, "team_sidebar": {"assignees": [], "assigned_comments": false, "unassigned_tasks": false}, "settings": {"show_task_locations": false, "show_subtasks": 3, "show_subtask_parent_names": false, "show_closed_subtasks": false, "show_assignees": true, "show_images": true, "collapse_empty_columns": null, "me_comments": true, "me_subtasks": true, "me_checklists": true}}]}',
    "ADDSPACEVIEW": '{"title": "CreateSpaceViewrequest", "required": ["name", "type", "grouping", "divide", "sorting", "filters", "columns", "team_sidebar", "settings"], "type": "object", "properties": {"name": {"type": "string"}, "type": {"type": "string", "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."}, "grouping": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"}, "divide": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"}, "sorting": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"}, "filters": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"}, "columns": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"}, "team_sidebar": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"}, "settings": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"}}, "examples": [{"name": "New Space View Name", "type": "list", "grouping": {"field": "status", "dir": 1, "collapsed": [], "ignore": false}, "divide": {"field": null, "dir": null, "collapsed": []}, "sorting": {"fields": []}, "filters": {"op": "AND", "fields": [], "search": "", "show_closed": false}, "columns": {"fields": []}, "team_sidebar": {"assignees": [], "assigned_comments": false, "unassigned_tasks": false}, "settings": {"show_task_locations": false, "show_subtasks": 3, "show_subtask_parent_names": false, "show_closed_subtasks": false, "show_assignees": true, "show_images": true, "collapse_empty_columns": null, "me_comments": true, "me_subtasks": true, "me_checklists": true}}]}',
    "ADDVIEWTOFOLDER": '{"title": "CreateFolderViewrequest", "required": ["name", "type", "grouping", "divide", "sorting", "filters", "columns", "team_sidebar", "settings"], "type": "object", "properties": {"name": {"type": "string"}, "type": {"type": "string", "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."}, "grouping": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"}, "divide": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"}, "sorting": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"}, "filters": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"}, "columns": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"}, "team_sidebar": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"}, "settings": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"}}, "examples": [{"name": "New Folder View Name", "type": "list", "grouping": {"field": "status", "dir": 1, "collapsed": [], "ignore": false}, "divide": {"field": null, "dir": null, "collapsed": []}, "sorting": {"fields": []}, "filters": {"op": "AND", "fields": [], "search": "", "show_closed": false}, "columns": {"fields": []}, "team_sidebar": {"assignees": [], "assigned_comments": false, "unassigned_tasks": false}, "settings": {"show_task_locations": false, "show_subtasks": 3, "show_subtask_parent_names": false, "show_closed_subtasks": false, "show_assignees": true, "show_images": true, "collapse_empty_columns": null, "me_comments": true, "me_subtasks": true, "me_checklists": true}}]}',
    "ADDVIEWTOCLICKUPLIST": '{"title": "CreateListViewrequest", "required": ["name", "type", "grouping", "divide", "sorting", "filters", "columns", "team_sidebar", "settings"], "type": "object", "properties": {"name": {"type": "string"}, "type": {"type": "string", "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."}, "grouping": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"}, "divide": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"}, "sorting": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"}, "filters": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"}, "columns": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"}, "team_sidebar": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"}, "settings": {"type": "object", "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings", "additionalProperties": true, "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"}}, "examples": [{"name": "New List View Name", "type": "list", "grouping": {"field": "status", "dir": 1, "collapsed": [], "ignore": false}, "divide": {"field": null, "dir": null, "collapsed": []}, "sorting": {"fields": []}, "filters": {"op": "AND", "fields": [], "search": "", "show_closed": false}, "columns": {"fields": []}, "team_sidebar": {"assignees": [], "assigned_comments": false, "unassigned_tasks": false}, "settings": {"show_task_locations": false, "show_subtasks": 3, "show_subtask_parent_names": false, "show_closed_subtasks": false, "show_assignees": true, "show_images": true, "collapse_empty_columns": null, "me_comments": true, "me_subtasks": true, "me_checklists": true}}]}',
    "UPDATEVIEWSETTINGS": '{"title": "UpdateViewrequest", "required": ["name", "type", "parent", "grouping", "divide", "sorting", "filters", "columns", "team_sidebar", "settings"], "type": "object", "properties": {"name": {"type": "string"}, "type": {"type": "string"}, "parent": {"title": "Parent", "description": "The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.", "required": ["id", "type"], "type": "object", "properties": {"id": {"type": "string", "description": "The id of the Workspace, Space, Folder, or List where the view is located."}, "type": {"type": "integer", "description": "The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`", "contentEncoding": "int32"}}, "examples": [{"id": "512", "type": 7}]}, "grouping": {"title": "Grouping", "required": ["field", "dir", "collapsed", "ignore"], "type": "object", "properties": {"field": {"type": "string", "description": "Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."}, "dir": {"description": "Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.", "type": "integer", "contentEncoding": "int32"}, "collapsed": {"type": "array", "items": {"type": "string"}, "description": ""}, "ignore": {"type": "boolean"}}, "examples": [{"field": "status", "dir": 1, "collapsed": [], "ignore": false}]}, "divide": {"title": "Divide", "required": ["collapsed"], "type": "object", "properties": {"field": {"type": ["null"]}, "dir": {"type": ["null"]}, "collapsed": {"type": ["boolean"]}}, "examples": [{"field": null, "dir": null, "collapsed": []}]}, "sorting": {"title": "Sorting", "required": ["fields"], "type": "object", "properties": {"fields": {"type": "array", "items": {"type": "string"}, "description": "Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."}}, "examples": [{"fields": [{"field": "cf_624a423a-c1d1-4467-99e2-63e225658cb2", "dir": -1, "idx": 0}]}]}, "filters": {"title": "Filters", "required": ["op", "fields", "search", "show_closed"], "type": "object", "properties": {"op": {"type": "string", "description": "The available operator (`op``) values are `AND`` and `OR``."}, "fields": {"type": "array", "items": {"type": "string"}, "description": "View the list of [fields available](doc:filter-views) to filter by."}, "search": {"type": "string"}, "show_closed": {"type": "boolean"}}, "examples": [{"op": "AND", "fields": [], "search": "", "show_closed": false}]}, "columns": {"title": "Columns", "description": "Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.", "required": ["fields"], "type": "object", "properties": {"fields": {"description": "Custom Fields require the `cf_` prefix and must be formatted as a JSON object. Example: `cf_eb1234567890-c676-4c10-9012-345678901234`", "type": "array", "items": {"type": "string"}}}, "examples": [{"fields": []}]}, "team_sidebar": {"title": "TeamSidebar", "required": ["assignees", "assigned_comments", "unassigned_tasks"], "type": "object", "properties": {"assignees": {"type": "array", "items": {"type": "string"}, "description": ""}, "assigned_comments": {"type": "boolean"}, "unassigned_tasks": {"type": "boolean"}}, "examples": [{"assignees": [], "assigned_comments": false, "unassigned_tasks": false}]}, "settings": {"title": "Settings", "required": ["show_task_locations", "show_subtasks", "show_subtask_parent_names", "show_closed_subtasks", "show_assignees", "show_images", "collapse_empty_columns", "me_comments", "me_subtasks", "me_checklists"], "type": "object", "properties": {"show_task_locations": {"type": "boolean"}, "show_subtasks": {"description": "Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.", "type": "integer", "contentEncoding": "int32"}, "show_subtask_parent_names": {"type": "boolean"}, "show_closed_subtasks": {"type": "boolean"}, "show_assignees": {"type": "boolean"}, "show_images": {"type": "boolean"}, "collapse_empty_columns": {"type": ["string", "null"]}, "me_comments": {"type": "boolean"}, "me_subtasks": {"type": "boolean"}, "me_checklists": {"type": "boolean"}}, "examples": [{"show_task_locations": false, "show_subtasks": 3, "show_subtask_parent_names": false, "show_closed_subtasks": false, "show_assignees": true, "show_images": true, "collapse_empty_columns": null, "me_comments": true, "me_subtasks": true, "me_checklists": true}]}}, "examples": [{"name": "New View Name", "type": "list", "parent": {"id": "512", "type": 7}, "grouping": {"field": "status", "dir": 1, "collapsed": [], "ignore": false}, "divide": {"field": null, "dir": null, "collapsed": []}, "sorting": {"fields": []}, "filters": {"op": "AND", "fields": [], "search": "", "show_closed": false}, "columns": {"fields": []}, "team_sidebar": {"assignees": [], "assigned_comments": false, "unassigned_tasks": false}, "settings": {"show_task_locations": false, "show_subtasks": 3, "show_subtask_parent_names": false, "show_closed_subtasks": false, "show_assignees": true, "show_images": true, "collapse_empty_columns": null, "me_comments": true, "me_subtasks": true, "me_checklists": true}}]}',
}
