{
  "name": "Clickup",
  "spec_source": "openapi_spec",
  "token_for_http_testing": "",
  "package_name": "clickup_api",
  "package_dir_path": "/Users/franciscojuniodelimaliberal/git/Team/arcade-mcp/toolkits/clickup_api/clickup_api",
  "project_dir_path": "/Users/franciscojuniodelimaliberal/git/Team/arcade-mcp/toolkits/clickup_api",
  "arcade_new_cmd_executed": true,
  "api_endpoint_selection_customized": false,
  "api_endpoint_for_http_testing": "",
  "authorization_type": "oauth",
  "auth_provider_id": "arcade-clickup",
  "where_to_provide_token": "header",
  "token_key_name": "Authorization",
  "token_value": "Bearer {authorization}",
  "secrets": [],
  "global_base_url": "https://api.clickup.com/api",
  "global_headers": {},
  "edit_operations": [],
  "uuid": "f25282de-7ce1-487c-886a-229332172a7a",
  "api_endpoints": [
    {
      "name": "CreateTaskAttachment",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": false,
      "should_skip": true,
      "skip_reason": "Only file-related content types available: multipart/form-data",
      "wrapper_tool": null,
      "method": "POST",
      "path": "/v2/task/{task_id}/attachment",
      "tags": [
        "Attachments"
      ],
      "summary": "Create Task Attachment",
      "description": "Upload a file to a task as an attachment. Files stored in the cloud cannot be used in this API request.\\\n \\\n***Note:** This request uses multipart/form-data as the content type.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by its custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by its custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetAccessToken",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_clickup_access_token",
        "description": {
          "tagline": "Obtain an OAuth access token for ClickUp API authentication.",
          "detailed": "Use this tool to obtain an OAuth access token for authenticating applications with the ClickUp API. This tool is not for personal API tokens and does not support the 'Try It' feature in browser-based API documentation."
        },
        "return_annotation": "Access token for authenticating with ClickUp API.",
        "arguments": [
          {
            "name": "oauth_credentials",
            "alternative_names": [
              "authentication_details",
              "oauth_parameters"
            ],
            "description": "JSON object containing 'client_id', 'client_secret', and 'code' for OAuth access.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/oauth/token",
      "tags": [
        "Authorization"
      ],
      "summary": "Get Access Token",
      "description": "These are the routes for authing the API and going through the [OAuth flow](doc:authentication).\\\n \\\nApplications utilizing a personal API token don't use this endpoint.\\\n \\\n***Note:** OAuth tokens are not supported when using the [**Try It** feature](doc:trytheapi) of our Reference docs. You can't try this endpoint from your web browser.*\n",
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "client_id": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "OAuth app client id"
                },
                "client_secret": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "OAuth app client secret"
                },
                "code": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Code given in redirect url"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "GetAccessTokenrequest",
              "properties": {
                "client_id": {
                  "type": "string",
                  "description": "OAuth app client id"
                },
                "client_secret": {
                  "type": "string",
                  "description": "OAuth app client secret"
                },
                "code": {
                  "type": "string",
                  "description": "Code given in redirect url"
                }
              },
              "required": [
                "client_id",
                "client_secret",
                "code"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"GetAccessTokenrequest\",\n        \"required\": [\n          \"client_id\",\n          \"client_secret\",\n          \"code\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"client_id\": {\n            \"type\": \"string\",\n            \"description\": \"OAuth app client id\"\n          },\n          \"client_secret\": {\n            \"type\": \"string\",\n            \"description\": \"OAuth app client secret\"\n          },\n          \"code\": {\n            \"type\": \"string\",\n            \"description\": \"Code given in redirect url\"\n          }\n        },\n        \"examples\": [\n          {\n            \"client_id\": \"your_client_id\",\n            \"client_secret\": \"your_client_secret\",\n            \"code\": \"authorization_code\"\n          }\n        ]\n      },\n      \"example\": {\n        \"client_id\": \"your_client_id\",\n        \"client_secret\": \"your_client_secret\",\n        \"code\": \"authorization_code\"\n      }\n    },\n    \"application/x-www-form-urlencoded\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"description\": \"Schema reference broken: #/paths/~1v2~1oauth~1token/post/requestBody/content/application~1json/schema\",\n        \"additionalProperties\": true,\n        \"x-moar-broken-reference\": \"#/paths/~1v2~1oauth~1token/post/requestBody/content/application~1json/schema\"\n      },\n      \"example\": {\n        \"client_id\": \"your_client_id\",\n        \"client_secret\": \"your_client_secret\",\n        \"code\": \"authorization_code\"\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetAuthorizedUser",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_clickup_user_details",
        "description": {
          "tagline": "Get details of the authenticated ClickUp user's account.",
          "detailed": ""
        },
        "return_annotation": "Details of the authenticated ClickUp user account.",
        "arguments": []
      },
      "method": "GET",
      "path": "/v2/user",
      "tags": [
        "Authorization"
      ],
      "summary": "Get Authorized User",
      "description": "View the details of the authenticated user's ClickUp account.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetAuthorizedTeams",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_authorized_teams",
        "description": {
          "tagline": "Retrieve the workspaces for the authenticated user.",
          "detailed": "Use this tool to get a list of workspaces (teams) available to the user who is currently authenticated. It provides an overview of the user's accessible workspaces in ClickUp."
        },
        "return_annotation": "List of workspaces available to the user.",
        "arguments": []
      },
      "method": "GET",
      "path": "/v2/team",
      "tags": [
        "Workspaces"
      ],
      "summary": "Get Authorized Workspaces",
      "description": "View the Workspaces available to the authenticated user.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateChecklist",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_checklist_to_task",
        "description": {
          "tagline": "Add a new checklist to a task in ClickUp.",
          "detailed": "Use this tool to add a checklist to a specific task in ClickUp by providing the task ID."
        },
        "return_annotation": "Confirms the addition of a checklist to a task.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id_reference",
              "unique_task_identifier"
            ],
            "description": "A unique identifier for the task to which the checklist will be added. It can be a custom or default task ID.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "checklist_name",
            "alternative_names": [
              "checklist_title",
              "checklist_label"
            ],
            "description": "The name or title of the checklist to be added to the task. It should be a descriptive string identifying the purpose or contents of the checklist.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "workspace_id_for_custom_task",
            "alternative_names": [
              "team_identifier_for_custom_task",
              "workspace_id"
            ],
            "description": "Provide the Workspace ID when 'custom_task_ids' is set to true. It's necessary to reference tasks by custom IDs.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_id_reference",
              "use_custom_ids"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/task/{task_id}/checklist",
      "tags": [
        "Task Checklists"
      ],
      "summary": "Create Checklist",
      "description": "Add a new checklist to a task.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateChecklistrequest\",\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Checklist\"\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Checklist\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "EditChecklist",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "edit_checklist",
        "description": {
          "tagline": "Rename or reorder a task checklist in ClickUp.",
          "detailed": "Use this tool to rename a checklist or change its order within a task in ClickUp. It is suitable when you need to update the checklist name or adjust its position in relation to other checklists in a specific task."
        },
        "return_annotation": "Confirmation of checklist update or reordering.",
        "arguments": [
          {
            "name": "checklist_id",
            "alternative_names": [
              "checklist_uuid",
              "checklist_identifier"
            ],
            "description": "The unique identifier (UUID) of the checklist to be edited or reordered.",
            "endpoint_argument_name": "checklist_id"
          },
          {
            "name": "checklist_name",
            "alternative_names": [
              "new_checklist_name",
              "updated_checklist_name"
            ],
            "description": "The new name for the checklist. Leave empty if you do not wish to rename.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "checklist_position",
            "alternative_names": [
              "task_checklist_position",
              "checklist_order_position"
            ],
            "description": "Specify the order in which the checklist should appear on a task. Use 0 to place it at the top.",
            "endpoint_argument_name": "position"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/checklist/{checklist_id}",
      "tags": [
        "Task Checklists"
      ],
      "summary": "Edit Checklist",
      "description": "Rename a task checklist, or reorder a checklist so it appears above or below other checklists on a task. ",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "checklist_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)"
            },
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "position",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Position refers to the order of appearance of checklists on a task.\\\n \\\nTo set a checklist to appear at the top of the checklists section of a task, use `\"position\": 0`."
            },
            "description": "Position refers to the order of appearance of checklists on a task.\\\n \\\nTo set a checklist to appear at the top of the checklists section of a task, use `\"position\": 0`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer",
              "description": "Position refers to the order of appearance of checklists on a task.\\\n \\\nTo set a checklist to appear at the top of the checklists section of a task, use `\"position\": 0`."
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"EditChecklistrequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"position\": {\n            \"description\": \"Position refers to the order of appearance of checklists on a task.\\\\\\n \\\\\\nTo set a checklist to appear at the top of the checklists section of a task, use `\\\"position\\\": 0`.\",\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Updated Checklist\",\n            \"position\": 1\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Updated Checklist\",\n        \"position\": 1\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteChecklist",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_checklist",
        "description": {
          "tagline": "Deletes a checklist from a task in ClickUp.",
          "detailed": "Use this tool to delete a specific checklist from a task in ClickUp by providing the checklist ID. Ideal for when you need to manage or reorganize task checklists."
        },
        "return_annotation": "Confirmation of checklist deletion.",
        "arguments": [
          {
            "name": "checklist_id",
            "alternative_names": [
              "checklist_uuid",
              "checklist_unique_id"
            ],
            "description": "The unique identifier for the checklist to be deleted. It should be in UUID format.",
            "endpoint_argument_name": "checklist_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/checklist/{checklist_id}",
      "tags": [
        "Task Checklists"
      ],
      "summary": "Delete Checklist",
      "description": "Delete a checklist from a task.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "checklist_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)"
            },
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateChecklistItem",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_checklist_item_clickup",
        "description": {
          "tagline": "Add an item to a checklist in ClickUp tasks.",
          "detailed": "Use this tool to add a new line item to an existing checklist within a task in ClickUp. This can be useful for task management and ensuring all steps are documented within a checklist."
        },
        "return_annotation": "Confirmation of the checklist item being added.",
        "arguments": [
          {
            "name": "checklist_identifier",
            "alternative_names": [
              "checklist_uuid",
              "checklist_key"
            ],
            "description": "A unique identifier for the checklist. Must be in UUID format.",
            "endpoint_argument_name": "checklist_id"
          },
          {
            "name": "checklist_item_name",
            "alternative_names": [
              "item_name",
              "task_item_name"
            ],
            "description": "The name of the checklist item to be added. This should clearly describe the task or item to be completed.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "assignee_user_id",
            "alternative_names": [
              "assigned_user_id",
              "task_assignee_id"
            ],
            "description": "The unique ID of the user assigned to the checklist item. This should be an integer value representing the user's ID.",
            "endpoint_argument_name": "assignee"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/checklist/{checklist_id}/checklist_item",
      "tags": [
        "Task Checklists"
      ],
      "summary": "Create Checklist Item",
      "description": "Add a line item to a task checklist.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "checklist_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)"
            },
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateChecklistItemrequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"assignee\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Checklist Item\",\n            \"assignee\": 183\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Checklist Item\",\n        \"assignee\": 183\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "EditChecklistItem",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_checklist_item",
        "description": {
          "tagline": "Modify or update a specific task checklist item.",
          "detailed": "This tool updates an individual line item in a task checklist. It can rename the item, set the assignee, mark it as resolved, or nest it under another item."
        },
        "return_annotation": "Details of the updated checklist item.",
        "arguments": [
          {
            "name": "checklist_unique_identifier",
            "alternative_names": [
              "checklist_uuid",
              "checklist_id_value"
            ],
            "description": "The UUID of the checklist to update. Example: b8a8-48d8-a0c6-b4200788a683.",
            "endpoint_argument_name": "checklist_id"
          },
          {
            "name": "checklist_item_uuid",
            "alternative_names": [
              "task_checklist_uuid",
              "line_item_uuid"
            ],
            "description": "The UUID for the specific checklist item to be updated.",
            "endpoint_argument_name": "checklist_item_id"
          },
          {
            "name": "checklist_item_name",
            "alternative_names": [
              "item_name",
              "task_name"
            ],
            "description": "The new name for the checklist item. Provide a string to rename the item.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "assign_item_to_user",
            "alternative_names": [
              "set_checklist_item_assignee",
              "update_checklist_item_responsible"
            ],
            "description": "The user ID to which the checklist item will be assigned. This should be a string representing a valid user identifier in ClickUp.",
            "endpoint_argument_name": "assignee"
          },
          {
            "name": "parent_checklist_item_id",
            "alternative_names": [
              "nest_under_item_id",
              "parent_item_id"
            ],
            "description": "Include another item's `checklist_item_id` to nest this item under it.",
            "endpoint_argument_name": "parent"
          },
          {
            "name": "mark_as_resolved",
            "alternative_names": [
              "set_as_resolved",
              "resolve_checklist_item"
            ],
            "description": "Boolean to mark the checklist item as resolved (true) or unresolved (false).",
            "endpoint_argument_name": "resolved"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/checklist/{checklist_id}/checklist_item/{checklist_item_id}",
      "tags": [
        "Task Checklists"
      ],
      "summary": "Edit Checklist Item",
      "description": "Update an individual line item in a task checklist. \\\n \\\nYou can rename it, set the assignee, mark it as resolved, or nest it under another checklist item.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "checklist_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)"
            },
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "checklist_item_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "e491-47f5-9fd8-d1dc4cedcc6f (uuid)"
            },
            "description": "e491-47f5-9fd8-d1dc4cedcc6f (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "string",
                "null"
              ]
            },
            "schema_required": false
          },
          {
            "name": "resolved",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "parent",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "To nest a checklist item under another checklist item, include the other item's `checklist_item_id`."
            },
            "description": "To nest a checklist item under another checklist item, include the other item's `checklist_item_id`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "string",
                "null"
              ],
              "description": "To nest a checklist item under another checklist item, include the other item's `checklist_item_id`."
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"EditChecklistItemrequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"assignee\": {\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"resolved\": {\n            \"type\": \"boolean\"\n          },\n          \"parent\": {\n            \"description\": \"To nest a checklist item under another checklist item, include the other item's `checklist_item_id`.\",\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Updated Checklist Item\",\n            \"assignee\": null,\n            \"resolved\": true,\n            \"parent\": null\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Updated Checklist Item\",\n        \"assignee\": null,\n        \"resolved\": true,\n        \"parent\": null\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteChecklistItem",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_task_checklist_item",
        "description": {
          "tagline": "Delete an item from a task checklist in ClickUp.",
          "detailed": "Use this tool to delete a specific line item from a checklist associated with a task. Ideal for managing and updating task checklists by removing unnecessary or completed items."
        },
        "return_annotation": "Confirmation of checklist item deletion.",
        "arguments": [
          {
            "name": "checklist_identifier",
            "alternative_names": [
              "checklist_id_code",
              "uuid_checklist_id"
            ],
            "description": "The unique identifier (UUID) for the checklist. Used to specify the checklist from which the item will be deleted.",
            "endpoint_argument_name": "checklist_id"
          },
          {
            "name": "checklist_item_uuid",
            "alternative_names": [
              "checklist_item_identifier",
              "checklist_item_id"
            ],
            "description": "The unique identifier (UUID) of the checklist item to be deleted.",
            "endpoint_argument_name": "checklist_item_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/checklist/{checklist_id}/checklist_item/{checklist_item_id}",
      "tags": [
        "Task Checklists"
      ],
      "summary": "Delete Checklist Item",
      "description": "Delete a line item from a task checklist.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "checklist_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)"
            },
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "checklist_item_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "e491-47f5-9fd8-d1dc4cedcc6f (uuid)"
            },
            "description": "e491-47f5-9fd8-d1dc4cedcc6f (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetTaskComments",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_task_comments",
        "description": {
          "tagline": "Retrieve comments from a specified task in ClickUp.",
          "detailed": "Use this tool to view comments on a specific task within ClickUp. If no 'start' and 'start_id' parameters are provided, it will return the latest 25 comments. Provide 'start' and 'start_id' to paginate through older comments."
        },
        "return_annotation": "Returns the comments of a specified task.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id_param",
              "task_reference"
            ],
            "description": "Specify the unique identifier of the task whose comments you want to retrieve.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "workspace_id_for_custom_task",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when using a custom task ID (requires `custom_task_ids` to be true).",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "comment_date_unix_time_ms",
            "alternative_names": [
              "unix_time_comment_date",
              "comment_timestamp_ms"
            ],
            "description": "Specify the date of a task comment using Unix time in milliseconds for pagination.",
            "endpoint_argument_name": "start"
          },
          {
            "name": "comment_start_id",
            "alternative_names": [
              "comment_id_start",
              "starting_comment_id"
            ],
            "description": "The ID of the earliest comment to start retrieving from, used for pagination.",
            "endpoint_argument_name": "start_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_ids",
              "custom_task_id_reference"
            ],
            "description": "Set to `true` if you want to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/task/{task_id}/comment",
      "tags": [
        "Comments"
      ],
      "summary": "Get Task Comments",
      "description": "View task comments. \\\n \\\nIf you do not include the `start` and `start_id` parameters, this endpoint will return the most recent 25 comments.\\\n \\\nUse the `start` and `start id` parameters of the oldest comment to retrieve the next 25 comments.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "start",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter the `date` of a task comment using Unix time in milliseconds."
            },
            "description": "Enter the `date` of a task comment using Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "start_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter the Comment `id` of a task comment."
            },
            "description": "Enter the Comment `id` of a task comment.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateTaskComment",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_task_comment",
        "description": {
          "tagline": "Add a new comment to a specific task on ClickUp.",
          "detailed": "This tool allows users to add a new comment to a specified task on ClickUp. It should be called when there's a need to comment on a task, offering a way to communicate updates, feedback, or any relevant information directly related to the task in question."
        },
        "return_annotation": "Confirmation of the comment being successfully added.",
        "arguments": [
          {
            "name": "specific_task_id",
            "alternative_names": [
              "task_identifier",
              "task_reference_id"
            ],
            "description": "The ID of the task to add the comment to. Required for identifying the target task.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "comment_content",
            "alternative_names": [
              "task_comment_text",
              "comment_body"
            ],
            "description": "The text of the comment to be added to the task. It should contain any updates, feedback, or relevant information.",
            "endpoint_argument_name": "comment_text"
          },
          {
            "name": "send_notifications_to_all",
            "alternative_names": [
              "alert_all_commenters",
              "notify_everyone"
            ],
            "description": "If true, notifications will be sent to everyone, including the creator of the comment.",
            "endpoint_argument_name": "notify_all"
          },
          {
            "name": "workspace_id_for_custom_task",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when referencing a task by its custom task ID (set `custom_task_ids` to true).",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "comment_assignee_id",
            "alternative_names": [
              "task_comment_assignee_id",
              "comment_assignee"
            ],
            "description": "An integer representing the user ID of the assignee for the comment on the task.",
            "endpoint_argument_name": "assignee"
          },
          {
            "name": "assignee_group",
            "alternative_names": [
              "task_assignee_group",
              "comment_assignee_group"
            ],
            "description": "Specifies a group of users (as a comma-separated string) to be assigned to the comment. Ensure the group is relevant to the task.",
            "endpoint_argument_name": "group_assignee"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_ids",
              "custom_ids_enabled"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/task/{task_id}/comment",
      "tags": [
        "Comments"
      ],
      "summary": "Create Task Comment",
      "description": "Add a new comment to a task.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "comment_text",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "group_assignee",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": ""
            },
            "schema_required": false
          },
          {
            "name": "notify_all",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment."
            },
            "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateTaskCommentrequest\",\n        \"required\": [\n          \"comment_text\",\n          \"notify_all\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"comment_text\": {\n            \"type\": \"string\"\n          },\n          \"assignee\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"group_assignee\": {\n            \"type\": \"string\",\n            \"contentEncoding\": \"int32\",\n            \"description\": \"\"\n          },\n          \"notify_all\": {\n            \"description\": \"If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"examples\": [\n          {\n            \"comment_text\": \"Task comment content\",\n            \"assignee\": 183,\n            \"group_assignee\": \"d01f92f-48ca-446d-88a1-0beb0e8f5f14\",\n            \"notify_all\": true\n          }\n        ]\n      },\n      \"example\": {\n        \"comment_text\": \"Task comment content\",\n        \"assignee\": 183,\n        \"group_assignee\": \"dd01f92f-48ca-446d-88a1-0beb0e8f5f14\",\n        \"notify_all\": true\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "GetChatViewComments",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_chat_comments",
        "description": {
          "tagline": "Retrieve the most recent comments from a Chat view.",
          "detailed": "This tool fetches comments from a Chat view in ClickUp. It returns the 25 most recent comments if no parameters are provided. To access older comments, use `start` and `start_id` parameters."
        },
        "return_annotation": "Returns the most recent comments from a Chat view.",
        "arguments": [
          {
            "name": "chat_view_id",
            "alternative_names": [
              "view_identifier",
              "chat_id"
            ],
            "description": "The unique identifier for the Chat view to retrieve comments from. It should be a string, typically '105'.",
            "endpoint_argument_name": "view_id"
          },
          {
            "name": "comment_start_date_unix_ms",
            "alternative_names": [
              "initial_comment_date_unix_ms",
              "oldest_comment_date_unix_ms"
            ],
            "description": "The start date of a Chat view comment in Unix time (milliseconds) to fetch older comments.",
            "endpoint_argument_name": "start"
          },
          {
            "name": "start_comment_id",
            "alternative_names": [
              "initial_comment_id",
              "chat_comment_id"
            ],
            "description": "The comment ID to start retrieving older comments from in the Chat view. Use this to fetch comments beyond the most recent 25.",
            "endpoint_argument_name": "start_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/view/{view_id}/comment",
      "tags": [
        "Comments"
      ],
      "summary": "Get Chat View Comments",
      "description": "View comments from a Chat view. \\\n \\\nIf you do not include the `start` and `start_id` parameters, this endpoint will return the most recent 25 comments.\\\n \\\nUse the `start` and `start id` parameters of the oldest comment to retrieve the next 25 comments.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "start",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter the `date` of a Chat view comment using Unix time in milliseconds."
            },
            "description": "Enter the `date` of a Chat view comment using Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "start_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter the Comment `id` of a Chat view comment."
            },
            "description": "Enter the Comment `id` of a Chat view comment.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "view_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "105 (string)"
            },
            "description": "105 (string)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateChatViewComment",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_chat_view_comment",
        "description": {
          "tagline": "Add a new comment to a Chat view.",
          "detailed": "Use this tool to add a comment to a Chat view in ClickUp. This can be used to facilitate discussion and share information in a specific View context."
        },
        "return_annotation": "Confirmation of comment addition.",
        "arguments": [
          {
            "name": "view_id",
            "alternative_names": [
              "chat_view_id",
              "comment_view_id"
            ],
            "description": "The ID of the Chat view where the comment will be added. Expected as a string.",
            "endpoint_argument_name": "view_id"
          },
          {
            "name": "comment_text",
            "alternative_names": [
              "comment_body",
              "message_content"
            ],
            "description": "The text content of the comment to be added to the Chat view.",
            "endpoint_argument_name": "comment_text"
          },
          {
            "name": "send_notifications_to_all",
            "alternative_names": [
              "notify_everyone",
              "alert_all_users"
            ],
            "description": "Set to true to send notifications to everyone, including the comment creator.",
            "endpoint_argument_name": "notify_all"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/view/{view_id}/comment",
      "tags": [
        "Comments"
      ],
      "summary": "Create Chat View Comment",
      "description": "Add a new comment to a Chat view.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "view_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "105 (string)"
            },
            "description": "105 (string)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "comment_text",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "notify_all",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment."
            },
            "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateChatViewCommentrequest\",\n        \"required\": [\n          \"comment_text\",\n          \"notify_all\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"comment_text\": {\n            \"type\": \"string\"\n          },\n          \"notify_all\": {\n            \"description\": \"If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"examples\": [\n          {\n            \"comment_text\": \"View comment content\",\n            \"notify_all\": true\n          }\n        ]\n      },\n      \"example\": {\n        \"comment_text\": \"View comment content\",\n        \"notify_all\": true\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "GetListComments",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_list_comments",
        "description": {
          "tagline": "View comments from a specific ClickUp list.",
          "detailed": "Use this tool to retrieve the most recent comments from a specified ClickUp list. It returns up to 25 comments by default. To fetch older comments, utilize the optional parameters `start` and `start_id`."
        },
        "return_annotation": "Returns a list of comments from a specified ClickUp list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "clickup_list_id"
            ],
            "description": "The unique integer identifier of the ClickUp list for which comments are being retrieved.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "start_date_unix_millis",
            "alternative_names": [
              "start_time_unix_millis",
              "start_timestamp_unix_millis"
            ],
            "description": "Enter the date of a list info comment using Unix time in milliseconds to retrieve comments starting from this timestamp.",
            "endpoint_argument_name": "start"
          },
          {
            "name": "oldest_comment_id",
            "alternative_names": [
              "start_comment_id",
              "previous_comment_id"
            ],
            "description": "ID of the oldest comment to start retrieving additional comments from.",
            "endpoint_argument_name": "start_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/list/{list_id}/comment",
      "tags": [
        "Comments"
      ],
      "summary": "Get List Comments",
      "description": "View the comments added to a List. \\\n \\\nIf you do not include the `start` and `start_id` parameters, this endpoint will return the most recent 25 comments.\\\n \\\nUse the `start` and `start id` parameters of the oldest comment to retrieve the next 25 comments.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "start",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter the `date` of a List info comment using Unix time in milliseconds."
            },
            "description": "Enter the `date` of a List info comment using Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "start_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter the Comment `id` of a List info comment."
            },
            "description": "Enter the Comment `id` of a List info comment.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateListComment",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_comment_to_list",
        "description": {
          "tagline": "Add a comment to a specific list in ClickUp.",
          "detailed": "This tool allows you to add a comment to a specified list in ClickUp. Use it when you need to provide additional information or feedback on a list."
        },
        "return_annotation": "Confirmation of comment addition to a list.",
        "arguments": [
          {
            "name": "list_identifier",
            "alternative_names": [
              "target_list_id",
              "list_reference_id"
            ],
            "description": "The unique ID of the list where the comment will be added.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "comment_text",
            "alternative_names": [
              "text_comment",
              "list_comment_text"
            ],
            "description": "The text of the comment to be added to the list. This should contain the message or information you wish to convey.",
            "endpoint_argument_name": "comment_text"
          },
          {
            "name": "assignee_id",
            "alternative_names": [
              "assigned_user_id",
              "responsible_user_id"
            ],
            "description": "The ID of the user to whom the comment is assigned. This should be an integer value representing the user's unique identifier.",
            "endpoint_argument_name": "assignee"
          },
          {
            "name": "notify_all",
            "alternative_names": [
              "notify_everyone",
              "send_notifications_to_all"
            ],
            "description": "If true, notifications are sent to everyone, including the comment creator.",
            "endpoint_argument_name": "notify_all"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/list/{list_id}/comment",
      "tags": [
        "Comments"
      ],
      "summary": "Create List Comment",
      "description": "Add a comment to a List.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "comment_text",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "notify_all",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment."
            },
            "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateListCommentrequest\",\n        \"required\": [\n          \"comment_text\",\n          \"assignee\",\n          \"notify_all\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"comment_text\": {\n            \"type\": \"string\"\n          },\n          \"assignee\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"notify_all\": {\n            \"description\": \"If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"examples\": [\n          {\n            \"comment_text\": \"List comment content\",\n            \"assignee\": 183,\n            \"notify_all\": true\n          }\n        ]\n      },\n      \"example\": {\n        \"comment_text\": \"List comment content\",\n        \"assignee\": 183,\n        \"notify_all\": true\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "UpdateComment",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_task_comment",
        "description": {
          "tagline": "Update a task comment in ClickUp.",
          "detailed": "Use this tool to replace a task comment's content, assign it, or mark it as resolved in ClickUp."
        },
        "return_annotation": "Details of the updated comment status and content.",
        "arguments": [
          {
            "name": "comment_identifier",
            "alternative_names": [
              "comment_id_number",
              "comment_reference"
            ],
            "description": "The unique identifier of the comment to update. It must be an integer.",
            "endpoint_argument_name": "comment_id"
          },
          {
            "name": "new_comment_content",
            "alternative_names": [
              "updated_comment_text",
              "comment_body"
            ],
            "description": "The new content for the task comment. This will replace the existing comment text.",
            "endpoint_argument_name": "comment_text"
          },
          {
            "name": "assignee_user_id",
            "alternative_names": [
              "assignment_user_id",
              "comment_assignee_id"
            ],
            "description": "The ID of the user to assign the comment to. This should be a numeric user ID in ClickUp.",
            "endpoint_argument_name": "assignee"
          },
          {
            "name": "mark_comment_as_resolved",
            "alternative_names": [
              "resolve_comment_status",
              "set_comment_resolved"
            ],
            "description": "Set to true to mark the comment as resolved; false to leave it unresolved. Accepts a boolean value.",
            "endpoint_argument_name": "resolved"
          },
          {
            "name": "assign_to_group",
            "alternative_names": [
              "group_assignment",
              "assign_group"
            ],
            "description": "Assign the comment to a group by providing the group's ID.",
            "endpoint_argument_name": "group_assignee"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/comment/{comment_id}",
      "tags": [
        "Comments"
      ],
      "summary": "Update Comment",
      "description": "Replace the content of a task commment, assign a comment, and mark a comment as resolved.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "comment_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "comment_text",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "group_assignee",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer",
              "description": ""
            },
            "schema_required": false
          },
          {
            "name": "resolved",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": ""
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateCommentrequest\",\n        \"required\": [\n          \"comment_text\",\n          \"assignee\",\n          \"resolved\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"comment_text\": {\n            \"type\": \"string\"\n          },\n          \"assignee\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"group_assignee\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\",\n            \"description\": \"\"\n          },\n          \"resolved\": {\n            \"description\": \"\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"examples\": [\n          {\n            \"comment_text\": \"Updated comment content\",\n            \"assignee\": 183,\n            \"resolved\": true\n          }\n        ]\n      },\n      \"example\": {\n        \"comment_text\": \"Updated comment content\",\n        \"assignee\": 183,\n        \"group_assignee\": \"dd01f92f-48ca-446d-88a1-0beb0e8f5f14\",\n        \"resolved\": true\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteComment",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_task_comment",
        "description": {
          "tagline": "Delete a comment from a task.",
          "detailed": "Use this tool to delete a specific comment from a task. It should be called when you need to remove a comment based on its unique identifier."
        },
        "return_annotation": "Confirmation of comment deletion.",
        "arguments": [
          {
            "name": "comment_id",
            "alternative_names": [
              "comment_identifier",
              "task_comment_id"
            ],
            "description": "The unique integer identifier of the comment to be deleted.",
            "endpoint_argument_name": "comment_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/comment/{comment_id}",
      "tags": [
        "Comments"
      ],
      "summary": "Delete Comment",
      "description": "Delete a task comment.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "comment_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetThreadedComments",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_threaded_comments",
        "description": {
          "tagline": "Retrieve threaded replies to a comment.",
          "detailed": "This tool allows for the retrieval of threaded comments in a ClickUp task, excluding the parent comment. Use this tool to view discussions or replies linked to a specific comment by providing the comment ID."
        },
        "return_annotation": "Threaded comments excluding the parent comment.",
        "arguments": [
          {
            "name": "thread_comment_id",
            "alternative_names": [
              "parent_comment_id",
              "original_comment_id"
            ],
            "description": "The ID of the comment for which threaded replies are to be retrieved. This ID should be an integer and corresponds to the comment in a ClickUp task whose replies you want to view.",
            "endpoint_argument_name": "comment_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/comment/{comment_id}/reply",
      "tags": [
        "Comments"
      ],
      "summary": "Get Threaded Comments",
      "description": "View threaded comments. The parent comment is not included in the response.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "comment_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateThreadedComment",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_threaded_comment",
        "description": {
          "tagline": "Create a threaded comment in a ClickUp task.",
          "detailed": "This tool is used to create a threaded comment as a reply to an existing comment in a ClickUp task. It is useful when you want to continue a discussion or provide additional information to a specific comment thread."
        },
        "return_annotation": "Information about the created threaded comment.",
        "arguments": [
          {
            "name": "parent_comment_id",
            "alternative_names": [
              "thread_comment_id",
              "reply_to_comment_id"
            ],
            "description": "The ID of the parent comment to which the threaded reply will be attached. It should be an integer.",
            "endpoint_argument_name": "comment_id"
          },
          {
            "name": "threaded_comment_content",
            "alternative_names": [
              "reply_content",
              "comment_body"
            ],
            "description": "This is the content of the threaded comment to be added. Provide the text that forms the body of the reply.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/comment/{comment_id}/reply",
      "tags": [
        "Comments"
      ],
      "summary": "Create Threaded Comment",
      "description": "Create a threaded comment.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "comment_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "description": "Schema reference broken: #/paths/~1v2~1task~1%7Btask_id%7D~1comment/post/requestBody/content/application~1json/schema",
              "properties": {},
              "additionalProperties": true,
              "x-moar-broken-reference": "#/paths/~1v2~1task~1%7Btask_id%7D~1comment/post/requestBody/content/application~1json/schema"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"description\": \"Schema reference broken: #/paths/~1v2~1task~1%7Btask_id%7D~1comment/post/requestBody/content/application~1json/schema\",\n        \"additionalProperties\": true,\n        \"x-moar-broken-reference\": \"#/paths/~1v2~1task~1%7Btask_id%7D~1comment/post/requestBody/content/application~1json/schema\"\n      },\n      \"example\": {\n        \"comment_text\": \"Task comment content\",\n        \"assignee\": 183,\n        \"group_assignee\": \"d01f92f-48ca-446d-88a1-0beb0e8f5f14\",\n        \"notify_all\": true\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetAccessibleCustomFields",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_list_custom_fields",
        "description": {
          "tagline": "Retrieve accessible custom fields for a specific list.",
          "detailed": "Use this tool to view the custom fields you have access to in a specific list. This is useful for understanding which custom fields are available for use or modification in your lists."
        },
        "return_annotation": "A list of accessible custom fields for a specific list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "specific_list_id"
            ],
            "description": "The unique identifier of the list to retrieve accessible custom fields for.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "content_type",
            "alternative_names": [
              "header_content_type",
              "http_header_type"
            ],
            "description": "The MIME type of the request body, typically set to 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/list/{list_id}/field",
      "tags": [
        "Custom Fields"
      ],
      "summary": "Get List Custom Fields",
      "description": "View the Custom Fields you have access to in a specific List.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "getFolderAvailableFields",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_folder_custom_fields",
        "description": {
          "tagline": "Retrieve accessible custom fields from a folder in ClickUp.",
          "detailed": "This tool retrieves the custom fields that are accessible at the folder level in ClickUp. It's useful when you need to know what folder-level custom fields are available for a specific folder. Custom fields created at the list level aren't included."
        },
        "return_annotation": "Returns available custom fields for a specified folder.",
        "arguments": [
          {
            "name": "folder_id",
            "alternative_names": [
              "folder_identifier",
              "folder_ref"
            ],
            "description": "The unique identifier of the folder to retrieve custom fields from. Must be an integer corresponding to a specific folder in ClickUp.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "content_type",
            "alternative_names": [
              "content_type_header",
              "content_type_value"
            ],
            "description": "The MIME type of the content being sent. Typically, use 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/folder/{folder_id}/field",
      "tags": [
        "Custom Fields"
      ],
      "summary": "Get Folder Custom Fields",
      "description": "View the Custom Fields you have access to in a Folder. Get Folder Custom Fields only returns Custom Fields created at the Folder level. Custom Fields created at the List level are not included.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "getSpaceAvailableFields",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_space_custom_fields",
        "description": {
          "tagline": "Retrieve custom fields accessible in a specific ClickUp space.",
          "detailed": "This tool retrieves the custom fields available to you in a specified ClickUp space. It returns only the custom fields created at the space level, excluding those at the folder and list levels."
        },
        "return_annotation": "List of custom fields available in a specific space.",
        "arguments": [
          {
            "name": "space_identifier",
            "alternative_names": [
              "space_id_value",
              "unique_space_id"
            ],
            "description": "The unique identifier for the ClickUp space from which to fetch available custom fields. It should be an integer.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "content_type",
              "http_content_type"
            ],
            "description": "The MIME type for the request header, typically 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/space/{space_id}/field",
      "tags": [
        "Custom Fields"
      ],
      "summary": "Get Space Custom Fields",
      "description": "View the Custom Fields you have access to in a specific Space. Get Space Custom Fields only returns Custom Fields created at the Space level. Custom Fields created at the Folder and List level are not included.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "getTeamAvailableFields",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_workspace_custom_fields",
        "description": {
          "tagline": "Retrieve Workspace-level Custom Fields in ClickUp.",
          "detailed": "Use this tool to view custom fields accessible at the workspace level in ClickUp. It doesn't include fields from Space, Folder, or List levels."
        },
        "return_annotation": "List of custom fields available in the specified workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "workspace_identifier",
              "ws_id"
            ],
            "description": "The ID of the Workspace to retrieve custom fields for. This identifies which Workspace's fields you want to view.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "content_type",
              "header_content_type"
            ],
            "description": "The MIME type of the content. Typically set to 'application/json' for JSON data.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/field",
      "tags": [
        "Custom Fields"
      ],
      "summary": "Get Workspace Custom Fields",
      "description": "View the Custom Fields you have access to in a specific Workspace. Get Workspace Custom Fields only returns Custom Fields created at the Workspace level. Custom Fields created at the Space, Folder, and List level are not included.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "SetCustomFieldValue",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_task_custom_field",
        "description": {
          "tagline": "Update a custom field value for a specific task in ClickUp.",
          "detailed": "Use this tool to add data to a custom field on a task. Requires the `task_id` of the task and the `field_id` of the custom field. Retrieve `field_id` using the 'Get Accessible Custom Fields' or 'Get Task' endpoints."
        },
        "return_annotation": "Updates a custom field value for a task.",
        "arguments": [
          {
            "name": "task_id",
            "alternative_names": [
              "task_identifier",
              "task_reference_id"
            ],
            "description": "The ID of the task to be updated with new custom field data.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "custom_field_uuid",
            "alternative_names": [
              "field_identifier",
              "custom_field_id"
            ],
            "description": "The UUID of the custom field to update for a specific task.",
            "endpoint_argument_name": "field_id"
          },
          {
            "name": "custom_field_value_data",
            "alternative_names": [
              "custom_field_data",
              "field_value_payload"
            ],
            "description": "A JSON object containing the data to set for the custom field on the task.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when referencing a task by its Custom Task ID (`custom_task_ids` must be true).",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_id_reference",
            "alternative_names": [
              "enable_custom_task_id_usage",
              "set_custom_id_reference"
            ],
            "description": "Set to `true` to reference a task using its Custom Task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/task/{task_id}/field/{field_id}",
      "tags": [
        "Custom Fields"
      ],
      "summary": "Set Custom Field Value",
      "description": "Add data to a Custom field on a task. \\\n \\\nYou'll need to know the `task_id` of the task you want to update, and the universal unique identifier (UUID) `field_id` of the Custom Field you want to set. \\\n \\\nYou can use [Get Accessible Custom Fields](ref:getaccessiblecustomfields) or the [Get Task](ref:gettask) endpoint to find the `field_id`.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by its Custom Task ID, this value must be `true`."
            },
            "description": "If you want to reference a task by its Custom Task ID, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter the task ID of the task you want to update."
            },
            "description": "Enter the task ID of the task you want to update.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "field_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter the universal unique identifier (UUID) of the Custom Field you want to set."
            },
            "description": "Enter the universal unique identifier (UUID) of the Custom Field you want to set.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "SetCustomFieldValuerequest",
              "properties": {},
              "anyOf": [
                {
                  "type": "object",
                  "title": "URL Custom Field",
                  "description": "The `value` must be a string with a valid URL.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "example": "https://clickup.com/api"
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Dropdown Custom Field",
                  "description": "Enter the universal unique identifier (UUID) of the dropdown menu option you want to set. You can find the UUIDs available for each Dropdown Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) New Dropdown Custom Field options cannot be created from this request.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "example": "uuid1234"
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Email Custom Field",
                  "description": "The `value` must be a string with a valid email address.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "example": "user@company.com"
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Phone Custom Field",
                  "description": "The `value` must be a string with a valid country code.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "example": "+1 123 456 7890"
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Date Custom Field",
                  "description": "The `value` must be Unix time in milliseconds. To display the time in a Date Custom Field in ClickUp, you must include `time: true` in the `value_options` property.",
                  "properties": {
                    "value": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1667367645000
                    },
                    "value_options": {
                      "type": "object",
                      "properties": {
                        "time": {
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "required": [
                        "time"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "title": "Short or Long Text Custom Field",
                  "description": "Enter a string of text.",
                  "properties": {
                    "value": {
                      "type": "string",
                      "example": "This is short or long text in a Custom Field."
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Number Custom Field",
                  "description": "Enter a number.",
                  "properties": {
                    "value": {
                      "type": "number",
                      "example": -28
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Money Custom Field",
                  "description": "You can set an amount, but not the currency of a Money Custom Field via the API. You can check the currency of a Money Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)",
                  "properties": {
                    "value": {
                      "type": "number",
                      "example": 8000
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Task Relationship Custom Field",
                  "description": "Enter an array of task ids in the `add` property to add them to a Task Relationship Custom Field. Enter them into the `rem` property to remove tasks from the Relationship.",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "add": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "rem": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "People Custom Field",
                  "description": "Enter an array of user ids or a Team id in the `add` property to add them to a People Custom Field. Enter them into the `rem` property to remove users from a People Custom Field. You can get a list of people in the Workspace using [Get Authorized Teams (Workspaces).](ref:getauthorizedteams)",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "add": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "rem": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Emoji (Rating) Custom Field",
                  "description": "Enter an integer that is greater than or equal to zero and where the `count` property is greater than or equal to the `value`. You can find the `count` property for each Emoji (Rating) Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)",
                  "properties": {
                    "value": {
                      "type": "integer",
                      "format": "int32",
                      "example": 4
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Manual Progress Custom Field",
                  "description": "Enter a number between the `start` and `end` values of each Manual Progress Custom Field. For example, for a field with `start: 10` and `end: 30`, sending `current: 20` will be displayed as 50% complete in ClickUp. You can find the `start` and `end` values for each Manual Progress Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "number",
                          "example": 20
                        }
                      },
                      "required": [
                        "current"
                      ]
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Label Custom Field",
                  "description": "Enter an array of the universal unique identifiers (UUIDs) of the labels you want to apply. You can find the UUIDs available for each Label Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)",
                  "properties": {
                    "value": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": [
                          "uuid1234",
                          "uuid9876"
                        ]
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Location Custom Field",
                  "description": "Include the latitude, longitude, and formatted address as defined in the [Google Maps Geocoding API.](https://developers.google.com/maps/documentation/geocoding/overview)",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "object",
                          "properties": {
                            "lat": {
                              "type": "number"
                            },
                            "lng": {
                              "type": "number"
                            }
                          }
                        },
                        "formatted_address": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "title": "Button Custom Field",
                  "description": "Set a button Custom Field to `true` to \"click\" it. This will trigger the button's action as if it was clicked in the UI.",
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "example": true
                    }
                  },
                  "required": [
                    "value"
                  ]
                }
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"SetCustomFieldValuerequest\",\n        \"anyOf\": [\n          {\n            \"type\": \"object\",\n            \"title\": \"URL Custom Field\",\n            \"description\": \"The `value` must be a string with a valid URL.\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\",\n                \"example\": \"https://clickup.com/api\"\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Dropdown Custom Field\",\n            \"description\": \"Enter the universal unique identifier (UUID) of the dropdown menu option you want to set. You can find the UUIDs available for each Dropdown Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) New Dropdown Custom Field options cannot be created from this request.\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\",\n                \"example\": \"uuid1234\"\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Email Custom Field\",\n            \"description\": \"The `value` must be a string with a valid email address.\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\",\n                \"example\": \"user@company.com\"\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Phone Custom Field\",\n            \"description\": \"The `value` must be a string with a valid country code.\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\",\n                \"example\": \"+1 123 456 7890\"\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Date Custom Field\",\n            \"description\": \"The `value` must be Unix time in milliseconds. To display the time in a Date Custom Field in ClickUp, you must include `time: true` in the `value_options` property.\",\n            \"properties\": {\n              \"value\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"example\": 1667367645000\n              },\n              \"value_options\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"time\"\n                ],\n                \"properties\": {\n                  \"time\": {\n                    \"type\": \"boolean\",\n                    \"example\": true\n                  }\n                }\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Short or Long Text Custom Field\",\n            \"description\": \"Enter a string of text.\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"string\",\n                \"example\": \"This is short or long text in a Custom Field.\"\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Number Custom Field\",\n            \"description\": \"Enter a number.\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"number\",\n                \"example\": -28\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Money Custom Field\",\n            \"description\": \"You can set an amount, but not the currency of a Money Custom Field via the API. You can check the currency of a Money Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"number\",\n                \"example\": 8000\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Task Relationship Custom Field\",\n            \"description\": \"Enter an array of task ids in the `add` property to add them to a Task Relationship Custom Field. Enter them into the `rem` property to remove tasks from the Relationship.\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"add\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"rem\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"People Custom Field\",\n            \"description\": \"Enter an array of user ids or a Team id in the `add` property to add them to a People Custom Field. Enter them into the `rem` property to remove users from a People Custom Field. You can get a list of people in the Workspace using [Get Authorized Teams (Workspaces).](ref:getauthorizedteams)\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"add\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"number\"\n                    }\n                  },\n                  \"rem\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"number\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Emoji (Rating) Custom Field\",\n            \"description\": \"Enter an integer that is greater than or equal to zero and where the `count` property is greater than or equal to the `value`. You can find the `count` property for each Emoji (Rating) Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"example\": 4\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Manual Progress Custom Field\",\n            \"description\": \"Enter a number between the `start` and `end` values of each Manual Progress Custom Field. For example, for a field with `start: 10` and `end: 30`, sending `current: 20` will be displayed as 50% complete in ClickUp. You can find the `start` and `end` values for each Manual Progress Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"current\"\n                ],\n                \"properties\": {\n                  \"current\": {\n                    \"type\": \"number\",\n                    \"example\": 20\n                  }\n                }\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Label Custom Field\",\n            \"description\": \"Enter an array of the universal unique identifiers (UUIDs) of the labels you want to apply. You can find the UUIDs available for each Label Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"example\": [\n                    \"uuid1234\",\n                    \"uuid9876\"\n                  ]\n                }\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Location Custom Field\",\n            \"description\": \"Include the latitude, longitude, and formatted address as defined in the [Google Maps Geocoding API.](https://developers.google.com/maps/documentation/geocoding/overview)\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"location\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"lat\": {\n                        \"type\": \"number\"\n                      },\n                      \"lng\": {\n                        \"type\": \"number\"\n                      }\n                    }\n                  },\n                  \"formatted_address\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          {\n            \"type\": \"object\",\n            \"title\": \"Button Custom Field\",\n            \"description\": \"Set a button Custom Field to `true` to \\\"click\\\" it. This will trigger the button's action as if it was clicked in the UI.\",\n            \"required\": [\n              \"value\"\n            ],\n            \"properties\": {\n              \"value\": {\n                \"type\": \"boolean\",\n                \"example\": true\n              }\n            }\n          }\n        ]\n      },\n      \"examples\": {\n        \"URL Custom Field\": {\n          \"value\": {\n            \"value\": \"https://clickup.com/api\"\n          }\n        },\n        \"Dropdown Custom Field\": {\n          \"value\": {\n            \"value\": \"uuid1234\"\n          }\n        },\n        \"Email Custom Field\": {\n          \"value\": {\n            \"value\": \"user@company.com\"\n          }\n        },\n        \"Phone Custom Field\": {\n          \"value\": {\n            \"value\": \"+1 201 555 0123\"\n          }\n        },\n        \"Date Custom Field\": {\n          \"value\": {\n            \"value\": 1667367645000,\n            \"value_options\": {\n              \"time\": true\n            }\n          }\n        },\n        \"Short or Long Text Custom Field\": {\n          \"value\": {\n            \"value\": \"This is short or long text in a Custom Field.\"\n          }\n        },\n        \"Number Custom Field\": {\n          \"value\": {\n            \"value\": -28\n          }\n        },\n        \"Money Custom Field\": {\n          \"value\": {\n            \"value\": 8000\n          }\n        },\n        \"Task Relationship Custom Field\": {\n          \"value\": {\n            \"value\": {\n              \"add\": [\n                \"abcd1234\",\n                \"efghi5678\"\n              ],\n              \"rem\": [\n                \"jklm9876\",\n                \"yuiop5678\"\n              ]\n            }\n          }\n        },\n        \"People Custom Field\": {\n          \"value\": {\n            \"value\": {\n              \"add\": [\n                123,\n                456\n              ],\n              \"rem\": [\n                987,\n                765\n              ]\n            }\n          }\n        },\n        \"Emoji (Rating) Custom Field\": {\n          \"value\": {\n            \"value\": 4\n          }\n        },\n        \"Manual Progress Custom Field\": {\n          \"value\": {\n            \"value\": {\n              \"current\": 20\n            }\n          }\n        },\n        \"Label Custom Field\": {\n          \"value\": {\n            \"value\": [\n              \"uuid1234\",\n              \"uuid9876\"\n            ]\n          }\n        },\n        \"Location Custom Field\": {\n          \"value\": {\n            \"value\": {\n              \"location\": {\n                \"lat\": -28.016667,\n                \"lng\": 153.4\n              },\n              \"formatted_address\": \"Gold Coast QLD, Australia\"\n            }\n          }\n        },\n        \"Button Custom Field\": {\n          \"value\": {\n            \"value\": true\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "RemoveCustomFieldValue",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_custom_field_value",
        "description": {
          "tagline": "Remove a custom field value from a ClickUp task.",
          "detailed": "Use this tool to remove the data from a custom field on a ClickUp task without deleting the field option itself."
        },
        "return_annotation": "Confirmation of custom field value removal from a task.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id_value",
              "task_unique_id"
            ],
            "description": "The unique identifier of the task from which you want to remove the custom field value.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "custom_field_id",
            "alternative_names": [
              "field_identifier",
              "field_uuid"
            ],
            "description": "UUID of the custom field to be removed from the task. Example: b8a8-48d8-a0c6-b4200788a683",
            "endpoint_argument_name": "field_id"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "organization_id"
            ],
            "description": "Provide the Workspace ID when referencing a task by custom task id.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_by_custom_id",
              "custom_id_flag"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/task/{task_id}/field/{field_id}",
      "tags": [
        "Custom Fields"
      ],
      "summary": "Remove Custom Field Value",
      "description": "Remove the data from a Custom Field on a task. This does not delete the option from the Custom Field.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "field_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)"
            },
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "AddDependency",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "set_task_dependency",
        "description": {
          "tagline": "Set a task as waiting on or blocking another task.",
          "detailed": "Use this tool to establish a dependency between tasks in ClickUp, either setting a task as waiting on another or as blocking one."
        },
        "return_annotation": "Confirmation of task dependency addition.",
        "arguments": [
          {
            "name": "task_id_of_dependency",
            "alternative_names": [
              "dependent_task_id",
              "waiting_or_blocking_task_id"
            ],
            "description": "The ID of the task that is waiting on or blocking another task.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when `custom_task_ids` is true. Necessary for task identification.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "depends_on_task_id",
            "alternative_names": [
              "dependent_task_id",
              "blocked_by_task_id"
            ],
            "description": "Specify the task ID that this task depends on or is blocked by. It should be a valid task ID in ClickUp.",
            "endpoint_argument_name": "depends_on"
          },
          {
            "name": "dependent_task_id",
            "alternative_names": [
              "dependent_id",
              "dependent_task"
            ],
            "description": "The ID of the task that the specified task depends on or is blocking. This establishes the task dependency relationship.",
            "endpoint_argument_name": "depedency_of"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_references",
              "custom_task_identification"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/task/{task_id}/dependency",
      "tags": [
        "Task Relationships"
      ],
      "summary": "Add Dependency",
      "description": "Set a task as waiting on or blocking another task.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n\\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "This is the task which is waiting on or blocking another task."
            },
            "description": "This is the task which is waiting on or blocking another task.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "depends_on",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "depedency_of",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"Use the `depends_on` parameter in the request body to specify the task that must be completed before the task in the path parameter.\\\\\\n \\\\\\nUse the `dependency_of` parameter in the request body to specify the task that's waiting for the task in the path parameter to be completed.\\\\\\n \\\\\\nYou can only use one per request.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"AddDependencyrequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"depends_on\": {\n            \"type\": \"string\"\n          },\n          \"depedency_of\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"depends_on\": \"9hw\"\n          }\n        ]\n      },\n      \"example\": {\n        \"depends_on\": \"9hw\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteDependency",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_task_dependency",
        "description": {
          "tagline": "Remove a dependency relationship between tasks.",
          "detailed": "This tool is used to remove the dependency relationship between two or more tasks in ClickUp. Call this when two tasks that are currently dependent on one another need to be independent."
        },
        "return_annotation": "Confirmation of task dependency removal.",
        "arguments": [
          {
            "name": "depends_on_task_id",
            "alternative_names": [
              "task_id_dependent",
              "dependency_task_id"
            ],
            "description": "The ID of the task that another task depends on. Provide a valid task ID to specify the dependent task.",
            "endpoint_argument_name": "depends_on"
          },
          {
            "name": "dependent_task_id",
            "alternative_names": [
              "dependency_target_id",
              "dependent_task_identifier"
            ],
            "description": "The task ID that is dependent on another. Provide a valid task ID as a string.",
            "endpoint_argument_name": "dependency_of"
          },
          {
            "name": "task_id_to_remove_dependency",
            "alternative_names": [
              "target_task_id",
              "task_dependency_id"
            ],
            "description": "Specify the task ID from which the dependency is to be removed. This is required to identify the task involved in the dependency relationship.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when using custom task IDs by setting `custom_task_ids` to `true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_by_custom_id",
              "enable_custom_ids"
            ],
            "description": "Set to true if referencing tasks by their custom task IDs is desired.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/task/{task_id}/dependency",
      "tags": [
        "Task Relationships"
      ],
      "summary": "Delete Dependency",
      "description": "Remove the dependency relationship between two or more tasks.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "depends_on",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "dependency_of",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "AddTaskLink",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "link_tasks_clickup",
        "description": {
          "tagline": "Link two ClickUp tasks together.",
          "detailed": "This tool allows you to link two tasks in ClickUp via the Task Links feature in the right-hand sidebar of a task. It should be called when you need to associate tasks directly, but does not support linking to other types of objects."
        },
        "return_annotation": "Confirmation of tasks being linked successfully.",
        "arguments": [
          {
            "name": "source_task_id",
            "alternative_names": [
              "initiate_task_id",
              "start_task_id"
            ],
            "description": "The ID of the task from which the link will be initiated.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "task_to_link_to",
            "alternative_names": [
              "target_task_id",
              "related_task_id"
            ],
            "description": "The ID of the task to link to the initiating task.",
            "endpoint_argument_name": "links_to"
          },
          {
            "name": "workspace_id_for_custom_task",
            "alternative_names": [
              "workspace_id",
              "team_identifier"
            ],
            "description": "Provide the Workspace ID if referencing a task by custom task id (when custom_task_ids is true).",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_by_custom_id",
              "enable_custom_ids"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/task/{task_id}/link/{links_to}",
      "tags": [
        "Task Relationships"
      ],
      "summary": "Add Task Link",
      "description": "This is the equivalent of the feature _Task Links_ in the right-hand sidebar of a Task.  It allows you to link two tasks together. General links or links to other objects than tasks are not supported.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The task to initiate the link from."
            },
            "description": "The task to initiate the link from.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "links_to",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The task to link to."
            },
            "description": "The task to link to.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "DeleteTaskLink",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_task_link",
        "description": {
          "tagline": "Remove the link between two tasks.",
          "detailed": "Use this tool to delete an existing link between two tasks in ClickUp. It is helpful when you need to unlink tasks that are no longer related."
        },
        "return_annotation": "Confirmation of task link removal.",
        "arguments": [
          {
            "name": "primary_task_id",
            "alternative_names": [
              "main_task_id",
              "base_task_id"
            ],
            "description": "The ID of the primary task from which to remove the link. This is required to identify the task.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "linked_task_id",
            "alternative_names": [
              "target_task_id",
              "linked_to_task_id"
            ],
            "description": "The task ID of the task to which the original task is linked. This specifies the connection to be removed.",
            "endpoint_argument_name": "links_to"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when `custom_task_ids` is set to `true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_by_custom_id",
              "enable_custom_task_id"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/task/{task_id}/link/{links_to}",
      "tags": [
        "Task Relationships"
      ],
      "summary": "Delete Task Link",
      "description": "Remove the link between two tasks.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "links_to",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetFolders",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_space_folders",
        "description": {
          "tagline": "Retrieve a list of folders from a specified space.",
          "detailed": "Use this tool to view folders within a specific space in ClickUp. It is useful when you need to access or manage the folders in a particular workspace."
        },
        "return_annotation": "A list of folders within a specified space.",
        "arguments": [
          {
            "name": "space_id",
            "alternative_names": [
              "workspace_id",
              "location_id"
            ],
            "description": "The unique identifier of the space from which to retrieve folders. This is required to specify which space's folders are being requested.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "include_archived_folders",
            "alternative_names": [
              "show_archived_folders",
              "display_archived_folders"
            ],
            "description": "Set to true to include archived folders in the results.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/space/{space_id}/folder",
      "tags": [
        "Folders"
      ],
      "summary": "Get Folders",
      "description": "View the Folders in a Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateFolder",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_folder_in_space",
        "description": {
          "tagline": "Add a new Folder to a Space in ClickUp.",
          "detailed": "This tool allows you to create a new folder within a specified space in ClickUp. Use it when you need to organize tasks or projects into a new folder under an existing space."
        },
        "return_annotation": "Details of the newly created folder within a space.",
        "arguments": [
          {
            "name": "space_id",
            "alternative_names": [
              "workspace_id",
              "region_id"
            ],
            "description": "The unique identifier for the ClickUp Space where the folder will be created. It should be an integer.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "folder_name",
            "alternative_names": [
              "new_folder_name",
              "folder_title"
            ],
            "description": "The name of the new folder to be created in the specified space. It should be a string representing the folder's title.",
            "endpoint_argument_name": "name"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/space/{space_id}/folder",
      "tags": [
        "Folders"
      ],
      "summary": "Create Folder",
      "description": "Add a new Folder to a Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateFolderrequest\",\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New Folder Name\"\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New Folder Name\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "GetFolder",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_folder_lists",
        "description": {
          "tagline": "Retrieve lists contained in a specified folder.",
          "detailed": "Call this tool to access all the lists that are organized under a specific folder in ClickUp by providing the folder ID."
        },
        "return_annotation": "Lists within a specified folder.",
        "arguments": [
          {
            "name": "folder_id",
            "alternative_names": [
              "folder_identifier",
              "folder_key"
            ],
            "description": "The unique identifier for the folder whose lists you want to retrieve. This must be an integer.",
            "endpoint_argument_name": "folder_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/folder/{folder_id}",
      "tags": [
        "Folders"
      ],
      "summary": "Get Folder",
      "description": "View the Lists within a Folder.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "UpdateFolder",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "rename_clickup_folder",
        "description": {
          "tagline": "Rename a folder in ClickUp.",
          "detailed": "Use this tool to update the name of a folder in ClickUp by specifying the folder ID and the new name."
        },
        "return_annotation": "Confirmation of the folder rename action.",
        "arguments": [
          {
            "name": "folder_id_clickup",
            "alternative_names": [
              "clickup_folder_identifier",
              "id_for_clickup_folder"
            ],
            "description": "The unique identifier for the ClickUp folder you wish to rename.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "new_folder_name",
            "alternative_names": [
              "folder_name",
              "updated_folder_name"
            ],
            "description": "Specify the new name for the folder. This is the name that the folder will be renamed to in ClickUp.",
            "endpoint_argument_name": "name"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/folder/{folder_id}",
      "tags": [
        "Folders"
      ],
      "summary": "Update Folder",
      "description": "Rename a Folder.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateFolderrequest\",\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Updated Folder Name\"\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Updated Folder Name\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteFolder",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_workspace_folder",
        "description": {
          "tagline": "Delete a folder from your ClickUp workspace.",
          "detailed": "Use this tool to permanently delete a specific folder from your ClickUp workspace. Ensure you have the correct folder ID before performing this action."
        },
        "return_annotation": "Confirmation of folder deletion.",
        "arguments": [
          {
            "name": "folder_id",
            "alternative_names": [
              "workspace_folder_id",
              "clickup_folder_id"
            ],
            "description": "The unique ID of the folder to be deleted from your ClickUp workspace. Ensure this ID is correct to avoid unintended deletions.",
            "endpoint_argument_name": "folder_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/folder/{folder_id}",
      "tags": [
        "Folders"
      ],
      "summary": "Delete Folder",
      "description": "Delete a Folder from your Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetGoals",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_workspace_goals",
        "description": {
          "tagline": "View the Goals available in a Workspace.",
          "detailed": "This tool retrieves the goals available in a specific workspace on ClickUp. It should be used when you need to access or display information about the goals associated with a given workspace."
        },
        "return_annotation": "A list of goals available in a workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "workspace_identifier",
              "team_identifier"
            ],
            "description": "The unique identifier for the workspace to view its goals.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "include_completed_goals",
            "alternative_names": [
              "show_completed_goals",
              "list_completed_goals"
            ],
            "description": "Indicate whether to include completed goals in the results. Set to true to include completed goals, or false to exclude them.",
            "endpoint_argument_name": "include_completed"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/goal",
      "tags": [
        "Goals"
      ],
      "summary": "Get Goals",
      "description": "View the Goals available in a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_completed",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateGoal",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_workspace_goal",
        "description": {
          "tagline": "Add a new goal to a specified workspace.",
          "detailed": "This tool allows you to create a new goal in a specific workspace by providing the necessary details. Use it to set objectives and track progress within teams."
        },
        "return_annotation": "Response indicating the success and details of the created goal.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace where the goal will be added. This is a numeric value.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "goal_name",
            "alternative_names": [
              "goal_title",
              "goal_label"
            ],
            "description": "The name or title of the goal to be added to the workspace.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "due_date_timestamp",
            "alternative_names": [
              "goal_due_date",
              "deadline_timestamp"
            ],
            "description": "The due date for the goal as a Unix timestamp in milliseconds. Represents when the goal should be completed.",
            "endpoint_argument_name": "due_date"
          },
          {
            "name": "goal_description",
            "alternative_names": [
              "goal_details",
              "objective_description"
            ],
            "description": "A brief explanation of the goal to be added, providing context and details.",
            "endpoint_argument_name": "description"
          },
          {
            "name": "goal_owners",
            "alternative_names": [
              "goal_user_ids",
              "goal_participants"
            ],
            "description": "Array of user IDs for those assigned to own the goal, allowing multiple owners.",
            "endpoint_argument_name": "owners"
          },
          {
            "name": "goal_color",
            "alternative_names": [
              "goal_color_code",
              "goal_theme_color"
            ],
            "description": "The color code for the goal. Expected to be a string representing a color, such as a hex code like '#FF5733'.",
            "endpoint_argument_name": "color"
          },
          {
            "name": "allow_multiple_owners",
            "alternative_names": [
              "enable_multiple_owners",
              "set_multiple_owners"
            ],
            "description": "Set to true to allow a goal to have multiple owners, or false for a single owner.",
            "endpoint_argument_name": "multiple_owners"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_id}/goal",
      "tags": [
        "Goals"
      ],
      "summary": "Create Goal",
      "description": "Add a new Goal to a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "due_date",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "description",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "multiple_owners",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": true
          },
          {
            "name": "owners",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "integer",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Array of user IDs."
            },
            "description": "Array of user IDs.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "Array of user IDs.",
              "items": {
                "type": "integer"
              }
            },
            "schema_required": true
          },
          {
            "name": "color",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateGoalrequest\",\n        \"required\": [\n          \"name\",\n          \"due_date\",\n          \"description\",\n          \"multiple_owners\",\n          \"owners\",\n          \"color\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"due_date\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"multiple_owners\": {\n            \"type\": \"boolean\"\n          },\n          \"owners\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"contentEncoding\": \"int32\"\n            },\n            \"description\": \"Array of user IDs.\"\n          },\n          \"color\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Goal Name\",\n            \"due_date\": 1568036964079,\n            \"description\": \"Goal Description\",\n            \"multiple_owners\": true,\n            \"owners\": [\n              183\n            ],\n            \"color\": \"#32a852\"\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Goal Name\",\n        \"due_date\": 1568036964079,\n        \"description\": \"Goal Description\",\n        \"multiple_owners\": true,\n        \"owners\": [\n          183\n        ],\n        \"color\": \"#32a852\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "GetGoal",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_goal_details",
        "description": {
          "tagline": "Retrieve detailed information about a specific goal including its targets.",
          "detailed": ""
        },
        "return_annotation": "Details of a specific goal and its targets.",
        "arguments": [
          {
            "name": "goal_identifier",
            "alternative_names": [
              "goal_uuid",
              "goal_id_number"
            ],
            "description": "The unique identifier (UUID) for the goal to retrieve details and targets.",
            "endpoint_argument_name": "goal_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/goal/{goal_id}",
      "tags": [
        "Goals"
      ],
      "summary": "Get Goal",
      "description": "View the details of a Goal including its Targets.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "goal_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "900e-462d-a849-4a216b06d930 (uuid)"
            },
            "description": "900e-462d-a849-4a216b06d930 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "UpdateGoal",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_goal_details",
        "description": {
          "tagline": "Update goal details such as name, due date, and owners.",
          "detailed": "Use this tool to rename a goal, set its due date, update its description, manage owners, or change its color in ClickUp."
        },
        "return_annotation": "The updated details of the specified goal.",
        "arguments": [
          {
            "name": "goal_id",
            "alternative_names": [
              "goal_identifier",
              "target_goal_id"
            ],
            "description": "The unique identifier for the goal to be updated. This is a UUID.",
            "endpoint_argument_name": "goal_id"
          },
          {
            "name": "goal_name",
            "alternative_names": [
              "goal_title",
              "new_goal_name"
            ],
            "description": "The new name for the goal. This will replace the current goal name.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "goal_due_date",
            "alternative_names": [
              "due_date_for_goal",
              "goal_target_date"
            ],
            "description": "An integer representing the new due date for the goal, usually in Unix timestamp format.",
            "endpoint_argument_name": "due_date"
          },
          {
            "name": "goal_description",
            "alternative_names": [
              "goal_details",
              "goal_summary"
            ],
            "description": "The new description for the goal. This should provide an overview or details of the goal's purpose.",
            "endpoint_argument_name": "description"
          },
          {
            "name": "remove_owners_user_ids",
            "alternative_names": [
              "delete_owners_user_ids",
              "exclude_owners_ids"
            ],
            "description": "Array of user IDs to be removed as owners of the goal.",
            "endpoint_argument_name": "rem_owners"
          },
          {
            "name": "new_owners_to_add",
            "alternative_names": [
              "additional_owners",
              "extra_owners"
            ],
            "description": "List of user IDs to add as new owners for the goal.",
            "endpoint_argument_name": "add_owners"
          },
          {
            "name": "goal_color",
            "alternative_names": [
              "goal_theme_color",
              "objective_color"
            ],
            "description": "Set the color of the goal. Accepts a string representing the color, such as a hex code.",
            "endpoint_argument_name": "color"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/goal/{goal_id}",
      "tags": [
        "Goals"
      ],
      "summary": "Update Goal",
      "description": "Rename a Goal, set the due date, replace the description, add or remove owners, and set the Goal color.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "goal_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "900e-462d-a849-4a216b06d930 (uuid)"
            },
            "description": "900e-462d-a849-4a216b06d930 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "due_date",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "description",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "rem_owners",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "integer",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Array of user IDs."
            },
            "description": "Array of user IDs.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "Array of user IDs.",
              "items": {
                "type": "integer"
              }
            },
            "schema_required": true
          },
          {
            "name": "add_owners",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "integer",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Array of user IDs."
            },
            "description": "Array of user IDs.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "Array of user IDs.",
              "items": {
                "type": "integer"
              }
            },
            "schema_required": true
          },
          {
            "name": "color",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateGoalrequest\",\n        \"required\": [\n          \"name\",\n          \"due_date\",\n          \"description\",\n          \"rem_owners\",\n          \"add_owners\",\n          \"color\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"due_date\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"rem_owners\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"contentEncoding\": \"int32\"\n            },\n            \"description\": \"Array of user IDs.\"\n          },\n          \"add_owners\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"contentEncoding\": \"int32\"\n            },\n            \"description\": \"Array of user IDs.\"\n          },\n          \"color\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Updated Goal Name\",\n            \"due_date\": 1568036964079,\n            \"description\": \"Updated Goal Description\",\n            \"rem_owners\": [\n              183\n            ],\n            \"add_owners\": [\n              184\n            ],\n            \"color\": \"#32a852\"\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Updated Goal Name\",\n        \"due_date\": 1568036964079,\n        \"description\": \"Updated Goal Description\",\n        \"rem_owners\": [\n          183\n        ],\n        \"add_owners\": [\n          184\n        ],\n        \"color\": \"#32a852\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteGoal",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_goal",
        "description": {
          "tagline": "Deletes a goal from your workspace in ClickUp.",
          "detailed": "Use this tool to remove a specified goal from your ClickUp workspace by providing the goal ID."
        },
        "return_annotation": "Confirmation of goal deletion and status.",
        "arguments": [
          {
            "name": "goal_identifier",
            "alternative_names": [
              "goal_id_number",
              "goal_unique_id"
            ],
            "description": "The unique identifier for the goal to be deleted. It must be a valid UUID.",
            "endpoint_argument_name": "goal_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "content_type",
              "mime_type_header"
            ],
            "description": "Specify the Content-Type header. Typically set to 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/goal/{goal_id}",
      "tags": [
        "Goals"
      ],
      "summary": "Delete Goal",
      "description": "Remove a Goal from your Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "goal_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "900e-462d-a849-4a216b06d930 (uuid)"
            },
            "description": "900e-462d-a849-4a216b06d930 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateKeyResult",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_target_to_goal",
        "description": {
          "tagline": "Add a target to a specific goal in ClickUp.",
          "detailed": "Use this tool to add a key result target to an existing goal in ClickUp, enhancing goal tracking and achievement."
        },
        "return_annotation": "Confirmation of the target addition to the goal.",
        "arguments": [
          {
            "name": "goal_identifier",
            "alternative_names": [
              "goal_id_value",
              "target_goal_id"
            ],
            "description": "The unique identifier (UUID) of the goal to which the target will be added.",
            "endpoint_argument_name": "goal_id"
          },
          {
            "name": "target_name",
            "alternative_names": [
              "goal_target_name",
              "key_result_name"
            ],
            "description": "Specify the name for the target being added to the goal. It should be a descriptive label for easy identification.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "target_owners_ids",
            "alternative_names": [
              "goal_target_owners",
              "key_result_owners"
            ],
            "description": "An array of user IDs representing the owners of the key result target.",
            "endpoint_argument_name": "owners"
          },
          {
            "name": "target_type",
            "alternative_names": [
              "key_result_type",
              "goal_target_type"
            ],
            "description": "Specify the type of target (key result) as one of the following: `number`, `currency`, `boolean`, `percentage`, or `automatic`.",
            "endpoint_argument_name": "type"
          },
          {
            "name": "initial_value_steps",
            "alternative_names": [
              "starting_steps_value",
              "beginning_steps_count"
            ],
            "description": "Specify the starting value for the target's progress steps, as an integer.",
            "endpoint_argument_name": "steps_start"
          },
          {
            "name": "target_steps_end",
            "alternative_names": [
              "end_value",
              "final_target_steps"
            ],
            "description": "Specify the final value for the target steps. It indicates the goal completion threshold.",
            "endpoint_argument_name": "steps_end"
          },
          {
            "name": "target_unit",
            "alternative_names": [
              "measurement_unit",
              "goal_unit"
            ],
            "description": "Specify the unit for the target if using types like number, currency, or percentage.",
            "endpoint_argument_name": "unit"
          },
          {
            "name": "linked_task_ids",
            "alternative_names": [
              "task_identifiers",
              "task_reference_ids"
            ],
            "description": "An array of task IDs to associate the target with tasks.",
            "endpoint_argument_name": "task_ids"
          },
          {
            "name": "list_ids",
            "alternative_names": [
              "linked_list_ids",
              "associated_list_ids"
            ],
            "description": "Array of List IDs to associate the target with multiple Lists.",
            "endpoint_argument_name": "list_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/goal/{goal_id}/key_result",
      "tags": [
        "Goals"
      ],
      "summary": "Create Key Result",
      "description": "Add a Target to a Goal.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "goal_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "900e-462d-a849-4a216b06d930 (uuid)"
            },
            "description": "900e-462d-a849-4a216b06d930 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "owners",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "integer",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "",
              "items": {
                "type": "integer"
              }
            },
            "schema_required": true
          },
          {
            "name": "type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Target (key result) types include: `number`, `currency`, `boolean`, `percentage`, or `automatic`."
            },
            "description": "Target (key result) types include: `number`, `currency`, `boolean`, `percentage`, or `automatic`.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "Target (key result) types include: `number`, `currency`, `boolean`, `percentage`, or `automatic`."
            },
            "schema_required": true
          },
          {
            "name": "steps_start",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "steps_end",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "unit",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "task_ids",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter an array of task IDs to link this target with one or more tasks."
            },
            "description": "Enter an array of task IDs to link this target with one or more tasks.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "Enter an array of task IDs to link this target with one or more tasks.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": true
          },
          {
            "name": "list_ids",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter an array of List IDs to link this target with one or more Lists."
            },
            "description": "Enter an array of List IDs to link this target with one or more Lists.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "Enter an array of List IDs to link this target with one or more Lists.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateKeyResultrequest\",\n        \"required\": [\n          \"name\",\n          \"owners\",\n          \"type\",\n          \"steps_start\",\n          \"steps_end\",\n          \"unit\",\n          \"task_ids\",\n          \"list_ids\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"owners\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"contentEncoding\": \"int32\"\n            },\n            \"description\": \"\"\n          },\n          \"type\": {\n            \"description\": \"Target (key result) types include: `number`, `currency`, `boolean`, `percentage`, or `automatic`.\",\n            \"type\": \"string\"\n          },\n          \"steps_start\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"steps_end\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"unit\": {\n            \"type\": \"string\"\n          },\n          \"task_ids\": {\n            \"description\": \"Enter an array of task IDs to link this target with one or more tasks.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"list_ids\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Enter an array of List IDs to link this target with one or more Lists.\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New Target Name\",\n            \"owners\": [\n              183\n            ],\n            \"type\": \"number\",\n            \"steps_start\": 0,\n            \"steps_end\": 10,\n            \"unit\": \"km\",\n            \"task_ids\": [],\n            \"list_ids\": []\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New Key Result Name\",\n        \"owners\": [\n          183\n        ],\n        \"type\": \"number\",\n        \"steps_start\": 0,\n        \"steps_end\": 10,\n        \"unit\": \"km\",\n        \"task_ids\": [],\n        \"list_ids\": []\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "EditKeyResult",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_key_result_target",
        "description": {
          "tagline": "Update the target of a specific key result.",
          "detailed": "Use this tool to update the target value of a specified key result. It should be called when there's a need to modify the target associated with a key result in ClickUp."
        },
        "return_annotation": "Returns confirmation of the target update operation.",
        "arguments": [
          {
            "name": "key_result_identifier",
            "alternative_names": [
              "key_result_uuid",
              "key_result_reference"
            ],
            "description": "Unique identifier for the key result to be updated, provided as a UUID.",
            "endpoint_argument_name": "key_result_id"
          },
          {
            "name": "current_steps_value",
            "alternative_names": [
              "steps_current_value",
              "current_steps_count"
            ],
            "description": "The current number of steps completed for the key result target. Provide an integer value.",
            "endpoint_argument_name": "steps_current"
          },
          {
            "name": "note_update_description",
            "alternative_names": [
              "key_result_note",
              "update_note_content"
            ],
            "description": "Text for the note associated with the key result. Use to add or update content related to the key result.",
            "endpoint_argument_name": "note"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/key_result/{key_result_id}",
      "tags": [
        "Goals"
      ],
      "summary": "Edit Key Result",
      "description": "Update a Target.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "key_result_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "8480-49bc-8c57-e569747efe93 (uuid)"
            },
            "description": "8480-49bc-8c57-e569747efe93 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "steps_current",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "note",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"All properties available in the Create Key Result endpoint may also be used along with the additional properties below.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"EditKeyResultrequest\",\n        \"required\": [\n          \"steps_current\",\n          \"note\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"steps_current\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"note\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"steps_current\": 5,\n            \"note\": \"Target achieved\"\n          }\n        ]\n      },\n      \"example\": {\n        \"steps_current\": 5,\n        \"note\": \"Target achieved\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteKeyResult",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_goal_target",
        "description": {
          "tagline": "Delete a target from a goal in ClickUp.",
          "detailed": "Use this tool to delete a key result (target) from a goal in ClickUp when a specific target needs to be removed."
        },
        "return_annotation": "Confirmation of target deletion from a goal.",
        "arguments": [
          {
            "name": "goal_target_id",
            "alternative_names": [
              "key_result_identifier",
              "goal_result_id"
            ],
            "description": "The unique identifier (UUID) of the key result to delete from the goal in ClickUp.",
            "endpoint_argument_name": "key_result_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/key_result/{key_result_id}",
      "tags": [
        "Goals"
      ],
      "summary": "Delete Key Result",
      "description": "Delete a target from a Goal.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "key_result_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "8480-49bc-8c57-e569747efe93 (uuid)"
            },
            "description": "8480-49bc-8c57-e569747efe93 (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "InviteGuestToWorkspace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "invite_guest_to_workspace",
        "description": {
          "tagline": "Invite a guest to join a ClickUp workspace.",
          "detailed": "This tool is used to invite a guest to a ClickUp workspace on an Enterprise Plan. Ensure the guest has access to specific items in the workspace using additional endpoints."
        },
        "return_annotation": "Confirmation of guest invitation to a workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The integer ID of the Workspace to which the guest will be invited.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "guest_email",
            "alternative_names": [
              "invitee_email",
              "workspace_guest_email"
            ],
            "description": "The email address of the guest to be invited to the workspace. Ensure it is correctly formatted.",
            "endpoint_argument_name": "email"
          },
          {
            "name": "custom_role_id",
            "alternative_names": [
              "role_id",
              "user_role_id"
            ],
            "description": "The ID of the custom role to assign to the guest. Must be an integer value.",
            "endpoint_argument_name": "custom_role_id"
          },
          {
            "name": "allow_tag_editing",
            "alternative_names": [
              "enable_tag_editing",
              "tag_edit_permission"
            ],
            "description": "Set to true if the guest should be allowed to edit tags in the workspace.",
            "endpoint_argument_name": "can_edit_tags"
          },
          {
            "name": "allow_view_time_spent",
            "alternative_names": [
              "permit_time_spent_view",
              "enable_time_spent_visibility"
            ],
            "description": "Allow the guest to view time spent in the workspace. Accepts a boolean value: true to allow, false to deny.",
            "endpoint_argument_name": "can_see_time_spent"
          },
          {
            "name": "can_view_estimated_times",
            "alternative_names": [
              "enable_estimated_time_view",
              "allow_estimated_times_access"
            ],
            "description": "Set to true to allow the guest to view estimated times for tasks.",
            "endpoint_argument_name": "can_see_time_estimated"
          },
          {
            "name": "allow_guest_to_create_views",
            "alternative_names": [
              "permit_view_creation_for_guest",
              "enable_guest_view_creation"
            ],
            "description": "Indicates if the guest can create views in the workspace. Accepts a boolean value.",
            "endpoint_argument_name": "can_create_views"
          },
          {
            "name": "can_view_points_estimated",
            "alternative_names": [
              "allow_points_view",
              "enable_points_visibility"
            ],
            "description": "Set to true to allow the guest to view estimated points for tasks.",
            "endpoint_argument_name": "can_see_points_estimated"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_id}/guest",
      "tags": [
        "Guests"
      ],
      "summary": "Invite Guest To Workspace",
      "description": "Invite a guest to join a Workspace. To invite a member to your Workspace, use the [Invite User to Workspace](ref:inviteusertoworkspace) endpoint. \\\n \\\nYou'll also need to grant the guest access to specific items using the following endpoints: [Add Guest to Folder](ref:addguesttofolder), [Add Guest to List](ref:addguesttolist), or [Add Guest to Task](ref:addguesttotask). \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "email",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "can_edit_tags",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "can_see_time_spent",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "can_see_time_estimated",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "can_create_views",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "can_see_points_estimated",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "custom_role_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"InviteGuestToWorkspacerequest\",\n        \"required\": [\n          \"email\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"can_edit_tags\": {\n            \"type\": \"boolean\"\n          },\n          \"can_see_time_spent\": {\n            \"type\": \"boolean\"\n          },\n          \"can_see_time_estimated\": {\n            \"type\": \"boolean\"\n          },\n          \"can_create_views\": {\n            \"type\": \"boolean\"\n          },\n          \"can_see_points_estimated\": {\n            \"type\": \"boolean\"\n          },\n          \"custom_role_id\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          }\n        },\n        \"examples\": [\n          {\n            \"email\": \"guest@example.com\",\n            \"can_edit_tags\": true,\n            \"can_see_time_spent\": true,\n            \"can_see_time_estimated\": true,\n            \"can_create_views\": true,\n            \"can_see_points_estimated\": true,\n            \"custom_role_id\": 12345\n          }\n        ]\n      },\n      \"example\": {\n        \"email\": \"guest@example.com\",\n        \"can_edit_tags\": true,\n        \"can_see_time_spent\": true,\n        \"can_see_time_estimated\": true,\n        \"can_create_views\": true,\n        \"custom_role_id\": 12345\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "GetGuest",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_guest_information",
        "description": {
          "tagline": "Retrieve information about a guest in a workspace.",
          "detailed": "This tool is used to view details about a guest in a ClickUp workspace. It is available only for Workspaces on the Enterprise Plan. Use it when you need to obtain guest-related information, such as profile or access details."
        },
        "return_annotation": "Information about a specific guest.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the ClickUp workspace. This is required for identifying the specific workspace where the guest information is being retrieved.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "guest_identifier",
            "alternative_names": [
              "guest_id_number",
              "visitor_id"
            ],
            "description": "An integer representing the unique ID of the guest whose information is to be retrieved.",
            "endpoint_argument_name": "guest_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/guest/{guest_id}",
      "tags": [
        "Guests"
      ],
      "summary": "Get Guest",
      "description": "View information about a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "guest_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "EditGuestOnWorkspace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "configure_workspace_guest",
        "description": {
          "tagline": "Configure options for a guest in a workspace.",
          "detailed": "This tool adjusts settings for a guest in a ClickUp workspace, specifically for teams on the Enterprise Plan."
        },
        "return_annotation": "Information about the updated guest configuration.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "project_team_id"
            ],
            "description": "The unique identifier for the ClickUp workspace where the guest is being configured. This is required for identifying the specific workspace.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "guest_identifier",
            "alternative_names": [
              "guest_id_number",
              "workspace_guest_id"
            ],
            "description": "The unique identifier for the guest to be configured in the workspace.",
            "endpoint_argument_name": "guest_id"
          },
          {
            "name": "guest_custom_role_id",
            "alternative_names": [
              "workspace_guest_role_id",
              "custom_role_identifier"
            ],
            "description": "An integer representing the custom role ID assigned to the guest in the workspace.",
            "endpoint_argument_name": "custom_role_id"
          },
          {
            "name": "allow_viewing_points_estimated",
            "alternative_names": [
              "permit_viewing_points_estimated",
              "enable_points_estimated_view"
            ],
            "description": "Specify if the guest can view estimated points in the workspace. True allows viewing; false restricts it.",
            "endpoint_argument_name": "can_see_points_estimated"
          },
          {
            "name": "allow_guest_to_edit_tags",
            "alternative_names": [
              "permit_tag_editing_for_guest",
              "enable_guest_tag_modification"
            ],
            "description": "Set to true to allow the guest to edit tags in the workspace; false to disallow.",
            "endpoint_argument_name": "can_edit_tags"
          },
          {
            "name": "allow_viewing_time_spent",
            "alternative_names": [
              "enable_time_spent_visibility",
              "set_time_spent_access"
            ],
            "description": "Set to true to allow the guest to view time spent on tasks, false to restrict.",
            "endpoint_argument_name": "can_see_time_spent"
          },
          {
            "name": "can_see_time_estimates",
            "alternative_names": [
              "allow_time_estimate_view",
              "enable_time_estimate_visibility"
            ],
            "description": "Determines if the guest can view time estimates. Use true to allow, false to restrict.",
            "endpoint_argument_name": "can_see_time_estimated"
          },
          {
            "name": "allow_view_creation",
            "alternative_names": [
              "permit_view_creation",
              "enable_view_creation"
            ],
            "description": "A boolean to specify if the guest can create views. True allows view creation, false denies it.",
            "endpoint_argument_name": "can_create_views"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/team/{team_id}/guest/{guest_id}",
      "tags": [
        "Guests"
      ],
      "summary": "Edit Guest On Workspace",
      "description": "Configure options for a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "guest_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "can_see_points_estimated",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "can_edit_tags",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "can_see_time_spent",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "can_see_time_estimated",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "can_create_views",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "custom_role_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"EditGuestOnWorkspacerequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"can_see_points_estimated\": {\n            \"type\": \"boolean\"\n          },\n          \"can_edit_tags\": {\n            \"type\": \"boolean\"\n          },\n          \"can_see_time_spent\": {\n            \"type\": \"boolean\"\n          },\n          \"can_see_time_estimated\": {\n            \"type\": \"boolean\"\n          },\n          \"can_create_views\": {\n            \"type\": \"boolean\"\n          },\n          \"custom_role_id\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          }\n        },\n        \"examples\": [\n          {\n            \"can_see_points_estimated\": true,\n            \"can_edit_tags\": true,\n            \"can_see_time_spent\": true,\n            \"can_see_time_estimated\": true,\n            \"can_create_views\": true,\n            \"custom_role_id\": 12345\n          }\n        ]\n      },\n      \"example\": {\n        \"can_edit_tags\": true,\n        \"can_see_time_spent\": true,\n        \"can_see_time_estimated\": true,\n        \"can_see_points_estimated\": true,\n        \"can_create_views\": true,\n        \"custom_role_id\": 12345\n      }\n    }\n  },\n  \"required\": false\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "RemoveGuestFromWorkspace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_guest_from_workspace",
        "description": {
          "tagline": "Revoke a guest's access to a ClickUp workspace.",
          "detailed": "Remove a guest from a ClickUp workspace. Available only for Workspaces on the Enterprise Plan."
        },
        "return_annotation": "Confirmation of guest removal from workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The unique ID of the ClickUp workspace from which the guest will be removed. This is an integer.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "guest_id",
            "alternative_names": [
              "workspace_guest_id",
              "external_user_id"
            ],
            "description": "The unique identifier for the guest to be removed from the workspace. This should be an integer value.",
            "endpoint_argument_name": "guest_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/team/{team_id}/guest/{guest_id}",
      "tags": [
        "Guests"
      ],
      "summary": "Remove Guest From Workspace",
      "description": "Revoke a guest's access to a Workspace. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "guest_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "AddGuestToTask",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "share_task_with_guest",
        "description": {
          "tagline": "Share a task with a guest in the ClickUp Workspace.",
          "detailed": "This tool shares a specified task with a guest, available only on ClickUp's Enterprise Plan."
        },
        "return_annotation": "Confirmation of task sharing with a guest.",
        "arguments": [
          {
            "name": "task_id",
            "alternative_names": [
              "task_identifier",
              "task_reference"
            ],
            "description": "The unique identifier for the task to share with the guest.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "guest_id",
            "alternative_names": [
              "guest_identifier",
              "guest_user_id"
            ],
            "description": "The unique identifier for the guest to share the task with.",
            "endpoint_argument_name": "guest_id"
          },
          {
            "name": "guest_permission_level",
            "alternative_names": [
              "task_guest_permission",
              "permission_level_for_guest"
            ],
            "description": "Defines the level of access for the guest. Options: 'read', 'comment', 'edit', 'create'.",
            "endpoint_argument_name": "permission_level"
          },
          {
            "name": "workspace_id_when_custom_task_ids_enabled",
            "alternative_names": [
              "team_id_for_custom_task_ids",
              "workspace_id_if_custom_ids_true"
            ],
            "description": "Provide the Workspace ID when referencing tasks by custom task IDs. Required if `custom_task_ids` is `true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "include_shared_details",
            "alternative_names": [
              "show_shared_details",
              "display_shared_items"
            ],
            "description": "Set to `true` to include details of items shared with the guest. Defaults to `true`.",
            "endpoint_argument_name": "include_shared"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_custom_task_ids",
              "enable_custom_task_ids"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/task/{task_id}/guest/{guest_id}",
      "tags": [
        "Guests"
      ],
      "summary": "Add Guest To Task",
      "description": "Share a task with a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_shared",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
            },
            "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "guest_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "permission_level",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Can be `read` (view only), `comment`, `edit`, or `create` (full)."
            },
            "description": "Can be `read` (view only), `comment`, `edit`, or `create` (full).",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "Can be `read` (view only), `comment`, `edit`, or `create` (full)."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"AddGuestToTaskrequest\",\n        \"required\": [\n          \"permission_level\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"permission_level\": {\n            \"description\": \"Can be `read` (view only), `comment`, `edit`, or `create` (full).\",\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"permission_level\": \"read\"\n          }\n        ]\n      },\n      \"example\": {\n        \"permission_level\": \"read\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "RemoveGuestFromTask",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_guest_from_task",
        "description": {
          "tagline": "Revoke a guest's access to a specific task in ClickUp.",
          "detailed": "Use this tool to remove a guest from a task in ClickUp. This action is available only for Workspaces on the Enterprise Plan."
        },
        "return_annotation": "Confirmation of guest removal from task.",
        "arguments": [
          {
            "name": "task_id",
            "alternative_names": [
              "task_identifier",
              "task_reference_id"
            ],
            "description": "The unique identifier of the task from which the guest's access should be revoked. This is required to specify the task.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "guest_id",
            "alternative_names": [
              "guest_identifier",
              "guest_user_id"
            ],
            "description": "The ID of the guest to remove from the task. This is a required integer value.",
            "endpoint_argument_name": "guest_id"
          },
          {
            "name": "workspace_id_for_custom_task",
            "alternative_names": [
              "workspace_id_for_task",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when referencing a task by its custom task ID. This is required if 'custom_task_ids' is set to 'true'.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "include_shared_details",
            "alternative_names": [
              "include_shared_info",
              "include_shared_items"
            ],
            "description": "Set to `true` to include details of items shared with the guest. Default is `true`.",
            "endpoint_argument_name": "include_shared"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_ids",
              "set_custom_task_ids"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/task/{task_id}/guest/{guest_id}",
      "tags": [
        "Guests"
      ],
      "summary": "Remove Guest From Task",
      "description": "Revoke a guest's access to a task. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_shared",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
            },
            "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "guest_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "AddGuestToList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_guest_to_list",
        "description": {
          "tagline": "Add a guest to a specific list in ClickUp.",
          "detailed": "This tool adds a guest to a list within ClickUp, available only for Enterprise Plan workspaces."
        },
        "return_annotation": "Confirmation of guest added to the list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "target_list_id",
              "destination_list_id"
            ],
            "description": "The identifier of the list to which the guest will be added.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "guest_id",
            "alternative_names": [
              "invitee_id",
              "external_user_id"
            ],
            "description": "The unique identifier for the guest to be added. This should be an integer value.",
            "endpoint_argument_name": "guest_id"
          },
          {
            "name": "guest_permission_level",
            "alternative_names": [
              "guest_access_level",
              "list_permission_level"
            ],
            "description": "Permission level for the guest on the list. Options are `read`, `comment`, `edit`, or `create`.",
            "endpoint_argument_name": "permission_level"
          },
          {
            "name": "include_shared_details",
            "alternative_names": [
              "exclude_shared_details",
              "share_item_details"
            ],
            "description": "Set to false to exclude shared item details from the guest view; defaults to true to include them.",
            "endpoint_argument_name": "include_shared"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/list/{list_id}/guest/{guest_id}",
      "tags": [
        "Guests"
      ],
      "summary": "Add Guest To List",
      "description": "Share a List with a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_shared",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
            },
            "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "guest_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "permission_level",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Can be `read` (view only), `comment`, `edit`, or `create` (full)."
            },
            "description": "Can be `read` (view only), `comment`, `edit`, or `create` (full).",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "Can be `read` (view only), `comment`, `edit`, or `create` (full)."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"AddGuestToListrequest\",\n        \"required\": [\n          \"permission_level\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"permission_level\": {\n            \"description\": \"Can be `read` (view only), `comment`, `edit`, or `create` (full).\",\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"permission_level\": \"read\"\n          }\n        ]\n      },\n      \"example\": {\n        \"permission_level\": \"read\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "RemoveGuestFromList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_guest_from_list",
        "description": {
          "tagline": "Revoke a guest's access to a specific list in ClickUp.",
          "detailed": "This tool removes a guest's access from a specified list within ClickUp. It is available only for Workspaces on the Enterprise Plan."
        },
        "return_annotation": "Confirmation of guest's access removal from the list.",
        "arguments": [
          {
            "name": "list_identifier",
            "alternative_names": [
              "list_id_value",
              "list_reference"
            ],
            "description": "The unique identifier for the list from which the guest's access will be revoked. This must be an integer.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "guest_user_id",
            "alternative_names": [
              "guest_identifier",
              "user_id_of_guest"
            ],
            "description": "The unique identifier of the guest whose access is to be revoked from the list.",
            "endpoint_argument_name": "guest_id"
          },
          {
            "name": "include_shared_details",
            "alternative_names": [
              "include_shared_items",
              "share_item_details"
            ],
            "description": "Set to `true` to include details of items shared with the guest. Default is `true`.",
            "endpoint_argument_name": "include_shared"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/list/{list_id}/guest/{guest_id}",
      "tags": [
        "Guests"
      ],
      "summary": "Remove Guest From List",
      "description": "Revoke a guest's access to a List.\\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_shared",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
            },
            "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "guest_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "AddGuestToFolder",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_guest_to_folder",
        "description": {
          "tagline": "Share a folder with a guest in ClickUp's Enterprise Plan.",
          "detailed": "This tool shares a specific folder with a guest, available only for ClickUp Workspaces on the Enterprise Plan. Use it to collaborate by granting access to specified guests."
        },
        "return_annotation": "Information about the shared folder with the guest.",
        "arguments": [
          {
            "name": "folder_id",
            "alternative_names": [
              "folder_identifier",
              "id_of_folder"
            ],
            "description": "The unique integer ID of the folder to be shared with the guest.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "guest_identifier",
            "alternative_names": [
              "guest_id_number",
              "guest_key"
            ],
            "description": "The unique identifier for the guest to whom the folder will be shared. This should be an integer representing the guest's ID.",
            "endpoint_argument_name": "guest_id"
          },
          {
            "name": "guest_permission_level",
            "alternative_names": [
              "folder_sharing_permission",
              "guest_access_level"
            ],
            "description": "Defines guest's access level: 'read' for view only, 'comment', 'edit', or 'create' for full access.",
            "endpoint_argument_name": "permission_level"
          },
          {
            "name": "include_shared_items",
            "alternative_names": [
              "show_shared_items",
              "display_shared_items"
            ],
            "description": "Set to true to include details of items shared with the guest. Default is true.",
            "endpoint_argument_name": "include_shared"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/folder/{folder_id}/guest/{guest_id}",
      "tags": [
        "Guests"
      ],
      "summary": "Add Guest To Folder",
      "description": "Share a Folder with a guest. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_shared",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
            },
            "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "guest_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "permission_level",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Can be `read` (view only), `comment`, `edit`, or `create` (full)."
            },
            "description": "Can be `read` (view only), `comment`, `edit`, or `create` (full).",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "Can be `read` (view only), `comment`, `edit`, or `create` (full)."
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"AddGuestToFolderrequest\",\n        \"required\": [\n          \"permission_level\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"permission_level\": {\n            \"description\": \"Can be `read` (view only), `comment`, `edit`, or `create` (full).\",\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"permission_level\": \"read\"\n          }\n        ]\n      },\n      \"example\": {\n        \"permission_level\": \"read\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "RemoveGuestFromFolder",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_guest_from_folder",
        "description": {
          "tagline": "Revoke a guest's access to a specified folder.",
          "detailed": "Use this tool to remove a guest's access to a specific folder in ClickUp workspaces on the Enterprise Plan."
        },
        "return_annotation": "Confirmation of guest removal from folder.",
        "arguments": [
          {
            "name": "folder_identifier",
            "alternative_names": [
              "folder_id_key",
              "folder_unique_id"
            ],
            "description": "The unique identifier for the folder from which the guest's access should be revoked. This ID is essential to specify the exact folder within the ClickUp workspace.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "guest_identifier",
            "alternative_names": [
              "guest_id_number",
              "access_guest_id"
            ],
            "description": "The unique numeric ID of the guest to be removed from the folder. This is required to identify which guest's access is being revoked.",
            "endpoint_argument_name": "guest_id"
          },
          {
            "name": "include_shared_items",
            "alternative_names": [
              "show_shared_details",
              "display_shared_info"
            ],
            "description": "Set to true to include details of items shared with the guest. Defaults to true.",
            "endpoint_argument_name": "include_shared"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/folder/{folder_id}/guest/{guest_id}",
      "tags": [
        "Guests"
      ],
      "summary": "Remove Guest From Folder",
      "description": "Revoke a guest's access to a Folder. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_shared",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
            },
            "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "guest_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetLists",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_lists_in_folder",
        "description": {
          "tagline": "Retrieve lists from a specific folder.",
          "detailed": "Use this tool to view all the lists contained within a specified folder by providing the folder ID. It should be called when you need to access or manage lists within a folder within ClickUp."
        },
        "return_annotation": "Lists available within a specified folder.",
        "arguments": [
          {
            "name": "folder_id",
            "alternative_names": [
              "folder_identifier",
              "id_of_folder"
            ],
            "description": "The unique identifier for the folder whose lists are to be retrieved. This is required to specify which folder's lists to view.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "include_archived_lists",
            "alternative_names": [
              "show_archived_lists",
              "display_archived_lists"
            ],
            "description": "Specify whether to include archived lists. Set to true to include and false to exclude.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/folder/{folder_id}/list",
      "tags": [
        "Lists"
      ],
      "summary": "Get Lists",
      "description": "View the Lists within a Folder.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_clickup_list",
        "description": {
          "tagline": "Create a new list in a ClickUp folder.",
          "detailed": "Use this tool to add a new list to a specified folder in ClickUp. Ideal for organizing tasks or projects within a folder."
        },
        "return_annotation": "Confirmation of the new list creation in a folder.",
        "arguments": [
          {
            "name": "folder_id",
            "alternative_names": [
              "target_folder_id",
              "destination_folder_id"
            ],
            "description": "The unique integer identifier for the folder where the new list will be added.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "list_name",
            "alternative_names": [
              "list_title",
              "name_of_list"
            ],
            "description": "The name of the new list to be created within the specified ClickUp folder.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "list_description",
            "alternative_names": [
              "list_content",
              "description_text"
            ],
            "description": "A plain text description for the list. Use this to provide details about the list's purpose.",
            "endpoint_argument_name": "content"
          },
          {
            "name": "formatted_list_description",
            "alternative_names": [
              "markdown_list_content",
              "styled_list_description"
            ],
            "description": "Provide a markdown-formatted description for the List. Use this instead of plain text content.",
            "endpoint_argument_name": "markdown_content"
          },
          {
            "name": "due_date_timestamp",
            "alternative_names": [
              "list_due_date",
              "deadline_timestamp"
            ],
            "description": "The due date for the list in Unix timestamp format. Determines when the list should be completed.",
            "endpoint_argument_name": "due_date"
          },
          {
            "name": "list_priority",
            "alternative_names": [
              "priority_level",
              "task_list_priority"
            ],
            "description": "An integer value indicating the priority of the list, where a higher number typically means higher priority.",
            "endpoint_argument_name": "priority"
          },
          {
            "name": "list_assignee_user_id",
            "alternative_names": [
              "list_responsible_user_id",
              "list_assignment_user_id"
            ],
            "description": "The user ID to assign this list to a specific user. This identifies who will be responsible for the list.",
            "endpoint_argument_name": "assignee"
          },
          {
            "name": "list_color",
            "alternative_names": [
              "color_status",
              "list_status_color"
            ],
            "description": "Specifies the color of the List, not related to task statuses.",
            "endpoint_argument_name": "status"
          },
          {
            "name": "include_time_in_due_date",
            "alternative_names": [
              "due_date_with_time",
              "time_in_due_date"
            ],
            "description": "Set to true to include a specific time with the due date.",
            "endpoint_argument_name": "due_date_time"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/folder/{folder_id}/list",
      "tags": [
        "Lists"
      ],
      "summary": "Create List",
      "description": "Add a new List to a Folder.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "content",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "markdown_content",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Use `markdown_content` instead of `content` to format your List description."
            },
            "description": "Use `markdown_content` instead of `content` to format your List description.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "Use `markdown_content` instead of `content` to format your List description."
            },
            "schema_required": false
          },
          {
            "name": "due_date",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "due_date_time",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "priority",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include a `user_id` to assign this List."
            },
            "description": "Include a `user_id` to assign this List.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer",
              "description": "Include a `user_id` to assign this List."
            },
            "schema_required": false
          },
          {
            "name": "status",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "**Status** refers to the List color rather than the task Statuses available in the List."
            },
            "description": "**Status** refers to the List color rather than the task Statuses available in the List.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "**Status** refers to the List color rather than the task Statuses available in the List."
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateListrequest\",\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"markdown_content\": {\n            \"type\": \"string\",\n            \"description\": \"Use `markdown_content` instead of `content` to format your List description.\"\n          },\n          \"due_date\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"due_date_time\": {\n            \"type\": \"boolean\"\n          },\n          \"priority\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"assignee\": {\n            \"description\": \"Include a `user_id` to assign this List.\",\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"status\": {\n            \"description\": \"**Status** refers to the List color rather than the task Statuses available in the List.\",\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New List Name\",\n            \"content\": \"New List Content\",\n            \"markdown_content\": \"# This is markdown\\n ***bold and italicized text***\",\n            \"due_date\": 1567780450202,\n            \"due_date_time\": false,\n            \"priority\": 1,\n            \"assignee\": 183,\n            \"status\": \"red\"\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New List Name\",\n        \"content\": \"New List Content\",\n        \"markdown_content\": \"# This is markdown\\n ***bold and italicized text***\",\n        \"due_date\": 1567780450202,\n        \"due_date_time\": false,\n        \"priority\": 1,\n        \"assignee\": 183,\n        \"status\": \"red\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "CreateFolderFromTemplate",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_folder_from_template",
        "description": {
          "tagline": "Creates a new folder from a template in a ClickUp space.",
          "detailed": "This tool creates a new folder using a predefined template within a specified ClickUp space. It can also incorporate nested assets like lists and tasks from the template into the new folder. Templates must be added to your Workspace before use. The operation can be executed asynchronously or synchronously."
        },
        "return_annotation": "Details of the created folder from the template.",
        "arguments": [
          {
            "name": "clickup_space_id",
            "alternative_names": [
              "space_identifier",
              "folder_space_id"
            ],
            "description": "ID of the ClickUp Space where the folder will be created.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "folder_template_id",
            "alternative_names": [
              "template_folder_id",
              "use_template_id"
            ],
            "description": "The ID of the folder template to be used for creating a new folder in a ClickUp space. Ensure the template is added to your Workspace.",
            "endpoint_argument_name": "template_id"
          },
          {
            "name": "folder_creation_options",
            "alternative_names": [
              "folder_options",
              "creation_parameters"
            ],
            "description": "JSON object containing name and options for creating the folder, including import settings and date remapping.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/space/{space_id}/folder_template/{template_id}",
      "tags": [
        "Folders"
      ],
      "summary": "Create Folder from template",
      "description": "Create a new Folder using a Folder template within a Space. This endpoint allows you to create a folder with all its nested assets (lists, tasks, etc.) from a predefined template available in your Workspace. Publicly shared templates must be [added to your Workspace](https://help.clickup.com/hc/en-us/articles/6326023965591-Add-a-template-to-your-library) before you can use them with the public API.\nThis request can be run asynchronously or synchronously via the `return_immediately` parameter.\n",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "ID of the Space where the Folder will be created"
            },
            "description": "ID of the Space where the Folder will be created",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "template_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "ID of the Folder template to use."
            },
            "description": "ID of the Folder template to use.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Name of the new Folder"
                },
                "options": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "return_immediately": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\n"
                    },
                    "content": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "List description"
                    },
                    "time_estimate": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Include time (hours, minutes and seconds)"
                    },
                    "automation": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import automation options"
                    },
                    "include_views": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import views"
                    },
                    "old_due_date": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks due dates"
                    },
                    "old_start_date": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks start dates"
                    },
                    "old_followers": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks watchers"
                    },
                    "comment_attachments": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks comment attachments"
                    },
                    "recur_settings": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks recurring settings"
                    },
                    "old_tags": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks tags"
                    },
                    "old_statuses": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks status settings"
                    },
                    "subtasks": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks subtasks"
                    },
                    "custom_type": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks types"
                    },
                    "old_assignees": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks assignees"
                    },
                    "attachments": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks attachments"
                    },
                    "comment": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks comments"
                    },
                    "old_status": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks current statuses"
                    },
                    "external_dependencies": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks external dependencies"
                    },
                    "internal_dependencies": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks internal dependencies"
                    },
                    "priority": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks priority"
                    },
                    "custom_fields": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks Custom Fields"
                    },
                    "old_checklists": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks checklists"
                    },
                    "relationships": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks relationships"
                    },
                    "old_subtask_assignees": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks subtasks and assignees combination"
                    },
                    "start_date": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Project start date for remapping dates"
                    },
                    "due_date": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Project due date for remapping dates"
                    },
                    "remap_start_date": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Remap start dates"
                    },
                    "skip_weekends": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Skip weekends when remapping dates"
                    },
                    "archived": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": [
                        "1",
                        "2",
                        "None"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "Include archived tasks (1 or 2 or null)"
                    }
                  },
                  "inner_properties": null,
                  "description": "Options for creating the Folder"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the new Folder"
                },
                "options": {
                  "type": "object",
                  "description": "Options for creating the Folder",
                  "properties": {
                    "return_immediately": {
                      "type": "boolean",
                      "description": "Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\n"
                    },
                    "content": {
                      "type": "string",
                      "description": "List description"
                    },
                    "time_estimate": {
                      "type": "boolean",
                      "description": "Include time (hours, minutes and seconds)"
                    },
                    "automation": {
                      "type": "boolean",
                      "description": "Import automation options"
                    },
                    "include_views": {
                      "type": "boolean",
                      "description": "Import views"
                    },
                    "old_due_date": {
                      "type": "boolean",
                      "description": "Import tasks due dates"
                    },
                    "old_start_date": {
                      "type": "boolean",
                      "description": "Import tasks start dates"
                    },
                    "old_followers": {
                      "type": "boolean",
                      "description": "Import tasks watchers"
                    },
                    "comment_attachments": {
                      "type": "boolean",
                      "description": "Import tasks comment attachments"
                    },
                    "recur_settings": {
                      "type": "boolean",
                      "description": "Import tasks recurring settings"
                    },
                    "old_tags": {
                      "type": "boolean",
                      "description": "Import tasks tags"
                    },
                    "old_statuses": {
                      "type": "boolean",
                      "description": "Import tasks status settings"
                    },
                    "subtasks": {
                      "type": "boolean",
                      "description": "Import tasks subtasks"
                    },
                    "custom_type": {
                      "type": "boolean",
                      "description": "Import tasks types"
                    },
                    "old_assignees": {
                      "type": "boolean",
                      "description": "Import tasks assignees"
                    },
                    "attachments": {
                      "type": "boolean",
                      "description": "Import tasks attachments"
                    },
                    "comment": {
                      "type": "boolean",
                      "description": "Import tasks comments"
                    },
                    "old_status": {
                      "type": "boolean",
                      "description": "Import tasks current statuses"
                    },
                    "external_dependencies": {
                      "type": "boolean",
                      "description": "Import tasks external dependencies"
                    },
                    "internal_dependencies": {
                      "type": "boolean",
                      "description": "Import tasks internal dependencies"
                    },
                    "priority": {
                      "type": "boolean",
                      "description": "Import tasks priority"
                    },
                    "custom_fields": {
                      "type": "boolean",
                      "description": "Import tasks Custom Fields"
                    },
                    "old_checklists": {
                      "type": "boolean",
                      "description": "Import tasks checklists"
                    },
                    "relationships": {
                      "type": "boolean",
                      "description": "Import tasks relationships"
                    },
                    "old_subtask_assignees": {
                      "type": "boolean",
                      "description": "Import tasks subtasks and assignees combination"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Project start date for remapping dates",
                      "format": "date-time"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Project due date for remapping dates",
                      "format": "date-time"
                    },
                    "remap_start_date": {
                      "type": "boolean",
                      "description": "Remap start dates"
                    },
                    "skip_weekends": {
                      "type": "boolean",
                      "description": "Skip weekends when remapping dates"
                    },
                    "archived": {
                      "type": "integer",
                      "description": "Include archived tasks (1 or 2 or null)",
                      "enum": [
                        1,
                        2,
                        null
                      ]
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the new Folder\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"description\": \"Options for creating the Folder\",\n            \"properties\": {\n              \"return_immediately\": {\n                \"type\": \"boolean\",\n                \"description\": \"Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\\n\",\n                \"default\": true\n              },\n              \"content\": {\n                \"type\": \"string\",\n                \"description\": \"List description\"\n              },\n              \"time_estimate\": {\n                \"type\": \"boolean\",\n                \"description\": \"Include time (hours, minutes and seconds)\"\n              },\n              \"automation\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import automation options\"\n              },\n              \"include_views\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import views\"\n              },\n              \"old_due_date\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks due dates\"\n              },\n              \"old_start_date\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks start dates\"\n              },\n              \"old_followers\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks watchers\"\n              },\n              \"comment_attachments\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks comment attachments\"\n              },\n              \"recur_settings\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks recurring settings\"\n              },\n              \"old_tags\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks tags\"\n              },\n              \"old_statuses\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks status settings\"\n              },\n              \"subtasks\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks subtasks\"\n              },\n              \"custom_type\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks types\"\n              },\n              \"old_assignees\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks assignees\"\n              },\n              \"attachments\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks attachments\"\n              },\n              \"comment\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks comments\"\n              },\n              \"old_status\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks current statuses\"\n              },\n              \"external_dependencies\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks external dependencies\"\n              },\n              \"internal_dependencies\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks internal dependencies\"\n              },\n              \"priority\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks priority\"\n              },\n              \"custom_fields\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks Custom Fields\"\n              },\n              \"old_checklists\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks checklists\"\n              },\n              \"relationships\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks relationships\"\n              },\n              \"old_subtask_assignees\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks subtasks and assignees combination\"\n              },\n              \"start_date\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Project start date for remapping dates\"\n              },\n              \"due_date\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Project due date for remapping dates\"\n              },\n              \"remap_start_date\": {\n                \"type\": \"boolean\",\n                \"description\": \"Remap start dates\"\n              },\n              \"skip_weekends\": {\n                \"type\": \"boolean\",\n                \"description\": \"Skip weekends when remapping dates\"\n              },\n              \"archived\": {\n                \"type\": \"integer\",\n                \"enum\": [\n                  1,\n                  2,\n                  null\n                ],\n                \"description\": \"Include archived tasks (1 or 2 or null)\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetFolderlessLists",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_folderless_lists",
        "description": {
          "tagline": "View Lists in a Space not located in a Folder.",
          "detailed": "Use this tool to retrieve lists within a specified space that are not contained within any folder, providing an organized view of unassigned lists."
        },
        "return_annotation": "Lists in a space not located in a folder.",
        "arguments": [
          {
            "name": "space_identifier",
            "alternative_names": [
              "space_id_number",
              "space_reference"
            ],
            "description": "The unique identifier of the space to retrieve the folderless lists from. It should be an integer.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "include_archived_lists",
            "alternative_names": [
              "show_archived_lists",
              "return_archived_lists"
            ],
            "description": "Specify true to include archived lists, or false to exclude them.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/space/{space_id}/list",
      "tags": [
        "Lists"
      ],
      "summary": "Get Folderless Lists",
      "description": "View the Lists in a Space that aren't located in a Folder.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateFolderlessList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_folderless_list_to_space",
        "description": {
          "tagline": "Add a new folderless list to a specified space.",
          "detailed": "This tool is used to create a new list within a specified space in ClickUp without associating it with a folder. It facilitates the organization of tasks directly within the space."
        },
        "return_annotation": "Information about the newly created list.",
        "arguments": [
          {
            "name": "space_id",
            "alternative_names": [
              "space_identifier",
              "id_of_space"
            ],
            "description": "The unique identifier of the space where the list will be added.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "list_name",
            "alternative_names": [
              "new_list_name",
              "space_list_name"
            ],
            "description": "The name of the new list to be created within the space.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "list_description",
            "alternative_names": [
              "description_content",
              "details"
            ],
            "description": "A text description for the new list. Use plain text. For markdown, use `markdown_content`.",
            "endpoint_argument_name": "content"
          },
          {
            "name": "list_markdown_description",
            "alternative_names": [
              "markdown_list_content",
              "formatted_list_description"
            ],
            "description": "Markdown formatted description for the list. Use this instead of a plain text description.",
            "endpoint_argument_name": "markdown_content"
          },
          {
            "name": "due_date_timestamp",
            "alternative_names": [
              "list_due_date_timestamp",
              "timestamp_due_date"
            ],
            "description": "An integer representing the UNIX timestamp for the list's due date. This defines the deadline for the list.",
            "endpoint_argument_name": "due_date"
          },
          {
            "name": "list_priority_level",
            "alternative_names": [
              "priority_level",
              "list_urgency_level"
            ],
            "description": "Set the priority level for the list. It should be an integer value indicating the list's urgency or importance.",
            "endpoint_argument_name": "priority"
          },
          {
            "name": "list_owner_user_id",
            "alternative_names": [
              "owner_id",
              "user_id"
            ],
            "description": "The user ID for the list owner to be assigned to the new list.",
            "endpoint_argument_name": "assignee"
          },
          {
            "name": "list_color_status",
            "alternative_names": [
              "list_theme_color",
              "list_visual_status"
            ],
            "description": "Specifies the color representing the List. This is for visual identification and does not affect task statuses.",
            "endpoint_argument_name": "status"
          },
          {
            "name": "include_due_time",
            "alternative_names": [
              "use_due_time",
              "set_due_time"
            ],
            "description": "Set to true if the due date should include a specific time.",
            "endpoint_argument_name": "due_date_time"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/space/{space_id}/list",
      "tags": [
        "Lists"
      ],
      "summary": "Create Folderless List",
      "description": "Add a new List in a Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "content",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "markdown_content",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Use `markdown_content` instead of `content` to format your List description."
            },
            "description": "Use `markdown_content` instead of `content` to format your List description.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "Use `markdown_content` instead of `content` to format your List description."
            },
            "schema_required": false
          },
          {
            "name": "due_date",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "due_date_time",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "priority",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include a `user_id` to add a List owner."
            },
            "description": "Include a `user_id` to add a List owner.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer",
              "description": "Include a `user_id` to add a List owner."
            },
            "schema_required": false
          },
          {
            "name": "status",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "**Status** refers to the List color rather than the task Statuses available in the List."
            },
            "description": "**Status** refers to the List color rather than the task Statuses available in the List.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "**Status** refers to the List color rather than the task Statuses available in the List."
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateFolderlessListrequest\",\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"markdown_content\": {\n            \"type\": \"string\",\n            \"description\": \"Use `markdown_content` instead of `content` to format your List description.\"\n          },\n          \"due_date\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"due_date_time\": {\n            \"type\": \"boolean\"\n          },\n          \"priority\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"assignee\": {\n            \"description\": \"Include a `user_id` to add a List owner.\",\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"status\": {\n            \"description\": \"**Status** refers to the List color rather than the task Statuses available in the List.\",\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New List Name\",\n            \"content\": \"New List Content\",\n            \"due_date\": 1567780450202,\n            \"due_date_time\": false,\n            \"priority\": 1,\n            \"assignee\": 183,\n            \"status\": \"red\"\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New List Name\",\n        \"content\": \"New List Content\",\n        \"markdown_content\": \"# This is markdown\\n ***bold and italicized text***\",\n        \"due_date\": 1567780450202,\n        \"due_date_time\": false,\n        \"priority\": 1,\n        \"assignee\": 183,\n        \"status\": \"red\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "GetList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_list_details",
        "description": {
          "tagline": "Retrieve details of a specific list in ClickUp.",
          "detailed": "Use this tool to get detailed information about a specific list in ClickUp by providing the list ID. It helps in obtaining metadata and current status of the list."
        },
        "return_annotation": "Information about a specific list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "list_number"
            ],
            "description": "The unique ID of the list to view details. Right-click the list in your ClickUp sidebar, select 'Copy link', and paste the URL's last string.",
            "endpoint_argument_name": "list_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/list/{list_id}",
      "tags": [
        "Lists"
      ],
      "summary": "Get List",
      "description": "View information about a List.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The List ID. To find the List ID, right-click the List in your Sidebar, select Copy link, and paste the link in your URL. The last string in the URL is your List ID."
            },
            "description": "The List ID. To find the List ID, right-click the List in your Sidebar, select Copy link, and paste the link in your URL. The last string in the URL is your List ID.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "UpdateList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_clickup_list",
        "description": {
          "tagline": "Update the details of a ClickUp list.",
          "detailed": "Use this tool to rename a ClickUp list, update its description, set a due date or time, change the priority, assign someone, or modify the list color."
        },
        "return_annotation": "Updated details of the ClickUp list.",
        "arguments": [
          {
            "name": "list_identifier",
            "alternative_names": [
              "clickup_list_id",
              "list_unique_id"
            ],
            "description": "The unique identifier of the ClickUp list to update. This is a required string field.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "list_name",
            "alternative_names": [
              "list_title",
              "list_label"
            ],
            "description": "The new name for the ClickUp list. This should be a string value.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "list_description_content",
            "alternative_names": [
              "description_content",
              "list_content"
            ],
            "description": "The plain text description to update for the ClickUp list. Use this instead of markdown for simple text updates.",
            "endpoint_argument_name": "content"
          },
          {
            "name": "formatted_list_description",
            "alternative_names": [
              "markdown_formatted_list_description",
              "md_list_description"
            ],
            "description": "Formatted description of the list using Markdown syntax instead of plain text.",
            "endpoint_argument_name": "markdown_content"
          },
          {
            "name": "list_due_date",
            "alternative_names": [
              "due_date_integer",
              "list_deadline"
            ],
            "description": "Set the list's due date as a Unix timestamp in milliseconds, representing the time the list is due.",
            "endpoint_argument_name": "due_date"
          },
          {
            "name": "list_priority",
            "alternative_names": [
              "priority_level",
              "list_priority_level"
            ],
            "description": "Set the list's priority as an integer. Usually, 1 is high, 2 is medium, and 3 is low priority.",
            "endpoint_argument_name": "priority"
          },
          {
            "name": "list_assignee_id",
            "alternative_names": [
              "assigned_user_id",
              "assignee_user_id"
            ],
            "description": "The ID of the user to assign to the list. Provide a valid user ID string.",
            "endpoint_argument_name": "assignee"
          },
          {
            "name": "list_color",
            "alternative_names": [
              "list_status_color",
              "color_status"
            ],
            "description": "Specify the color of the list. This refers to the List color rather than task statuses.",
            "endpoint_argument_name": "status"
          },
          {
            "name": "include_due_date_time",
            "alternative_names": [
              "use_specific_due_time",
              "set_due_time"
            ],
            "description": "Set to true to include a specific time with the due date.",
            "endpoint_argument_name": "due_date_time"
          },
          {
            "name": "remove_list_color",
            "alternative_names": [
              "unset_list_color",
              "delete_list_color"
            ],
            "description": "Set to `true` to remove the List color; default is `false`.",
            "endpoint_argument_name": "unset_status"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/list/{list_id}",
      "tags": [
        "Lists"
      ],
      "summary": "Update List",
      "description": "Rename a List, update the List Info description, set a due date/time, set the List's priority, set an assignee, set or remove the List color.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "content",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "markdown_content",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Use `markdown_content` instead of `content` to format your List description."
            },
            "description": "Use `markdown_content` instead of `content` to format your List description.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "Use `markdown_content` instead of `content` to format your List description."
            },
            "schema_required": false
          },
          {
            "name": "due_date",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "due_date_time",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "priority",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "status",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "**Status** refers to the List color rather than the task Statuses available in the List."
            },
            "description": "**Status** refers to the List color rather than the task Statuses available in the List.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "**Status** refers to the List color rather than the task Statuses available in the List."
            },
            "schema_required": false
          },
          {
            "name": "unset_status",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "By default, this is `false.` To remove the List color use `unset_status: true`."
            },
            "description": "By default, this is `false.` To remove the List color use `unset_status: true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": "By default, this is `false.` To remove the List color use `unset_status: true`."
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateListrequest\",\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"markdown_content\": {\n            \"type\": \"string\",\n            \"description\": \"Use `markdown_content` instead of `content` to format your List description.\"\n          },\n          \"due_date\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"due_date_time\": {\n            \"type\": \"boolean\"\n          },\n          \"priority\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"assignee\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"**Status** refers to the List color rather than the task Statuses available in the List.\",\n            \"type\": \"string\"\n          },\n          \"unset_status\": {\n            \"description\": \"By default, this is `false.` To remove the List color use `unset_status: true`.\",\n            \"type\": \"boolean\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Updated List Name\",\n            \"content\": \"Updated List Content\",\n            \"markdown_content\": \"# This is markdown\\n ***bold and italicized text***\",\n            \"due_date\": 1567780450202,\n            \"due_date_time\": true,\n            \"priority\": 2,\n            \"assignee\": \"none\",\n            \"status\": \"red\",\n            \"unset_status\": true\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Updated List Name\",\n        \"content\": \"Updated List Content\",\n        \"markdown_content\": \"# This is markdown\\n ***bold and italicized text***\",\n        \"due_date\": 1567780450202,\n        \"due_date_time\": true,\n        \"priority\": 2,\n        \"assignee\": \"none\",\n        \"status\": \"red\",\n        \"unset_status\": true\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_workspace_list",
        "description": {
          "tagline": "Delete a list from your ClickUp workspace.",
          "detailed": "Use this tool to remove a specific list from your ClickUp workspace when it's no longer needed."
        },
        "return_annotation": "Confirmation of list deletion from the workspace.",
        "arguments": [
          {
            "name": "workspace_list_id",
            "alternative_names": [
              "list_identifier",
              "workspace_list_identifier"
            ],
            "description": "The unique integer ID of the list to be deleted from the ClickUp workspace.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "http_content_type",
              "content_type_info"
            ],
            "description": "Specifies the media type of the request. Typically set to 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/list/{list_id}",
      "tags": [
        "Lists"
      ],
      "summary": "Delete List",
      "description": "Delete a List from your Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "AddTaskToList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_task_to_clickup_list",
        "description": {
          "tagline": "Add a task to an additional list in ClickUp.",
          "detailed": "This tool adds a specified task to an additional list in ClickUp, requiring the 'Tasks in Multiple List' ClickApp to be enabled. Use this tool to manage tasks across multiple lists efficiently."
        },
        "return_annotation": "Confirmation of task addition to list.",
        "arguments": [
          {
            "name": "target_list_id",
            "alternative_names": [
              "destination_list_id",
              "secondary_list_id"
            ],
            "description": "The unique identifier for the target list where the task will be added. This is required to associate the task with the correct list in ClickUp.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id",
              "task_reference"
            ],
            "description": "Specify the ID of the task to be added to an additional list in ClickUp.",
            "endpoint_argument_name": "task_id"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/list/{list_id}/task/{task_id}",
      "tags": [
        "Lists"
      ],
      "summary": "Add Task To List",
      "description": "Add a task to an additional List. \\\n \\\n***Note:** This endpoint requires the [Tasks in Multiple List ClickApp](https://help.clickup.com/hc/en-us/articles/6309958824727-Tasks-in-Multiple-Lists) to be enabled.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "RemoveTaskFromList",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_task_from_additional_list",
        "description": {
          "tagline": "Remove a task from an additional list in ClickUp.",
          "detailed": "Use this tool to remove a task from an additional list, not the task's home list. Requires the 'Tasks in Multiple Lists' feature to be enabled in ClickUp."
        },
        "return_annotation": "Confirmation of task removal from the additional list.",
        "arguments": [
          {
            "name": "additional_list_id",
            "alternative_names": [
              "remove_list_id",
              "secondary_list_id"
            ],
            "description": "The ID of the additional list from which the task should be removed. This is required for identifying the secondary list, not the task's home list.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id_value",
              "task_unique_id"
            ],
            "description": "The unique identifier for the task to be removed from the additional list.",
            "endpoint_argument_name": "task_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/list/{list_id}/task/{task_id}",
      "tags": [
        "Lists"
      ],
      "summary": "Remove Task From List",
      "description": "Remove a task from an additional List. You can't remove a task from its home List. \\\n \\\n***Note:** This endpoint requires the [Tasks in Multiple List ClickApp](https://help.clickup.com/hc/en-us/articles/6309958824727-Tasks-in-Multiple-Lists) to be enabled.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetTaskMembers",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_task_members",
        "description": {
          "tagline": "Retrieve members with direct access to a task.",
          "detailed": "Use this tool to view the people who have direct access to a specific task in ClickUp. It does not include members with inherited permissions through the hierarchy."
        },
        "return_annotation": "List of people with access to a task.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_unique_id",
              "task_reference"
            ],
            "description": "The unique identifier of the task to retrieve members for. This ID is necessary to specify the task in question.",
            "endpoint_argument_name": "task_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/task/{task_id}/member",
      "tags": [
        "Members"
      ],
      "summary": "Get Task Members",
      "description": "View the people who have access to a task. Responses do not include people with inherited Hierarchy permission to the task.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetListMembers",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_list_members",
        "description": {
          "tagline": "Retrieve members with access to a specific list in ClickUp.",
          "detailed": "Use this tool to get the members of a ClickUp workspace who have access to a specified list. It helps in managing and viewing user access to project resources."
        },
        "return_annotation": "List of workspace members with access to a specified list.",
        "arguments": [
          {
            "name": "list_id",
            "alternative_names": [
              "list_identifier",
              "list_access_id"
            ],
            "description": "The unique identifier for the list in ClickUp. It is required to fetch the members with access to this list.",
            "endpoint_argument_name": "list_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/list/{list_id}/member",
      "tags": [
        "Members"
      ],
      "summary": "Get List Members",
      "description": "Get Workspace members who have access to a List.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetCustomRoles",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_workspace_custom_roles",
        "description": {
          "tagline": "Retrieve custom roles from a specific workspace.",
          "detailed": "This tool is used to retrieve the custom roles available in a specified workspace on ClickUp. It should be called when you need to view or manage roles in a ClickUp workspace."
        },
        "return_annotation": "List of custom roles available in the workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The unique identifier for the workspace to retrieve custom roles from.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "include_members",
            "alternative_names": [
              "with_members",
              "show_members"
            ],
            "description": "Include member details in the response. Set to true to include, false to exclude.",
            "endpoint_argument_name": "include_members"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/customroles",
      "tags": [
        "Roles"
      ],
      "summary": "Get Custom Roles",
      "description": "View the Custom Roles available in a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_members",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "SharedHierarchy",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_shared_hierarchy",
        "description": {
          "tagline": "View shared tasks, lists, and folders.",
          "detailed": "Use this tool to view tasks, lists, and folders shared with the authenticated user in a specified team."
        },
        "return_annotation": "Shared tasks, lists, and folders for the user.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_id",
              "workspace_identifier"
            ],
            "description": "The Workspace ID to view shared tasks, lists, and folders.",
            "endpoint_argument_name": "team_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/shared",
      "tags": [
        "Shared Hierarchy"
      ],
      "summary": "Shared Hierarchy",
      "description": "View the tasks, Lists, and Folders that have been shared with the authenticated user.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetSpaces",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "retrieve_available_spaces",
        "description": {
          "tagline": "View available Spaces in a Workspace.",
          "detailed": "The tool retrieves the Spaces within a specified Workspace, providing member info for private Spaces if applicable."
        },
        "return_annotation": "List of available spaces in a specific workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_workspace_id",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace to retrieve available spaces from.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "include_archived_spaces",
            "alternative_names": [
              "show_archived_spaces",
              "retrieve_archived_spaces"
            ],
            "description": "Set to true to include archived Spaces in the results. Otherwise, only active Spaces are returned.",
            "endpoint_argument_name": "archived"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/space",
      "tags": [
        "Spaces"
      ],
      "summary": "Get Spaces",
      "description": "View the Spaces avialable in a Workspace. You can only get member info in private Spaces.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateSpace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_space_in_workspace",
        "description": {
          "tagline": "Add a new Space to a Workspace.",
          "detailed": "Use this tool to create a new space within a specified workspace on ClickUp. It should be called when a user wants to organize tasks or projects under a new space in their team environment."
        },
        "return_annotation": "Details of the newly created space.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace where the new space will be added. It should be an integer value.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "new_space_configuration",
            "alternative_names": [
              "space_details",
              "configuration"
            ],
            "description": "JSON object with details for the new space, including its name, multiple assignees option, and features.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_id}/space",
      "tags": [
        "Spaces"
      ],
      "summary": "Create Space",
      "description": "Add a new Space to a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "multiple_assignees": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "features": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D/put/requestBody/content/application~1json/schema/properties/features"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "CreateSpacerequest",
              "properties": {
                "name": {
                  "type": "string"
                },
                "multiple_assignees": {
                  "type": "boolean"
                },
                "features": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D/put/requestBody/content/application~1json/schema/properties/features",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1space~1%7Bspace_id%7D/put/requestBody/content/application~1json/schema/properties/features"
                }
              },
              "required": [
                "name",
                "multiple_assignees",
                "features"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateSpacerequest\",\n        \"required\": [\n          \"name\",\n          \"multiple_assignees\",\n          \"features\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"multiple_assignees\": {\n            \"type\": \"boolean\"\n          },\n          \"features\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D/put/requestBody/content/application~1json/schema/properties/features\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1space~1%7Bspace_id%7D/put/requestBody/content/application~1json/schema/properties/features\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New Space Name\",\n            \"multiple_assignees\": true,\n            \"features\": {\n              \"due_dates\": {\n                \"enabled\": true,\n                \"start_date\": false,\n                \"remap_due_dates\": true,\n                \"remap_closed_due_date\": false\n              },\n              \"time_tracking\": {\n                \"enabled\": false\n              },\n              \"tags\": {\n                \"enabled\": true\n              },\n              \"time_estimates\": {\n                \"enabled\": true\n              },\n              \"checklists\": {\n                \"enabled\": true\n              },\n              \"custom_fields\": {\n                \"enabled\": true\n              },\n              \"remap_dependencies\": {\n                \"enabled\": true\n              },\n              \"dependency_warning\": {\n                \"enabled\": true\n              },\n              \"portfolios\": {\n                \"enabled\": true\n              }\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New Space Name\",\n        \"multiple_assignees\": true,\n        \"features\": {\n          \"due_dates\": {\n            \"enabled\": true,\n            \"start_date\": false,\n            \"remap_due_dates\": true,\n            \"remap_closed_due_date\": false\n          },\n          \"time_tracking\": {\n            \"enabled\": false\n          },\n          \"tags\": {\n            \"enabled\": true\n          },\n          \"time_estimates\": {\n            \"enabled\": true\n          },\n          \"checklists\": {\n            \"enabled\": true\n          },\n          \"custom_fields\": {\n            \"enabled\": true\n          },\n          \"remap_dependencies\": {\n            \"enabled\": true\n          },\n          \"dependency_warning\": {\n            \"enabled\": true\n          },\n          \"portfolios\": {\n            \"enabled\": true\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetSpace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_workspace_spaces",
        "description": {
          "tagline": "Retrieve available Spaces in a Workspace.",
          "detailed": "Use this tool to get information about the Spaces available in a specific Workspace identified by its space ID."
        },
        "return_annotation": "Details of available spaces in a workspace.",
        "arguments": [
          {
            "name": "workspace_space_id",
            "alternative_names": [
              "space_identifier",
              "space_key"
            ],
            "description": "The unique identifier for the specific space in the workspace to retrieve details.",
            "endpoint_argument_name": "space_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/space/{space_id}",
      "tags": [
        "Spaces"
      ],
      "summary": "Get Space",
      "description": "View the Spaces available in a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "UpdateSpace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_clickup_space",
        "description": {
          "tagline": "Update space attributes in ClickUp.",
          "detailed": "Use this tool to rename a ClickUp space, change its color, and enable or disable ClickApps for it. Call this when you need to modify the settings of an existing space."
        },
        "return_annotation": "Confirmation of space update with details.",
        "arguments": [
          {
            "name": "space_identifier",
            "alternative_names": [
              "space_id_number",
              "space_id_value"
            ],
            "description": "The unique identifier for the ClickUp space to be updated.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "space_update_details",
            "alternative_names": [
              "space_modification_payload",
              "space_attributes_update"
            ],
            "description": "JSON object containing the new settings for the space. Includes name, color, privacy settings, admin management, multiple assignees, and feature settings.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/space/{space_id}",
      "tags": [
        "Spaces"
      ],
      "summary": "Update Space",
      "description": "Rename, set the Space color, and enable ClickApps for a Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "color": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "private": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "admin_can_manage": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "***Note:** Allowing or restricting admins from managing private Spaces using `\"admin_can_manage\"` is an [Enterprise Plan](https://clickup.com/pricing) feature.*"
                },
                "multiple_assignees": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "features": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "due_dates": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "enabled": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        },
                        "start_date": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        },
                        "remap_due_dates": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        },
                        "remap_closed_due_date": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "time_tracking": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "enabled": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "tags": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "enabled": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "time_estimates": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "enabled": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "checklists": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "enabled": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "custom_fields": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "enabled": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "remap_dependencies": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "enabled": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "dependency_warning": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "enabled": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    },
                    "portfolios": {
                      "val_type": "json",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": {
                        "enabled": {
                          "val_type": "boolean",
                          "inner_val_type": null,
                          "enum": null,
                          "properties": null,
                          "inner_properties": null,
                          "description": null
                        }
                      },
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "UpdateSpacerequest",
              "properties": {
                "name": {
                  "type": "string"
                },
                "color": {
                  "type": "string"
                },
                "private": {
                  "type": "boolean"
                },
                "admin_can_manage": {
                  "type": "boolean",
                  "description": "***Note:** Allowing or restricting admins from managing private Spaces using `\"admin_can_manage\"` is an [Enterprise Plan](https://clickup.com/pricing) feature.*"
                },
                "multiple_assignees": {
                  "type": "boolean"
                },
                "features": {
                  "type": "object",
                  "title": "Features",
                  "properties": {
                    "due_dates": {
                      "type": "object",
                      "title": "DueDates",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        },
                        "start_date": {
                          "type": "boolean"
                        },
                        "remap_due_dates": {
                          "type": "boolean"
                        },
                        "remap_closed_due_date": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled",
                        "start_date",
                        "remap_due_dates",
                        "remap_closed_due_date"
                      ]
                    },
                    "time_tracking": {
                      "type": "object",
                      "title": "TimeTracking",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    },
                    "tags": {
                      "type": "object",
                      "title": "Tags",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    },
                    "time_estimates": {
                      "type": "object",
                      "title": "TimeEstimates",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    },
                    "checklists": {
                      "type": "object",
                      "title": "Checklists",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    },
                    "custom_fields": {
                      "type": "object",
                      "title": "CustomFields",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    },
                    "remap_dependencies": {
                      "type": "object",
                      "title": "RemapDependencies",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    },
                    "dependency_warning": {
                      "type": "object",
                      "title": "DependencyWarning",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    },
                    "portfolios": {
                      "type": "object",
                      "title": "Portfolios",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "enabled"
                      ]
                    }
                  },
                  "required": [
                    "due_dates",
                    "time_tracking",
                    "tags",
                    "time_estimates",
                    "checklists",
                    "custom_fields",
                    "remap_dependencies",
                    "dependency_warning",
                    "portfolios"
                  ]
                }
              },
              "required": [
                "name",
                "color",
                "private",
                "admin_can_manage",
                "multiple_assignees",
                "features"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateSpacerequest\",\n        \"required\": [\n          \"name\",\n          \"color\",\n          \"private\",\n          \"admin_can_manage\",\n          \"multiple_assignees\",\n          \"features\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"color\": {\n            \"type\": \"string\"\n          },\n          \"private\": {\n            \"type\": \"boolean\"\n          },\n          \"admin_can_manage\": {\n            \"description\": \"***Note:** Allowing or restricting admins from managing private Spaces using `\\\"admin_can_manage\\\"` is an [Enterprise Plan](https://clickup.com/pricing) feature.*\",\n            \"type\": \"boolean\"\n          },\n          \"multiple_assignees\": {\n            \"type\": \"boolean\"\n          },\n          \"features\": {\n            \"title\": \"Features\",\n            \"required\": [\n              \"due_dates\",\n              \"time_tracking\",\n              \"tags\",\n              \"time_estimates\",\n              \"checklists\",\n              \"custom_fields\",\n              \"remap_dependencies\",\n              \"dependency_warning\",\n              \"portfolios\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"due_dates\": {\n                \"title\": \"DueDates\",\n                \"required\": [\n                  \"enabled\",\n                  \"start_date\",\n                  \"remap_due_dates\",\n                  \"remap_closed_due_date\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"start_date\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"remap_due_dates\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"remap_closed_due_date\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"examples\": [\n                  {\n                    \"enabled\": true,\n                    \"start_date\": false,\n                    \"remap_due_dates\": true,\n                    \"remap_closed_due_date\": false\n                  }\n                ]\n              },\n              \"time_tracking\": {\n                \"title\": \"TimeTracking\",\n                \"required\": [\n                  \"enabled\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"examples\": [\n                  {\n                    \"enabled\": false\n                  }\n                ]\n              },\n              \"tags\": {\n                \"title\": \"Tags\",\n                \"required\": [\n                  \"enabled\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"examples\": [\n                  {\n                    \"enabled\": true\n                  }\n                ]\n              },\n              \"time_estimates\": {\n                \"title\": \"TimeEstimates\",\n                \"required\": [\n                  \"enabled\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"examples\": [\n                  {\n                    \"enabled\": true\n                  }\n                ]\n              },\n              \"checklists\": {\n                \"title\": \"Checklists\",\n                \"required\": [\n                  \"enabled\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"examples\": [\n                  {\n                    \"enabled\": true\n                  }\n                ]\n              },\n              \"custom_fields\": {\n                \"title\": \"CustomFields\",\n                \"required\": [\n                  \"enabled\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"examples\": [\n                  {\n                    \"enabled\": true\n                  }\n                ]\n              },\n              \"remap_dependencies\": {\n                \"title\": \"RemapDependencies\",\n                \"required\": [\n                  \"enabled\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"examples\": [\n                  {\n                    \"enabled\": true\n                  }\n                ]\n              },\n              \"dependency_warning\": {\n                \"title\": \"DependencyWarning\",\n                \"required\": [\n                  \"enabled\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"examples\": [\n                  {\n                    \"enabled\": true\n                  }\n                ]\n              },\n              \"portfolios\": {\n                \"title\": \"Portfolios\",\n                \"required\": [\n                  \"enabled\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"enabled\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"examples\": [\n                  {\n                    \"enabled\": true\n                  }\n                ]\n              }\n            },\n            \"examples\": [\n              {\n                \"due_dates\": {\n                  \"enabled\": true,\n                  \"start_date\": false,\n                  \"remap_due_dates\": true,\n                  \"remap_closed_due_date\": false\n                },\n                \"time_tracking\": {\n                  \"enabled\": false\n                },\n                \"tags\": {\n                  \"enabled\": true\n                },\n                \"time_estimates\": {\n                  \"enabled\": true\n                },\n                \"checklists\": {\n                  \"enabled\": true\n                },\n                \"custom_fields\": {\n                  \"enabled\": true\n                },\n                \"remap_dependencies\": {\n                  \"enabled\": true\n                },\n                \"dependency_warning\": {\n                  \"enabled\": true\n                },\n                \"portfolios\": {\n                  \"enabled\": true\n                }\n              }\n            ]\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Updated Space Name\",\n            \"color\": \"#7B68EE\",\n            \"private\": false,\n            \"admin_can_manage\": false,\n            \"multiple_assignees\": false,\n            \"features\": {\n              \"due_dates\": {\n                \"enabled\": false,\n                \"start_date\": false,\n                \"remap_due_dates\": false,\n                \"remap_closed_due_date\": false\n              },\n              \"time_tracking\": {\n                \"enabled\": false\n              },\n              \"tags\": {\n                \"enabled\": false\n              },\n              \"time_estimates\": {\n                \"enabled\": false\n              },\n              \"checklists\": {\n                \"enabled\": true\n              },\n              \"custom_fields\": {\n                \"enabled\": true\n              },\n              \"remap_dependencies\": {\n                \"enabled\": false\n              },\n              \"dependency_warning\": {\n                \"enabled\": false\n              },\n              \"portfolios\": {\n                \"enabled\": false\n              }\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Updated Space Name\",\n        \"color\": \"#7B68EE\",\n        \"private\": false,\n        \"admin_can_manage\": false,\n        \"multiple_assignees\": false,\n        \"features\": {\n          \"due_dates\": {\n            \"enabled\": false,\n            \"start_date\": false,\n            \"remap_due_dates\": false,\n            \"remap_closed_due_date\": false\n          },\n          \"time_tracking\": {\n            \"enabled\": false\n          },\n          \"tags\": {\n            \"enabled\": false\n          },\n          \"time_estimates\": {\n            \"enabled\": false\n          },\n          \"checklists\": {\n            \"enabled\": true\n          },\n          \"custom_fields\": {\n            \"enabled\": true\n          },\n          \"remap_dependencies\": {\n            \"enabled\": false\n          },\n          \"dependency_warning\": {\n            \"enabled\": false\n          },\n          \"portfolios\": {\n            \"enabled\": false\n          }\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "DeleteSpace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_workspace_space",
        "description": {
          "tagline": "Delete a space from your ClickUp workspace.",
          "detailed": "Use this tool to delete a specific space in your ClickUp workspace by providing the space ID. It permanently removes the space and all associated data."
        },
        "return_annotation": "Confirmation of space deletion from the workspace.",
        "arguments": [
          {
            "name": "workspace_space_id",
            "alternative_names": [
              "space_identifier",
              "id_of_space"
            ],
            "description": "The unique identifier for the space to delete in your ClickUp workspace. Provide the specific space ID to permanently remove the space and its data.",
            "endpoint_argument_name": "space_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/space/{space_id}",
      "tags": [
        "Spaces"
      ],
      "summary": "Delete Space",
      "description": "Delete a Space from your Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetSpaceTags",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_space_tags",
        "description": {
          "tagline": "Retrieve task tags for a specified space.",
          "detailed": "Use this tool to view the task tags available within a specific space. It helps in identifying and managing tags associated with tasks."
        },
        "return_annotation": "List of task tags available in a specified space.",
        "arguments": [
          {
            "name": "space_identifier",
            "alternative_names": [
              "space_id_number",
              "space_reference"
            ],
            "description": "An integer representing the ID of the space for which to retrieve task tags. This ID is required to specify the space.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "content_type",
              "header_content_type"
            ],
            "description": "The MIME type of the request. Generally set to 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/space/{space_id}/tag",
      "tags": [
        "Tags"
      ],
      "summary": "Get Space Tags",
      "description": "View the task Tags available in a Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateSpaceTag",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_space_task_tag",
        "description": {
          "tagline": "Add a new task tag to a specified space in ClickUp.",
          "detailed": "Use this tool to create a new tag for tasks within a specific space in ClickUp. It's useful for organizing tasks by category or priority."
        },
        "return_annotation": "Confirmation of the tag creation in the specified space.",
        "arguments": [
          {
            "name": "space_identifier",
            "alternative_names": [
              "space_id_number",
              "space_id_value"
            ],
            "description": "The unique identifier for the space where the tag will be added. It must be an integer.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "tag_name",
            "alternative_names": [
              "task_tag_name",
              "space_tag_name"
            ],
            "description": "Name of the new tag to be added to the space. It should be a descriptive and concise identifier for categorizing tasks.",
            "endpoint_argument_name": "tag.name"
          },
          {
            "name": "tag_foreground_color",
            "alternative_names": [
              "foreground_color",
              "tag_fg_color"
            ],
            "description": "Hex code for the tag's foreground color. It defines the text color of the tag.",
            "endpoint_argument_name": "tag.tag_fg"
          },
          {
            "name": "tag_background_color",
            "alternative_names": [
              "tag_bg_color",
              "background_color"
            ],
            "description": "Hex code representing the background color for the tag. It should be a string in the format '#RRGGBB'.",
            "endpoint_argument_name": "tag.tag_bg"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/space/{space_id}/tag",
      "tags": [
        "Tags"
      ],
      "summary": "Create Space Tag",
      "description": "Add a new task Tag to a Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "tag.name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "tag.tag_fg",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "tag.tag_bg",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateSpaceTagrequest\",\n        \"required\": [\n          \"tag\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"tag\": {\n            \"title\": \"Tag\",\n            \"required\": [\n              \"name\",\n              \"tag_fg\",\n              \"tag_bg\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"tag_fg\": {\n                \"type\": \"string\"\n              },\n              \"tag_bg\": {\n                \"type\": \"string\"\n              }\n            },\n            \"examples\": [\n              {\n                \"name\": \"Tag Name\",\n                \"tag_fg\": \"#000000\",\n                \"tag_bg\": \"#000000\"\n              }\n            ]\n          }\n        },\n        \"examples\": [\n          {\n            \"tag\": {\n              \"name\": \"Tag Name\",\n              \"tag_fg\": \"#000000\",\n              \"tag_bg\": \"#000000\"\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"tag\": {\n          \"name\": \"Tag Name\",\n          \"tag_fg\": \"#000000\",\n          \"tag_bg\": \"#000000\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "EditSpaceTag",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_task_tag",
        "description": {
          "tagline": "Update a task tag in a ClickUp space.",
          "detailed": "Use this tool to update the details of a task tag within a specified ClickUp space. It is helpful for managing and organizing tasks by modifying existing tags."
        },
        "return_annotation": "Confirms the update of a task tag in a ClickUp space.",
        "arguments": [
          {
            "name": "space_id",
            "alternative_names": [
              "space_identifier",
              "clickup_space_id"
            ],
            "description": "The unique identifier of the ClickUp space where the tag will be updated. This is required to specify which space's tag needs modification.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "current_tag_name",
            "alternative_names": [
              "existing_tag_name",
              "old_tag_name"
            ],
            "description": "The current name of the tag to be updated in the ClickUp space.",
            "endpoint_argument_name": "tag_name"
          },
          {
            "name": "new_tag_name",
            "alternative_names": [
              "updated_tag_name",
              "modified_tag_name"
            ],
            "description": "The new name for the task tag to be updated in the ClickUp space. It must be a string representing the desired tag name after the update.",
            "endpoint_argument_name": "tag.name"
          },
          {
            "name": "tag_foreground_color",
            "alternative_names": [
              "tag_text_color",
              "tag_primary_color"
            ],
            "description": "The foreground (text) color of the tag in a valid color format (e.g., HEX).",
            "endpoint_argument_name": "tag.fg_color"
          },
          {
            "name": "background_color_of_tag",
            "alternative_names": [
              "tag_background_color",
              "bg_color_for_tag"
            ],
            "description": "The background color for the task tag. It should be a valid hex color code (e.g., #FFFFFF).",
            "endpoint_argument_name": "tag.bg_color"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/space/{space_id}/tag/{tag_name}",
      "tags": [
        "Tags"
      ],
      "summary": "Edit Space Tag",
      "description": "Update a task Tag.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "tag_name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "tag.name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "tag.fg_color",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "tag.bg_color",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"EditSpaceTagrequest\",\n        \"required\": [\n          \"tag\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"tag\": {\n            \"title\": \"Tag1\",\n            \"required\": [\n              \"name\",\n              \"fg_color\",\n              \"bg_color\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"fg_color\": {\n                \"type\": \"string\"\n              },\n              \"bg_color\": {\n                \"type\": \"string\"\n              }\n            },\n            \"examples\": [\n              {\n                \"name\": \"Updated Tag\",\n                \"fg_color\": \"#ffffff\",\n                \"bg_color\": \"#ffffff\"\n              }\n            ]\n          }\n        },\n        \"examples\": [\n          {\n            \"tag\": {\n              \"name\": \"Updated Tag\",\n              \"fg_color\": \"#ffffff\",\n              \"bg_color\": \"#ffffff\"\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"tag\": {\n          \"name\": \"Tag name\",\n          \"tag_fg\": \"#000000\",\n          \"tag_bg\": \"#000000\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteSpaceTag",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_space_tag",
        "description": {
          "tagline": "Delete a task tag from a space in ClickUp.",
          "detailed": "Use this tool to delete a specific task tag from a designated space in ClickUp. Ideal for cleaning up or reorganizing tags within a space."
        },
        "return_annotation": "Confirmation of tag deletion from a space.",
        "arguments": [
          {
            "name": "space_identifier",
            "alternative_names": [
              "space_id_number",
              "space_key"
            ],
            "description": "The unique identifier of the space from which the tag will be deleted. This should be an integer value.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "tag_name_to_delete",
            "alternative_names": [
              "space_tag_name",
              "task_tag_name"
            ],
            "description": "The name of the tag to be deleted from the specified space. Ensure this tag name exists in the target space.",
            "endpoint_argument_name": "tag_name"
          },
          {
            "name": "tag_to_delete",
            "alternative_names": [
              "target_tag",
              "tag_identifier"
            ],
            "description": "JSON object specifying the tag to be deleted from the space.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/space/{space_id}/tag/{tag_name}",
      "tags": [
        "Tags"
      ],
      "summary": "Delete Space Tag",
      "description": "Delete a task Tag from a Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "tag_name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "tag": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D~1tag/post/requestBody/content/application~1json/schema/properties/tag"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "DeleteSpaceTagrequest",
              "properties": {
                "tag": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D~1tag/post/requestBody/content/application~1json/schema/properties/tag",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1space~1%7Bspace_id%7D~1tag/post/requestBody/content/application~1json/schema/properties/tag"
                }
              },
              "required": [
                "tag"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"DeleteSpaceTagrequest\",\n        \"required\": [\n          \"tag\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"tag\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D~1tag/post/requestBody/content/application~1json/schema/properties/tag\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1space~1%7Bspace_id%7D~1tag/post/requestBody/content/application~1json/schema/properties/tag\"\n          }\n        },\n        \"examples\": [\n          {\n            \"tag\": {\n              \"name\": \"Tag name\",\n              \"tag_fg\": \"#000000\",\n              \"tag_bg\": \"#000000\"\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"tag\": {\n          \"name\": \"Tag name\",\n          \"tag_fg\": \"#000000\",\n          \"tag_bg\": \"#000000\"\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "AddTagToTask",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_tag_to_task",
        "description": {
          "tagline": "Add a tag to a specific task in ClickUp.",
          "detailed": "Use this tool to assign a tag to a task in ClickUp by specifying the task ID and tag name. It helps in organizing and categorizing tasks efficiently."
        },
        "return_annotation": "Confirmation of tag added to task.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_reference_id",
              "task_custom_id"
            ],
            "description": "The unique identifier of the task to which the tag will be added. Can be a custom task ID if specified.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "tag_name",
            "alternative_names": [
              "label_name",
              "task_tag_name"
            ],
            "description": "The name of the tag to add to the task. This should be a string representing the desired tag.",
            "endpoint_argument_name": "tag_name"
          },
          {
            "name": "content_type",
            "alternative_names": [
              "content_type_value",
              "header_content_type"
            ],
            "description": "Specifies the media type of the request. Typically set to 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "workspace_id_if_custom_task_ids",
            "alternative_names": [
              "workspace_id_optional",
              "workspace_id_with_custom_ids"
            ],
            "description": "Workspace ID required when referencing a task by its custom task ID. Only needed if `custom_task_ids=true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "custom_id_reference",
              "task_id_customization"
            ],
            "description": "Set to true if you want to reference a task using its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/task/{task_id}/tag/{tag_name}",
      "tags": [
        "Tags"
      ],
      "summary": "Add Tag To Task",
      "description": "Add a Tag to a task.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "tag_name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "RemoveTagFromTask",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_tag_from_task",
        "description": {
          "tagline": "Remove a tag from a specific task in ClickUp.",
          "detailed": "Use this tool to remove a specified tag from a task in ClickUp without deleting the tag from the space."
        },
        "return_annotation": "Confirmation that the tag was removed from the task.",
        "arguments": [
          {
            "name": "task_id",
            "alternative_names": [
              "task_identifier",
              "task_key"
            ],
            "description": "The unique identifier of the task from which the tag will be removed. Use the task's regular ID unless custom task IDs are enabled.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "tag_name_to_remove",
            "alternative_names": [
              "task_tag_name",
              "label_name"
            ],
            "description": "The name of the tag to remove from the specified task.",
            "endpoint_argument_name": "tag_name"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "http_content_type",
              "api_content_type"
            ],
            "description": "Specifies the media type of the request. Commonly set to 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "workspace_id_for_custom_task",
            "alternative_names": [
              "workspace_id_with_custom_id",
              "team_identifier_for_custom_tasks"
            ],
            "description": "The Workspace ID required when referencing a task by its custom ID (if custom_task_ids is true).",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_ids",
              "use_task_custom_ids"
            ],
            "description": "Set to true to reference a task by its custom task ID, or false to use the standard ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/task/{task_id}/tag/{tag_name}",
      "tags": [
        "Tags"
      ],
      "summary": "Remove Tag From Task",
      "description": "Remove a Tag from a task. This does not delete the Tag from the Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "tag_name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetTasks",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_list_tasks",
        "description": {
          "tagline": "Retrieve tasks from a specific list in ClickUp.",
          "detailed": "This tool retrieves tasks from a specified list in ClickUp, limited to 100 tasks per page. It includes tasks where the specified list is their home, while also allowing inclusion of tasks from multiple lists by using the `include_timl` parameter. It provides details accessible to the user, including time spent on tasks with time entries."
        },
        "return_annotation": "Details of tasks in a specified list.",
        "arguments": [
          {
            "name": "list_identifier",
            "alternative_names": [
              "list_id_number",
              "list_reference_id"
            ],
            "description": "The unique identifier for the list. Find it by copying the link and extracting the number following /li in the URL.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "page_number_to_fetch",
            "alternative_names": [
              "task_page_index",
              "fetch_task_page"
            ],
            "description": "Specify the page number to fetch tasks from, starting at 0.",
            "endpoint_argument_name": "page"
          },
          {
            "name": "order_by_field",
            "alternative_names": [
              "sort_by_field",
              "task_order_field"
            ],
            "description": "Specify the field to order tasks by. Options: 'id', 'created', 'updated', 'due_date'. Defaults to 'created'.",
            "endpoint_argument_name": "order_by"
          },
          {
            "name": "filter_by_statuses",
            "alternative_names": [
              "statuses_filter",
              "task_statuses"
            ],
            "description": "Filter tasks by their statuses. Use an array of status strings, such as ['to do', 'in progress'].",
            "endpoint_argument_name": "statuses"
          },
          {
            "name": "filter_by_assignees",
            "alternative_names": [
              "assignee_filter",
              "task_assignees"
            ],
            "description": "Filter tasks by assignee IDs. Provide an array of assignee IDs to filter tasks assigned to specific users.",
            "endpoint_argument_name": "assignees"
          },
          {
            "name": "filter_by_watchers",
            "alternative_names": [
              "watcher_filter",
              "task_watchers"
            ],
            "description": "An array of watcher IDs to filter tasks by watchers. Each ID should be a string.",
            "endpoint_argument_name": "watchers"
          },
          {
            "name": "filter_by_tags",
            "alternative_names": [
              "tags_filter",
              "tag_list"
            ],
            "description": "Filter tasks by a list of tags. Provide an array of strings representing the tags to filter by.",
            "endpoint_argument_name": "tags"
          },
          {
            "name": "filter_due_date_greater_than",
            "alternative_names": [
              "due_date_greater_than_filter",
              "due_date_after_filter"
            ],
            "description": "Filter tasks by a due date greater than the provided Unix time in milliseconds.",
            "endpoint_argument_name": "due_date_gt"
          },
          {
            "name": "filter_due_date_before",
            "alternative_names": [
              "due_date_filter_before",
              "before_due_date_unix_time"
            ],
            "description": "Filter tasks with due dates earlier than the specified Unix time in milliseconds.",
            "endpoint_argument_name": "due_date_lt"
          },
          {
            "name": "filter_date_created_after",
            "alternative_names": [
              "date_created_after",
              "created_after_date"
            ],
            "description": "Filter tasks created after this Unix timestamp in milliseconds.",
            "endpoint_argument_name": "date_created_gt"
          },
          {
            "name": "date_created_less_than",
            "alternative_names": [
              "created_before_date",
              "create_time_before"
            ],
            "description": "Filter tasks created before the specified Unix timestamp in milliseconds.",
            "endpoint_argument_name": "date_created_lt"
          },
          {
            "name": "filter_date_updated_after",
            "alternative_names": [
              "date_updated_after",
              "updated_date_filter"
            ],
            "description": "Filter tasks updated after the specified Unix timestamp in milliseconds.",
            "endpoint_argument_name": "date_updated_gt"
          },
          {
            "name": "filter_date_updated_less_than",
            "alternative_names": [
              "updated_before_date",
              "updated_before_timestamp"
            ],
            "description": "Filter tasks updated before a specific date, using Unix time in milliseconds.",
            "endpoint_argument_name": "date_updated_lt"
          },
          {
            "name": "filter_date_done_after",
            "alternative_names": [
              "completed_after_date",
              "finished_after_date"
            ],
            "description": "Filter tasks completed after a specified date in Unix time (milliseconds).",
            "endpoint_argument_name": "date_done_gt"
          },
          {
            "name": "filter_by_date_done_before",
            "alternative_names": [
              "date_done_less_than",
              "date_done_before"
            ],
            "description": "Filter tasks completed before a specified Unix time in milliseconds.",
            "endpoint_argument_name": "date_done_lt"
          },
          {
            "name": "filter_by_custom_fields",
            "alternative_names": [
              "custom_fields_filter",
              "custom_fields_conditions"
            ],
            "description": "Include tasks with specific values in one or more Custom Fields. Use a JSON array of objects, where each object includes 'field_id', 'operator', and 'value'.",
            "endpoint_argument_name": "custom_fields"
          },
          {
            "name": "filter_by_custom_field",
            "alternative_names": [
              "custom_field_filter",
              "specific_custom_field"
            ],
            "description": "Include tasks with specific values in one Custom Field. This can be a Custom Relationship. Provide an array of strings representing the field values.",
            "endpoint_argument_name": "custom_field"
          },
          {
            "name": "custom_task_type_filters",
            "alternative_names": [
              "task_type_filters",
              "custom_items_filter"
            ],
            "description": "An array of numbers to filter tasks by custom types. Use 0 for tasks, 1 for Milestones, and other numbers for custom types defined in your Workspace.",
            "endpoint_argument_name": "custom_items"
          },
          {
            "name": "include_archived_tasks",
            "alternative_names": [
              "show_archived_tasks",
              "view_archived_tasks"
            ],
            "description": "Set to true to include archived tasks in the results. By default, archived tasks are excluded.",
            "endpoint_argument_name": "archived"
          },
          {
            "name": "include_markdown_task_descriptions",
            "alternative_names": [
              "return_markdown_task_descriptions",
              "markdown_format_task_descriptions"
            ],
            "description": "Set to true to return task descriptions in Markdown format.",
            "endpoint_argument_name": "include_markdown_description"
          },
          {
            "name": "display_tasks_in_reverse_order",
            "alternative_names": [
              "reverse_task_order",
              "show_tasks_in_reverse"
            ],
            "description": "Set to true to display tasks in reverse order.",
            "endpoint_argument_name": "reverse"
          },
          {
            "name": "include_subtasks",
            "alternative_names": [
              "show_subtasks",
              "display_subtasks"
            ],
            "description": "Set to true to include subtasks; false to exclude them. Defaults to false.",
            "endpoint_argument_name": "subtasks"
          },
          {
            "name": "include_closed_tasks",
            "alternative_names": [
              "include_completed_tasks",
              "show_closed_tasks"
            ],
            "description": "Set to true to include closed tasks in the response. Defaults to false to exclude them.",
            "endpoint_argument_name": "include_closed"
          },
          {
            "name": "include_tasks_in_multiple_lists",
            "alternative_names": [
              "include_multiple_list_tasks",
              "tasks_in_multiple_lists"
            ],
            "description": "Set to true to include tasks that exist in multiple lists. By default, these tasks are excluded.",
            "endpoint_argument_name": "include_timl"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/list/{list_id}/task",
      "tags": [
        "Tasks"
      ],
      "summary": "Get Tasks",
      "description": "View the tasks in a List. Responses are limited to 100 tasks per page. You can only view task information of tasks you can access. \\\n \\\nThis endpoint only includes tasks where the specified `list_id` is their home List. Tasks added to the `list_id` with a different home List are not included in the response by default. To include tasks that exist in multiple lists, use the `include_timl` parameter. \\\n \\\nThe `time_spent` field displays time tracked in milliseconds, and is only included in the response for tasks with time entries.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "archived",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "include_markdown_description",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`."
            },
            "description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "page",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Page to fetch (starts at 0)."
            },
            "description": "Page to fetch (starts at 0).",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "order_by",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`."
            },
            "description": "Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "reverse",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Tasks are displayed in reverse order."
            },
            "description": "Tasks are displayed in reverse order.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "subtasks",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include or exclude subtasks. By default, subtasks are excluded."
            },
            "description": "Include or exclude subtasks. By default, subtasks are excluded.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "statuses",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by statuses. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"
            },
            "description": "Filter by statuses. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "include_closed",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`."
            },
            "description": "Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "include_timl",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include Tasks in Multiple Lists. By default, tasks that exist in multiple lists are excluded from the response.\\\n \\\nTo include tasks that exist in multiple lists, use `include_timl: true`."
            },
            "description": "Include Tasks in Multiple Lists. By default, tasks that exist in multiple lists are excluded from the response.\\\n \\\nTo include tasks that exist in multiple lists, use `include_timl: true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "assignees",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by Assignees. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"
            },
            "description": "Filter by Assignees. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "watchers",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by watchers."
            },
            "description": "Filter by watchers.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "tags",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by tags. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"
            },
            "description": "Filter by tags. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "due_date_gt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by due date greater than Unix time in milliseconds."
            },
            "description": "Filter by due date greater than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "due_date_lt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by due date less than Unix time in milliseconds."
            },
            "description": "Filter by due date less than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_created_gt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date created greater than Unix time in milliseconds."
            },
            "description": "Filter by date created greater than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_created_lt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date created less than Unix time in milliseconds."
            },
            "description": "Filter by date created less than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_updated_gt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date updated greater than Unix time in milliseconds."
            },
            "description": "Filter by date updated greater than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_updated_lt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date updated less than Unix time in milliseconds."
            },
            "description": "Filter by date updated less than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_done_gt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date done greater than Unix time in milliseconds."
            },
            "description": "Filter by date done greater than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_done_lt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date done less than Unix time in milliseconds."
            },
            "description": "Filter by date done less than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "custom_fields",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:taskfilters)"
            },
            "description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:taskfilters)",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "custom_field",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include tasks with specific values in only one Custom Field. This Custom Field can be a Custom Relationship."
            },
            "description": "Include tasks with specific values in only one Custom Field. This Custom Field can be a Custom Relationship.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "custom_items",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "number",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."
            },
            "description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "To find the list_id: \\ 1. In the Sidebar, hover over the List and click the **ellipsis ...** menu. \\ 2. Select **Copy link.** \\ 3. Use the copied URL to find the list_id. The list_id is the number that follows /li in the URL."
            },
            "description": "To find the list_id: \\ 1. In the Sidebar, hover over the List and click the **ellipsis ...** menu. \\ 2. Select **Copy link.** \\ 3. Use the copied URL to find the list_id. The list_id is the number that follows /li in the URL.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateTask",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_new_clickup_task",
        "description": {
          "tagline": "Create a new task in ClickUp.",
          "detailed": "This tool is used to create a new task in a specified list on ClickUp. It should be called when you need to add a task to your ClickUp project management system."
        },
        "return_annotation": "Details of the newly created task.",
        "arguments": [
          {
            "name": "target_list_id",
            "alternative_names": [
              "clickup_list_id",
              "task_list_id"
            ],
            "description": "The ID of the list where the new task will be created. This should be an integer identifying the list in ClickUp.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "task_details",
            "alternative_names": [
              "task_information",
              "task_payload"
            ],
            "description": "JSON object containing task details such as name, description, assignees, status, priority, due dates, and more. Formats and fields are required as specified by ClickUp's task creation endpoint.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/list/{list_id}/task",
      "tags": [
        "Tasks"
      ],
      "summary": "Create Task",
      "description": "Create a new task.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "assignees": {
                  "val_type": "array",
                  "inner_val_type": "integer",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": ""
                },
                "archived": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "group_assignees": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Assign multiple user groups to the task."
                },
                "tags": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": ""
                },
                "status": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "priority": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "due_date": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "due_date_time": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "time_estimate": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "start_date": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "start_date_time": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "points": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Add Sprint Points to the task."
                },
                "notify_all": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment."
                },
                "parent": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "You can create a subtask by including an existing task ID.\\\n \\\nThe `parent` task ID you include can be a subtask, but must be in the same List specified in the path parameter."
                },
                "markdown_content": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`."
                },
                "links_to": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Include a task ID to create a linked dependency with your new task."
                },
                "check_required_custom_fields": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When creating a task via API any required Custom Fields are ignored by default (`false`).\\\n \\\nYou can enforce required Custom Fields by including `check_required_custom_fields: true`."
                },
                "custom_fields": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {},
                  "description": "You can include one or more Custom Fields to set them when creating a new task.\\\n \\\nCustom Fields that use object and array type values are nullable by sending `\"value\": null`."
                },
                "custom_item_id": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The custom task type ID for this task. A value of `null` (default) creates a standard task type \"Task\".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "CreateTaskrequest",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "assignees": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "integer"
                  }
                },
                "archived": {
                  "type": "boolean"
                },
                "group_assignees": {
                  "type": "array",
                  "description": "Assign multiple user groups to the task.",
                  "items": {
                    "type": "string"
                  }
                },
                "tags": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "type": "string"
                },
                "priority": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "due_date": {
                  "type": "integer"
                },
                "due_date_time": {
                  "type": "boolean"
                },
                "time_estimate": {
                  "type": "integer"
                },
                "start_date": {
                  "type": "integer"
                },
                "start_date_time": {
                  "type": "boolean"
                },
                "points": {
                  "type": "number",
                  "description": "Add Sprint Points to the task."
                },
                "notify_all": {
                  "type": "boolean",
                  "description": "If `notify_all` is true, notifications will be sent to everyone including the creator of the comment."
                },
                "parent": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "You can create a subtask by including an existing task ID.\\\n \\\nThe `parent` task ID you include can be a subtask, but must be in the same List specified in the path parameter."
                },
                "markdown_content": {
                  "type": "string",
                  "description": "Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`."
                },
                "links_to": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Include a task ID to create a linked dependency with your new task."
                },
                "check_required_custom_fields": {
                  "type": "boolean",
                  "description": "When creating a task via API any required Custom Fields are ignored by default (`false`).\\\n \\\nYou can enforce required Custom Fields by including `check_required_custom_fields: true`."
                },
                "custom_fields": {
                  "type": "array",
                  "description": "You can include one or more Custom Fields to set them when creating a new task.\\\n \\\nCustom Fields that use object and array type values are nullable by sending `\"value\": null`.",
                  "items": {
                    "type": "object",
                    "title": "SetCustomFieldValueOnCreateTaskrequest",
                    "properties": {},
                    "anyOf": [
                      {
                        "type": "object",
                        "title": "URL Custom Field",
                        "description": "The `value` must be a string with a valid URL.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "https://clickup.com/api"
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Dropdown Custom Field",
                        "description": "Enter the universal unique identifier (UUID) of the dropdown menu option you want to set. You can find the UUIDs available for each Dropdown Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) New Dropdown Custom Field options cannot be created from this request.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "uuid1234"
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Email Custom Field",
                        "description": "The `value` must be a string with a valid email address.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "user@company.com"
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Phone Custom Field",
                        "description": "The `value` must be a string with a valid country code.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "+1 123 456 7890"
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Date Custom Field",
                        "description": "The `value` must be Unix time in milliseconds. To display the time in a Date Custom Field in ClickUp, you must include `time: true` in the `value_options` property.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32",
                            "example": 1667367645000
                          },
                          "value_options": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Short or Long Text Custom Field",
                        "description": "Enter a string of text.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "This is short or long text in a Custom Field."
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Number Custom Field",
                        "description": "Enter a number.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "number",
                              "null"
                            ],
                            "example": -28
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Money Custom Field",
                        "description": "You can set an amount, but not the currency of a Money Custom Field via the API. You can check the currency of a Money Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "number",
                              "null"
                            ],
                            "example": 8000
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Task Relationship Custom Field",
                        "description": "Enter an array of task ids in the `add` property to add them to a Task Relationship Custom Field. Enter them into the `rem` property to remove tasks from the Relationship. Task Relationship Custom Fields are nullable: `\"value\": null`.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "rem": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "People Custom Field",
                        "description": "Enter an array of user ids or a Team id in the `add` property to add them to a People Custom Field. Enter them into the `rem` property to remove users from a People Custom Field. You can get a list of people in the Workspace using [Get Authorized Teams (Workspaces).](ref:getauthorizedteams) People Custom Fields are nullable: `\"value\": null`.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "rem": {
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Emoji (Rating) Custom Field",
                        "description": "Enter an integer that is greater than or equal to zero and where the `count` property is greater than or equal to the `value`. You can find the `count` property for each Emoji (Rating) Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32",
                            "example": 4
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Manual Progress Custom Field",
                        "description": "Enter a number between the `start` and `end` values of each Manual Progress Custom Field. For example, for a field with `start: 10` and `end: 30`, sending `current: 20` will be displayed as 50% complete in ClickUp. You can find the `start` and `end` values for each Manual Progress Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) Manual Progress Custom Fields are nullable: `\"value\": null`.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "current": {
                                "type": "number",
                                "example": 20
                              }
                            },
                            "required": [
                              "current"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Label Custom Field",
                        "description": "Enter an array of the universal unique identifiers (UUIDs) of the labels you want to apply. You can find the UUIDs available for each Label Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) Label Custom Fields are nullable: `\"value\": null`.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": [
                                "uuid1234",
                                "uuid9876"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Location Custom Field",
                        "description": "Include the latitude, longitude, and formatted address as defined in the [Google Maps Geocoding API.](https://developers.google.com/maps/documentation/geocoding/overview)",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": "object",
                            "properties": {
                              "location": {
                                "type": "object",
                                "properties": {
                                  "lat": {
                                    "type": "number"
                                  },
                                  "lng": {
                                    "type": "number"
                                  }
                                }
                              },
                              "formatted_address": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      },
                      {
                        "type": "object",
                        "title": "Button Custom Field",
                        "description": "Set a button Custom Field to `true` to \"click\" it. This will trigger the button's action as if it was clicked in the UI.",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "boolean",
                              "null"
                            ],
                            "example": true
                          }
                        },
                        "required": [
                          "id",
                          "value"
                        ]
                      }
                    ]
                  }
                },
                "custom_item_id": {
                  "type": "number",
                  "description": "The custom task type ID for this task. A value of `null` (default) creates a standard task type \"Task\".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."
                }
              },
              "required": [
                "name"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateTaskrequest\",\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"assignees\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"contentEncoding\": \"int32\"\n            },\n            \"description\": \"\"\n          },\n          \"archived\": {\n            \"type\": \"boolean\"\n          },\n          \"group_assignees\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Assign multiple user groups to the task.\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"priority\": {\n            \"type\": [\n              \"integer\",\n              \"null\"\n            ],\n            \"contentEncoding\": \"int32\"\n          },\n          \"due_date\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"due_date_time\": {\n            \"type\": \"boolean\"\n          },\n          \"time_estimate\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"start_date\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"start_date_time\": {\n            \"type\": \"boolean\"\n          },\n          \"points\": {\n            \"type\": \"number\",\n            \"description\": \"Add Sprint Points to the task.\"\n          },\n          \"notify_all\": {\n            \"type\": \"boolean\",\n            \"description\": \"If `notify_all` is true, notifications will be sent to everyone including the creator of the comment.\"\n          },\n          \"parent\": {\n            \"description\": \"You can create a subtask by including an existing task ID.\\\\\\n \\\\\\nThe `parent` task ID you include can be a subtask, but must be in the same List specified in the path parameter.\",\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"markdown_content\": {\n            \"type\": \"string\",\n            \"description\": \"Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`.\"\n          },\n          \"links_to\": {\n            \"description\": \"Include a task ID to create a linked dependency with your new task.\",\n            \"type\": [\n              \"string\",\n              \"null\"\n            ]\n          },\n          \"check_required_custom_fields\": {\n            \"description\": \"When creating a task via API any required Custom Fields are ignored by default (`false`).\\\\\\n \\\\\\nYou can enforce required Custom Fields by including `check_required_custom_fields: true`.\",\n            \"type\": \"boolean\"\n          },\n          \"custom_fields\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"title\": \"SetCustomFieldValueOnCreateTaskrequest\",\n              \"anyOf\": [\n                {\n                  \"type\": \"object\",\n                  \"title\": \"URL Custom Field\",\n                  \"description\": \"The `value` must be a string with a valid URL.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"string\",\n                        \"null\"\n                      ],\n                      \"example\": \"https://clickup.com/api\"\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Dropdown Custom Field\",\n                  \"description\": \"Enter the universal unique identifier (UUID) of the dropdown menu option you want to set. You can find the UUIDs available for each Dropdown Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) New Dropdown Custom Field options cannot be created from this request.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"string\",\n                        \"null\"\n                      ],\n                      \"example\": \"uuid1234\"\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Email Custom Field\",\n                  \"description\": \"The `value` must be a string with a valid email address.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"string\",\n                        \"null\"\n                      ],\n                      \"example\": \"user@company.com\"\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Phone Custom Field\",\n                  \"description\": \"The `value` must be a string with a valid country code.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"string\",\n                        \"null\"\n                      ],\n                      \"example\": \"+1 123 456 7890\"\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Date Custom Field\",\n                  \"description\": \"The `value` must be Unix time in milliseconds. To display the time in a Date Custom Field in ClickUp, you must include `time: true` in the `value_options` property.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"integer\",\n                        \"null\"\n                      ],\n                      \"format\": \"int32\",\n                      \"example\": 1667367645000\n                    },\n                    \"value_options\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"time\": {\n                          \"type\": \"boolean\",\n                          \"example\": true\n                        }\n                      }\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Short or Long Text Custom Field\",\n                  \"description\": \"Enter a string of text.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"string\",\n                        \"null\"\n                      ],\n                      \"example\": \"This is short or long text in a Custom Field.\"\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Number Custom Field\",\n                  \"description\": \"Enter a number.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"number\",\n                        \"null\"\n                      ],\n                      \"example\": -28\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Money Custom Field\",\n                  \"description\": \"You can set an amount, but not the currency of a Money Custom Field via the API. You can check the currency of a Money Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"number\",\n                        \"null\"\n                      ],\n                      \"example\": 8000\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Task Relationship Custom Field\",\n                  \"description\": \"Enter an array of task ids in the `add` property to add them to a Task Relationship Custom Field. Enter them into the `rem` property to remove tasks from the Relationship. Task Relationship Custom Fields are nullable: `\\\"value\\\": null`.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"add\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        },\n                        \"rem\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"string\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"People Custom Field\",\n                  \"description\": \"Enter an array of user ids or a Team id in the `add` property to add them to a People Custom Field. Enter them into the `rem` property to remove users from a People Custom Field. You can get a list of people in the Workspace using [Get Authorized Teams (Workspaces).](ref:getauthorizedteams) People Custom Fields are nullable: `\\\"value\\\": null`.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"add\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"number\"\n                          }\n                        },\n                        \"rem\": {\n                          \"type\": \"array\",\n                          \"items\": {\n                            \"type\": \"number\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Emoji (Rating) Custom Field\",\n                  \"description\": \"Enter an integer that is greater than or equal to zero and where the `count` property is greater than or equal to the `value`. You can find the `count` property for each Emoji (Rating) Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields)\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"integer\",\n                        \"null\"\n                      ],\n                      \"format\": \"int32\",\n                      \"example\": 4\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Manual Progress Custom Field\",\n                  \"description\": \"Enter a number between the `start` and `end` values of each Manual Progress Custom Field. For example, for a field with `start: 10` and `end: 30`, sending `current: 20` will be displayed as 50% complete in ClickUp. You can find the `start` and `end` values for each Manual Progress Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) Manual Progress Custom Fields are nullable: `\\\"value\\\": null`.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"current\"\n                      ],\n                      \"properties\": {\n                        \"current\": {\n                          \"type\": \"number\",\n                          \"example\": 20\n                        }\n                      }\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Label Custom Field\",\n                  \"description\": \"Enter an array of the universal unique identifiers (UUIDs) of the labels you want to apply. You can find the UUIDs available for each Label Custom Field using [Get Accessible Custom Fields.](ref:getaccessiblecustomfields) Label Custom Fields are nullable: `\\\"value\\\": null`.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\",\n                        \"example\": [\n                          \"uuid1234\",\n                          \"uuid9876\"\n                        ]\n                      }\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Location Custom Field\",\n                  \"description\": \"Include the latitude, longitude, and formatted address as defined in the [Google Maps Geocoding API.](https://developers.google.com/maps/documentation/geocoding/overview)\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"location\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"lat\": {\n                              \"type\": \"number\"\n                            },\n                            \"lng\": {\n                              \"type\": \"number\"\n                            }\n                          }\n                        },\n                        \"formatted_address\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"title\": \"Button Custom Field\",\n                  \"description\": \"Set a button Custom Field to `true` to \\\"click\\\" it. This will trigger the button's action as if it was clicked in the UI.\",\n                  \"required\": [\n                    \"id\",\n                    \"value\"\n                  ],\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"string\"\n                    },\n                    \"value\": {\n                      \"type\": [\n                        \"boolean\",\n                        \"null\"\n                      ],\n                      \"example\": true\n                    }\n                  }\n                }\n              ]\n            },\n            \"description\": \"You can include one or more Custom Fields to set them when creating a new task.\\\\\\n \\\\\\nCustom Fields that use object and array type values are nullable by sending `\\\"value\\\": null`.\"\n          },\n          \"custom_item_id\": {\n            \"type\": \"number\",\n            \"description\": \"The custom task type ID for this task. A value of `null` (default) creates a standard task type \\\"Task\\\".\\\\\\n \\\\\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems).\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New Task Name\",\n            \"description\": \"New Task Description\",\n            \"assignees\": [\n              183\n            ],\n            \"archived\": false,\n            \"group_assignees\": [\n              \"dd01f92f-48ca-446d-88a1-0beb0e8f5f14\"\n            ],\n            \"tags\": [\n              \"tag name 1\"\n            ],\n            \"status\": \"Open\",\n            \"priority\": 3,\n            \"due_date\": 1508369194377,\n            \"due_date_time\": false,\n            \"time_estimate\": 8640000,\n            \"start_date\": 1567780450202,\n            \"start_date_time\": false,\n            \"points\": 3,\n            \"notify_all\": true,\n            \"parent\": null,\n            \"links_to\": null,\n            \"check_required_custom_fields\": true,\n            \"custom_fields\": [\n              {\n                \"id\": \"0a52c486-5f05-403b-b4fd-c512ff05131c\",\n                \"value\": 23\n              },\n              {\n                \"id\": \"03efda77-c7a0-42d3-8afd-fd546353c2f5\",\n                \"value\": \"Text field input\"\n              }\n            ]\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New Task Name\",\n        \"description\": \"New Task Description\",\n        \"markdown_description\": \"New Task Description\",\n        \"assignees\": [\n          183\n        ],\n        \"archived\": false,\n        \"group_assignees\": [\n          \"dd01f92f-48ca-446d-88a1-0beb0e8f5f14\"\n        ],\n        \"email_assignees\": [\n          \"dd01f92f-48ca-446d-88a1-0beb0e8f5f13\"\n        ],\n        \"tags\": [\n          \"tag name 1\"\n        ],\n        \"status\": \"Open\",\n        \"priority\": 3,\n        \"due_date\": 1508369194377,\n        \"due_date_time\": false,\n        \"time_estimate\": 8640000,\n        \"start_date\": 1567780450202,\n        \"start_date_time\": false,\n        \"points\": 3,\n        \"notify_all\": true,\n        \"parent\": null,\n        \"links_to\": null,\n        \"check_required_custom_fields\": true,\n        \"custom_fields\": [\n          {\n            \"id\": \"0a52c486-5f05-403b-b4fd-c512ff05131c\",\n            \"value\": \"This is a string of text added to a Custom Field.\"\n          }\n        ]\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetTask",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_task_details",
        "description": {
          "tagline": "Retrieve detailed information about a specific task.",
          "detailed": "Use this tool to get detailed information on a task you have access to in ClickUp, including any attachments associated with the task."
        },
        "return_annotation": "Detailed information about a specific task.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id_input",
              "task_reference"
            ],
            "description": "The unique identifier for the task you want to retrieve details for in ClickUp.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "workspace_id_for_custom_task",
            "alternative_names": [
              "team_identifier_for_custom_task",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when referencing a task by its custom task ID. Required if `custom_task_ids` is true.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "filter_custom_fields",
            "alternative_names": [
              "custom_field_filters",
              "filter_fields"
            ],
            "description": "Include tasks with specific values in one or more custom fields using the specified JSON format. Custom Relationships are supported.",
            "endpoint_argument_name": "custom_fields"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_by_custom_id",
              "enable_custom_id_reference"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          },
          {
            "name": "include_subtasks",
            "alternative_names": [
              "add_subtasks",
              "show_subtasks"
            ],
            "description": "Include subtasks in the task details if set to true. Defaults to false.",
            "endpoint_argument_name": "include_subtasks"
          },
          {
            "name": "include_markdown_description",
            "alternative_names": [
              "return_markdown_description",
              "markdown_description_enabled"
            ],
            "description": "Set to true to return task descriptions in Markdown format.",
            "endpoint_argument_name": "include_markdown_description"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/task/{task_id}",
      "tags": [
        "Tasks"
      ],
      "summary": "Get Task",
      "description": "View information about a task. You can only view task information of tasks you can access. \\\n \\\nTasks with attachments will return an \"attachments\" response. \\\n \\\nDocs attached to a task are not returned.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by its custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by its custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "include_subtasks",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include subtasks, default false"
            },
            "description": "Include subtasks, default false",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "include_markdown_description",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`."
            },
            "description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "custom_fields",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)"
            },
            "description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"},{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. If you want to include tasks with specific values in only one Custom Field, use `custom_field` instead.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:filtertasks)",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "UpdateTask",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_task_in_clickup",
        "description": {
          "tagline": "Update task details in ClickUp.",
          "detailed": "Use this tool to update specific fields of a task in ClickUp by providing the task ID and desired changes."
        },
        "return_annotation": "Returns confirmation of the task update.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id_value",
              "id_of_task"
            ],
            "description": "The ID of the task to be updated. Provide either the standard task ID or a custom task ID if 'custom_task_ids' is true.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "task_update_details",
            "alternative_names": [
              "task_update_payload",
              "task_update_request"
            ],
            "description": "JSON object containing the fields to update on the task. Includes fields like name, description, priority, due dates, assignees, and more.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "workspace_id_for_custom_task",
            "alternative_names": [
              "clickup_team_id",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when referencing a task by its custom task ID (requires `custom_task_ids` set to true).",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_task_by_custom_id",
              "enable_custom_task_id_reference"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/task/{task_id}",
      "tags": [
        "Tasks"
      ],
      "summary": "Update Task",
      "description": "Update a task by including one or more fields in the request body.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by its custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by its custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "custom_item_id": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The custom task type ID for this task. A value of `null` (default) sets the task type to type \"Task\".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."
                },
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "To clear the task description, include `Description` with `\" \"`."
                },
                "markdown_content": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`."
                },
                "status": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "priority": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "due_date": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "due_date_time": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "parent": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "You can move a subtask to another parent task by including `\"parent\"` with a valid `task id`.\\\n \\\nYou cannot convert a subtask to a task by setting `\"parent\"` to `null`."
                },
                "time_estimate": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "start_date": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "start_date_time": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "points": {
                  "val_type": "number",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Update the task's Sprint Points."
                },
                "assignees": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "add": {
                      "val_type": "array",
                      "inner_val_type": "integer",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": ""
                    },
                    "rem": {
                      "val_type": "array",
                      "inner_val_type": "integer",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": ""
                    }
                  },
                  "inner_properties": null,
                  "description": null
                },
                "group_assignees": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "add": {
                      "val_type": "array",
                      "inner_val_type": "integer",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": ""
                    },
                    "rem": {
                      "val_type": "array",
                      "inner_val_type": "integer",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": ""
                    }
                  },
                  "inner_properties": null,
                  "description": null
                },
                "watchers": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "add": {
                      "val_type": "array",
                      "inner_val_type": "integer",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": ""
                    },
                    "rem": {
                      "val_type": "array",
                      "inner_val_type": "integer",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": ""
                    }
                  },
                  "inner_properties": null,
                  "description": null
                },
                "archived": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": "***Note:** To update Custom Fields on a task, you must use the Set Custom Field endpoint.*"
            },
            "description": "***Note:** To update Custom Fields on a task, you must use the Set Custom Field endpoint.*",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "UpdateTaskrequest",
              "properties": {
                "custom_item_id": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "The custom task type ID for this task. A value of `null` (default) sets the task type to type \"Task\".\\\n \\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems)."
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string",
                  "description": "To clear the task description, include `Description` with `\" \"`."
                },
                "markdown_content": {
                  "type": "string",
                  "description": "Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`."
                },
                "status": {
                  "type": "string"
                },
                "priority": {
                  "type": "integer"
                },
                "due_date": {
                  "type": "integer"
                },
                "due_date_time": {
                  "type": "boolean"
                },
                "parent": {
                  "type": "string",
                  "description": "You can move a subtask to another parent task by including `\"parent\"` with a valid `task id`.\\\n \\\nYou cannot convert a subtask to a task by setting `\"parent\"` to `null`."
                },
                "time_estimate": {
                  "type": "integer"
                },
                "start_date": {
                  "type": "integer"
                },
                "start_date_time": {
                  "type": "boolean"
                },
                "points": {
                  "type": "number",
                  "description": "Update the task's Sprint Points."
                },
                "assignees": {
                  "type": "object",
                  "title": "Assignees",
                  "properties": {
                    "add": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "rem": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "integer"
                      }
                    }
                  },
                  "required": [
                    "add",
                    "rem"
                  ]
                },
                "group_assignees": {
                  "type": "object",
                  "properties": {
                    "add": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "rem": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "watchers": {
                  "type": "object",
                  "title": "Watchers",
                  "properties": {
                    "add": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "rem": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "integer"
                      }
                    }
                  },
                  "required": [
                    "add",
                    "rem"
                  ]
                },
                "archived": {
                  "type": "boolean"
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"***Note:** To update Custom Fields on a task, you must use the Set Custom Field endpoint.*\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateTaskrequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"custom_item_id\": {\n            \"type\": [\n              \"number\",\n              \"null\"\n            ],\n            \"description\": \"The custom task type ID for this task. A value of `null` (default) sets the task type to type \\\"Task\\\".\\\\\\n \\\\\\nTo get a list of available custom task type IDs for your Workspace, use the [Get Custom Task Types endpoint](ref:getcustomitems).\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"To clear the task description, include `Description` with `\\\" \\\"`.\",\n            \"type\": \"string\"\n          },\n          \"markdown_content\": {\n            \"type\": \"string\",\n            \"description\": \"Markdown formatted description for the task. If both `markdown_content` and `description` are provided, `markdown_content` will be used instead of `description`.\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"priority\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"due_date\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"due_date_time\": {\n            \"type\": \"boolean\"\n          },\n          \"parent\": {\n            \"description\": \"You can move a subtask to another parent task by including `\\\"parent\\\"` with a valid `task id`.\\\\\\n \\\\\\nYou cannot convert a subtask to a task by setting `\\\"parent\\\"` to `null`.\",\n            \"type\": \"string\"\n          },\n          \"time_estimate\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"start_date\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"start_date_time\": {\n            \"type\": \"boolean\"\n          },\n          \"points\": {\n            \"type\": \"number\",\n            \"description\": \"Update the task's Sprint Points.\"\n          },\n          \"assignees\": {\n            \"title\": \"Assignees\",\n            \"required\": [\n              \"add\",\n              \"rem\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"add\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"contentEncoding\": \"int32\"\n                },\n                \"description\": \"\"\n              },\n              \"rem\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"contentEncoding\": \"int32\"\n                },\n                \"description\": \"\"\n              }\n            },\n            \"examples\": [\n              {\n                \"add\": [\n                  182\n                ],\n                \"rem\": [\n                  183\n                ]\n              }\n            ]\n          },\n          \"group_assignees\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"add\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"contentEncoding\": \"int32\"\n                },\n                \"description\": \"\"\n              },\n              \"rem\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"contentEncoding\": \"int32\"\n                },\n                \"description\": \"\"\n              }\n            }\n          },\n          \"watchers\": {\n            \"title\": \"Watchers\",\n            \"required\": [\n              \"add\",\n              \"rem\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"add\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"contentEncoding\": \"int32\"\n                },\n                \"description\": \"\"\n              },\n              \"rem\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"contentEncoding\": \"int32\"\n                },\n                \"description\": \"\"\n              }\n            },\n            \"examples\": [\n              {\n                \"add\": [\n                  182,\n                  121\n                ],\n                \"rem\": [\n                  183,\n                  122\n                ]\n              }\n            ]\n          },\n          \"archived\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"Updated Task Name\",\n            \"description\": \"Updated Task Content\",\n            \"status\": \"in progress\",\n            \"priority\": 1,\n            \"due_date\": 1508369194377,\n            \"due_date_time\": false,\n            \"parent\": \"abc1234\",\n            \"time_estimate\": 8640000,\n            \"start_date\": 1567780450202,\n            \"start_date_time\": false,\n            \"points\": 3,\n            \"assignees\": {\n              \"add\": [\n                182\n              ],\n              \"rem\": [\n                183\n              ]\n            },\n            \"group_assignees\": {\n              \"add\": [\n                \"dd01f92f-48ca-446d-88a1-0beb0e8f5f14\"\n              ],\n              \"rem\": [\n                \"dd01f92f-48ca-446d-88a1-0beb0e8f5f13\"\n              ]\n            },\n            \"watchers\": {\n              \"add\": [\n                182\n              ],\n              \"rem\": [\n                183\n              ]\n            },\n            \"archived\": false\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"Updated Task Name\",\n        \"description\": \"Updated Task Content\",\n        \"status\": \"in progress\",\n        \"priority\": 3,\n        \"due_date\": 1508369194377,\n        \"due_date_time\": false,\n        \"parent\": \"abc1234\",\n        \"time_estimate\": 8640000,\n        \"start_date\": 1567780450202,\n        \"start_date_time\": false,\n        \"points\": 3,\n        \"assignees\": {\n          \"add\": [\n            182\n          ],\n          \"rem\": [\n            183\n          ]\n        },\n        \"group_assignees\": {\n          \"add\": [\n            \"dd01f92f-48ca-446d-88a1-0beb0e8f5f14\"\n          ],\n          \"rem\": [\n            \"dd01f92f-48ca-446d-88a1-0beb0e8f5f13\"\n          ]\n        },\n        \"archived\": false\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "DeleteTask",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_task",
        "description": {
          "tagline": "Delete a task from your ClickUp Workspace.",
          "detailed": "Use this tool to delete a specific task from your ClickUp Workspace by providing the task ID. It should be called when you want to permanently remove a task."
        },
        "return_annotation": "Confirmation of the task deletion.",
        "arguments": [
          {
            "name": "task_id",
            "alternative_names": [
              "task_identifier",
              "task_reference"
            ],
            "description": "The ID of the task to be deleted. This is mandatory and should be a valid task identifier.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "content_type",
            "alternative_names": [
              "mime_type",
              "format_type"
            ],
            "description": "Specify the media type of the resource. Typically set as 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "workspace_identifier",
              "team_identifier"
            ],
            "description": "Provide the Workspace ID when referencing a task by its custom task ID. Required if `custom_task_ids` is true.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "is_custom_task_id",
              "reference_by_custom_task_id"
            ],
            "description": "Set to true if referencing a task by custom task ID is required.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/task/{task_id}",
      "tags": [
        "Tasks"
      ],
      "summary": "Delete Task",
      "description": "Delete a task from your Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by its custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by its custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetFilteredTeamTasks",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_filtered_team_tasks",
        "description": {
          "tagline": "Retrieve tasks from a workspace based on specified filters.",
          "detailed": "This tool retrieves tasks from a specified workspace that meet certain criteria. The response is limited to 100 tasks per page, and only tasks that the user has access to are returned. The tool is useful for viewing filtered task information from multiple lists, folders, or spaces."
        },
        "return_annotation": "A list of tasks that meet the specified criteria.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace to retrieve tasks from. Must be an integer.",
            "endpoint_argument_name": "team_Id"
          },
          {
            "name": "page_number_to_fetch",
            "alternative_names": [
              "fetch_page_number",
              "retrieve_page_number"
            ],
            "description": "Page number to fetch, starting at 0, in the paginated list of tasks.",
            "endpoint_argument_name": "page"
          },
          {
            "name": "order_tasks_by",
            "alternative_names": [
              "sort_tasks_by",
              "arrange_by_field"
            ],
            "description": "Specify the field by which to order tasks. Options include: 'id', 'created', 'updated', 'due_date'. Defaults to 'created'.",
            "endpoint_argument_name": "order_by"
          },
          {
            "name": "filter_by_space_ids",
            "alternative_names": [
              "spaces_filter",
              "select_spaces"
            ],
            "description": "An array of space IDs to filter tasks by. Example values: ['1234', '6789'].",
            "endpoint_argument_name": "space_ids[]"
          },
          {
            "name": "filter_by_project_ids",
            "alternative_names": [
              "filter_by_folder_ids",
              "project_id_filters"
            ],
            "description": "An array of folder IDs to filter tasks by specific folders. For example, ['1234', '6789'].",
            "endpoint_argument_name": "project_ids[]"
          },
          {
            "name": "filter_by_list_ids",
            "alternative_names": [
              "list_filter_ids",
              "filter_lists"
            ],
            "description": "An array of list IDs to filter tasks by. Example: [\"1234\", \"6789\"].",
            "endpoint_argument_name": "list_ids[]"
          },
          {
            "name": "status_filters",
            "alternative_names": [
              "task_statuses",
              "statuses_filter"
            ],
            "description": "Filter tasks by their statuses. Use '%20' for spaces. Example: ['to%20do', 'in%20progress'].",
            "endpoint_argument_name": "statuses[]"
          },
          {
            "name": "assignee_ids",
            "alternative_names": [
              "assignee_user_ids",
              "task_assignee_ids"
            ],
            "description": "Filter tasks by assignee using their ClickUp user IDs.",
            "endpoint_argument_name": "assignees[]"
          },
          {
            "name": "filter_by_tags",
            "alternative_names": [
              "tags_filter",
              "task_tags"
            ],
            "description": "Filter tasks by tags. Use `%20` for spaces within tags. Example: `urgent%20task`.",
            "endpoint_argument_name": "tags[]"
          },
          {
            "name": "due_date_greater_than",
            "alternative_names": [
              "due_date_after",
              "due_date_minimum"
            ],
            "description": "Filter tasks by a due date greater than the specified Unix time in milliseconds.",
            "endpoint_argument_name": "due_date_gt"
          },
          {
            "name": "due_date_before",
            "alternative_names": [
              "max_due_date",
              "upper_due_date_limit"
            ],
            "description": "Filter tasks with due dates earlier than the specified Unix timestamp in milliseconds.",
            "endpoint_argument_name": "due_date_lt"
          },
          {
            "name": "filter_created_date_after",
            "alternative_names": [
              "created_after_date_filter",
              "date_created_filter"
            ],
            "description": "Filter tasks by creation date greater than the specified Unix time in milliseconds.",
            "endpoint_argument_name": "date_created_gt"
          },
          {
            "name": "filter_by_date_created_before",
            "alternative_names": [
              "created_date_before",
              "before_creation_date"
            ],
            "description": "Filter tasks created before this date. Specify as Unix time in milliseconds.",
            "endpoint_argument_name": "date_created_lt"
          },
          {
            "name": "filter_by_updated_date_greater_than",
            "alternative_names": [
              "updated_date_after_timestamp",
              "minimum_updated_timestamp"
            ],
            "description": "Filter tasks by their updated date, greater than the specified Unix time in milliseconds.",
            "endpoint_argument_name": "date_updated_gt"
          },
          {
            "name": "filter_by_update_date_before",
            "alternative_names": [
              "update_date_before_filter",
              "filter_tasks_by_update_date_before"
            ],
            "description": "Filter tasks updated before a specific date, provided as Unix time in milliseconds.",
            "endpoint_argument_name": "date_updated_lt"
          },
          {
            "name": "filter_by_date_done_after",
            "alternative_names": [
              "date_done_greater_than",
              "done_after_date"
            ],
            "description": "Filter tasks by the completion date after the given Unix time in milliseconds.",
            "endpoint_argument_name": "date_done_gt"
          },
          {
            "name": "filter_by_done_date_before",
            "alternative_names": [
              "done_date_less_than",
              "completed_before_date"
            ],
            "description": "Filter tasks completed before a specific date. Provide the date in Unix time (milliseconds).",
            "endpoint_argument_name": "date_done_lt"
          },
          {
            "name": "filter_by_custom_fields",
            "alternative_names": [
              "custom_fields_filter",
              "tasks_with_custom_fields"
            ],
            "description": "Include tasks with specific values in Custom Fields. Provide an array of objects with field_id, operator, and value keys.",
            "endpoint_argument_name": "custom_fields"
          },
          {
            "name": "parent_task_id",
            "alternative_names": [
              "main_task_id",
              "root_task_id"
            ],
            "description": "Include the parent task ID to return subtasks in the response.",
            "endpoint_argument_name": "parent"
          },
          {
            "name": "custom_task_type_filters",
            "alternative_names": [
              "custom_filters",
              "task_type_filters"
            ],
            "description": "Filter tasks by custom task types. Use `0` for tasks, `1` for Milestones, and other numbers for Workspace-defined types.",
            "endpoint_argument_name": "custom_items[]"
          },
          {
            "name": "display_tasks_in_reverse_order",
            "alternative_names": [
              "reverse_task_display",
              "invert_task_order"
            ],
            "description": "Set to true to display tasks in reverse order.",
            "endpoint_argument_name": "reverse"
          },
          {
            "name": "include_subtasks",
            "alternative_names": [
              "show_subtasks",
              "with_subtasks"
            ],
            "description": "Set to true to include subtasks, or false to exclude them. Defaults to false (exclude).",
            "endpoint_argument_name": "subtasks"
          },
          {
            "name": "include_closed_tasks",
            "alternative_names": [
              "show_closed_tasks",
              "filter_closed_tasks"
            ],
            "description": "Set to true to include closed tasks, false to exclude them. By default, closed tasks are excluded.",
            "endpoint_argument_name": "include_closed"
          },
          {
            "name": "include_markdown_description",
            "alternative_names": [
              "return_markdown_descriptions",
              "enable_markdown_formatting"
            ],
            "description": "Set to true to return task descriptions in Markdown format. Default is false.",
            "endpoint_argument_name": "include_markdown_description"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_Id}/task",
      "tags": [
        "Tasks"
      ],
      "summary": "Get Filtered Team Tasks",
      "description": "View the tasks that meet specific criteria from a Workspace. Responses are limited to 100 tasks per page.  \\\n \\\nYou can only view task information of tasks you can access. \\\n \\\n Our Try It modal currently supports filtering by two or more Lists, Folders, or Spaces. To filter by a single List, Folder, or Space, we recommend using a free app like [Postman](https://www.postman.com/) to test our public API.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "page",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Page to fetch (starts at 0)."
            },
            "description": "Page to fetch (starts at 0).",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "order_by",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`."
            },
            "description": "Order by a particular field. By default, tasks are ordered by `created`.\\\n \\\nOptions include: `id`, `created`, `updated`, and `due_date`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "reverse",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Tasks are displayed in reverse order."
            },
            "description": "Tasks are displayed in reverse order.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "subtasks",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include or exclude subtasks. By default, subtasks are excluded."
            },
            "description": "Include or exclude subtasks. By default, subtasks are excluded.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "space_ids[]",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by Spaces. For example: \\\n \\\n`?space_ids[]=1234&space_ids[]=6789`"
            },
            "description": "Filter by Spaces. For example: \\\n \\\n`?space_ids[]=1234&space_ids[]=6789`",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "project_ids[]",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by Folders. For example: \\\n \\\n`?project_ids[]=1234&project_ids[]=6789`"
            },
            "description": "Filter by Folders. For example: \\\n \\\n`?project_ids[]=1234&project_ids[]=6789`",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "list_ids[]",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by Lists. For example: \\\n \\\n`?list_ids[]=1234&list_ids[]=6789` "
            },
            "description": "Filter by Lists. For example: \\\n \\\n`?list_ids[]=1234&list_ids[]=6789` ",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "statuses[]",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by statuses. Use `%20` to represent a space character. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`"
            },
            "description": "Filter by statuses. Use `%20` to represent a space character. To include closed tasks, use the `include_closed` parameter. \\\n \\\nFor example: \\\n \\\n`?statuses[]=to%20do&statuses[]=in%20progress`",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "include_closed",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`."
            },
            "description": "Include or excluse closed tasks. By default, they are excluded.\\\n \\\nTo include closed tasks, use `include_closed: true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "assignees[]",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by Assignees using people's ClickUp user id. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`"
            },
            "description": "Filter by Assignees using people's ClickUp user id. For example: \\\n \\\n`?assignees[]=1234&assignees[]=5678`",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "tags[]",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by tags. User `%20` to represent a space character. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`"
            },
            "description": "Filter by tags. User `%20` to represent a space character. For example: \\\n \\\n`?tags[]=tag1&tags[]=this%20tag`",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "due_date_gt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by due date greater than Unix time in milliseconds."
            },
            "description": "Filter by due date greater than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "due_date_lt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by due date less than Unix time in milliseconds."
            },
            "description": "Filter by due date less than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_created_gt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date created greater than Unix time in milliseconds."
            },
            "description": "Filter by date created greater than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_created_lt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date created less than Unix time in milliseconds."
            },
            "description": "Filter by date created less than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_updated_gt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date updated greater than Unix time in milliseconds."
            },
            "description": "Filter by date updated greater than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_updated_lt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date updated less than Unix time in milliseconds."
            },
            "description": "Filter by date updated less than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_done_gt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date done greater than Unix time in milliseconds."
            },
            "description": "Filter by date done greater than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "date_done_lt",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by date done less than Unix time in milliseconds."
            },
            "description": "Filter by date done less than Unix time in milliseconds.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "custom_fields",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"}{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. The `=` operator isn't supported with Label Custom Fields.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:taskfilters)"
            },
            "description": "Include tasks with specific values in one or more Custom Fields. Custom Relationships are included.\\\n \\\nFor example: `?custom_fields=[{\"field_id\":\"abcdefghi12345678\",\"operator\":\"=\",\"value\":\"1234\"}{\"field_id\":\"jklmnop123456\",\"operator\":\"<\",\"value\":\"5\"}]`\\\n \\\nOnly set Custom Field values display in the `value` property of the `custom_fields` parameter. The `=` operator isn't supported with Label Custom Fields.\\\n \\\nLearn more about [filtering using Custom Fields.](doc:taskfilters)",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schema_required": false
          },
          {
            "name": "parent",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include the parent task ID to return subtasks."
            },
            "description": "Include the parent task ID to return subtasks.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "include_markdown_description",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`."
            },
            "description": "To return task descriptions in Markdown format, use `?include_markdown_description=true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "custom_items[]",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "number",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace."
            },
            "description": "Filter by custom task types. For example: \\\n \\\n`?custom_items[]=0&custom_items[]=1300` \\\n \\\nIncluding `0` returns tasks. Including `1` returns Milestones. Including any other number returns the custom task type as defined in your Workspace.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_Id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "mergeTasks",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "merge_tasks_in_clickup",
        "description": {
          "tagline": "Merge multiple tasks into a target task in ClickUp.",
          "detailed": "Use this tool to merge several tasks into a specified target task within ClickUp. The target task is identified by the task_id, with source tasks provided in the request. This is useful when consolidating tasks for better project management."
        },
        "return_annotation": "Confirmation of tasks merged into a target task.",
        "arguments": [
          {
            "name": "target_task_id",
            "alternative_names": [
              "destination_task_id",
              "merge_task_target_id"
            ],
            "description": "ID of the target task into which other tasks will be merged.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "source_task_ids_to_merge",
            "alternative_names": [
              "task_ids_to_merge",
              "source_ids_for_merge"
            ],
            "description": "Array of task IDs to merge into the target task in ClickUp.",
            "endpoint_argument_name": "source_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/task/{task_id}/merge",
      "tags": [
        "Tasks"
      ],
      "summary": "Merge Tasks",
      "description": "Merge multiple tasks into a target task. The target task is specified by the task_id parameter, while the source tasks to be merged are provided in the request body. Custom Task IDs are not supported.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "ID of the target task that other tasks will be merged into."
            },
            "description": "ID of the target task that other tasks will be merged into.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "source_task_ids",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Array of task IDs to merge into the target task."
            },
            "description": "Array of task IDs to merge into the target task.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "Array of task IDs to merge into the target task.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"source_task_ids\"\n        ],\n        \"properties\": {\n          \"source_task_ids\": {\n            \"type\": \"array\",\n            \"description\": \"Array of task IDs to merge into the target task.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"examples\": [\n              [\n                \"abc123\",\n                \"def456\"\n              ]\n            ]\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "GetTask'sTimeinStatus",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "task_status_duration",
        "description": {
          "tagline": "Get the duration a task spends in each status.",
          "detailed": "Use this tool to find out how long a task has been in each status. Ensure that the 'Total time in Status' ClickApp is enabled by the Workspace owner or admin before using this tool."
        },
        "return_annotation": "Duration of a task in each status.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id_value",
              "task_reference_id"
            ],
            "description": "The unique identifier for the task you want to query. Use this to specify which task's status duration you are interested in.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "content_type",
            "alternative_names": [
              "content_type_header",
              "api_content_type"
            ],
            "description": "Specify the content type for the API request, typically 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The Workspace ID must be provided when referencing a task by its custom task ID and `custom_task_ids` is set to `true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_custom_task_ids",
              "enable_custom_task_ids"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/task/{task_id}/time_in_status",
      "tags": [
        "Tasks"
      ],
      "summary": "Get Task's Time in Status",
      "description": "View how long a task has been in each status. The Total time in Status ClickApp must first be enabled by the Workspace owner or an admin.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetBulkTasks'TimeinStatus",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_task_time_in_status",
        "description": {
          "tagline": "Retrieve duration of tasks in various statuses.",
          "detailed": "Use this tool to find out how long multiple tasks have remained in each status. The Total Time in Status ClickApp must be enabled by the Workspace owner or an admin."
        },
        "return_annotation": "Duration each task has spent in each status.",
        "arguments": [
          {
            "name": "task_ids_list",
            "alternative_names": [
              "task_id_collection",
              "bulk_task_ids"
            ],
            "description": "A list of up to 100 task IDs to check duration in status. Include each task ID separated by commas.",
            "endpoint_argument_name": "task_ids"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "http_content_type",
              "request_content_type"
            ],
            "description": "The MIME type of the body of the request. Typically set to 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "workspace_id_for_custom_task_ids",
            "alternative_names": [
              "team_id_for_custom_tasks",
              "workspace_identifier_for_custom_ids"
            ],
            "description": "Provide the Workspace ID if using custom task IDs. Required when `custom_task_ids` is `true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_by_custom_id",
              "enable_custom_id_usage"
            ],
            "description": "Set to true to reference tasks by custom task IDs.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/task/bulk_time_in_status/task_ids",
      "tags": [
        "Tasks"
      ],
      "summary": "Get Bulk Tasks' Time in Status",
      "description": "View how long two or more tasks have been in each status. The Total time in Status ClickApp must first be enabled by the Workspace owner or an admin.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "task_ids",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include this paramater once per `task_id`.\nYou can include up to 100 task ids per request.\nFor example: `task_ids=3cuh&task_ids=g4fs`"
            },
            "description": "Include this paramater once per `task_id`.\nYou can include up to 100 task ids per request.\nFor example: `task_ids=3cuh&task_ids=g4fs`",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetTaskTemplates",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_task_templates",
        "description": {
          "tagline": "View available task templates in a workspace.",
          "detailed": "Retrieve a list of task templates available for a specified workspace in ClickUp. Use this tool to explore task templates and plan tasks efficiently."
        },
        "return_annotation": "List of task templates available in the specified workspace.",
        "arguments": [
          {
            "name": "page_number",
            "alternative_names": [
              "pagination_page",
              "page_index"
            ],
            "description": "The page number of results to retrieve. Used for pagination.",
            "endpoint_argument_name": "page"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace for which to retrieve task templates. This is used to specify the target workspace in ClickUp.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "content_type",
              "header_content_type"
            ],
            "description": "Sets the 'Content-Type' for the API request, typically 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/taskTemplate",
      "tags": [
        "Templates"
      ],
      "summary": "Get Task Templates",
      "description": "View the task templates available in a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "page",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateTaskFromTemplate",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_task_from_template",
        "description": {
          "tagline": "Create a task using an existing template.",
          "detailed": "This tool creates a new task in ClickUp using a specified task template from your workspace. Templates must be added to your Workspace before use. Ideal for automating the creation of standardized tasks."
        },
        "return_annotation": "Details of the newly created task.",
        "arguments": [
          {
            "name": "target_list_id",
            "alternative_names": [
              "list_identifier",
              "destination_list_id"
            ],
            "description": "The ID of the list where the task will be created. This should be an integer associated with the desired list in your workspace.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "task_template_id",
            "alternative_names": [
              "template_identifier",
              "template_key"
            ],
            "description": "A string representing the ID of the task template to be used for task creation. Ensure the template is added to your workspace.",
            "endpoint_argument_name": "template_id"
          },
          {
            "name": "task_name",
            "alternative_names": [
              "task_title",
              "new_task_name"
            ],
            "description": "The name of the task to be created using the template.",
            "endpoint_argument_name": "name"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/list/{list_id}/taskTemplate/{template_id}",
      "tags": [
        "Tasks"
      ],
      "summary": "Create Task From Template",
      "description": "Create a new task using a task template defined in your workspace. Publicly shared templates must be [added to your Workspace](https://help.clickup.com/hc/en-us/articles/6326023965591-Add-a-template-to-your-library) before you can use them with the public API.\n",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "template_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateTaskFromTemplaterequest\",\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New task name\"\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New task name\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "CreateFolderListFromTemplate",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_list_from_folder_template",
        "description": {
          "tagline": "Create a new list in a folder using a template.",
          "detailed": "Use this tool to create a new list in a ClickUp folder using an existing list template. Ensure the template is added to your Workspace library before invoking this tool. The tool returns the future List ID immediately, though the list creation may continue asynchronously."
        },
        "return_annotation": "Future List ID for the created list.",
        "arguments": [
          {
            "name": "folder_identifier",
            "alternative_names": [
              "folder_reference_id",
              "folder_id_value"
            ],
            "description": "The ID of the folder where the new list will be created using the specified template.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "template_id_for_list_creation",
            "alternative_names": [
              "list_template_id",
              "folder_list_template_id"
            ],
            "description": "ID of the template to use for creating a new list in the folder. Ensure the template is added to your Workspace library.",
            "endpoint_argument_name": "template_id"
          },
          {
            "name": "list_details",
            "alternative_names": [
              "list_information",
              "list_specifications"
            ],
            "description": "A JSON object containing the properties for the new list, such as 'name' for the list name and 'options' for additional configurations.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/folder/{folder_id}/list_template/{template_id}",
      "tags": [
        "Lists"
      ],
      "summary": "Create List From Template in Folder",
      "description": "Create a new list using a list template in a Folder. Publicly shared templates must be [added to your Workspace](https://help.clickup.com/hc/en-us/articles/6326023965591-Add-a-template-to-your-library) before you can use them with the public API.\nThis request runs synchronously by default with `return_immediately=true`.\nThe request returns the future List ID immediatly, but the List may not be created when the response is sent.\nSmall templates can be applied synchronously, which guarantees that all sub objects are created.\nIn case of a timeout on synchronous requests, the objects from the template will continue to be created past the timeout.\n",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "ID of the Folder where the List will be created"
            },
            "description": "ID of the Folder where the List will be created",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "template_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "ID of the template to use"
            },
            "description": "ID of the template to use",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Name of the new List"
                },
                "options": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D~1list_template~1%7Btemplate_id%7D/post/requestBody/content/application~1json/schema/properties/options"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the new List"
                },
                "options": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D~1list_template~1%7Btemplate_id%7D/post/requestBody/content/application~1json/schema/properties/options",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1space~1%7Bspace_id%7D~1list_template~1%7Btemplate_id%7D/post/requestBody/content/application~1json/schema/properties/options"
                }
              },
              "required": [
                "name"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the new List\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1space~1%7Bspace_id%7D~1list_template~1%7Btemplate_id%7D/post/requestBody/content/application~1json/schema/properties/options\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1space~1%7Bspace_id%7D~1list_template~1%7Btemplate_id%7D/post/requestBody/content/application~1json/schema/properties/options\"\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "CreateSpaceListFromTemplate",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_list_from_template",
        "description": {
          "tagline": "Create a new list in a ClickUp space using a template.",
          "detailed": "This tool creates a new list within a specified ClickUp space using a provided list template. Publicly shared templates must be added to the Workspace before they can be used. The operation can be performed asynchronously or synchronously based on the 'return_immediately' parameter."
        },
        "return_annotation": "Details of the newly created list from the template.",
        "arguments": [
          {
            "name": "space_id_for_list_creation",
            "alternative_names": [
              "target_space_id",
              "destination_space_id"
            ],
            "description": "ID of the ClickUp Space where the new List will be created using the template.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "template_id",
            "alternative_names": [
              "template_identifier",
              "list_template_id"
            ],
            "description": "ID of the template to use for creating the list in the specified ClickUp space. It must be accessible in your Workspace.",
            "endpoint_argument_name": "template_id"
          },
          {
            "name": "list_creation_options",
            "alternative_names": [
              "list_options",
              "creation_options"
            ],
            "description": "JSON object containing various settings for creating the list, such as 'name', 'options', and other specific parameters. Includes flags for aspects like importing automations, views, and subtasks, remapping dates, and more.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/space/{space_id}/list_template/{template_id}",
      "tags": [
        "Lists"
      ],
      "summary": "Create List From Template in Space.",
      "description": "Create a new List using a List template within a Space. Publicly shared templates must be [added to your Workspace](https://help.clickup.com/hc/en-us/articles/6326023965591-Add-a-template-to-your-library) before you can use them with the public API.\nThis request can be run asynchronously or synchronously via the `return_immediately` parameter.\n",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "ID of the Space where the List will be created"
            },
            "description": "ID of the Space where the List will be created",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "template_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "ID of the template to use"
            },
            "description": "ID of the template to use",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Name of the new List"
                },
                "options": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "return_immediately": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\n"
                    },
                    "content": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "List description"
                    },
                    "time_estimate": {
                      "val_type": "number",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Include time (hours, minutes and seconds)"
                    },
                    "automation": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import automation settings"
                    },
                    "include_views": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import views"
                    },
                    "old_due_date": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' due dates"
                    },
                    "old_start_date": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' start dates"
                    },
                    "old_followers": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' watchers"
                    },
                    "comment_attachments": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' comment attachments"
                    },
                    "recur_settings": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' recurring settings"
                    },
                    "old_tags": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' tags"
                    },
                    "old_statuses": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' status settings"
                    },
                    "subtasks": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' subtasks"
                    },
                    "custom_type": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' task types"
                    },
                    "old_assignees": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' assignees"
                    },
                    "attachments": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' attachments"
                    },
                    "comment": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' comments"
                    },
                    "old_status": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' current statuses"
                    },
                    "external_dependencies": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' external dependencies"
                    },
                    "internal_dependencies": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' internal dependencies"
                    },
                    "priority": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' priorities"
                    },
                    "custom_fields": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' Custom Fields"
                    },
                    "old_checklists": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' checklists"
                    },
                    "relationships": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' relationships"
                    },
                    "old_subtask_assignees": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Import tasks' subtask assignees"
                    },
                    "start_date": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Project start date for remapping dates"
                    },
                    "due_date": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Project due date for remapping dates"
                    },
                    "remap_start_date": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Remap start dates"
                    },
                    "skip_weekends": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Skip weekends when remapping dates"
                    },
                    "archived": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": [
                        "1",
                        "2",
                        "None"
                      ],
                      "properties": null,
                      "inner_properties": null,
                      "description": "Include archived tasks"
                    }
                  },
                  "inner_properties": null,
                  "description": "Options for creating the List"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the new List"
                },
                "options": {
                  "type": "object",
                  "description": "Options for creating the List",
                  "properties": {
                    "return_immediately": {
                      "type": "boolean",
                      "description": "Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\n"
                    },
                    "content": {
                      "type": "string",
                      "description": "List description"
                    },
                    "time_estimate": {
                      "type": "number",
                      "description": "Include time (hours, minutes and seconds)"
                    },
                    "automation": {
                      "type": "boolean",
                      "description": "Import automation settings"
                    },
                    "include_views": {
                      "type": "boolean",
                      "description": "Import views"
                    },
                    "old_due_date": {
                      "type": "boolean",
                      "description": "Import tasks' due dates"
                    },
                    "old_start_date": {
                      "type": "boolean",
                      "description": "Import tasks' start dates"
                    },
                    "old_followers": {
                      "type": "boolean",
                      "description": "Import tasks' watchers"
                    },
                    "comment_attachments": {
                      "type": "boolean",
                      "description": "Import tasks' comment attachments"
                    },
                    "recur_settings": {
                      "type": "boolean",
                      "description": "Import tasks' recurring settings"
                    },
                    "old_tags": {
                      "type": "boolean",
                      "description": "Import tasks' tags"
                    },
                    "old_statuses": {
                      "type": "boolean",
                      "description": "Import tasks' status settings"
                    },
                    "subtasks": {
                      "type": "boolean",
                      "description": "Import tasks' subtasks"
                    },
                    "custom_type": {
                      "type": "boolean",
                      "description": "Import tasks' task types"
                    },
                    "old_assignees": {
                      "type": "boolean",
                      "description": "Import tasks' assignees"
                    },
                    "attachments": {
                      "type": "boolean",
                      "description": "Import tasks' attachments"
                    },
                    "comment": {
                      "type": "boolean",
                      "description": "Import tasks' comments"
                    },
                    "old_status": {
                      "type": "boolean",
                      "description": "Import tasks' current statuses"
                    },
                    "external_dependencies": {
                      "type": "boolean",
                      "description": "Import tasks' external dependencies"
                    },
                    "internal_dependencies": {
                      "type": "boolean",
                      "description": "Import tasks' internal dependencies"
                    },
                    "priority": {
                      "type": "boolean",
                      "description": "Import tasks' priorities"
                    },
                    "custom_fields": {
                      "type": "boolean",
                      "description": "Import tasks' Custom Fields"
                    },
                    "old_checklists": {
                      "type": "boolean",
                      "description": "Import tasks' checklists"
                    },
                    "relationships": {
                      "type": "boolean",
                      "description": "Import tasks' relationships"
                    },
                    "old_subtask_assignees": {
                      "type": "boolean",
                      "description": "Import tasks' subtask assignees"
                    },
                    "start_date": {
                      "type": "string",
                      "description": "Project start date for remapping dates",
                      "format": "date-time"
                    },
                    "due_date": {
                      "type": "string",
                      "description": "Project due date for remapping dates",
                      "format": "date-time"
                    },
                    "remap_start_date": {
                      "type": "boolean",
                      "description": "Remap start dates"
                    },
                    "skip_weekends": {
                      "type": "boolean",
                      "description": "Skip weekends when remapping dates"
                    },
                    "archived": {
                      "type": "integer",
                      "description": "Include archived tasks",
                      "enum": [
                        1,
                        2,
                        null
                      ]
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\"\n        ],\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the new List\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"description\": \"Options for creating the List\",\n            \"properties\": {\n              \"return_immediately\": {\n                \"type\": \"boolean\",\n                \"description\": \"Flag if newly created Object ID should be returned without waiting for the asset itself and all its nested assets to be applied. If set to true, access checks are performed before returning, but the object might not be fully created yet. In case of a timeout on syncronous requests, the of objects from the template will continue to be created past the timeout.\\n\",\n                \"default\": true\n              },\n              \"content\": {\n                \"type\": \"string\",\n                \"description\": \"List description\"\n              },\n              \"time_estimate\": {\n                \"type\": \"number\",\n                \"description\": \"Include time (hours, minutes and seconds)\"\n              },\n              \"automation\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import automation settings\"\n              },\n              \"include_views\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import views\"\n              },\n              \"old_due_date\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' due dates\"\n              },\n              \"old_start_date\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' start dates\"\n              },\n              \"old_followers\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' watchers\"\n              },\n              \"comment_attachments\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' comment attachments\"\n              },\n              \"recur_settings\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' recurring settings\"\n              },\n              \"old_tags\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' tags\"\n              },\n              \"old_statuses\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' status settings\"\n              },\n              \"subtasks\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' subtasks\"\n              },\n              \"custom_type\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' task types\"\n              },\n              \"old_assignees\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' assignees\"\n              },\n              \"attachments\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' attachments\"\n              },\n              \"comment\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' comments\"\n              },\n              \"old_status\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' current statuses\"\n              },\n              \"external_dependencies\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' external dependencies\"\n              },\n              \"internal_dependencies\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' internal dependencies\"\n              },\n              \"priority\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' priorities\"\n              },\n              \"custom_fields\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' Custom Fields\"\n              },\n              \"old_checklists\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' checklists\"\n              },\n              \"relationships\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' relationships\"\n              },\n              \"old_subtask_assignees\": {\n                \"type\": \"boolean\",\n                \"description\": \"Import tasks' subtask assignees\"\n              },\n              \"start_date\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Project start date for remapping dates\"\n              },\n              \"due_date\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Project due date for remapping dates\"\n              },\n              \"remap_start_date\": {\n                \"type\": \"boolean\",\n                \"description\": \"Remap start dates\"\n              },\n              \"skip_weekends\": {\n                \"type\": \"boolean\",\n                \"description\": \"Skip weekends when remapping dates\"\n              },\n              \"archived\": {\n                \"type\": \"integer\",\n                \"enum\": [\n                  1,\n                  2,\n                  null\n                ],\n                \"description\": \"Include archived tasks\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetWorkspaceseats",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_workspace_seat_details",
        "description": {
          "tagline": "Retrieve seat details for a workspace.",
          "detailed": "Use this tool to view the used, total, and available member and guest seats for a specified workspace in ClickUp."
        },
        "return_annotation": "Details about used, total, and available seats in a workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The unique ID of the workspace for which seat details are to be retrieved.",
            "endpoint_argument_name": "team_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/seats",
      "tags": [
        "Workspaces"
      ],
      "summary": "Get Workspace seats",
      "description": "View the used, total, and available member and guest seats for a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetWorkspaceplan",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_workspace_plan",
        "description": {
          "tagline": "Retrieve the current subscription plan for a workspace.",
          "detailed": "Use this tool to get details about the current subscription plan for a specified workspace in ClickUp. It should be called when you need to view the plan or pricing details associated with a workspace."
        },
        "return_annotation": "Current subscription plan details for the specified workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The unique ID for the workspace whose subscription plan you want to retrieve.",
            "endpoint_argument_name": "team_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/plan",
      "tags": [
        "Workspaces"
      ],
      "summary": "Get Workspace Plan",
      "description": "View the current [Plan](https://clickup.com/pricing) for the specified Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateUserGroup",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_user_group",
        "description": {
          "tagline": "Create a user group within a ClickUp workspace.",
          "detailed": "Use this tool to organize and manage users by creating a user group within a specific ClickUp workspace. Note that adding a guest with view-only permissions converts them to a paid guest, potentially incurring additional costs."
        },
        "return_annotation": "Details of the created user group in the workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The unique ID of the ClickUp workspace where the user group will be created.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "group_name",
            "alternative_names": [
              "user_group_name",
              "workspace_group_name"
            ],
            "description": "The name of the user group to be created within the workspace. This should be a descriptive name to identify the group easily.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "user_group_members",
            "alternative_names": [
              "group_member_ids",
              "workspace_user_ids"
            ],
            "description": "List of user IDs to include in the user group. Each ID should be an integer representing a user within the workspace.",
            "endpoint_argument_name": "members"
          },
          {
            "name": "group_handle",
            "alternative_names": [
              "group_identifier",
              "user_group_handle"
            ],
            "description": "A unique string identifier for the user group to be created. This will be used as the group's handle within the workspace.",
            "endpoint_argument_name": "handle"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_id}/group",
      "tags": [
        "User Groups"
      ],
      "summary": "Create Group",
      "description": "This endpoint creates a [User Group](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) within a Workspace.\\\n \\\nUser Groups are used to organize and manage users within a Workspace.\\\n \\\nIn the API documentation, `team_id` refers to the Workspace ID, and `group_id` refers to the User Group ID.\\\n \\\n**Note:** Adding a guest with view-only permissions to a Team automatically converts them to a paid guest.\\\n \\\nIf no paid guest seats are available, an additional member seat will be added, increasing the number of paid guest seats.\\\n \\\nThis change incurs a prorated charge based on the billing cycle.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "handle",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "members",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "integer",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "",
              "items": {
                "type": "integer"
              }
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateTeamrequest\",\n        \"required\": [\n          \"name\",\n          \"members\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"handle\": {\n            \"type\": \"string\"\n          },\n          \"members\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"contentEncoding\": \"int32\"\n            },\n            \"description\": \"\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New team name\",\n            \"handle\": \"newteamname\",\n            \"members\": [\n              123456,\n              987654\n            ]\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New User Group name\",\n        \"handle\": \"newusergroupname\",\n        \"members\": [\n          123456,\n          987654\n        ]\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "GetCustomItems",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_workspace_custom_task_types",
        "description": {
          "tagline": "Retrieve custom task types for a specific workspace.",
          "detailed": "Use this tool to view the custom task types available in a specified workspace. Ideal for gaining insight into workspace-specific configurations and custom workflows."
        },
        "return_annotation": "Custom task types available in a workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the Workspace to retrieve custom task types for.",
            "endpoint_argument_name": "team_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/custom_item",
      "tags": [
        "Custom Task Types"
      ],
      "summary": "Get Custom Task Types",
      "description": "View the custom task types available in a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "UpdateTeam",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_user_group",
        "description": {
          "tagline": "Update and manage user groups within a ClickUp Workspace.",
          "detailed": "Use this tool to update user groups in your ClickUp Workspace. Useful for managing team membership, permissions, or configurations. Note that adding a guest with view-only permissions will incur additional charges as they convert to paid guests."
        },
        "return_annotation": "Information about the updated User Group.",
        "arguments": [
          {
            "name": "user_group_id",
            "alternative_names": [
              "group_identifier",
              "user_group_identifier"
            ],
            "description": "The unique identifier of the User Group within the Workspace. This ID is required to specify which group to update.",
            "endpoint_argument_name": "group_id"
          },
          {
            "name": "user_group_name",
            "alternative_names": [
              "group_name",
              "name_of_group"
            ],
            "description": "The new name for the User Group within the ClickUp Workspace. This should be a string representing the desired name.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "handle_identifier",
            "alternative_names": [
              "group_handle",
              "user_group_handle"
            ],
            "description": "A unique identifier or handle for the User Group. This is used to reference the group within ClickUp.",
            "endpoint_argument_name": "handle"
          },
          {
            "name": "add_member_ids",
            "alternative_names": [
              "add_user_ids",
              "include_member_ids"
            ],
            "description": "An array of user IDs to add to the User Group. Each ID should be an integer.",
            "endpoint_argument_name": "members.add"
          },
          {
            "name": "remove_members_ids",
            "alternative_names": [
              "members_to_remove_ids",
              "user_ids_to_remove"
            ],
            "description": "An array of integer IDs representing the users to be removed from the User Group.",
            "endpoint_argument_name": "members.rem"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/group/{group_id}",
      "tags": [
        "User Groups"
      ],
      "summary": "Update Group",
      "description": "This endpoint is used to manage [User Groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups), which are groups of users within your Workspace.\\\n \\\nIn our API, `team_id` in the path refers to the Workspace ID, and `group_id` refers to the ID of a User Group.\\\n \\\n**Note:** Adding a guest with view-only permissions to a User Group automatically converts them to a paid guest.\\\n \\\nIf you don't have any paid guest seats available, a new member seat is automatically added to increase the number of paid guest seats.\\\n \\\nThis incurs a prorated charge based on your billing cycle.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "group_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "User Group ID"
            },
            "description": "User Group ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "handle",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "members.add",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "integer",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "",
              "items": {
                "type": "integer"
              }
            },
            "schema_required": false
          },
          {
            "name": "members.rem",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "integer",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "",
              "items": {
                "type": "integer"
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"The group handle can be updated, which is used to @mention a User Group within the Workspace.\\\\\\n \\\\\\nModify Group members by using the \\\"add\\\" and \\\"rem\\\" parameters with an array of user IDs to include or exclude members.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateTeamrequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"handle\": {\n            \"type\": \"string\"\n          },\n          \"members\": {\n            \"title\": \"Members2\",\n            \"required\": [\n              \"add\",\n              \"rem\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"add\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"contentEncoding\": \"int32\"\n                },\n                \"description\": \"\"\n              },\n              \"rem\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"contentEncoding\": \"int32\"\n                },\n                \"description\": \"\"\n              }\n            },\n            \"examples\": [\n              {\n                \"add\": [\n                  123456,\n                  987654\n                ],\n                \"rem\": [\n                  159753\n                ]\n              }\n            ]\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New User Group Name\",\n            \"handle\": \"newusergroupname\",\n            \"members\": {\n              \"add\": [\n                123456,\n                987654\n              ],\n              \"rem\": [\n                159753\n              ]\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New User Group Name\",\n        \"handle\": \"newusergroupname\",\n        \"members\": {\n          \"add\": [\n            123456,\n            987654\n          ],\n          \"rem\": [\n            159753\n          ]\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteTeam",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_user_group",
        "description": {
          "tagline": "Delete a user group from your ClickUp workspace.",
          "detailed": "This tool removes a user group from your ClickUp workspace based on the provided group ID."
        },
        "return_annotation": "Confirmation of user group deletion from the workspace.",
        "arguments": [
          {
            "name": "user_group_id",
            "alternative_names": [
              "group_identifier",
              "group_id"
            ],
            "description": "The identifier of the user group to be deleted from the workspace.",
            "endpoint_argument_name": "group_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/group/{group_id}",
      "tags": [
        "User Groups"
      ],
      "summary": "Delete Group",
      "description": "This endpoint is used to remove a [User Group](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) from your Workspace.\\\n \\\nIn our API documentation, `team_id` refers to the id of a Workspace, and `group_id` refers to the id of a user group.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "group_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "User Group ID"
            },
            "description": "User Group ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetTeams1",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_user_groups_in_workspace",
        "description": {
          "tagline": "Retrieve user groups in a ClickUp workspace.",
          "detailed": "Use this tool to view the user groups within a specific ClickUp workspace. It's useful for managing and organizing user permissions and roles within a team environment."
        },
        "return_annotation": "Details of user groups in a workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "workspace_identifier",
              "workspace_id_number"
            ],
            "description": "The ID of the ClickUp workspace to retrieve user groups from.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "user_group_ids",
            "alternative_names": [
              "group_identifiers",
              "group_id_list"
            ],
            "description": "List one or more User Group IDs to retrieve details about specific user groups in the workspace.",
            "endpoint_argument_name": "group_ids"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/group",
      "tags": [
        "User Groups"
      ],
      "summary": "Get Groups",
      "description": "This endpoint is used to view [User Groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) in your Workspace.\\\n \\\nIn our API documentation, `team_id` refers to the ID of a Workspace, and `group_id` refers to the ID of a User Group.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "group_ids",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Enter one or more User Group IDs to retrieve information about specific User Group."
            },
            "description": "Enter one or more User Group IDs to retrieve information about specific User Group.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "Gettrackedtime",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_tracked_time_for_task",
        "description": {
          "tagline": "Fetch tracked time for a specific task.",
          "detailed": "Use this tool to get the tracked time recorded for a specific task in ClickUp. It's useful for retrieving time spent details on tasks, though it doesn't handle new time entries."
        },
        "return_annotation": "Tracked time details for a specific task.",
        "arguments": [
          {
            "name": "task_id",
            "alternative_names": [
              "task_identifier",
              "task_reference_id"
            ],
            "description": "The unique identifier for the task whose tracked time you want to retrieve.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "set_content_type_header",
            "alternative_names": [
              "define_content_type",
              "specify_content_header"
            ],
            "description": "Set the Content-Type header for the request, typically as 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "workspace_identifier",
              "team_identifier"
            ],
            "description": "The ID of the Workspace to be provided when referencing a task by its custom task ID. Required if `custom_task_ids` is `true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_ids",
              "custom_ids_usage"
            ],
            "description": "Set to true to reference tasks by their custom task IDs instead of default IDs.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/task/{task_id}/time",
      "tags": [
        "Time Tracking (Legacy)"
      ],
      "summary": "Get tracked time",
      "description": "***Note:** This is a legacy time tracking endpoint. We recommend using the Time Tracking API endpoints to manage time entries.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "Tracktime",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "clickup_legacy_time_tracking",
        "description": {
          "tagline": "Log time entry for a ClickUp task using legacy endpoint.",
          "detailed": "This tool allows logging time entries for a specific ClickUp task using a legacy API endpoint. It should be called when you need to record time spent on tasks, although it's recommended to use the updated Time Tracking API for new implementations."
        },
        "return_annotation": "Confirmation of time entry being logged for a task.",
        "arguments": [
          {
            "name": "clickup_task_id",
            "alternative_names": [
              "clickup_task_reference_id",
              "clickup_task_identifier"
            ],
            "description": "The unique identifier of the task for which time is being logged. This can refer to either the standard task ID or a custom task ID if specified.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "start_time_unix_epoch",
            "alternative_names": [
              "start_time_unix",
              "start_timestamp_epoch"
            ],
            "description": "The start time of the time entry in Unix epoch format. This is required to log time for a task.",
            "endpoint_argument_name": "start"
          },
          {
            "name": "end_timestamp",
            "alternative_names": [
              "stop_time",
              "finish_time"
            ],
            "description": "Epoch timestamp indicating when the time tracking ended for the task.",
            "endpoint_argument_name": "end"
          },
          {
            "name": "time_spent_seconds",
            "alternative_names": [
              "duration_seconds",
              "work_duration_seconds"
            ],
            "description": "Duration of time spent on the task in seconds. This is the time you want to log for the specific task.",
            "endpoint_argument_name": "time"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "custom_task_workspace_id"
            ],
            "description": "Provide the Workspace ID when `custom_task_ids` is `true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "custom_task_id_reference",
              "enable_custom_task_ids"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/task/{task_id}/time",
      "tags": [
        "Time Tracking (Legacy)"
      ],
      "summary": "Track time",
      "description": "***Note:** This is a legacy time tracking endpoint. We recommend using the Time Tracking API endpoints to manage time entries.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "start",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "end",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "time",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"Include the total time or the start time and end time.\\\\\\n \\\\\\nThe total time is in milliseconds and `\\\"start\\\"` and `\\\"end\\\"` values are Unix time in milliseconds.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"Tracktimerequest\",\n        \"required\": [\n          \"start\",\n          \"end\",\n          \"time\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"start\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"end\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"time\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          }\n        },\n        \"examples\": [\n          {\n            \"start\": 1567780450202,\n            \"end\": 1508369194377,\n            \"time\": 8640000\n          }\n        ]\n      },\n      \"example\": {\n        \"start\": 1567780450202,\n        \"end\": 1508369194377,\n        \"time\": 8640000\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "Edittimetracked",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "edit_legacy_time_entry",
        "description": {
          "tagline": "Edit a legacy time tracked entry for a task in ClickUp.",
          "detailed": "Use this tool to modify an existing time entry on a specific task using the legacy endpoint in ClickUp. It's recommended to use newer APIs for time tracking, but this can be used for older integrations."
        },
        "return_annotation": "Confirmation of time entry update.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id_reference",
              "task_id_value"
            ],
            "description": "The unique identifier of the task for which the legacy time entry is being edited. This is required to specify the task in ClickUp.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "legacy_time_interval_id",
            "alternative_names": [
              "legacy_time_entry_id",
              "time_tracking_interval_id"
            ],
            "description": "The unique identifier for the time interval to be edited.",
            "endpoint_argument_name": "interval_id"
          },
          {
            "name": "start_timestamp",
            "alternative_names": [
              "start_time_unix",
              "start_time_epoch"
            ],
            "description": "The start time of the time entry as a Unix timestamp in milliseconds.",
            "endpoint_argument_name": "start"
          },
          {
            "name": "end_time_epoch",
            "alternative_names": [
              "ending_timestamp",
              "finish_time_epoch"
            ],
            "description": "The end time of the tracked interval in Unix epoch format. It marks when the time entry should conclude.",
            "endpoint_argument_name": "end"
          },
          {
            "name": "time_duration_in_seconds",
            "alternative_names": [
              "duration_seconds",
              "total_time_seconds"
            ],
            "description": "The total time duration (in seconds) for the time entry to be updated. This modifies the tracked time for a specific task.",
            "endpoint_argument_name": "time"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The Workspace ID required when custom task IDs are used. This must be set if `custom_task_ids` is `true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_reference",
              "custom_id_usage"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/task/{task_id}/time/{interval_id}",
      "tags": [
        "Time Tracking (Legacy)"
      ],
      "summary": "Edit time tracked",
      "description": "***Note:** This is a legacy time tracking endpoint. We recommend using the Time Tracking API endpoints to manage time entries.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "interval_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "start",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "end",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          },
          {
            "name": "time",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"Edit the start, end, or total time of a time tracked entry.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"Edittimetrackedrequest\",\n        \"required\": [\n          \"start\",\n          \"end\",\n          \"time\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"start\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"end\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"time\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          }\n        },\n        \"examples\": [\n          {\n            \"start\": 1567780450202,\n            \"end\": 1508369194377,\n            \"time\": 8640000\n          }\n        ]\n      },\n      \"example\": {\n        \"start\": 1567780450202,\n        \"end\": 1508369194377,\n        \"time\": 8640000\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "Deletetimetracked",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_time_entry",
        "description": {
          "tagline": "Delete a specific time entry from a task.",
          "detailed": "Use this tool to delete a specific time tracking entry from a task. It's useful for managing or correcting time logs by removing unwanted entries."
        },
        "return_annotation": "Confirms deletion of a specific time entry from a task.",
        "arguments": [
          {
            "name": "task_identifier",
            "alternative_names": [
              "task_id_tool",
              "task_reference"
            ],
            "description": "The identifier of the task from which to delete the time entry. This must match the task ID used in ClickUp.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "interval_id_for_removal",
            "alternative_names": [
              "time_entry_id",
              "time_interval_id"
            ],
            "description": "The unique identifier of the time entry to delete from a task.",
            "endpoint_argument_name": "interval_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "content_type",
              "header_content_type"
            ],
            "description": "Specify the media type of the resource (usually 'application/json').",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_workspace_id",
              "workspace_identifier"
            ],
            "description": "Provide the Workspace ID when `use_custom_task_ids` is `true`. Required to identify the workspace in ClickUp.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "reference_by_custom_id",
              "enable_custom_task_id"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/task/{task_id}/time/{interval_id}",
      "tags": [
        "Time Tracking (Legacy)"
      ],
      "summary": "Delete time tracked",
      "description": "***Note:** This is a legacy time tracking endpoint. We recommend using the Time Tracking API endpoints to manage time entries.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "interval_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "Gettimeentrieswithinadaterange",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_time_entries_in_date_range",
        "description": {
          "tagline": "Retrieve time entries within a specified date range.",
          "detailed": "Use this tool to view time entries filtered by start and end dates. By default, it returns entries from the last 30 days for the authenticated user. To access entries for other users, use the 'assignee' parameter. You may apply location filters with 'space_id', 'folder_id', 'list_id', or 'task_id', but only one at a time. Note: Negative duration entries indicate a running timer."
        },
        "return_annotation": "Time entries filtered by date range and optional parameters.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_id",
              "workspace_identifier"
            ],
            "description": "Specify the Workspace ID for filtering time entries when using custom task IDs.",
            "endpoint_argument_name": "team_Id"
          },
          {
            "name": "content_type",
            "alternative_names": [
              "http_content_type",
              "response_content_type"
            ],
            "description": "Specifies the format of the response content. Usually set to 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "start_date_in_unix_milliseconds",
            "alternative_names": [
              "unix_start_date",
              "start_date_unix_ms"
            ],
            "description": "The start date of the time entries in Unix time (milliseconds).",
            "endpoint_argument_name": "start_date"
          },
          {
            "name": "end_date_unix_milliseconds",
            "alternative_names": [
              "end_time_unix_milliseconds",
              "end_timestamp_unix_milliseconds"
            ],
            "description": "Specify the end date in Unix time (milliseconds) to filter time entries up to this point.",
            "endpoint_argument_name": "end_date"
          },
          {
            "name": "filter_by_assignee",
            "alternative_names": [
              "assignee_ids",
              "user_filter"
            ],
            "description": "Filter by user IDs. Use commas to separate multiple IDs (e.g., '1234,9876'). Only accessible to Workspace Owners/Admins.",
            "endpoint_argument_name": "assignee"
          },
          {
            "name": "space_id",
            "alternative_names": [
              "specific_space_id",
              "task_space_id"
            ],
            "description": "Include time entries associated only with tasks in the specified Space using its ID.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "folder_id",
            "alternative_names": [
              "specific_folder_id",
              "task_folder_id"
            ],
            "description": "Include time entries for tasks in a specific folder by providing its ID. Only one location filter (space, folder, list, or task) can be used at a time.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "specific_list_id",
            "alternative_names": [
              "target_list_id",
              "list_identifier"
            ],
            "description": "Include only time entries associated with tasks in a specified List by providing the List ID.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "specific_task_id",
            "alternative_names": [
              "designated_task_id",
              "task_id_filter"
            ],
            "description": "Include only time entries associated with the specified task.",
            "endpoint_argument_name": "task_id"
          },
          {
            "name": "workspace_id_for_custom_task_ids",
            "alternative_names": [
              "custom_task_workspace_id",
              "workspace_identifier_for_custom_tasks"
            ],
            "description": "Provide the Workspace ID when referencing a task by its custom task ID, and `custom_task_ids` is set to true.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "include_task_tags",
            "alternative_names": [
              "add_task_tags_to_response",
              "with_task_tags_included"
            ],
            "description": "Set to true to include task tags in the response for associated time entries.",
            "endpoint_argument_name": "include_task_tags"
          },
          {
            "name": "include_location_names",
            "alternative_names": [
              "show_location_names",
              "display_location_names"
            ],
            "description": "Include the names of the List, Folder, and Space in the response along with their IDs when set to true.",
            "endpoint_argument_name": "include_location_names"
          },
          {
            "name": "include_approval_history",
            "alternative_names": [
              "approval_history",
              "include_approval_change_history"
            ],
            "description": "Set to true to include the approval history for each time entry, with status changes, notes, and approvers.",
            "endpoint_argument_name": "include_approval_history"
          },
          {
            "name": "include_approval_details",
            "alternative_names": [
              "add_approval_details",
              "show_approval_details"
            ],
            "description": "Include detailed approval information for each time entry, such as Approver ID, Approved Time, List of Approvers, and Approval Status.",
            "endpoint_argument_name": "include_approval_details"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_id_reference",
              "custom_task_id_id_mode"
            ],
            "description": "Set to true to reference tasks by their custom task IDs. Requires specifying the team_id.",
            "endpoint_argument_name": "custom_task_ids"
          },
          {
            "name": "include_only_billable_entries",
            "alternative_names": [
              "restrict_to_billing_status",
              "limit_by_billability"
            ],
            "description": "Set to `true` to include only billable time entries, or `false` for non-billable entries.",
            "endpoint_argument_name": "is_billable"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_Id}/time_entries",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Get time entries within a date range",
      "description": "View time entries filtered by start and end date. \\\n \\\nBy default, this endpoint returns time entries from the last 30 days created by the authenticated user. \\\n \\\nTo retrieve time entries for other users, you must include the `assignee` query parameter. \\\n \\\nOnly one of the following location filters can be included at a time: `space_id`, `folder_id`, `list_id`, or `task_id`. \\\n \\\n***Note:** A time entry that has a negative duration means that timer is currently running for that user.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "start_date",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Unix time in milliseconds"
            },
            "description": "Unix time in milliseconds",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "end_date",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Unix time in milliseconds"
            },
            "description": "Unix time in milliseconds",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Filter by `user_id`. For multiple assignees, separate `user_id` using commas.\\\n \\\n **Example:** `assignee=1234,9876`\\\n \\\n***Note:** Only Workspace Owners/Admins have access to do this.*"
            },
            "description": "Filter by `user_id`. For multiple assignees, separate `user_id` using commas.\\\n \\\n **Example:** `assignee=1234,9876`\\\n \\\n***Note:** Only Workspace Owners/Admins have access to do this.*",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "include_task_tags",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include task tags in the response for time entries associated with tasks."
            },
            "description": "Include task tags in the response for time entries associated with tasks.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "include_location_names",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include the names of the List, Folder, and Space along with the `list_id`,`folder_id`, and `space_id`."
            },
            "description": "Include the names of the List, Folder, and Space along with the `list_id`,`folder_id`, and `space_id`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "include_approval_history",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include the history of the approval for each time entry. Adds status changes, notes, and approvers."
            },
            "description": "Include the history of the approval for each time entry. Adds status changes, notes, and approvers.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "include_approval_details",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include the details of the approval for each time entry. Adds Approver ID, Approved Time, List of Approvers, and Approval Status."
            },
            "description": "Include the details of the approval for each time entry. Adds Approver ID, Approved Time, List of Approvers, and Approval Status.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Only include time entries associated with tasks in a specific Space."
            },
            "description": "Only include time entries associated with tasks in a specific Space.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Only include time entries associated with tasks in a specific Folder."
            },
            "description": "Only include time entries associated with tasks in a specific Folder.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Only include time entries associated with tasks in a specific List."
            },
            "description": "Only include time entries associated with tasks in a specific List.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Only include time entries associated with a specific task."
            },
            "description": "Only include time entries associated with a specific task.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "is_billable",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include only billable time entries by using a value of `true` or only non-billable time entries by using a value of `false`.\\\n \\\nFor example: `?is_billable=true`."
            },
            "description": "Include only billable time entries by using a value of `true` or only non-billable time entries by using a value of `false`.\\\n \\\nFor example: `?is_billable=true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_Id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "Createatimeentry",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_time_entry",
        "description": {
          "tagline": "Create a new time entry for tracking work.",
          "detailed": "Use this tool to log a new time entry for a specific team. If the duration is negative, it indicates that a timer is running for the user."
        },
        "return_annotation": "Information about the created time entry.",
        "arguments": [
          {
            "name": "team_id_numeric",
            "alternative_names": [
              "team_id_numeric",
              "workspace_identifier"
            ],
            "description": "The numeric ID of the workspace. Required if referencing a task by custom task ID.",
            "endpoint_argument_name": "team_Id"
          },
          {
            "name": "time_entry_details",
            "alternative_names": [
              "entry_details",
              "work_time_details"
            ],
            "description": "JSON object providing details for the time entry, including 'description', 'start', 'stop', 'tags', 'billable', 'assignee', 'tid'.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_workspace_id",
              "workspace_identifier"
            ],
            "description": "Required if `custom_task_ids` is true. Provide the Workspace ID for the team.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_ids",
              "custom_ids_usage"
            ],
            "description": "Set to true to reference a task by its custom task id.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_Id}/time_entries",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Create a time entry",
      "description": "Create a time entry. \\\n \\\n***Note:** A time entry that has a negative duration means that timer is currently running for that user.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_Id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "tags": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "name": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "tag_fg": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "tag_bg": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": "Users on the Business Plan and above can include a time tracking label."
                },
                "start": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "stop": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The `duration` parameter can be used instead of the `stop` parameter. "
                },
                "end": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "billable": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "duration": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When there are values for both `start` and `end`, `duration` is ignored. The `stop` parameter can be used instead of the `duration` parameter."
                },
                "assignee": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Workspace owners and admins can include any user id. Workspace members can only include their own user id."
                },
                "tid": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": "Associate a time entry with a task using the `tid` parameter."
            },
            "description": "Associate a time entry with a task using the `tid` parameter.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "Createatimeentryrequest",
              "properties": {
                "description": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "description": "Users on the Business Plan and above can include a time tracking label.",
                  "items": {
                    "type": "object",
                    "title": "Tags6",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "tag_fg": {
                        "type": "string"
                      },
                      "tag_bg": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "tag_fg",
                      "tag_bg"
                    ]
                  }
                },
                "start": {
                  "type": "integer"
                },
                "stop": {
                  "type": "integer",
                  "description": "The `duration` parameter can be used instead of the `stop` parameter. "
                },
                "end": {
                  "type": "integer"
                },
                "billable": {
                  "type": "boolean"
                },
                "duration": {
                  "type": "integer",
                  "description": "When there are values for both `start` and `end`, `duration` is ignored. The `stop` parameter can be used instead of the `duration` parameter."
                },
                "assignee": {
                  "type": "integer",
                  "description": "Workspace owners and admins can include any user id. Workspace members can only include their own user id."
                },
                "tid": {
                  "type": "string"
                }
              },
              "required": [
                "start",
                "duration"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"Associate a time entry with a task using the `tid` parameter.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"Createatimeentryrequest\",\n        \"required\": [\n          \"start\",\n          \"duration\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"description\": \"Users on the Business Plan and above can include a time tracking label.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"title\": \"Tags6\",\n              \"required\": [\n                \"name\",\n                \"tag_fg\",\n                \"tag_bg\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"tag_fg\": {\n                  \"type\": \"string\"\n                },\n                \"tag_bg\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": [\n                {\n                  \"name\": \"Tag name\",\n                  \"tag_fg\": \"#000000\",\n                  \"tag_bg\": \"#000000\"\n                }\n              ]\n            }\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"stop\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\",\n            \"description\": \"The `duration` parameter can be used instead of the `stop` parameter. \"\n          },\n          \"end\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\"\n          },\n          \"billable\": {\n            \"type\": \"boolean\"\n          },\n          \"duration\": {\n            \"description\": \"When there are values for both `start` and `end`, `duration` is ignored. The `stop` parameter can be used instead of the `duration` parameter.\",\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"assignee\": {\n            \"description\": \"Workspace owners and admins can include any user id. Workspace members can only include their own user id.\",\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          },\n          \"tid\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"description\": \"from api\",\n            \"tags\": [\n              {\n                \"name\": \"name of tag\",\n                \"tag_bg\": \"#BF55EC\",\n                \"tag_fg\": \"#FFFFFF\"\n              }\n            ],\n            \"start\": 1595282645000,\n            \"end\": 1595282660000,\n            \"billable\": true,\n            \"duration\": 50000,\n            \"assignee\": 1,\n            \"tid\": \"task_id\"\n          }\n        ]\n      },\n      \"example\": {\n        \"description\": \"from api\",\n        \"tags\": [\n          {\n            \"name\": \"name of tag\",\n            \"tag_bg\": \"#BF55EC\",\n            \"tag_fg\": \"#FFFFFF\"\n          }\n        ],\n        \"start\": 1595282645000,\n        \"billable\": true,\n        \"duration\": 50000,\n        \"assignee\": 1,\n        \"tid\": \"task_id\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "Getsingulartimeentry",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_time_entry",
        "description": {
          "tagline": "Retrieve details of a specific time entry.",
          "detailed": "Use this tool to view information about a single time entry, including its duration. If the duration is negative, it indicates an active timer for the user."
        },
        "return_annotation": "Details of a specific time entry.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace (team) to which the time entry belongs.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "time_entry_id",
            "alternative_names": [
              "entry_timer_id",
              "time_log_id"
            ],
            "description": "The ID of a specific time entry, which can be found using the Get Time Entries Within a Date Range endpoint.",
            "endpoint_argument_name": "timer_id"
          },
          {
            "name": "content_type",
            "alternative_names": [
              "response_format",
              "data_type"
            ],
            "description": "Specifies the format of the content being sent or received, such as 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "include_task_tags",
            "alternative_names": [
              "show_task_tags",
              "display_task_tags"
            ],
            "description": "Set to true to include task tags in the response.",
            "endpoint_argument_name": "include_task_tags"
          },
          {
            "name": "include_location_names",
            "alternative_names": [
              "show_location_names",
              "add_location_names"
            ],
            "description": "Include names of the List, Folder, and Space in the response along with their respective IDs.",
            "endpoint_argument_name": "include_location_names"
          },
          {
            "name": "include_approval_history",
            "alternative_names": [
              "add_approval_history",
              "show_approval_history"
            ],
            "description": "Include the approval history of the time entry in the response. Set to true to include.",
            "endpoint_argument_name": "include_approval_history"
          },
          {
            "name": "include_approval_details",
            "alternative_names": [
              "show_approval_details",
              "fetch_approval_details"
            ],
            "description": "Include the details of the approval for the time entry when true.",
            "endpoint_argument_name": "include_approval_details"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/time_entries/{timer_id}",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Get singular time entry",
      "description": "View a single time entry. \\\n \\\n***Note:** A time entry that has a negative duration means that timer is currently running for that user.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_task_tags",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include task tags in the response for time entries associated with tasks."
            },
            "description": "Include task tags in the response for time entries associated with tasks.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "include_location_names",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include the names of the List, Folder, and Space along with `list_id`,`folder_id`, and `space_id`."
            },
            "description": "Include the names of the List, Folder, and Space along with `list_id`,`folder_id`, and `space_id`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "include_approval_history",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include the history of the approval for the time entry."
            },
            "description": "Include the history of the approval for the time entry.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "include_approval_details",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Include the details of the approval for the time entry."
            },
            "description": "Include the details of the approval for the time entry.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "timer_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of a time entry. \\\n \\\nThis can be found using the [Get Time Entries Within a Date Range](ref:gettimeentrieswithinadaterange) endpoint."
            },
            "description": "The ID of a time entry. \\\n \\\nThis can be found using the [Get Time Entries Within a Date Range](ref:gettimeentrieswithinadaterange) endpoint.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "DeleteatimeEntry",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_time_entry",
        "description": {
          "tagline": "Deletes a time entry from a ClickUp workspace.",
          "detailed": "Use this tool to delete a specific time entry from a ClickUp workspace. This should be called when you need to remove a recorded time entry by specifying the team and timer identifiers."
        },
        "return_annotation": "Confirmation of time entry deletion.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The unique identifier for the ClickUp workspace from which you want to delete the time entry.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "timer_ids_to_delete",
            "alternative_names": [
              "timer_ids",
              "ids_for_deletion"
            ],
            "description": "Comma-separated list of timer IDs to delete.",
            "endpoint_argument_name": "timer_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "mime_type_header",
              "data_format_header"
            ],
            "description": "Specify the content type of the request, usually 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/team/{team_id}/time_entries/{timer_id}",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Delete a time Entry",
      "description": "Delete a time entry from a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "timer_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Array of timer ids to delete separated by commas"
            },
            "description": "Array of timer ids to delete separated by commas",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "UpdateatimeEntry",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_time_entry",
        "description": {
          "tagline": "Update the details of a time entry.",
          "detailed": "This tool updates specific details of a time entry in ClickUp. Use it when you need to modify data such as the duration, description, or other attributes of an existing time entry."
        },
        "return_annotation": "Confirmation of updated time entry details.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "space_id"
            ],
            "description": "The Workspace ID is required when referencing a task by its custom task ID. Provide it if `custom_task_ids` is set to `true`.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "team_identifier",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace (team) where the time entry is located. This is an integer value.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "timer_id",
            "alternative_names": [
              "time_entry_identifier",
              "entry_id"
            ],
            "description": "The unique identifier of the time entry to be updated.",
            "endpoint_argument_name": "timer_id"
          },
          {
            "name": "time_entry_details",
            "alternative_names": [
              "time_entry_data",
              "entry_update_data"
            ],
            "description": "Details for updating the time entry, including description, tags, start, end times, and other attributes.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_ids",
              "custom_task_id_reference"
            ],
            "description": "Set to true to reference tasks by custom task IDs instead of standard IDs.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/team/{team_id}/time_entries/{timer_id}",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Update a time Entry",
      "description": "Update the details of a time entry.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`"
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "timer_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "tags": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {},
                  "description": "Users on the Business Plan and above can include a time tracking label."
                },
                "tag_action": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "start": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When providing `start`, you must also provide `end`."
                },
                "end": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "When providing `end`, you must also provide `start`."
                },
                "tid": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "billable": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "duration": {
                  "val_type": "integer",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": "Accessible tag actions are `[\"replace\", \"add\", \"remove\"]`"
            },
            "description": "Accessible tag actions are `[\"replace\", \"add\", \"remove\"]`",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "UpdateatimeEntryrequest",
              "properties": {
                "description": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "description": "Users on the Business Plan and above can include a time tracking label.",
                  "items": {
                    "type": "object",
                    "description": "Schema reference broken: #/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items",
                    "properties": {},
                    "additionalProperties": true,
                    "x-moar-broken-reference": "#/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items"
                  }
                },
                "tag_action": {
                  "type": "string"
                },
                "start": {
                  "type": "integer",
                  "description": "When providing `start`, you must also provide `end`."
                },
                "end": {
                  "type": "integer",
                  "description": "When providing `end`, you must also provide `start`."
                },
                "tid": {
                  "type": "string"
                },
                "billable": {
                  "type": "boolean"
                },
                "duration": {
                  "type": "integer"
                }
              },
              "required": [
                "tags",
                "tid"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"Accessible tag actions are `[\\\"replace\\\", \\\"add\\\", \\\"remove\\\"]`\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateatimeEntryrequest\",\n        \"required\": [\n          \"tags\",\n          \"tid\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"description\": \"Users on the Business Plan and above can include a time tracking label.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"description\": \"Schema reference broken: #/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items\",\n              \"additionalProperties\": true,\n              \"x-moar-broken-reference\": \"#/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items\"\n            }\n          },\n          \"tag_action\": {\n            \"type\": \"string\"\n          },\n          \"start\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\",\n            \"description\": \"When providing `start`, you must also provide `end`.\"\n          },\n          \"end\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int64\",\n            \"description\": \"When providing `end`, you must also provide `start`.\"\n          },\n          \"tid\": {\n            \"type\": \"string\"\n          },\n          \"billable\": {\n            \"type\": \"boolean\"\n          },\n          \"duration\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          }\n        },\n        \"examples\": [\n          {\n            \"description\": \"\",\n            \"tags\": [\n              {\n                \"name\": \"name of tag\",\n                \"tag_bg\": \"#BF55EC\",\n                \"tag_fg\": \"#FFFFFF\"\n              }\n            ],\n            \"tag_action\": \"add\",\n            \"start\": 1595289395842,\n            \"end\": 1595289495842,\n            \"tid\": \"task_id\",\n            \"billable\": true,\n            \"duration\": 100000\n          }\n        ]\n      },\n      \"example\": {\n        \"description\": \"\",\n        \"tags\": [\n          {\n            \"name\": \"name of tag\",\n            \"tag_bg\": \"#BF55EC\",\n            \"tag_fg\": \"#FFFFFF\"\n          }\n        ],\n        \"tag_action\": \"add\",\n        \"start\": 1595289395842,\n        \"end\": 1595289495842,\n        \"tid\": \"task_id\",\n        \"billable\": true,\n        \"duration\": 100000\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "Gettimeentryhistory",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_time_entry_changes",
        "description": {
          "tagline": "View a list of changes made to a time entry.",
          "detailed": "Use this tool to access the history of modifications for a specific time entry within a team in ClickUp. It provides insights into various changes made on the entry, such as updates or edits."
        },
        "return_annotation": "List of changes made to a time entry.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace (team) where the time entry resides.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "time_entry_id",
            "alternative_names": [
              "entry_id",
              "log_id"
            ],
            "description": "The ID of a time entry. This ID can be obtained using the Get Time Entries Within a Date Range endpoint.",
            "endpoint_argument_name": "timer_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "http_content_type",
              "content_type_value"
            ],
            "description": "The media type for the request, typically 'application/json'. Required for HTTP headers.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/time_entries/{timer_id}/history",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Get time entry history",
      "description": "View a list of changes made to a time entry.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "timer_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The ID of a time entry. \\\n \\\nThis can be found using the [Get Time Entries Within a Date Range](ref:gettimeentrieswithinadaterange) endpoint."
            },
            "description": "The ID of a time entry. \\\n \\\nThis can be found using the [Get Time Entries Within a Date Range](ref:gettimeentrieswithinadaterange) endpoint.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "Getrunningtimeentry",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_current_running_time_entry",
        "description": {
          "tagline": "Retrieve the current running time entry for the user.",
          "detailed": "Use this tool to view the time entry that is currently tracking time for the authenticated user. It indicates which timer is actively running. A negative duration suggests an ongoing timer."
        },
        "return_annotation": "Details of the currently running time entry for the user.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace to retrieve the running time entry for. It identifies the specific workspace within ClickUp.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "http_content_type",
              "content_type_parameter"
            ],
            "description": "The MIME type of the content, e.g., 'application/json'. Required for HTTP content negotiation.",
            "endpoint_argument_name": "Content-Type"
          },
          {
            "name": "assignee_user_id",
            "alternative_names": [
              "user_id_of_assignee",
              "timer_assignee_id"
            ],
            "description": "The user ID of the time entry assignee for whom the current running timer is being retrieved. This identifies which user's timer is actively running.",
            "endpoint_argument_name": "assignee"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/time_entries/current",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Get running time entry",
      "description": "View a time entry that's currently tracking time for the authenticated user. \\\n \\\n***Note:** A time entry that has a negative duration means that timer is currently running for that user.*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "assignee",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "user id"
            },
            "description": "user id",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "Removetagsfromtimeentries",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_tags_from_time_entries",
        "description": {
          "tagline": "Remove labels from specific time entries.",
          "detailed": "Use this tool to remove labels from time entries without affecting the labels in the Workspace."
        },
        "return_annotation": "Confirmation of tag removal from time entries.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The unique ID of the Workspace from which to remove labels from time entries. Must be an integer.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "time_entry_tags_payload",
            "alternative_names": [
              "time_entries_labels_data",
              "entries_tags_info"
            ],
            "description": "A JSON object containing the IDs of the time entries and the tags to be removed. The object should have two fields: `time_entry_ids` (an array of strings for the IDs) and `tags` (an array of objects for tags to be removed).",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/team/{team_id}/time_entries/tags",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Remove tags from time entries",
      "description": "Remove labels from time entries. This does not remove the label from a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "time_entry_ids": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": ""
                },
                "tags": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {},
                  "description": ""
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "Removetagsfromtimeentriesrequest",
              "properties": {
                "time_entry_ids": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "string"
                  }
                },
                "tags": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "object",
                    "description": "Schema reference broken: #/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries~1start/post/requestBody/content/application~1json/schema/properties/tags/items",
                    "properties": {},
                    "additionalProperties": true,
                    "x-moar-broken-reference": "#/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries~1start/post/requestBody/content/application~1json/schema/properties/tags/items"
                  }
                }
              },
              "required": [
                "time_entry_ids",
                "tags"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"Removetagsfromtimeentriesrequest\",\n        \"required\": [\n          \"time_entry_ids\",\n          \"tags\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"time_entry_ids\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"description\": \"Schema reference broken: #/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries~1start/post/requestBody/content/application~1json/schema/properties/tags/items\",\n              \"additionalProperties\": true,\n              \"x-moar-broken-reference\": \"#/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries~1start/post/requestBody/content/application~1json/schema/properties/tags/items\"\n            },\n            \"description\": \"\"\n          }\n        },\n        \"examples\": [\n          {\n            \"time_entry_ids\": [\n              \"timer_id\"\n            ],\n            \"tags\": [\n              {\n                \"name\": \"name of tag\"\n              }\n            ]\n          }\n        ]\n      },\n      \"example\": {\n        \"time_entry_ids\": [\n          \"timer_id\"\n        ],\n        \"tags\": [\n          {\n            \"name\": \"name of tag\"\n          }\n        ]\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "Getalltagsfromtimeentries",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_time_entry_tags",
        "description": {
          "tagline": "Retrieve all tags from time entries in a workspace.",
          "detailed": "Use this tool to view all labels that have been applied to time entries within a specified workspace."
        },
        "return_annotation": "List of labels applied to time entries in a workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The unique ID of the workspace to retrieve tags from.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "content_type_header",
            "alternative_names": [
              "content_type_value",
              "header_content_type"
            ],
            "description": "The media type of the resource, usually set to 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/time_entries/tags",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Get all tags from time entries",
      "description": "View all the labels that have been applied to time entries in a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "Addtagsfromtimeentries",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_tag_to_time_entry",
        "description": {
          "tagline": "Add a label to a specific time entry in ClickUp.",
          "detailed": "This tool is used to attach a label to a time entry for a specific team in ClickUp. It should be called when you want to organize or categorize time entries with tags for better tracking and management."
        },
        "return_annotation": "Confirmation of tag addition to the time entry.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace where the time entry is located. This is required to specify which team the tag should be added to.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "time_entry_tag_request",
            "alternative_names": [
              "tagging_data",
              "time_entry_labeling"
            ],
            "description": "JSON object containing time_entry_ids (array of strings) and tags (array of JSON objects) to be added.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_id}/time_entries/tags",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Add tags from time entries",
      "description": "Add a label to a time entry.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "time_entry_ids": {
                  "val_type": "array",
                  "inner_val_type": "string",
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": ""
                },
                "tags": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {},
                  "description": ""
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "Addtagsfromtimeentriesrequest",
              "properties": {
                "time_entry_ids": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "string"
                  }
                },
                "tags": {
                  "type": "array",
                  "description": "",
                  "items": {
                    "type": "object",
                    "description": "Schema reference broken: #/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items",
                    "properties": {},
                    "additionalProperties": true,
                    "x-moar-broken-reference": "#/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items"
                  }
                }
              },
              "required": [
                "time_entry_ids",
                "tags"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"Addtagsfromtimeentriesrequest\",\n        \"required\": [\n          \"time_entry_ids\",\n          \"tags\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"time_entry_ids\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"description\": \"Schema reference broken: #/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items\",\n              \"additionalProperties\": true,\n              \"x-moar-broken-reference\": \"#/paths/~1v2~1team~1%7Bteam_Id%7D~1time_entries/post/requestBody/content/application~1json/schema/properties/tags/items\"\n            },\n            \"description\": \"\"\n          }\n        },\n        \"examples\": [\n          {\n            \"time_entry_ids\": [\n              \"timer_id\"\n            ],\n            \"tags\": [\n              {\n                \"name\": \"name of tag\",\n                \"tag_bg\": \"#BF55EC\",\n                \"tag_fg\": \"#FFFFFF\"\n              }\n            ]\n          }\n        ]\n      },\n      \"example\": {\n        \"time_entry_ids\": [\n          \"timer_id\"\n        ],\n        \"tags\": [\n          {\n            \"name\": \"name of tag\",\n            \"tag_bg\": \"#BF55EC\",\n            \"tag_fg\": \"#FFFFFF\"\n          }\n        ]\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "Changetagnamesfromtimeentries",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "rename_time_entry_label",
        "description": {
          "tagline": "Rename a time entry label in ClickUp.",
          "detailed": "Use this tool to change the name of a label associated with time entries for a specific team in ClickUp."
        },
        "return_annotation": "Confirmation of label rename for time entries.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_id",
              "clickup_team_id"
            ],
            "description": "The ID of the workspace where the label is located. This is required to specify the team in ClickUp whose label you want to rename.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "current_label_name",
            "alternative_names": [
              "existing_label_name",
              "old_label_name"
            ],
            "description": "The current name of the time entry label that needs to be renamed.",
            "endpoint_argument_name": "name"
          },
          {
            "name": "new_label_name",
            "alternative_names": [
              "updated_label_name",
              "renamed_label_title"
            ],
            "description": "The new name for the time entry label to be applied in ClickUp.",
            "endpoint_argument_name": "new_name"
          },
          {
            "name": "label_background_color",
            "alternative_names": [
              "tag_background_color",
              "time_entry_label_background"
            ],
            "description": "Hex code for the new background color of the label (e.g., '#FFFFFF').",
            "endpoint_argument_name": "tag_bg"
          },
          {
            "name": "foreground_color_for_tag",
            "alternative_names": [
              "tag_text_color",
              "text_color_for_tag"
            ],
            "description": "Specify the hexadecimal foreground color for the tag (e.g., '#FFFFFF').",
            "endpoint_argument_name": "tag_fg"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/team/{team_id}/time_entries/tags",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Change tag names from time entries",
      "description": "Rename an time entry label.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "new_name",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "tag_bg",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "tag_fg",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"Changetagnamesfromtimeentriesrequest\",\n        \"required\": [\n          \"name\",\n          \"new_name\",\n          \"tag_bg\",\n          \"tag_fg\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"new_name\": {\n            \"type\": \"string\"\n          },\n          \"tag_bg\": {\n            \"type\": \"string\"\n          },\n          \"tag_fg\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"old tag name\",\n            \"new_name\": \"new tag name\",\n            \"tag_bg\": \"#000000\",\n            \"tag_fg\": \"#000000\"\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"old tag name\",\n        \"new_name\": \"new tag name\",\n        \"tag_bg\": \"#000000\",\n        \"tag_fg\": \"#000000\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "StartatimeEntry",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "start_timer_clickup",
        "description": {
          "tagline": "Start a timer for the authenticated ClickUp user.",
          "detailed": "Use this tool to initiate a timer for the authenticated user in ClickUp. It is ideal for tracking time on specific tasks or projects."
        },
        "return_annotation": "Confirmation of the timer start operation.",
        "arguments": [
          {
            "name": "workspace_identifier",
            "alternative_names": [
              "workspace_identifier",
              "team_identifier"
            ],
            "description": "The Workspace ID required when custom task IDs are used.",
            "endpoint_argument_name": "team_Id"
          },
          {
            "name": "timer_request_body",
            "alternative_names": [
              "entry_request_body",
              "start_time_entry_request"
            ],
            "description": "JSON object detailing the timer entry. Includes fields like `tid`, `description`, `tags`, and `billable`.",
            "endpoint_argument_name": "requestBody"
          },
          {
            "name": "workspace_id",
            "alternative_names": [
              "workspace_identifier",
              "team_identifier"
            ],
            "description": "Provide the Workspace ID when `custom_task_ids` is `true`. Required for task referencing.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "use_custom_task_ids",
            "alternative_names": [
              "enable_custom_task_id_reference",
              "set_custom_task_ids"
            ],
            "description": "Set to true to reference a task by its custom task ID.",
            "endpoint_argument_name": "custom_task_ids"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_Id}/time_entries/start",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Start a time Entry",
      "description": "Start a timer for the authenticated user.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "custom_task_ids",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If you want to reference a task by it's custom task id, this value must be `true`."
            },
            "description": "If you want to reference a task by it's custom task id, this value must be `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          },
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`."
            },
            "description": "When the `custom_task_ids` parameter is set to `true`, the Workspace ID must be provided using the `team_id` parameter.\n \\\nFor example: `custom_task_ids=true&team_id=123`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_Id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "description": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "tags": {
                  "val_type": "array",
                  "inner_val_type": "json",
                  "enum": null,
                  "properties": null,
                  "inner_properties": {
                    "name": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "description": "Users on the Business Plan and above can include a time tracking label."
                },
                "tid": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "billable": {
                  "val_type": "boolean",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": "For Workspaces on the Free Forever or Unlimited Plan, either the `timer_id` parameter or the `\"tid\"` field in the body of the request are required fields."
            },
            "description": "For Workspaces on the Free Forever or Unlimited Plan, either the `timer_id` parameter or the `\"tid\"` field in the body of the request are required fields.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "StartatimeEntryrequest",
              "properties": {
                "description": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "description": "Users on the Business Plan and above can include a time tracking label.",
                  "items": {
                    "type": "object",
                    "title": "Tags10",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "tid": {
                  "type": "string"
                },
                "billable": {
                  "type": "boolean"
                }
              }
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"For Workspaces on the Free Forever or Unlimited Plan, either the `timer_id` parameter or the `\\\"tid\\\"` field in the body of the request are required fields.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"StartatimeEntryrequest\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"description\": \"Users on the Business Plan and above can include a time tracking label.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"title\": \"Tags10\",\n              \"required\": [\n                \"name\"\n              ],\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"examples\": [\n                {\n                  \"name\": \"name of tag\"\n                }\n              ]\n            }\n          },\n          \"tid\": {\n            \"type\": \"string\"\n          },\n          \"billable\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"examples\": [\n          {\n            \"description\": \"from api\",\n            \"tags\": [\n              {\n                \"name\": \"tag1\"\n              }\n            ],\n            \"tid\": \"task_id\",\n            \"billable\": false\n          }\n        ]\n      },\n      \"example\": {\n        \"description\": \"from api\",\n        \"tags\": [\n          {\n            \"name\": \"tag1\"\n          }\n        ],\n        \"tid\": \"task_id\",\n        \"billable\": false\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "StopatimeEntry",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "stop_timer_entry",
        "description": {
          "tagline": "Stops a running timer for the authenticated user.",
          "detailed": "Use this tool to stop a currently running timer for the authenticated user on ClickUp. This action is initiated for a specific team, requiring the team ID."
        },
        "return_annotation": "Stop confirmation for the running timer.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace where the timer is running. Required to stop the timer.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "content_type",
            "alternative_names": [
              "content_type_header",
              "http_content_type"
            ],
            "description": "Specifies the media type of the request. Usually 'application/json'.",
            "endpoint_argument_name": "Content-Type"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_id}/time_entries/stop",
      "tags": [
        "Time Tracking"
      ],
      "summary": "Stop a time Entry",
      "description": "Stop a timer that's currently running for the authenticated user.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [
          {
            "name": "Content-Type",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "header",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "InviteUserToWorkspace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "invite_user_to_workspace",
        "description": {
          "tagline": "Invite a user to your ClickUp Workspace as a member.",
          "detailed": "Use this tool to invite someone to your ClickUp Workspace as a member. This is suitable for Workspaces on the Enterprise Plan. For inviting guests, use the appropriate tool instead."
        },
        "return_annotation": "Confirmation of user invitation to the workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The unique ID of the workspace to which the user is being invited.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "user_email",
            "alternative_names": [
              "member_email",
              "email_address"
            ],
            "description": "The email address of the user to be invited to the Workspace. Must be a valid email format.",
            "endpoint_argument_name": "email"
          },
          {
            "name": "invite_as_admin",
            "alternative_names": [
              "set_admin_privileges",
              "admin_status"
            ],
            "description": "Indicate if the user should be invited as an admin. True for admin, False for regular member.",
            "endpoint_argument_name": "admin"
          },
          {
            "name": "custom_role_id",
            "alternative_names": [
              "role_id",
              "member_role_id"
            ],
            "description": "The ID of the custom role to assign to the user in the Workspace. Must be an integer.",
            "endpoint_argument_name": "custom_role_id"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_id}/user",
      "tags": [
        "Users"
      ],
      "summary": "Invite User To Workspace",
      "description": "Invite someone to join your Workspace as a member. To invite someone as a guest, use the [Invite Guest](ref:inviteguesttoworkspace) endpoint.\\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "email",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "admin",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": true
          },
          {
            "name": "custom_role_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"InviteUserToWorkspacerequest\",\n        \"required\": [\n          \"email\",\n          \"admin\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"admin\": {\n            \"type\": \"boolean\"\n          },\n          \"custom_role_id\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          }\n        },\n        \"examples\": [\n          {\n            \"email\": \"user@example.com\",\n            \"admin\": true,\n            \"custom_role_id\": 112233\n          }\n        ]\n      },\n      \"example\": {\n        \"email\": \"user@example.com\",\n        \"admin\": true\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "GetUser",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_workspace_user_info",
        "description": {
          "tagline": "Retrieve user information from a specified workspace.",
          "detailed": "Call this tool to get details about a user from a specific workspace on the ClickUp platform. This tool is applicable only to Workspaces that are on the Enterprise Plan."
        },
        "return_annotation": "Information about a user in a specified workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "workspace_identifier",
              "team_identifier"
            ],
            "description": "The unique ID of the Workspace. Used to specify which Workspace's user information is to be retrieved.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "user_id",
            "alternative_names": [
              "userid",
              "user_identifier"
            ],
            "description": "The unique identifier of the user to retrieve information for. This is required to specify which user's information is being accessed in the workspace.",
            "endpoint_argument_name": "user_id"
          },
          {
            "name": "show_shared_items",
            "alternative_names": [
              "display_shared_content",
              "include_shared_details"
            ],
            "description": "Set to `true` to include details of shared items; `false` excludes them by default.",
            "endpoint_argument_name": "include_shared"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/user/{user_id}",
      "tags": [
        "Users"
      ],
      "summary": "Get User",
      "description": "View information about a user in a Workspace. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "include_shared",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`."
            },
            "description": "Exclude details of items shared with the guest by setting this parameter to `false`. By default this parameter is set to `true`.",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "user_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "EditUserOnWorkspace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_user_workspace_details",
        "description": {
          "tagline": "Update a user's name and role in a ClickUp workspace.",
          "detailed": "This tool updates a user's name and role within a specific ClickUp workspace. It's only available to Workspaces on the Enterprise Plan. Use it to change user details in a team."
        },
        "return_annotation": "Information about the updated user in the workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the ClickUp workspace where the user's details will be updated.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "user_identifier",
            "alternative_names": [
              "user_id_number",
              "workspace_user_id"
            ],
            "description": "The unique identifier for the user within the workspace. This value is required to specify which user's details need updating.",
            "endpoint_argument_name": "user_id"
          },
          {
            "name": "user_name",
            "alternative_names": [
              "user_full_name",
              "display_name"
            ],
            "description": "The new full name of the user to be updated in the ClickUp workspace.",
            "endpoint_argument_name": "username"
          },
          {
            "name": "custom_role_id",
            "alternative_names": [
              "role_identifier",
              "workspace_role_id"
            ],
            "description": "An integer representing the custom role ID to assign to the user in the workspace. This is required for users with specific roles.",
            "endpoint_argument_name": "custom_role_id"
          },
          {
            "name": "assign_admin_role",
            "alternative_names": [
              "set_user_as_admin",
              "grant_admin_privileges"
            ],
            "description": "Set to true to assign the user as an admin in the workspace, otherwise false.",
            "endpoint_argument_name": "admin"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/team/{team_id}/user/{user_id}",
      "tags": [
        "Users"
      ],
      "summary": "Edit User On Workspace",
      "description": "Update a user's name and role. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "user_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "username",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "admin",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean"
            },
            "schema_required": true
          },
          {
            "name": "custom_role_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"EditUserOnWorkspacerequest\",\n        \"required\": [\n          \"username\",\n          \"admin\",\n          \"custom_role_id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"admin\": {\n            \"type\": \"boolean\"\n          },\n          \"custom_role_id\": {\n            \"type\": \"integer\",\n            \"contentEncoding\": \"int32\"\n          }\n        },\n        \"examples\": [\n          {\n            \"username\": \"User Name\",\n            \"admin\": false,\n            \"custom_role_id\": 998877\n          }\n        ]\n      },\n      \"example\": {\n        \"username\": \"User Name\",\n        \"admin\": false,\n        \"custom_role_id\": 998877\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "RemoveUserFromWorkspace",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "remove_user_from_workspace",
        "description": {
          "tagline": "Remove a user from a ClickUp workspace.",
          "detailed": "Use this tool to deactivate a user from a ClickUp workspace, applicable for Workspaces on the Enterprise Plan."
        },
        "return_annotation": "Confirmation of user removal from the workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_id_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the Workspace in ClickUp from which the user will be removed.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "user_id",
            "alternative_names": [
              "workspace_user_id",
              "member_id"
            ],
            "description": "The ID of the user to be deactivated from the workspace.",
            "endpoint_argument_name": "user_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/team/{team_id}/user/{user_id}",
      "tags": [
        "Users"
      ],
      "summary": "Remove User From Workspace",
      "description": "Deactivate a user from a Workspace. \\\n \\\n***Note:** This endpoint is only available to Workspaces on our [Enterprise Plan](https://clickup.com/pricing).*",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          },
          {
            "name": "user_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetTeamViews",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_team_views",
        "description": {
          "tagline": "Retrieve task and page views at the workspace level.",
          "detailed": "Use this tool to view the task and page views available at the Everything Level of a specified workspace in ClickUp."
        },
        "return_annotation": "List of task and page views for a workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_workspace_id",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace to retrieve task and page views from in ClickUp.",
            "endpoint_argument_name": "team_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/view",
      "tags": [
        "Views"
      ],
      "summary": "Get Workspace (Everything level) Views",
      "description": "View the task and page views available at the Everything Level of a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateTeamView",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_team_view",
        "description": {
          "tagline": "Add various views to a workspace at the Everything Level.",
          "detailed": "This tool allows you to add different types of views such as List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt to a specified workspace within a team. Use this when you need to create or organize views for better workspace management."
        },
        "return_annotation": "Confirmation of view creation in the workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_workspace_id",
              "workspace_identifier"
            ],
            "description": "The unique identifier for the workspace where the view will be added. This corresponds to the team or workspace ID.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "view_configuration",
            "alternative_names": [
              "view_setup",
              "view_options"
            ],
            "description": "JSON object specifying the view details: name, type (e.g., list, board), and optional configurations like grouping, divide, sorting, filters, columns, sidebar, and settings.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_id}/view",
      "tags": [
        "Views"
      ],
      "summary": "Create Workspace (Everything level) View",
      "description": "Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view at the Everything Level of a Workspace.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "type": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."
                },
                "grouping": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"
                },
                "divide": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"
                },
                "sorting": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"
                },
                "filters": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"
                },
                "columns": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"
                },
                "team_sidebar": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"
                },
                "settings": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "CreateTeamViewrequest",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."
                },
                "grouping": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"
                },
                "divide": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"
                },
                "sorting": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"
                },
                "filters": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"
                },
                "columns": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"
                },
                "team_sidebar": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"
                },
                "settings": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"
                }
              },
              "required": [
                "name",
                "type",
                "grouping",
                "divide",
                "sorting",
                "filters",
                "columns",
                "team_sidebar",
                "settings"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateTeamViewrequest\",\n        \"required\": [\n          \"name\",\n          \"type\",\n          \"grouping\",\n          \"divide\",\n          \"sorting\",\n          \"filters\",\n          \"columns\",\n          \"team_sidebar\",\n          \"settings\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`.\"\n          },\n          \"grouping\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping\"\n          },\n          \"divide\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide\"\n          },\n          \"sorting\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting\"\n          },\n          \"filters\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters\"\n          },\n          \"columns\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns\"\n          },\n          \"team_sidebar\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar\"\n          },\n          \"settings\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New Team View Name\",\n            \"type\": \"list\",\n            \"grouping\": {\n              \"field\": \"status\",\n              \"dir\": 1,\n              \"collapsed\": [],\n              \"ignore\": false\n            },\n            \"divide\": {\n              \"field\": null,\n              \"dir\": null,\n              \"collapsed\": []\n            },\n            \"sorting\": {\n              \"fields\": []\n            },\n            \"filters\": {\n              \"op\": \"AND\",\n              \"fields\": [],\n              \"search\": \"\",\n              \"show_closed\": false\n            },\n            \"columns\": {\n              \"fields\": []\n            },\n            \"team_sidebar\": {\n              \"assignees\": [],\n              \"assigned_comments\": false,\n              \"unassigned_tasks\": false\n            },\n            \"settings\": {\n              \"show_task_locations\": false,\n              \"show_subtasks\": 3,\n              \"show_subtask_parent_names\": false,\n              \"show_closed_subtasks\": false,\n              \"show_assignees\": true,\n              \"show_images\": true,\n              \"collapse_empty_columns\": null,\n              \"me_comments\": true,\n              \"me_subtasks\": true,\n              \"me_checklists\": true\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New Everything level View\",\n        \"type\": \"list\",\n        \"grouping\": {\n          \"field\": \"status\",\n          \"dir\": 1,\n          \"collapsed\": [],\n          \"ignore\": false\n        },\n        \"divide\": {\n          \"field\": null,\n          \"dir\": null,\n          \"collapsed\": []\n        },\n        \"sorting\": {\n          \"fields\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"dir\": -1,\n              \"idx\": 0\n            }\n          ]\n        },\n        \"filters\": {\n          \"op\": \"AND\",\n          \"field\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"op\": \"EQ\",\n              \"determinor\": null,\n              \"idx\": 0,\n              \"values\": \"123\"\n            }\n          ],\n          \"search\": \"\",\n          \"show_closed\": false\n        },\n        \"columns\": {\n          \"fields\": [\n            {\n              \"field\": \"assignee\",\n              \"idx\": 0,\n              \"width\": 160,\n              \"hidden\": true,\n              \"name\": null,\n              \"display\": null\n            }\n          ]\n        },\n        \"team_sidebar\": {\n          \"assignees\": [],\n          \"assigned_comments\": false,\n          \"unassigned_tasks\": false\n        },\n        \"settings\": {\n          \"show_task_locations\": false,\n          \"show_subtasks\": 3,\n          \"show_subtask_parent_names\": false,\n          \"show_closed_subtasks\": false,\n          \"show_assignees\": true,\n          \"show_images\": true,\n          \"collapse_empty_columns\": null,\n          \"me_comments\": true,\n          \"me_subtasks\": true,\n          \"me_checklists\": true\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetSpaceViews",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_space_views",
        "description": {
          "tagline": "Retrieve the task and page views for a specified Space.",
          "detailed": "This tool is used to obtain the task and page views available within a specific Space in ClickUp. It should be called when you need to explore or list the views associated with a given space by providing the space ID."
        },
        "return_annotation": "Details about task and page views available in a space.",
        "arguments": [
          {
            "name": "space_identifier",
            "alternative_names": [
              "space_id_number",
              "identifier_for_space"
            ],
            "description": "The unique integer ID of the space for which to retrieve task and page views.",
            "endpoint_argument_name": "space_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/space/{space_id}/view",
      "tags": [
        "Views"
      ],
      "summary": "Get Space Views",
      "description": "View the task and page views available for a Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateSpaceView",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_space_view",
        "description": {
          "tagline": "Add a new view to a ClickUp space.",
          "detailed": "Use this tool to add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a ClickUp Space."
        },
        "return_annotation": "Details of the newly created view in the space.",
        "arguments": [
          {
            "name": "space_id",
            "alternative_names": [
              "space_identifier",
              "space_key"
            ],
            "description": "The unique identifier of the ClickUp space where the view will be added. It should be an integer.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "view_configuration",
            "alternative_names": [
              "view_setup",
              "view_details"
            ],
            "description": "A JSON object detailing the view's setup, including `name`, `type` (e.g., list, board), and optional attributes like `grouping`, `divide`, `sorting`, `filters`, `columns`, `team_sidebar`, and `settings`.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/space/{space_id}/view",
      "tags": [
        "Views"
      ],
      "summary": "Create Space View",
      "description": "Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a Space.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "type": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."
                },
                "grouping": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"
                },
                "divide": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"
                },
                "sorting": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"
                },
                "filters": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"
                },
                "columns": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"
                },
                "team_sidebar": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"
                },
                "settings": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "CreateSpaceViewrequest",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."
                },
                "grouping": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"
                },
                "divide": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"
                },
                "sorting": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"
                },
                "filters": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"
                },
                "columns": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"
                },
                "team_sidebar": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"
                },
                "settings": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"
                }
              },
              "required": [
                "name",
                "type",
                "grouping",
                "divide",
                "sorting",
                "filters",
                "columns",
                "team_sidebar",
                "settings"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateSpaceViewrequest\",\n        \"required\": [\n          \"name\",\n          \"type\",\n          \"grouping\",\n          \"divide\",\n          \"sorting\",\n          \"filters\",\n          \"columns\",\n          \"team_sidebar\",\n          \"settings\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`.\"\n          },\n          \"grouping\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping\"\n          },\n          \"divide\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide\"\n          },\n          \"sorting\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting\"\n          },\n          \"filters\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters\"\n          },\n          \"columns\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns\"\n          },\n          \"team_sidebar\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar\"\n          },\n          \"settings\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New Space View Name\",\n            \"type\": \"list\",\n            \"grouping\": {\n              \"field\": \"status\",\n              \"dir\": 1,\n              \"collapsed\": [],\n              \"ignore\": false\n            },\n            \"divide\": {\n              \"field\": null,\n              \"dir\": null,\n              \"collapsed\": []\n            },\n            \"sorting\": {\n              \"fields\": []\n            },\n            \"filters\": {\n              \"op\": \"AND\",\n              \"fields\": [],\n              \"search\": \"\",\n              \"show_closed\": false\n            },\n            \"columns\": {\n              \"fields\": []\n            },\n            \"team_sidebar\": {\n              \"assignees\": [],\n              \"assigned_comments\": false,\n              \"unassigned_tasks\": false\n            },\n            \"settings\": {\n              \"show_task_locations\": false,\n              \"show_subtasks\": 3,\n              \"show_subtask_parent_names\": false,\n              \"show_closed_subtasks\": false,\n              \"show_assignees\": true,\n              \"show_images\": true,\n              \"collapse_empty_columns\": null,\n              \"me_comments\": true,\n              \"me_subtasks\": true,\n              \"me_checklists\": true\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New Space View Name\",\n        \"type\": \"list\",\n        \"grouping\": {\n          \"field\": \"status\",\n          \"dir\": 1,\n          \"collapsed\": [],\n          \"ignore\": false\n        },\n        \"divide\": {\n          \"field\": null,\n          \"dir\": null,\n          \"collapsed\": []\n        },\n        \"sorting\": {\n          \"fields\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"dir\": -1,\n              \"idx\": 0\n            }\n          ]\n        },\n        \"filters\": {\n          \"op\": \"AND\",\n          \"fields\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"op\": \"EQ\",\n              \"determinor\": null,\n              \"idx\": 0,\n              \"values\": \"123\"\n            }\n          ],\n          \"search\": \"\",\n          \"show_closed\": false\n        },\n        \"columns\": {\n          \"fields\": [\n            {\n              \"field\": \"assignee\",\n              \"idx\": 0,\n              \"width\": 160,\n              \"hidden\": true,\n              \"name\": null,\n              \"display\": null\n            }\n          ]\n        },\n        \"team_sidebar\": {\n          \"assignees\": [],\n          \"assigned_comments\": false,\n          \"unassigned_tasks\": false\n        },\n        \"settings\": {\n          \"show_task_locations\": false,\n          \"show_subtasks\": 3,\n          \"show_subtask_parent_names\": false,\n          \"show_closed_subtasks\": false,\n          \"show_assignees\": true,\n          \"show_images\": true,\n          \"collapse_empty_columns\": null,\n          \"me_comments\": true,\n          \"me_subtasks\": true,\n          \"me_checklists\": true\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetFolderViews",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_folder_views",
        "description": {
          "tagline": "Retrieve available task and page views for a Folder in ClickUp.",
          "detailed": ""
        },
        "return_annotation": "Available task and page views for a folder.",
        "arguments": [
          {
            "name": "folder_id",
            "alternative_names": [
              "folder_identifier",
              "id_of_folder"
            ],
            "description": "The ID of the folder to retrieve views for. This should be an integer value.",
            "endpoint_argument_name": "folder_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/folder/{folder_id}/view",
      "tags": [
        "Views"
      ],
      "summary": "Get Folder Views",
      "description": "View the task and page views available for a Folder.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateFolderView",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_view_to_folder",
        "description": {
          "tagline": "Add various view types to a ClickUp folder.",
          "detailed": "Use this tool to add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a specific folder in ClickUp."
        },
        "return_annotation": "Confirmation of the view added to the folder.",
        "arguments": [
          {
            "name": "folder_id",
            "alternative_names": [
              "folder_identifier",
              "clickup_folder_id"
            ],
            "description": "The unique integer ID of the ClickUp folder where the view will be added. Required for specifying the target folder.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "view_configuration",
            "alternative_names": [
              "view_setup",
              "view_parameters"
            ],
            "description": "A JSON object detailing the view settings such as type, name, sorting, filters, and other configurations.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/folder/{folder_id}/view",
      "tags": [
        "Views"
      ],
      "summary": "Create Folder View",
      "description": "Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a Folder.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "type": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."
                },
                "grouping": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"
                },
                "divide": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"
                },
                "sorting": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"
                },
                "filters": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"
                },
                "columns": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"
                },
                "team_sidebar": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"
                },
                "settings": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "CreateFolderViewrequest",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."
                },
                "grouping": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"
                },
                "divide": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"
                },
                "sorting": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"
                },
                "filters": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"
                },
                "columns": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"
                },
                "team_sidebar": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"
                },
                "settings": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"
                }
              },
              "required": [
                "name",
                "type",
                "grouping",
                "divide",
                "sorting",
                "filters",
                "columns",
                "team_sidebar",
                "settings"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateFolderViewrequest\",\n        \"required\": [\n          \"name\",\n          \"type\",\n          \"grouping\",\n          \"divide\",\n          \"sorting\",\n          \"filters\",\n          \"columns\",\n          \"team_sidebar\",\n          \"settings\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`.\"\n          },\n          \"grouping\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping\"\n          },\n          \"divide\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide\"\n          },\n          \"sorting\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting\"\n          },\n          \"filters\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters\"\n          },\n          \"columns\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns\"\n          },\n          \"team_sidebar\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar\"\n          },\n          \"settings\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New Folder View Name\",\n            \"type\": \"list\",\n            \"grouping\": {\n              \"field\": \"status\",\n              \"dir\": 1,\n              \"collapsed\": [],\n              \"ignore\": false\n            },\n            \"divide\": {\n              \"field\": null,\n              \"dir\": null,\n              \"collapsed\": []\n            },\n            \"sorting\": {\n              \"fields\": []\n            },\n            \"filters\": {\n              \"op\": \"AND\",\n              \"fields\": [],\n              \"search\": \"\",\n              \"show_closed\": false\n            },\n            \"columns\": {\n              \"fields\": []\n            },\n            \"team_sidebar\": {\n              \"assignees\": [],\n              \"assigned_comments\": false,\n              \"unassigned_tasks\": false\n            },\n            \"settings\": {\n              \"show_task_locations\": false,\n              \"show_subtasks\": 3,\n              \"show_subtask_parent_names\": false,\n              \"show_closed_subtasks\": false,\n              \"show_assignees\": true,\n              \"show_images\": true,\n              \"collapse_empty_columns\": null,\n              \"me_comments\": true,\n              \"me_subtasks\": true,\n              \"me_checklists\": true\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New Folder View Name\",\n        \"type\": \"list\",\n        \"grouping\": {\n          \"field\": \"status\",\n          \"dir\": 1,\n          \"collapsed\": [],\n          \"ignore\": false\n        },\n        \"divide\": {\n          \"field\": null,\n          \"dir\": null,\n          \"collapsed\": []\n        },\n        \"sorting\": {\n          \"fields\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"dir\": -1,\n              \"idx\": 0\n            }\n          ]\n        },\n        \"filters\": {\n          \"op\": \"AND\",\n          \"fields\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"op\": \"EQ\",\n              \"determinor\": null,\n              \"idx\": 0,\n              \"values\": \"123\"\n            }\n          ],\n          \"search\": \"\",\n          \"show_closed\": false\n        },\n        \"columns\": {\n          \"fields\": [\n            {\n              \"field\": \"assignee\",\n              \"idx\": 0,\n              \"width\": 160,\n              \"hidden\": true,\n              \"name\": null,\n              \"display\": null\n            }\n          ]\n        },\n        \"team_sidebar\": {\n          \"assignees\": [],\n          \"assigned_comments\": false,\n          \"unassigned_tasks\": false\n        },\n        \"settings\": {\n          \"show_task_locations\": false,\n          \"show_subtasks\": 3,\n          \"show_subtask_parent_names\": false,\n          \"show_closed_subtasks\": false,\n          \"show_assignees\": true,\n          \"show_images\": true,\n          \"collapse_empty_columns\": null,\n          \"me_comments\": true,\n          \"me_subtasks\": true,\n          \"me_checklists\": true\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetListViews",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_list_views",
        "description": {
          "tagline": "Retrieve available views for a specific list.",
          "detailed": "Use this tool to view the task and page views available for a specific list in ClickUp. It retrieves both regular and required views."
        },
        "return_annotation": "Available task and page views for a list.",
        "arguments": [
          {
            "name": "target_list_id",
            "alternative_names": [
              "specified_list_id",
              "list_identifier"
            ],
            "description": "The unique identifier for the list to retrieve views from. This should be an integer.",
            "endpoint_argument_name": "list_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/list/{list_id}/view",
      "tags": [
        "Views"
      ],
      "summary": "Get List Views",
      "description": "View the task and page views available for a List.<br> Views and required views are separate responses.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateListView",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "add_view_to_clickup_list",
        "description": {
          "tagline": "Add various views to a ClickUp list.",
          "detailed": "Use this tool to add different types of views (List, Board, Calendar, etc.) to a specific ClickUp list using the list ID."
        },
        "return_annotation": "Confirmation of view addition to a ClickUp list.",
        "arguments": [
          {
            "name": "clickup_list_id",
            "alternative_names": [
              "list_identifier",
              "clickup_list_identifier"
            ],
            "description": "An integer representing the ID of the ClickUp list to which the view will be added.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "view_configuration",
            "alternative_names": [
              "view_settings",
              "view_options"
            ],
            "description": "Configuration settings for the view, including 'name', 'type', 'grouping', 'divide', 'sorting', 'filters', 'columns', 'team_sidebar', and 'settings'.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/list/{list_id}/view",
      "tags": [
        "Views"
      ],
      "summary": "Create List View",
      "description": "Add a List, Board, Calendar, Table, Timeline, Workload, Activity, Map, Chat, or Gantt view to a List.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "type": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."
                },
                "grouping": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"
                },
                "divide": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"
                },
                "sorting": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"
                },
                "filters": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"
                },
                "columns": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"
                },
                "team_sidebar": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"
                },
                "settings": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "CreateListViewrequest",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "description": "The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`."
                },
                "grouping": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping"
                },
                "divide": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide"
                },
                "sorting": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting"
                },
                "filters": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters"
                },
                "columns": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns"
                },
                "team_sidebar": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar"
                },
                "settings": {
                  "type": "object",
                  "description": "Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings",
                  "properties": {},
                  "additionalProperties": true,
                  "x-moar-broken-reference": "#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings"
                }
              },
              "required": [
                "name",
                "type",
                "grouping",
                "divide",
                "sorting",
                "filters",
                "columns",
                "team_sidebar",
                "settings"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateListViewrequest\",\n        \"required\": [\n          \"name\",\n          \"type\",\n          \"grouping\",\n          \"divide\",\n          \"sorting\",\n          \"filters\",\n          \"columns\",\n          \"team_sidebar\",\n          \"settings\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"The type of view to create. Options include: `list`, `board`, `calendar`, `table`, `timeline`, `workload`, `activity`, `map`, `conversation`, or `gantt`.\"\n          },\n          \"grouping\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/grouping\"\n          },\n          \"divide\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/divide\"\n          },\n          \"sorting\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/sorting\"\n          },\n          \"filters\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/filters\"\n          },\n          \"columns\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/columns\"\n          },\n          \"team_sidebar\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/team_sidebar\"\n          },\n          \"settings\": {\n            \"type\": \"object\",\n            \"description\": \"Schema reference broken: #/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings\",\n            \"additionalProperties\": true,\n            \"x-moar-broken-reference\": \"#/paths/~1v2~1view~1%7Bview_id%7D/put/requestBody/content/application~1json/schema/properties/settings\"\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New List View Name\",\n            \"type\": \"list\",\n            \"grouping\": {\n              \"field\": \"status\",\n              \"dir\": 1,\n              \"collapsed\": [],\n              \"ignore\": false\n            },\n            \"divide\": {\n              \"field\": null,\n              \"dir\": null,\n              \"collapsed\": []\n            },\n            \"sorting\": {\n              \"fields\": []\n            },\n            \"filters\": {\n              \"op\": \"AND\",\n              \"fields\": [],\n              \"search\": \"\",\n              \"show_closed\": false\n            },\n            \"columns\": {\n              \"fields\": []\n            },\n            \"team_sidebar\": {\n              \"assignees\": [],\n              \"assigned_comments\": false,\n              \"unassigned_tasks\": false\n            },\n            \"settings\": {\n              \"show_task_locations\": false,\n              \"show_subtasks\": 3,\n              \"show_subtask_parent_names\": false,\n              \"show_closed_subtasks\": false,\n              \"show_assignees\": true,\n              \"show_images\": true,\n              \"collapse_empty_columns\": null,\n              \"me_comments\": true,\n              \"me_subtasks\": true,\n              \"me_checklists\": true\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New List View Name\",\n        \"type\": \"list\",\n        \"grouping\": {\n          \"field\": \"status\",\n          \"dir\": 1,\n          \"collapsed\": [],\n          \"ignore\": false\n        },\n        \"divide\": {\n          \"field\": null,\n          \"dir\": null,\n          \"collapsed\": []\n        },\n        \"sorting\": {\n          \"fields\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"dir\": -1,\n              \"idx\": 0\n            }\n          ]\n        },\n        \"filters\": {\n          \"op\": \"AND\",\n          \"fields\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"op\": \"EQ\",\n              \"determinor\": null,\n              \"idx\": 0,\n              \"values\": \"123\"\n            }\n          ],\n          \"search\": \"\",\n          \"show_closed\": false\n        },\n        \"columns\": {\n          \"fields\": [\n            {\n              \"field\": \"assignee\",\n              \"idx\": 0,\n              \"width\": 160,\n              \"hidden\": true,\n              \"name\": null,\n              \"display\": null\n            }\n          ]\n        },\n        \"team_sidebar\": {\n          \"assignees\": [],\n          \"assigned_comments\": false,\n          \"unassigned_tasks\": false\n        },\n        \"settings\": {\n          \"show_task_locations\": false,\n          \"show_subtasks\": 3,\n          \"show_subtask_parent_names\": false,\n          \"show_closed_subtasks\": false,\n          \"show_assignees\": true,\n          \"show_images\": true,\n          \"collapse_empty_columns\": null,\n          \"me_comments\": true,\n          \"me_subtasks\": true,\n          \"me_checklists\": true\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "GetView",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "view_task_or_page_info",
        "description": {
          "tagline": "Retrieve details of a specific task or page view.",
          "detailed": "Use this tool to get detailed information about a specific task or page view in ClickUp using the view ID."
        },
        "return_annotation": "Information about a specific task or page view.",
        "arguments": [
          {
            "name": "view_identifier",
            "alternative_names": [
              "task_page_identifier",
              "specific_view_id"
            ],
            "description": "A unique identifier for the specific task or page view in ClickUp to be retrieved. This is required to obtain the relevant information.",
            "endpoint_argument_name": "view_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/view/{view_id}",
      "tags": [
        "Views"
      ],
      "summary": "Get View",
      "description": "View information about a specific task or page view.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "view_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "UpdateView",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_view_settings",
        "description": {
          "tagline": "Update the settings and configuration of a view.",
          "detailed": "Rename, regroup, sort, filter, and modify columns and settings of a view when needing to adjust its configuration."
        },
        "return_annotation": "Confirmation of updated view settings.",
        "arguments": [
          {
            "name": "view_identifier",
            "alternative_names": [
              "view_id_reference",
              "view_unique_id"
            ],
            "description": "The unique identifier for the view to be updated.",
            "endpoint_argument_name": "view_id"
          },
          {
            "name": "view_configuration_details",
            "alternative_names": [
              "view_update_payload",
              "view_settings_json"
            ],
            "description": "JSON object detailing the view's name, type, location, grouping, sorting, filters, columns, team sidebar, and other settings.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/view/{view_id}",
      "tags": [
        "Views"
      ],
      "summary": "Update View",
      "description": "Rename a view, update the grouping, sorting, filters, columns, and settings of a view.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "view_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": {
                "name": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "type": {
                  "val_type": "string",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": null,
                  "inner_properties": null,
                  "description": null
                },
                "parent": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "id": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The id of the Workspace, Space, Folder, or List where the view is located."
                    },
                    "type": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`"
                    }
                  },
                  "inner_properties": null,
                  "description": "The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located."
                },
                "grouping": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "field": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."
                    },
                    "dir": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view."
                    },
                    "collapsed": {
                      "val_type": "array",
                      "inner_val_type": "string",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": ""
                    },
                    "ignore": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "inner_properties": null,
                  "description": null
                },
                "divide": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "field": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "dir": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "collapsed": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "inner_properties": null,
                  "description": null
                },
                "sorting": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "fields": {
                      "val_type": "array",
                      "inner_val_type": "string",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views)."
                    }
                  },
                  "inner_properties": null,
                  "description": null
                },
                "filters": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "op": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "The available operator (`op``) values are `AND`` and `OR``."
                    },
                    "fields": {
                      "val_type": "array",
                      "inner_val_type": "string",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "View the list of [fields available](doc:filter-views) to filter by."
                    },
                    "search": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "show_closed": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "inner_properties": null,
                  "description": null
                },
                "columns": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "fields": {
                      "val_type": "array",
                      "inner_val_type": "string",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Custom Fields require the `cf_` prefix and must be formatted as a JSON object. Example: `cf_eb1234567890-c676-4c10-9012-345678901234`"
                    }
                  },
                  "inner_properties": null,
                  "description": "Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy."
                },
                "team_sidebar": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "assignees": {
                      "val_type": "array",
                      "inner_val_type": "string",
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": ""
                    },
                    "assigned_comments": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "unassigned_tasks": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "inner_properties": null,
                  "description": null
                },
                "settings": {
                  "val_type": "json",
                  "inner_val_type": null,
                  "enum": null,
                  "properties": {
                    "show_task_locations": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "show_subtasks": {
                      "val_type": "integer",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": "Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed."
                    },
                    "show_subtask_parent_names": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "show_closed_subtasks": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "show_assignees": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "show_images": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "collapse_empty_columns": {
                      "val_type": "string",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "me_comments": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "me_subtasks": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    },
                    "me_checklists": {
                      "val_type": "boolean",
                      "inner_val_type": null,
                      "enum": null,
                      "properties": null,
                      "inner_properties": null,
                      "description": null
                    }
                  },
                  "inner_properties": null,
                  "description": null
                }
              },
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "title": "UpdateViewrequest",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "parent": {
                  "type": "object",
                  "title": "Parent",
                  "description": "The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\n \\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\n \\\nThe `type` value indciates the level of the Hierarchy where the view is located.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The id of the Workspace, Space, Folder, or List where the view is located."
                    },
                    "type": {
                      "type": "integer",
                      "description": "The level of the Hierarchy where the view is created. \\\n \\\nOptions include: \\\n \\\nWorkspace (Everything Level): `7` \\\n \\\nSpace: `4` \\\n \\\nFolder: `5` \\\n \\\nList: `6`"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "grouping": {
                  "type": "object",
                  "title": "Grouping",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "Set the field to group by.\\\n \\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`."
                    },
                    "dir": {
                      "type": "integer",
                      "description": "Set a group sort order using `1` or `-1`.\\\n \\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\n \\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view."
                    },
                    "collapsed": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ignore": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "field",
                    "dir",
                    "collapsed",
                    "ignore"
                  ]
                },
                "divide": {
                  "type": "object",
                  "title": "Divide",
                  "properties": {
                    "field": {
                      "type": [
                        "null"
                      ]
                    },
                    "dir": {
                      "type": [
                        "null"
                      ]
                    },
                    "collapsed": {
                      "type": [
                        "boolean"
                      ]
                    }
                  },
                  "required": [
                    "collapsed"
                  ]
                },
                "sorting": {
                  "type": "object",
                  "title": "Sorting",
                  "properties": {
                    "fields": {
                      "type": "array",
                      "description": "Include an array of fields to sort by.\\\n \\\n You can sort by the same fields available when [filtering a view](doc:filter-views).",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "fields"
                  ]
                },
                "filters": {
                  "type": "object",
                  "title": "Filters",
                  "properties": {
                    "op": {
                      "type": "string",
                      "description": "The available operator (`op``) values are `AND`` and `OR``."
                    },
                    "fields": {
                      "type": "array",
                      "description": "View the list of [fields available](doc:filter-views) to filter by.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "search": {
                      "type": "string"
                    },
                    "show_closed": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "op",
                    "fields",
                    "search",
                    "show_closed"
                  ]
                },
                "columns": {
                  "type": "object",
                  "title": "Columns",
                  "description": "Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.",
                  "properties": {
                    "fields": {
                      "type": "array",
                      "description": "Custom Fields require the `cf_` prefix and must be formatted as a JSON object. Example: `cf_eb1234567890-c676-4c10-9012-345678901234`",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "fields"
                  ]
                },
                "team_sidebar": {
                  "type": "object",
                  "title": "TeamSidebar",
                  "properties": {
                    "assignees": {
                      "type": "array",
                      "description": "",
                      "items": {
                        "type": "string"
                      }
                    },
                    "assigned_comments": {
                      "type": "boolean"
                    },
                    "unassigned_tasks": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "assignees",
                    "assigned_comments",
                    "unassigned_tasks"
                  ]
                },
                "settings": {
                  "type": "object",
                  "title": "Settings",
                  "properties": {
                    "show_task_locations": {
                      "type": "boolean"
                    },
                    "show_subtasks": {
                      "type": "integer",
                      "description": "Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed."
                    },
                    "show_subtask_parent_names": {
                      "type": "boolean"
                    },
                    "show_closed_subtasks": {
                      "type": "boolean"
                    },
                    "show_assignees": {
                      "type": "boolean"
                    },
                    "show_images": {
                      "type": "boolean"
                    },
                    "collapse_empty_columns": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "me_comments": {
                      "type": "boolean"
                    },
                    "me_subtasks": {
                      "type": "boolean"
                    },
                    "me_checklists": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "show_task_locations",
                    "show_subtasks",
                    "show_subtask_parent_names",
                    "show_closed_subtasks",
                    "show_assignees",
                    "show_images",
                    "collapse_empty_columns",
                    "me_comments",
                    "me_subtasks",
                    "me_checklists"
                  ]
                }
              },
              "required": [
                "name",
                "type",
                "parent",
                "grouping",
                "divide",
                "sorting",
                "filters",
                "columns",
                "team_sidebar",
                "settings"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateViewrequest\",\n        \"required\": [\n          \"name\",\n          \"type\",\n          \"parent\",\n          \"grouping\",\n          \"divide\",\n          \"sorting\",\n          \"filters\",\n          \"columns\",\n          \"team_sidebar\",\n          \"settings\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"parent\": {\n            \"title\": \"Parent\",\n            \"description\": \"The parent parameter specifies where the view is located in the ClickUp Hierarchy. Both `id` and `type` are required. \\\\\\n \\\\\\nThe `id` is the id of the Workspace, Space, Folder, or List where the view is located. \\\\\\n \\\\\\nThe `type` value indciates the level of the Hierarchy where the view is located.\",\n            \"required\": [\n              \"id\",\n              \"type\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"string\",\n                \"description\": \"The id of the Workspace, Space, Folder, or List where the view is located.\"\n              },\n              \"type\": {\n                \"type\": \"integer\",\n                \"description\": \"The level of the Hierarchy where the view is created. \\\\\\n \\\\\\nOptions include: \\\\\\n \\\\\\nWorkspace (Everything Level): `7` \\\\\\n \\\\\\nSpace: `4` \\\\\\n \\\\\\nFolder: `5` \\\\\\n \\\\\\nList: `6`\",\n                \"contentEncoding\": \"int32\"\n              }\n            },\n            \"examples\": [\n              {\n                \"id\": \"512\",\n                \"type\": 7\n              }\n            ]\n          },\n          \"grouping\": {\n            \"title\": \"Grouping\",\n            \"required\": [\n              \"field\",\n              \"dir\",\n              \"collapsed\",\n              \"ignore\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"field\": {\n                \"type\": \"string\",\n                \"description\": \"Set the field to group by.\\\\\\n \\\\\\nOptions include: `none`, `status`, `priority`, `assignee`, `tag`, or `dueDate`.\"\n              },\n              \"dir\": {\n                \"description\": \"Set a group sort order using `1` or `-1`.\\\\\\n \\\\\\nFor example, use `1`show tasks with urgent priority at the top of your view, and tasks with no priority at the bottom.\\\\\\n \\\\\\nUse `-1` to reverse the order to show tasks with no priority at the top of your view.\",\n                \"type\": \"integer\",\n                \"contentEncoding\": \"int32\"\n              },\n              \"collapsed\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"\"\n              },\n              \"ignore\": {\n                \"type\": \"boolean\"\n              }\n            },\n            \"examples\": [\n              {\n                \"field\": \"status\",\n                \"dir\": 1,\n                \"collapsed\": [],\n                \"ignore\": false\n              }\n            ]\n          },\n          \"divide\": {\n            \"title\": \"Divide\",\n            \"required\": [\n              \"collapsed\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"field\": {\n                \"type\": [\n                  \"null\"\n                ]\n              },\n              \"dir\": {\n                \"type\": [\n                  \"null\"\n                ]\n              },\n              \"collapsed\": {\n                \"type\": [\n                  \"boolean\"\n                ]\n              }\n            },\n            \"examples\": [\n              {\n                \"field\": null,\n                \"dir\": null,\n                \"collapsed\": []\n              }\n            ]\n          },\n          \"sorting\": {\n            \"title\": \"Sorting\",\n            \"required\": [\n              \"fields\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"fields\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"Include an array of fields to sort by.\\\\\\n \\\\\\n You can sort by the same fields available when [filtering a view](doc:filter-views).\"\n              }\n            },\n            \"examples\": [\n              {\n                \"fields\": [\n                  {\n                    \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n                    \"dir\": -1,\n                    \"idx\": 0\n                  }\n                ]\n              }\n            ]\n          },\n          \"filters\": {\n            \"title\": \"Filters\",\n            \"required\": [\n              \"op\",\n              \"fields\",\n              \"search\",\n              \"show_closed\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"op\": {\n                \"type\": \"string\",\n                \"description\": \"The available operator (`op``) values are `AND`` and `OR``.\"\n              },\n              \"fields\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"View the list of [fields available](doc:filter-views) to filter by.\"\n              },\n              \"search\": {\n                \"type\": \"string\"\n              },\n              \"show_closed\": {\n                \"type\": \"boolean\"\n              }\n            },\n            \"examples\": [\n              {\n                \"op\": \"AND\",\n                \"fields\": [],\n                \"search\": \"\",\n                \"show_closed\": false\n              }\n            ]\n          },\n          \"columns\": {\n            \"title\": \"Columns\",\n            \"description\": \"Custom Fields added to a view at the Everything level will be added to all tasks in your Workspace. Once Custom Fields are added to one of these views, you cannot move it to another level of the Hierarchy.\",\n            \"required\": [\n              \"fields\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"fields\": {\n                \"description\": \"Custom Fields require the `cf_` prefix and must be formatted as a JSON object. Example: `cf_eb1234567890-c676-4c10-9012-345678901234`\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"examples\": [\n              {\n                \"fields\": []\n              }\n            ]\n          },\n          \"team_sidebar\": {\n            \"title\": \"TeamSidebar\",\n            \"required\": [\n              \"assignees\",\n              \"assigned_comments\",\n              \"unassigned_tasks\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"assignees\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"\"\n              },\n              \"assigned_comments\": {\n                \"type\": \"boolean\"\n              },\n              \"unassigned_tasks\": {\n                \"type\": \"boolean\"\n              }\n            },\n            \"examples\": [\n              {\n                \"assignees\": [],\n                \"assigned_comments\": false,\n                \"unassigned_tasks\": false\n              }\n            ]\n          },\n          \"settings\": {\n            \"title\": \"Settings\",\n            \"required\": [\n              \"show_task_locations\",\n              \"show_subtasks\",\n              \"show_subtask_parent_names\",\n              \"show_closed_subtasks\",\n              \"show_assignees\",\n              \"show_images\",\n              \"collapse_empty_columns\",\n              \"me_comments\",\n              \"me_subtasks\",\n              \"me_checklists\"\n            ],\n            \"type\": \"object\",\n            \"properties\": {\n              \"show_task_locations\": {\n                \"type\": \"boolean\"\n              },\n              \"show_subtasks\": {\n                \"description\": \"Acceptable values are `1`, `2`, or `3`, which show subtasks separate, expanded, or collapsed.\",\n                \"type\": \"integer\",\n                \"contentEncoding\": \"int32\"\n              },\n              \"show_subtask_parent_names\": {\n                \"type\": \"boolean\"\n              },\n              \"show_closed_subtasks\": {\n                \"type\": \"boolean\"\n              },\n              \"show_assignees\": {\n                \"type\": \"boolean\"\n              },\n              \"show_images\": {\n                \"type\": \"boolean\"\n              },\n              \"collapse_empty_columns\": {\n                \"type\": [\n                  \"string\",\n                  \"null\"\n                ]\n              },\n              \"me_comments\": {\n                \"type\": \"boolean\"\n              },\n              \"me_subtasks\": {\n                \"type\": \"boolean\"\n              },\n              \"me_checklists\": {\n                \"type\": \"boolean\"\n              }\n            },\n            \"examples\": [\n              {\n                \"show_task_locations\": false,\n                \"show_subtasks\": 3,\n                \"show_subtask_parent_names\": false,\n                \"show_closed_subtasks\": false,\n                \"show_assignees\": true,\n                \"show_images\": true,\n                \"collapse_empty_columns\": null,\n                \"me_comments\": true,\n                \"me_subtasks\": true,\n                \"me_checklists\": true\n              }\n            ]\n          }\n        },\n        \"examples\": [\n          {\n            \"name\": \"New View Name\",\n            \"type\": \"list\",\n            \"parent\": {\n              \"id\": \"512\",\n              \"type\": 7\n            },\n            \"grouping\": {\n              \"field\": \"status\",\n              \"dir\": 1,\n              \"collapsed\": [],\n              \"ignore\": false\n            },\n            \"divide\": {\n              \"field\": null,\n              \"dir\": null,\n              \"collapsed\": []\n            },\n            \"sorting\": {\n              \"fields\": []\n            },\n            \"filters\": {\n              \"op\": \"AND\",\n              \"fields\": [],\n              \"search\": \"\",\n              \"show_closed\": false\n            },\n            \"columns\": {\n              \"fields\": []\n            },\n            \"team_sidebar\": {\n              \"assignees\": [],\n              \"assigned_comments\": false,\n              \"unassigned_tasks\": false\n            },\n            \"settings\": {\n              \"show_task_locations\": false,\n              \"show_subtasks\": 3,\n              \"show_subtask_parent_names\": false,\n              \"show_closed_subtasks\": false,\n              \"show_assignees\": true,\n              \"show_images\": true,\n              \"collapse_empty_columns\": null,\n              \"me_comments\": true,\n              \"me_subtasks\": true,\n              \"me_checklists\": true\n            }\n          }\n        ]\n      },\n      \"example\": {\n        \"name\": \"New View Name\",\n        \"type\": \"list\",\n        \"parent\": {\n          \"id\": \"512\",\n          \"type\": 7\n        },\n        \"grouping\": {\n          \"field\": \"status\",\n          \"dir\": 1,\n          \"collapsed\": [],\n          \"ignore\": false\n        },\n        \"divide\": {\n          \"field\": null,\n          \"dir\": null,\n          \"collapsed\": []\n        },\n        \"sorting\": {\n          \"fields\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"dir\": -1,\n              \"idx\": 0\n            }\n          ]\n        },\n        \"filters\": {\n          \"op\": \"AND\",\n          \"fields\": [\n            {\n              \"field\": \"cf_624a423a-c1d1-4467-99e2-63e225658cb2\",\n              \"op\": \"EQ\",\n              \"determinor\": null,\n              \"idx\": 0,\n              \"values\": \"123\"\n            }\n          ],\n          \"search\": \"\",\n          \"show_closed\": false\n        },\n        \"columns\": {\n          \"fields\": [\n            {\n              \"field\": \"assignee\",\n              \"idx\": 0,\n              \"width\": 160,\n              \"hidden\": true,\n              \"name\": null,\n              \"display\": null\n            }\n          ]\n        },\n        \"team_sidebar\": {\n          \"assignees\": [],\n          \"assigned_comments\": false,\n          \"unassigned_tasks\": false\n        },\n        \"settings\": {\n          \"show_task_locations\": false,\n          \"show_subtasks\": 3,\n          \"show_subtask_parent_names\": false,\n          \"show_closed_subtasks\": false,\n          \"show_assignees\": true,\n          \"show_images\": true,\n          \"collapse_empty_columns\": null,\n          \"me_comments\": true,\n          \"me_subtasks\": true,\n          \"me_checklists\": true\n        }\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "DeleteView",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_view",
        "description": {
          "tagline": "Delete a specified view from ClickUp.",
          "detailed": "Use this tool to delete a specific view in ClickUp by providing the view ID. Useful for managing and organizing views by removing those that are no longer needed."
        },
        "return_annotation": "Confirmation of view deletion.",
        "arguments": [
          {
            "name": "view_id",
            "alternative_names": [
              "view_identifier",
              "id_of_view"
            ],
            "description": "The ID of the view to be deleted in ClickUp. Must be provided as a string.",
            "endpoint_argument_name": "view_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/view/{view_id}",
      "tags": [
        "Views"
      ],
      "summary": "Delete View",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "view_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "105 (string)"
            },
            "description": "105 (string)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetViewTasks",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_visible_tasks_in_view",
        "description": {
          "tagline": "Retrieve all visible tasks from a ClickUp view.",
          "detailed": "Use this tool to obtain a list of all tasks that are visible in a specific view within ClickUp. It is useful for task management and organization within the platform."
        },
        "return_annotation": "List of visible tasks in the specified ClickUp view.",
        "arguments": [
          {
            "name": "pagination_page_number",
            "alternative_names": [
              "page_number_index",
              "current_page"
            ],
            "description": "The specific page number of tasks to retrieve. Used for pagination in task lists, starting at 1.",
            "endpoint_argument_name": "page"
          },
          {
            "name": "view_identifier",
            "alternative_names": [
              "view_id_string",
              "view_identifier_code"
            ],
            "description": "The ID of the ClickUp view from which to retrieve visible tasks. Must be a string.",
            "endpoint_argument_name": "view_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/view/{view_id}/task",
      "tags": [
        "Views"
      ],
      "summary": "Get View Tasks",
      "description": "See all visible tasks in a view in ClickUp.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [
          {
            "name": "page",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "view_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "105 (string)"
            },
            "description": "105 (string)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "GetWebhooks",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_workspace_webhooks",
        "description": {
          "tagline": "Retrieve webhooks for a workspace.",
          "detailed": "Use this tool to view the webhooks created via the API for a specific Workspace. It returns webhooks created by the authenticated user."
        },
        "return_annotation": "List of webhooks created by the user for a workspace.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the Workspace to retrieve the webhooks for.",
            "endpoint_argument_name": "team_id"
          }
        ]
      },
      "method": "GET",
      "path": "/v2/team/{team_id}/webhook",
      "tags": [
        "Webhooks"
      ],
      "summary": "Get Webhooks",
      "description": "View the webhooks created via the API for a Workspace. This endpoint returns webhooks created by the authenticated user.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "CreateWebhook",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "setup_clickup_webhook",
        "description": {
          "tagline": "Set up a ClickUp webhook to monitor events.",
          "detailed": "Use this tool to create a webhook in ClickUp, enabling monitoring of events for a specific team. Useful for triggering actions or notifications based on certain events within a ClickUp team."
        },
        "return_annotation": "Confirmation of webhook setup in ClickUp for a team.",
        "arguments": [
          {
            "name": "workspace_id",
            "alternative_names": [
              "team_identifier",
              "workspace_identifier"
            ],
            "description": "The ID of the workspace where the webhook will be set up. Use this to specify the team context for monitoring.",
            "endpoint_argument_name": "team_id"
          },
          {
            "name": "webhook_url",
            "alternative_names": [
              "url_endpoint",
              "callback_url"
            ],
            "description": "The URL where the webhook will send POST requests. Must be reachable to receive event data.",
            "endpoint_argument_name": "endpoint"
          },
          {
            "name": "event_types",
            "alternative_names": [
              "webhook_event_types",
              "clickup_event_types"
            ],
            "description": "An array of event types to subscribe to, or use `*` to subscribe to all events. Refer to ClickUp documentation for available options.",
            "endpoint_argument_name": "events"
          },
          {
            "name": "space_identifier",
            "alternative_names": [
              "space_id_number",
              "workspace_space_id"
            ],
            "description": "The numeric ID of the space within a ClickUp workspace for which the webhook is set up.",
            "endpoint_argument_name": "space_id"
          },
          {
            "name": "folder_id",
            "alternative_names": [
              "clickup_folder_id",
              "workspace_folder_id"
            ],
            "description": "Specify the folder ID in ClickUp for which the webhook is to be created. It should be an integer value representing the folder.",
            "endpoint_argument_name": "folder_id"
          },
          {
            "name": "target_list_id",
            "alternative_names": [
              "list_identifier",
              "targeted_list_id"
            ],
            "description": "The ID of the list in ClickUp for which you want to set up a webhook.",
            "endpoint_argument_name": "list_id"
          },
          {
            "name": "specific_task_id",
            "alternative_names": [
              "task_identifier",
              "id_of_task"
            ],
            "description": "Unique identifier for a specific task to monitor. Leave empty if not targeting a specific task.",
            "endpoint_argument_name": "task_id"
          }
        ]
      },
      "method": "POST",
      "path": "/v2/team/{team_id}/webhook",
      "tags": [
        "Webhooks"
      ],
      "summary": "Create Webhook",
      "description": "Set up a webhook to monitor for events.<br> We do not have a dedicated IP address for webhooks. We use our domain name and dynamic addressing.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "team_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "Workspace ID"
            },
            "description": "Workspace ID",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "number"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "endpoint",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "events",
            "value_schema": {
              "val_type": "array",
              "inner_val_type": "string",
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "See [documentation](doc:webhooks#task-webhooks) for available event options. Use `*` to subscribe to all events."
            },
            "description": "See [documentation](doc:webhooks#task-webhooks) for available event options. Use `*` to subscribe to all events.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "array",
              "description": "See [documentation](doc:webhooks#task-webhooks) for available event options. Use `*` to subscribe to all events.",
              "items": {
                "type": "string"
              }
            },
            "schema_required": true
          },
          {
            "name": "space_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "folder_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "list_id",
            "value_schema": {
              "val_type": "integer",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "integer"
            },
            "schema_required": false
          },
          {
            "name": "task_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"You can subscribe to specific events, and one specific location per webhook. [Learn more](doc:webhooks).\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"CreateWebhookrequest\",\n        \"required\": [\n          \"endpoint\",\n          \"events\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"endpoint\": {\n            \"type\": \"string\"\n          },\n          \"events\": {\n            \"type\": \"array\",\n            \"description\": \"See [documentation](doc:webhooks#task-webhooks) for available event options. Use `*` to subscribe to all events.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"space_id\": {\n            \"type\": \"integer\"\n          },\n          \"folder_id\": {\n            \"type\": \"integer\"\n          },\n          \"list_id\": {\n            \"type\": \"integer\"\n          },\n          \"task_id\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"endpoint\": \"https://yourdomain.com/webhook\",\n            \"events\": [\n              \"taskCreated\",\n              \"taskUpdated\",\n              \"taskDeleted\",\n              \"taskPriorityUpdated\",\n              \"taskStatusUpdated\",\n              \"taskAssigneeUpdated\",\n              \"taskDueDateUpdated\",\n              \"taskTagUpdated\",\n              \"taskMoved\",\n              \"taskCommentPosted\",\n              \"taskCommentUpdated\",\n              \"taskTimeEstimateUpdated\",\n              \"taskTimeTrackedUpdated\",\n              \"listCreated\",\n              \"listUpdated\",\n              \"listDeleted\",\n              \"folderCreated\",\n              \"folderUpdated\",\n              \"folderDeleted\",\n              \"spaceCreated\",\n              \"spaceUpdated\",\n              \"spaceDeleted\",\n              \"goalCreated\",\n              \"goalUpdated\",\n              \"goalDeleted\",\n              \"keyResultCreated\",\n              \"keyResultUpdated\",\n              \"keyResultDeleted\"\n            ],\n            \"space_id\": 1234,\n            \"folder_id\": 5678,\n            \"list_id\": 9876,\n            \"task_id\": \"abc1234\"\n          }\n        ]\n      },\n      \"example\": {\n        \"endpoint\": \"https://yourdomain.com/webhook\",\n        \"events\": [\n          \"taskCreated\",\n          \"taskUpdated\",\n          \"taskDeleted\",\n          \"taskPriorityUpdated\",\n          \"taskStatusUpdated\",\n          \"taskAssigneeUpdated\",\n          \"taskDueDateUpdated\",\n          \"taskTagUpdated\",\n          \"taskMoved\",\n          \"taskCommentPosted\",\n          \"taskCommentUpdated\",\n          \"taskTimeEstimateUpdated\",\n          \"taskTimeTrackedUpdated\",\n          \"listCreated\",\n          \"listUpdated\",\n          \"listDeleted\",\n          \"folderCreated\",\n          \"folderUpdated\",\n          \"folderDeleted\",\n          \"spaceCreated\",\n          \"spaceUpdated\",\n          \"spaceDeleted\",\n          \"goalCreated\",\n          \"goalUpdated\",\n          \"goalDeleted\",\n          \"keyResultCreated\",\n          \"keyResultUpdated\",\n          \"keyResultDeleted\"\n        ],\n        \"space_id\": 1234,\n        \"folder_id\": 5678,\n        \"list_id\": 9876,\n        \"task_id\": \"abc1234\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "UpdateWebhook",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "update_clickup_webhook_events",
        "description": {
          "tagline": "Update a ClickUp webhook to modify monitored events.",
          "detailed": "Use this tool to update the events a ClickUp webhook monitors, allowing for changes to event tracking as needed."
        },
        "return_annotation": "Information about the updated webhook.",
        "arguments": [
          {
            "name": "webhook_identifier",
            "alternative_names": [
              "webhook_id_string",
              "webhook_uuid"
            ],
            "description": "The unique identifier for the webhook to be updated, formatted as a UUID.",
            "endpoint_argument_name": "webhook_id"
          },
          {
            "name": "webhook_endpoint_url",
            "alternative_names": [
              "url_for_webhook",
              "webhook_destination_url"
            ],
            "description": "The URL where the webhook should send POST requests for the events. Must be a valid and accessible URL.",
            "endpoint_argument_name": "endpoint"
          },
          {
            "name": "monitored_events",
            "alternative_names": [
              "webhook_events",
              "event_list"
            ],
            "description": "A comma-separated list of events for the webhook to monitor. Use valid event names as per ClickUp webhook documentation.",
            "endpoint_argument_name": "events"
          },
          {
            "name": "webhook_status",
            "alternative_names": [
              "status_of_webhook",
              "current_webhook_status"
            ],
            "description": "Specify the new status of the webhook. Use 'active' to enable or 'inactive' to disable it.",
            "endpoint_argument_name": "status"
          }
        ]
      },
      "method": "PUT",
      "path": "/v2/webhook/{webhook_id}",
      "tags": [
        "Webhooks"
      ],
      "summary": "Update Webhook",
      "description": "Update a webhook to change the events to be monitored.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webhook_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "e506-4a29-9d42-26e504e3435e (uuid)"
            },
            "description": "e506-4a29-9d42-26e504e3435e (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "endpoint",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "events",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          },
          {
            "name": "status",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string"
            },
            "schema_required": true
          }
        ]
      },
      "request_body_spec": "{\n  \"description\": \"To subscribe to specific events, pass an array of `events` that you want to subscribe to, or use the wildcard character `\\\"*\\\"` to subscribe to everything.\\\\\\n \\\\\\nIf you don't specify any events, all events will be sent to the webhook.\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"title\": \"UpdateWebhookrequest\",\n        \"required\": [\n          \"endpoint\",\n          \"events\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"endpoint\": {\n            \"type\": \"string\"\n          },\n          \"events\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        },\n        \"examples\": [\n          {\n            \"endpoint\": \"https://yourdomain.com/webhook\",\n            \"events\": \"*\",\n            \"status\": \"active\"\n          }\n        ]\n      },\n      \"example\": {\n        \"endpoint\": \"https://yourdomain.com/webhook\",\n        \"events\": \"*\",\n        \"status\": \"active\"\n      }\n    }\n  },\n  \"required\": true\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "DeleteWebhook",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "delete_webhook",
        "description": {
          "tagline": "Delete a webhook to stop event monitoring.",
          "detailed": "Use this tool to delete a webhook, which will stop monitoring events and locations associated with it. Useful for managing and updating your event tracking preferences."
        },
        "return_annotation": "Confirmation of webhook deletion.",
        "arguments": [
          {
            "name": "webhook_id",
            "alternative_names": [
              "webhook_identifier",
              "webhook_uuid"
            ],
            "description": "The unique identifier for the webhook to be deleted. Must be in UUID format.",
            "endpoint_argument_name": "webhook_id"
          }
        ]
      },
      "method": "DELETE",
      "path": "/v2/webhook/{webhook_id}",
      "tags": [
        "Webhooks"
      ],
      "summary": "Delete Webhook",
      "description": "Delete a webhook to stop monitoring the events and locations of the webhook.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "Authorization_Token"
      ],
      "parameters": {
        "query": [],
        "path": [
          {
            "name": "webhook_id",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "e506-4a29-9d42-26e504e3435e (uuid)"
            },
            "description": "e506-4a29-9d42-26e504e3435e (uuid)",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    }
  ],
  "security_scheme_key_selected": null,
  "security_scheme_selected": {}
}
