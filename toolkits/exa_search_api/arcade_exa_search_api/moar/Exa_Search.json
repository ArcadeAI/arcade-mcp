{
  "name": "Exa_Search",
  "spec_source": "openapi_spec",
  "token_for_http_testing": "",
  "package_name": "exa_search_api",
  "package_dir_path": "/Users/rb/arcade/arcade-ai/toolkits/exa_search_api/arcade_exa_search_api",
  "project_dir_path": "/Users/rb/arcade/arcade-ai/toolkits/exa_search_api",
  "arcade_new_cmd_executed": true,
  "api_endpoint_selection_customized": false,
  "api_endpoint_for_http_testing": "",
  "authorization_type": "api_key",
  "auth_provider_id": "",
  "where_to_provide_token": "unknown",
  "token_key_name": "",
  "token_value": "",
  "secrets": [
    {
      "arcade_key_name": "EXA_SEARCH_API_KEY",
      "service_key_name": "Authorization",
      "where_to_provide": "header",
      "formatted_value": "Bearer {authorization}"
    }
  ],
  "global_base_url": "https://api.exa.ai",
  "global_headers": {},
  "edit_operations": [],
  "uuid": "334d61ef-464c-416d-bc25-1de2d354feb4",
  "api_endpoints": [
    {
      "name": "search",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "exa_query_search",
        "description": {
          "tagline": "Perform a prompt-engineered search query to get relevant results.",
          "detailed": "Use this tool to execute a search with a specially crafted query using Exa's system, retrieving a list of relevant results. Optionally, include contents as part of the results."
        },
        "return_annotation": "List of relevant search results with optional contents.",
        "arguments": [
          {
            "name": "exa_query_request_body",
            "alternative_names": [
              "exa_search_payload",
              "exa_query_payload"
            ],
            "description": "A JSON object containing the prompt-engineered query details for the search.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/search",
      "tags": [],
      "summary": "Search",
      "description": "Perform a search with a Exa prompt-engineered query and retrieve a list of relevant results. Optionally get contents.",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "apikey"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {},
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "query": {
                      "type": "string",
                      "description": "The query string for the search.",
                      "example": "Latest developments in LLM capabilities"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of search. Neural uses an embeddings-based model, keyword is google-like SERP, and auto (default) intelligently combines the two. Fast uses streamlined versions of the neural and keyword models.",
                      "enum": [
                        "keyword",
                        "neural",
                        "fast",
                        "auto"
                      ],
                      "example": "auto"
                    },
                    "category": {
                      "type": "string",
                      "description": "A data category to focus on.",
                      "enum": [
                        "company",
                        "research paper",
                        "news",
                        "pdf",
                        "github",
                        "tweet",
                        "personal site",
                        "linkedin profile",
                        "financial report"
                      ],
                      "example": "research paper"
                    },
                    "userLocation": {
                      "type": "string",
                      "description": "The two-letter ISO country code of the user, e.g. US.",
                      "example": "US"
                    }
                  },
                  "required": [
                    "query"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "numResults": {
                      "type": "integer",
                      "description": "Number of results to return (up to thousands of results available for custom plans)",
                      "example": 10,
                      "minimum": 1,
                      "maximum": 100
                    },
                    "includeDomains": {
                      "type": "array",
                      "description": "List of domains to include in the search. If specified, results will only come from these domains.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "excludeDomains": {
                      "type": "array",
                      "description": "List of domains to exclude from search results. If specified, no results will be returned from these domains.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "startCrawlDate": {
                      "type": "string",
                      "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-01-01"
                    },
                    "endCrawlDate": {
                      "type": "string",
                      "description": "Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-12-31"
                    },
                    "startPublishedDate": {
                      "type": "string",
                      "description": "Only links with a published date after this will be returned. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-01-01"
                    },
                    "endPublishedDate": {
                      "type": "string",
                      "description": "Only links with a published date before this will be returned. Must be specified in ISO 8601 format.",
                      "format": "date-time",
                      "example": "2023-12-31"
                    },
                    "includeText": {
                      "type": "array",
                      "description": "List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "excludeText": {
                      "type": "array",
                      "description": "List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {},
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Formats the search results into a context string ready for LLMs.",
                          "example": true
                        },
                        {
                          "type": "object",
                          "description": "Formats the search results into a context string ready for LLMs.",
                          "properties": {
                            "maxCharacters": {
                              "type": "integer",
                              "description": "Maximum character limit.",
                              "example": 10000
                            }
                          }
                        }
                      ]
                    },
                    "contents": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "object",
                          "properties": {},
                          "oneOf": [
                            {
                              "type": "boolean",
                              "title": "Simple text retrieval",
                              "description": "If true, returns full page text with default settings. If false, disables text return."
                            },
                            {
                              "type": "object",
                              "title": "Advanced text options",
                              "description": "Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.",
                              "properties": {
                                "maxCharacters": {
                                  "type": "integer",
                                  "description": "Maximum character limit for the full page text. Useful for controlling response size and API costs.",
                                  "example": 1000
                                },
                                "includeHtmlTags": {
                                  "type": "boolean",
                                  "description": "Include HTML tags in the response, which can help LLMs understand text structure and formatting.",
                                  "example": false
                                }
                              }
                            }
                          ]
                        },
                        "highlights": {
                          "type": "object",
                          "description": "Text snippets the LLM identifies as most relevant from each page.",
                          "properties": {
                            "numSentences": {
                              "type": "integer",
                              "description": "The number of sentences to return for each snippet.",
                              "example": 1,
                              "minimum": 1
                            },
                            "highlightsPerUrl": {
                              "type": "integer",
                              "description": "The number of snippets to return for each result.",
                              "example": 1,
                              "minimum": 1
                            },
                            "query": {
                              "type": "string",
                              "description": "Custom query to direct the LLM's selection of highlights.",
                              "example": "Key advancements"
                            }
                          }
                        },
                        "summary": {
                          "type": "object",
                          "description": "Summary of the webpage",
                          "properties": {
                            "query": {
                              "type": "string",
                              "description": "Custom query for the LLM-generated summary.",
                              "example": "Main developments"
                            },
                            "schema": {
                              "type": "object",
                              "description": "JSON schema for structured output from summary. \nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\n",
                              "properties": {}
                            }
                          }
                        },
                        "livecrawl": {
                          "type": "string",
                          "description": "Options for livecrawling pages.\n'never': Disable livecrawling (default for neural search).\n'fallback': Livecrawl when cache is empty (default for keyword search).\n'always': Always livecrawl.\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\n",
                          "enum": [
                            "never",
                            "fallback",
                            "always",
                            "preferred"
                          ],
                          "example": "always"
                        },
                        "livecrawlTimeout": {
                          "type": "integer",
                          "description": "The timeout for livecrawling in milliseconds.",
                          "example": 1000
                        },
                        "subpages": {
                          "type": "integer",
                          "description": "The number of subpages to crawl. The actual number crawled may be limited by system constraints.",
                          "example": 1
                        },
                        "subpageTarget": {
                          "type": "object",
                          "description": "Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.",
                          "properties": {},
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          ]
                        },
                        "extras": {
                          "type": "object",
                          "description": "Extra parameters to pass.",
                          "properties": {
                            "links": {
                              "type": "integer",
                              "description": "Number of URLs to return from each webpage.",
                              "example": 1
                            },
                            "imageLinks": {
                              "type": "integer",
                              "description": "Number of images to return for each result.",
                              "example": 1
                            }
                          }
                        },
                        "context": {
                          "type": "object",
                          "properties": {},
                          "oneOf": [
                            {
                              "type": "boolean",
                              "description": "Formats the search resutls into a context string ready for LLMs.",
                              "example": true
                            },
                            {
                              "type": "object",
                              "description": "Formats the search resutls into a context string ready for LLMs.",
                              "properties": {
                                "maxCharacters": {
                                  "type": "integer",
                                  "description": "Maximum character limit.",
                                  "example": 10000
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"query\": {\n                \"type\": \"string\",\n                \"example\": \"Latest developments in LLM capabilities\",\n                \"description\": \"The query string for the search.\"\n              },\n              \"type\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"keyword\",\n                  \"neural\",\n                  \"fast\",\n                  \"auto\"\n                ],\n                \"description\": \"The type of search. Neural uses an embeddings-based model, keyword is google-like SERP, and auto (default) intelligently combines the two. Fast uses streamlined versions of the neural and keyword models.\",\n                \"example\": \"auto\",\n                \"default\": \"auto\"\n              },\n              \"category\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"company\",\n                  \"research paper\",\n                  \"news\",\n                  \"pdf\",\n                  \"github\",\n                  \"tweet\",\n                  \"personal site\",\n                  \"linkedin profile\",\n                  \"financial report\"\n                ],\n                \"description\": \"A data category to focus on.\",\n                \"example\": \"research paper\"\n              },\n              \"userLocation\": {\n                \"type\": \"string\",\n                \"description\": \"The two-letter ISO country code of the user, e.g. US.\",\n                \"example\": \"US\"\n              }\n            },\n            \"required\": [\n              \"query\"\n            ]\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"numResults\": {\n                \"type\": \"integer\",\n                \"maximum\": 100,\n                \"default\": 10,\n                \"minimum\": 1,\n                \"description\": \"Number of results to return (up to thousands of results available for custom plans)\",\n                \"example\": 10\n              },\n              \"includeDomains\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of domains to include in the search. If specified, results will only come from these domains.\",\n                \"example\": [\n                  \"arxiv.org\",\n                  \"paperswithcode.com\"\n                ]\n              },\n              \"excludeDomains\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of domains to exclude from search results. If specified, no results will be returned from these domains.\"\n              },\n              \"startCrawlDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled after this date. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-01-01\"\n              },\n              \"endCrawlDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Crawl date refers to the date that Exa discovered a link. Results will include links that were crawled before this date. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-12-31\"\n              },\n              \"startPublishedDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Only links with a published date after this will be returned. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-01-01\"\n              },\n              \"endPublishedDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\",\n                \"description\": \"Only links with a published date before this will be returned. Must be specified in ISO 8601 format.\",\n                \"example\": \"2023-12-31\"\n              },\n              \"includeText\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of strings that must be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words.\",\n                \"example\": [\n                  \"large language model\"\n                ]\n              },\n              \"excludeText\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"description\": \"List of strings that must not be present in webpage text of results. Currently, only 1 string is supported, of up to 5 words. Checks from the first 1000 words of the webpage text.\",\n                \"example\": [\n                  \"course\"\n                ]\n              },\n              \"context\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"boolean\",\n                    \"description\": \"Formats the search results into a context string ready for LLMs.\",\n                    \"example\": true\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"Formats the search results into a context string ready for LLMs.\",\n                    \"properties\": {\n                      \"maxCharacters\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum character limit.\",\n                        \"example\": 10000\n                      }\n                    }\n                  }\n                ]\n              },\n              \"contents\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"text\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"boolean\",\n                        \"title\": \"Simple text retrieval\",\n                        \"description\": \"If true, returns full page text with default settings. If false, disables text return.\"\n                      },\n                      {\n                        \"type\": \"object\",\n                        \"title\": \"Advanced text options\",\n                        \"description\": \"Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.\",\n                        \"properties\": {\n                          \"maxCharacters\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Maximum character limit for the full page text. Useful for controlling response size and API costs.\",\n                            \"example\": 1000\n                          },\n                          \"includeHtmlTags\": {\n                            \"type\": \"boolean\",\n                            \"default\": false,\n                            \"description\": \"Include HTML tags in the response, which can help LLMs understand text structure and formatting.\",\n                            \"example\": false\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  \"highlights\": {\n                    \"type\": \"object\",\n                    \"description\": \"Text snippets the LLM identifies as most relevant from each page.\",\n                    \"properties\": {\n                      \"numSentences\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 1,\n                        \"description\": \"The number of sentences to return for each snippet.\",\n                        \"example\": 1\n                      },\n                      \"highlightsPerUrl\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 1,\n                        \"description\": \"The number of snippets to return for each result.\",\n                        \"example\": 1\n                      },\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Custom query to direct the LLM's selection of highlights.\",\n                        \"example\": \"Key advancements\"\n                      }\n                    }\n                  },\n                  \"summary\": {\n                    \"type\": \"object\",\n                    \"description\": \"Summary of the webpage\",\n                    \"properties\": {\n                      \"query\": {\n                        \"type\": \"string\",\n                        \"description\": \"Custom query for the LLM-generated summary.\",\n                        \"example\": \"Main developments\"\n                      },\n                      \"schema\": {\n                        \"type\": \"object\",\n                        \"description\": \"JSON schema for structured output from summary. \\nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\\n\",\n                        \"example\": {\n                          \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                          \"title\": \"Title\",\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"Property 1\": {\n                              \"type\": \"string\",\n                              \"description\": \"Description\"\n                            },\n                            \"Property 2\": {\n                              \"type\": \"string\",\n                              \"enum\": [\n                                \"option 1\",\n                                \"option 2\",\n                                \"option 3\"\n                              ],\n                              \"description\": \"Description\"\n                            }\n                          },\n                          \"required\": [\n                            \"Property 1\"\n                          ]\n                        }\n                      }\n                    }\n                  },\n                  \"livecrawl\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"never\",\n                      \"fallback\",\n                      \"always\",\n                      \"preferred\"\n                    ],\n                    \"description\": \"Options for livecrawling pages.\\n'never': Disable livecrawling (default for neural search).\\n'fallback': Livecrawl when cache is empty (default for keyword search).\\n'always': Always livecrawl.\\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\\n\",\n                    \"example\": \"always\"\n                  },\n                  \"livecrawlTimeout\": {\n                    \"type\": \"integer\",\n                    \"default\": 10000,\n                    \"description\": \"The timeout for livecrawling in milliseconds.\",\n                    \"example\": 1000\n                  },\n                  \"subpages\": {\n                    \"type\": \"integer\",\n                    \"default\": 0,\n                    \"description\": \"The number of subpages to crawl. The actual number crawled may be limited by system constraints.\",\n                    \"example\": 1\n                  },\n                  \"subpageTarget\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"string\"\n                      },\n                      {\n                        \"type\": \"array\",\n                        \"items\": {\n                          \"type\": \"string\"\n                        }\n                      }\n                    ],\n                    \"description\": \"Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.\",\n                    \"example\": \"sources\"\n                  },\n                  \"extras\": {\n                    \"type\": \"object\",\n                    \"description\": \"Extra parameters to pass.\",\n                    \"properties\": {\n                      \"links\": {\n                        \"type\": \"integer\",\n                        \"default\": 0,\n                        \"description\": \"Number of URLs to return from each webpage.\",\n                        \"example\": 1\n                      },\n                      \"imageLinks\": {\n                        \"type\": \"integer\",\n                        \"default\": 0,\n                        \"description\": \"Number of images to return for each result.\",\n                        \"example\": 1\n                      }\n                    }\n                  },\n                  \"context\": {\n                    \"oneOf\": [\n                      {\n                        \"type\": \"boolean\",\n                        \"description\": \"Formats the search resutls into a context string ready for LLMs.\",\n                        \"example\": true\n                      },\n                      {\n                        \"type\": \"object\",\n                        \"description\": \"Formats the search resutls into a context string ready for LLMs.\",\n                        \"properties\": {\n                          \"maxCharacters\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Maximum character limit.\",\n                            \"example\": 10000\n                          }\n                        }\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "findSimilar",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": null,
      "method": "POST",
      "path": "/findSimilar",
      "tags": [],
      "summary": null,
      "description": null,
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "getContents",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "get_contents",
        "description": {
          "tagline": "Fetch contents from the Exa_Search service.",
          "detailed": "This tool retrieves various types of contents from the Exa_Search service, when content information is needed."
        },
        "return_annotation": "Provides contents retrieved from the service.",
        "arguments": [
          {
            "name": "content_request_body",
            "alternative_names": [
              "content_parameters",
              "content_query"
            ],
            "description": "A JSON object containing parameters for the content retrieval request. Include necessary filters and constraints as needed.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/contents",
      "tags": [],
      "summary": "Get Contents",
      "description": "",
      "requires_security": true,
      "oauth_scopes": [],
      "security_schemes": [
        "apikey"
      ],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "object",
              "properties": {},
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "urls": {
                      "type": "array",
                      "description": "Array of URLs to crawl (backwards compatible with 'ids' parameter).",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ids": {
                      "type": "array",
                      "description": "Deprecated - use 'urls' instead. Array of document IDs obtained from searches.",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "urls"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {},
                      "oneOf": [
                        {
                          "type": "boolean",
                          "title": "Simple text retrieval",
                          "description": "If true, returns full page text with default settings. If false, disables text return."
                        },
                        {
                          "type": "object",
                          "title": "Advanced text options",
                          "description": "Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.",
                          "properties": {
                            "maxCharacters": {
                              "type": "integer",
                              "description": "Maximum character limit for the full page text. Useful for controlling response size and API costs.",
                              "example": 1000
                            },
                            "includeHtmlTags": {
                              "type": "boolean",
                              "description": "Include HTML tags in the response, which can help LLMs understand text structure and formatting.",
                              "example": false
                            }
                          }
                        }
                      ]
                    },
                    "highlights": {
                      "type": "object",
                      "description": "Text snippets the LLM identifies as most relevant from each page.",
                      "properties": {
                        "numSentences": {
                          "type": "integer",
                          "description": "The number of sentences to return for each snippet.",
                          "example": 1,
                          "minimum": 1
                        },
                        "highlightsPerUrl": {
                          "type": "integer",
                          "description": "The number of snippets to return for each result.",
                          "example": 1,
                          "minimum": 1
                        },
                        "query": {
                          "type": "string",
                          "description": "Custom query to direct the LLM's selection of highlights.",
                          "example": "Key advancements"
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "description": "Summary of the webpage",
                      "properties": {
                        "query": {
                          "type": "string",
                          "description": "Custom query for the LLM-generated summary.",
                          "example": "Main developments"
                        },
                        "schema": {
                          "type": "object",
                          "description": "JSON schema for structured output from summary. \nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\n",
                          "properties": {}
                        }
                      }
                    },
                    "livecrawl": {
                      "type": "string",
                      "description": "Options for livecrawling pages.\n'never': Disable livecrawling (default for neural search).\n'fallback': Livecrawl when cache is empty (default for keyword search).\n'always': Always livecrawl.\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\n",
                      "enum": [
                        "never",
                        "fallback",
                        "always",
                        "preferred"
                      ],
                      "example": "always"
                    },
                    "livecrawlTimeout": {
                      "type": "integer",
                      "description": "The timeout for livecrawling in milliseconds.",
                      "example": 1000
                    },
                    "subpages": {
                      "type": "integer",
                      "description": "The number of subpages to crawl. The actual number crawled may be limited by system constraints.",
                      "example": 1
                    },
                    "subpageTarget": {
                      "type": "object",
                      "description": "Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.",
                      "properties": {},
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      ]
                    },
                    "extras": {
                      "type": "object",
                      "description": "Extra parameters to pass.",
                      "properties": {
                        "links": {
                          "type": "integer",
                          "description": "Number of URLs to return from each webpage.",
                          "example": 1
                        },
                        "imageLinks": {
                          "type": "integer",
                          "description": "Number of images to return for each result.",
                          "example": 1
                        }
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {},
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Formats the search resutls into a context string ready for LLMs.",
                          "example": true
                        },
                        {
                          "type": "object",
                          "description": "Formats the search resutls into a context string ready for LLMs.",
                          "properties": {
                            "maxCharacters": {
                              "type": "integer",
                              "description": "Maximum character limit.",
                              "example": 10000
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"allOf\": [\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"urls\": {\n                \"type\": \"array\",\n                \"description\": \"Array of URLs to crawl (backwards compatible with 'ids' parameter).\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"example\": [\n                  \"https://arxiv.org/pdf/2307.06435\"\n                ]\n              },\n              \"ids\": {\n                \"type\": \"array\",\n                \"deprecated\": true,\n                \"description\": \"Deprecated - use 'urls' instead. Array of document IDs obtained from searches.\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"example\": [\n                  \"https://arxiv.org/pdf/2307.06435\"\n                ]\n              }\n            },\n            \"required\": [\n              \"urls\"\n            ]\n          },\n          {\n            \"type\": \"object\",\n            \"properties\": {\n              \"text\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"boolean\",\n                    \"title\": \"Simple text retrieval\",\n                    \"description\": \"If true, returns full page text with default settings. If false, disables text return.\"\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"title\": \"Advanced text options\",\n                    \"description\": \"Advanced options for controlling text extraction. Use this when you need to limit text length or include HTML structure.\",\n                    \"properties\": {\n                      \"maxCharacters\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum character limit for the full page text. Useful for controlling response size and API costs.\",\n                        \"example\": 1000\n                      },\n                      \"includeHtmlTags\": {\n                        \"type\": \"boolean\",\n                        \"default\": false,\n                        \"description\": \"Include HTML tags in the response, which can help LLMs understand text structure and formatting.\",\n                        \"example\": false\n                      }\n                    }\n                  }\n                ]\n              },\n              \"highlights\": {\n                \"type\": \"object\",\n                \"description\": \"Text snippets the LLM identifies as most relevant from each page.\",\n                \"properties\": {\n                  \"numSentences\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"description\": \"The number of sentences to return for each snippet.\",\n                    \"example\": 1\n                  },\n                  \"highlightsPerUrl\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1,\n                    \"description\": \"The number of snippets to return for each result.\",\n                    \"example\": 1\n                  },\n                  \"query\": {\n                    \"type\": \"string\",\n                    \"description\": \"Custom query to direct the LLM's selection of highlights.\",\n                    \"example\": \"Key advancements\"\n                  }\n                }\n              },\n              \"summary\": {\n                \"type\": \"object\",\n                \"description\": \"Summary of the webpage\",\n                \"properties\": {\n                  \"query\": {\n                    \"type\": \"string\",\n                    \"description\": \"Custom query for the LLM-generated summary.\",\n                    \"example\": \"Main developments\"\n                  },\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"description\": \"JSON schema for structured output from summary. \\nSee https://json-schema.org/overview/what-is-jsonschema for JSON Schema documentation.\\n\",\n                    \"example\": {\n                      \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n                      \"title\": \"Title\",\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"Property 1\": {\n                          \"type\": \"string\",\n                          \"description\": \"Description\"\n                        },\n                        \"Property 2\": {\n                          \"type\": \"string\",\n                          \"enum\": [\n                            \"option 1\",\n                            \"option 2\",\n                            \"option 3\"\n                          ],\n                          \"description\": \"Description\"\n                        }\n                      },\n                      \"required\": [\n                        \"Property 1\"\n                      ]\n                    }\n                  }\n                }\n              },\n              \"livecrawl\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"never\",\n                  \"fallback\",\n                  \"always\",\n                  \"preferred\"\n                ],\n                \"description\": \"Options for livecrawling pages.\\n'never': Disable livecrawling (default for neural search).\\n'fallback': Livecrawl when cache is empty (default for keyword search).\\n'always': Always livecrawl.\\n'preferred': Always try to livecrawl, but fall back to cache if crawling fails.\\n\",\n                \"example\": \"always\"\n              },\n              \"livecrawlTimeout\": {\n                \"type\": \"integer\",\n                \"default\": 10000,\n                \"description\": \"The timeout for livecrawling in milliseconds.\",\n                \"example\": 1000\n              },\n              \"subpages\": {\n                \"type\": \"integer\",\n                \"default\": 0,\n                \"description\": \"The number of subpages to crawl. The actual number crawled may be limited by system constraints.\",\n                \"example\": 1\n              },\n              \"subpageTarget\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"string\"\n                  },\n                  {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                ],\n                \"description\": \"Keyword to find specific subpages of search results. Can be a single string or an array of strings, comma delimited.\",\n                \"example\": \"sources\"\n              },\n              \"extras\": {\n                \"type\": \"object\",\n                \"description\": \"Extra parameters to pass.\",\n                \"properties\": {\n                  \"links\": {\n                    \"type\": \"integer\",\n                    \"default\": 0,\n                    \"description\": \"Number of URLs to return from each webpage.\",\n                    \"example\": 1\n                  },\n                  \"imageLinks\": {\n                    \"type\": \"integer\",\n                    \"default\": 0,\n                    \"description\": \"Number of images to return for each result.\",\n                    \"example\": 1\n                  }\n                }\n              },\n              \"context\": {\n                \"oneOf\": [\n                  {\n                    \"type\": \"boolean\",\n                    \"description\": \"Formats the search resutls into a context string ready for LLMs.\",\n                    \"example\": true\n                  },\n                  {\n                    \"type\": \"object\",\n                    \"description\": \"Formats the search resutls into a context string ready for LLMs.\",\n                    \"properties\": {\n                      \"maxCharacters\": {\n                        \"type\": \"integer\",\n                        \"description\": \"Maximum character limit.\",\n                        \"example\": 10000\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": true,
      "validate_request_body_schema": true,
      "use_flatten_mode": false
    },
    {
      "name": "answer",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "search_answer",
        "description": {
          "tagline": "Generates answers or summaries based on search queries.",
          "detailed": "This tool performs a search and provides either a direct answer or a detailed summary with citations, depending on the type of query input."
        },
        "return_annotation": "A direct answer or a detailed summary with citations.",
        "arguments": [
          {
            "name": "search_query",
            "alternative_names": [
              "query_input",
              "question_input"
            ],
            "description": "The question or query to generate an answer or summary for.",
            "endpoint_argument_name": "query"
          },
          {
            "name": "stream_response",
            "alternative_names": [
              "enable_streaming",
              "use_streaming"
            ],
            "description": "If true, return the response as a server-sent events (SSS) stream.",
            "endpoint_argument_name": "stream"
          },
          {
            "name": "include_full_text_content",
            "alternative_names": [
              "full_text_response",
              "detailed_text_content"
            ],
            "description": "If true, include full text content in the search results.",
            "endpoint_argument_name": "text"
          }
        ]
      },
      "method": "POST",
      "path": "/answer",
      "tags": [],
      "summary": "Generate an answer from search results",
      "description": "Performs a search based on the query and generates either a direct answer or a detailed summary with citations, depending on the query type.\n",
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "query",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The question or query to answer."
            },
            "description": "The question or query to answer.",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "string",
              "description": "The question or query to answer.",
              "example": "What is the latest valuation of SpaceX?"
            },
            "schema_required": true
          },
          {
            "name": "stream",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If true, the response is returned as a server-sent events (SSS) stream."
            },
            "description": "If true, the response is returned as a server-sent events (SSS) stream.",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": "If true, the response is returned as a server-sent events (SSS) stream."
            },
            "schema_required": false
          },
          {
            "name": "text",
            "value_schema": {
              "val_type": "boolean",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "If true, the response includes full text content in the search results"
            },
            "description": "If true, the response includes full text content in the search results",
            "required": false,
            "deprecated": false,
            "default": false,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": "boolean",
              "description": "If true, the response includes full text content in the search results"
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"query\"\n        ],\n        \"properties\": {\n          \"query\": {\n            \"type\": \"string\",\n            \"description\": \"The question or query to answer.\",\n            \"example\": \"What is the latest valuation of SpaceX?\",\n            \"minLength\": 1\n          },\n          \"stream\": {\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"description\": \"If true, the response is returned as a server-sent events (SSS) stream.\"\n          },\n          \"text\": {\n            \"type\": \"boolean\",\n            \"default\": false,\n            \"description\": \"If true, the response includes full text content in the search results\"\n          }\n        }\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": true
    },
    {
      "name": "ResearchController_listResearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "list_research_requests",
        "description": {
          "tagline": "Retrieve a paginated list of research requests.",
          "detailed": "Call this tool to obtain a list of research requests, returned in a paginated format for easier navigation."
        },
        "return_annotation": "A paginated list of research requests.",
        "arguments": [
          {
            "name": "pagination_cursor",
            "alternative_names": [
              "results_cursor",
              "page_cursor"
            ],
            "description": "The cursor used to paginate through the research results list.",
            "endpoint_argument_name": "cursor"
          },
          {
            "name": "results_limit",
            "alternative_names": [
              "max_results",
              "return_count"
            ],
            "description": "The maximum number of research results to return in a single call. Use for pagination control.",
            "endpoint_argument_name": "limit"
          }
        ]
      },
      "method": "GET",
      "path": "/research/v1",
      "tags": [
        "Research"
      ],
      "summary": "List research requests",
      "description": "Get a paginated list of research requests",
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [
          {
            "name": "cursor",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The cursor to paginate through the results"
            },
            "description": "The cursor to paginate through the results",
            "required": false,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "limit",
            "value_schema": {
              "val_type": "number",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": "The number of results to return"
            },
            "description": "The number of results to return",
            "required": false,
            "deprecated": false,
            "default": 10,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 50
            },
            "schema_required": false
          }
        ],
        "path": [],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "ResearchController_createResearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "create_research_request",
        "description": {
          "tagline": "Initiate a new research request through Exa Search.",
          "detailed": "Use this tool to create a new research request, enabling users to initiate research tasks via the Exa Search service."
        },
        "return_annotation": "Confirmation of a new research request creation.",
        "arguments": [
          {
            "name": "research_request_details",
            "alternative_names": [
              "research_request_info",
              "research_request_data"
            ],
            "description": "JSON object containing details of the research request to be created.",
            "endpoint_argument_name": "requestBody"
          }
        ]
      },
      "method": "POST",
      "path": "/research/v1",
      "tags": [
        "Research"
      ],
      "summary": "Create a new research request",
      "description": "",
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [],
        "path": [],
        "header": [],
        "cookie": [],
        "body": [
          {
            "name": "requestBody",
            "value_schema": {
              "val_type": "json",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "body",
            "content_type": "application/json",
            "json_schema": {
              "type": [
                "object"
              ]
            },
            "schema_required": false
          }
        ]
      },
      "request_body_spec": "{\n  \"required\": true,\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": [\n          \"object\"\n        ],\n        \"properties\": {\n          \"model\": {\n            \"default\": \"exa-research\",\n            \"type\": [\n              \"string\"\n            ],\n            \"enum\": [\n              \"exa-research\",\n              \"exa-research-pro\"\n            ]\n          },\n          \"instructions\": {\n            \"type\": [\n              \"string\"\n            ],\n            \"maxLength\": 4096,\n            \"description\": \"Instructions for what research should be conducted\"\n          },\n          \"outputSchema\": {\n            \"type\": [\n              \"object\"\n            ],\n            \"additionalProperties\": {}\n          }\n        },\n        \"required\": [\n          \"instructions\"\n        ],\n        \"examples\": [\n          {\n            \"model\": \"exa-research\",\n            \"instructions\": \"What species of ant are similar to honeypot ants?\"\n          }\n        ]\n      }\n    }\n  }\n}",
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    },
    {
      "name": "ResearchController_getResearch",
      "selected_for_wrapping": false,
      "spec_built": true,
      "wrap_finished": true,
      "should_skip": false,
      "skip_reason": null,
      "wrapper_tool": {
        "name": "fetch_research_by_id",
        "description": {
          "tagline": "Retrieve detailed research information by ID.",
          "detailed": "Use this tool to get detailed information about a specific research using its ID. For real-time updates, append '?stream=true' to the request."
        },
        "return_annotation": "Research details for the given ID.",
        "arguments": [
          {
            "name": "enable_real_time_streaming",
            "alternative_names": [
              "real_time_updates",
              "sse_streaming"
            ],
            "description": "Set to 'true' for real-time SSE updates of the research data.",
            "endpoint_argument_name": "stream"
          },
          {
            "name": "event_type",
            "alternative_names": [
              "event_category",
              "event_filter"
            ],
            "description": "Specify the type of event you wish to receive updates for. It should be a string value indicating a specific event or category.",
            "endpoint_argument_name": "events"
          },
          {
            "name": "research_id",
            "alternative_names": [
              "research_identifier",
              "research_id_string"
            ],
            "description": "The unique identifier for the research item to retrieve details.",
            "endpoint_argument_name": "researchId"
          }
        ]
      },
      "method": "GET",
      "path": "/research/v1/{researchId}",
      "tags": [
        "Research"
      ],
      "summary": "Get a research request by id",
      "description": "Retrieve research by ID. Add ?stream=true for real-time SSE updates.",
      "requires_security": false,
      "oauth_scopes": [],
      "security_schemes": [],
      "parameters": {
        "query": [
          {
            "name": "stream",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          },
          {
            "name": "events",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "query",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "path": [
          {
            "name": "researchId",
            "value_schema": {
              "val_type": "string",
              "inner_val_type": null,
              "enum": null,
              "properties": null,
              "inner_properties": null,
              "description": ""
            },
            "description": "",
            "required": true,
            "deprecated": false,
            "default": null,
            "location": "path",
            "content_type": null,
            "json_schema": {
              "type": "string"
            },
            "schema_required": false
          }
        ],
        "header": [],
        "cookie": [],
        "body": []
      },
      "request_body_spec": null,
      "use_request_body_schema_mode": false,
      "validate_request_body_schema": false,
      "use_flatten_mode": false
    }
  ],
  "security_scheme_key_selected": null,
  "security_scheme_selected": {}
}
