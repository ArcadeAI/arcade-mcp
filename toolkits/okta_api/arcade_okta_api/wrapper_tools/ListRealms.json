{
  "name": "ListRealms",
  "fully_qualified_name": "OktaApi.ListRealms@0.1.0",
  "description": "Retrieve a list of all Realms available.\n\nUse this tool to obtain a comprehensive list of all Realms from the service, providing essential information about the Realms configuration and availability.",
  "toolkit": {
    "name": "ArcadeOktaApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "results_limit",
        "required": false,
        "description": "Specifies the number of results to return. Defaults to 10 when `search` is used.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the number of results returned. Defaults to 10 if `search` is provided."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "pagination_cursor",
        "required": false,
        "description": "The opaque string cursor for pagination, obtained from the `Link` response header to specify the current location in the list.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The cursor to use for pagination. It is an opaque string that specifies your current location in the list and is obtained from the `Link` response header. See [Pagination](https://developer.okta.com/docs/api/#pagination)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "after"
      },
      {
        "name": "search_expression",
        "required": false,
        "description": "Filter realms using the 'co' operator with 'profile.name'. Only supports searching by 'profile.name'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Searches for realms with a supported filtering expression for most properties.\n\nSearches for realms can be filtered by the contains (`co`) operator. You can only use `co` with the `profile.name` property. See [Operators](https://developer.okta.com/docs/api/#operators)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "search"
      },
      {
        "name": "sort_by_field",
        "required": false,
        "description": "Specifies the field to sort the search results by. Only applicable if `search` is used.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the field to sort by and can be any single property (for search queries only)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sortBy"
      },
      {
        "name": "sort_order_for_search",
        "required": false,
        "description": "Specifies the sorting order as 'asc' or 'desc' when search queries are used. Ignored if 'sort_by' isn't present.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the sort order: `asc` or `desc` (for search queries only). This parameter is ignored if `sortBy` isn't present."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "sortOrder"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'listRealms'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-okta",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "okta.realms.read"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the okta API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://{yourOktaDomain}/api/v1/realms",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "limit",
        "tool_parameter_name": "results_limit",
        "description": "Specifies the number of results returned. Defaults to 10 if `search` is provided.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the number of results returned. Defaults to 10 if `search` is provided."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "after",
        "tool_parameter_name": "pagination_cursor",
        "description": "The cursor to use for pagination. It is an opaque string that specifies your current location in the list and is obtained from the `Link` response header. See [Pagination](https://developer.okta.com/docs/api/#pagination).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "The cursor to use for pagination. It is an opaque string that specifies your current location in the list and is obtained from the `Link` response header. See [Pagination](https://developer.okta.com/docs/api/#pagination)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "search",
        "tool_parameter_name": "search_expression",
        "description": "Searches for realms with a supported filtering expression for most properties.\n\nSearches for realms can be filtered by the contains (`co`) operator. You can only use `co` with the `profile.name` property. See [Operators](https://developer.okta.com/docs/api/#operators).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Searches for realms with a supported filtering expression for most properties.\n\nSearches for realms can be filtered by the contains (`co`) operator. You can only use `co` with the `profile.name` property. See [Operators](https://developer.okta.com/docs/api/#operators)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "sortBy",
        "tool_parameter_name": "sort_by_field",
        "description": "Specifies the field to sort by and can be any single property (for search queries only)",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the field to sort by and can be any single property (for search queries only)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "sortOrder",
        "tool_parameter_name": "sort_order_for_search",
        "description": "Specifies the sort order: `asc` or `desc` (for search queries only). This parameter is ignored if `sortBy` isn't present.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "Specifies the sort order: `asc` or `desc` (for search queries only). This parameter is ignored if `sortBy` isn't present."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ]
  }
}
