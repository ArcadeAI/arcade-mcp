{
  "name": "ListAllDevices",
  "fully_qualified_name": "OktaApi.ListAllDevices@0.1.0",
  "description": "Fetches a paginated list of devices with optional search criteria.\n\nThis tool retrieves a list of all devices with support for pagination. It allows specifying search criteria to filter devices based on properties using SCIM filter specifications. It's important to note that search results are not suitable for critical flows due to potential data staleness. This tool is useful for querying device information, but not for operations needing real-time accuracy.",
  "toolkit": {
    "name": "ArcadeOktaApi",
    "description": null,
    "version": "0.1.0"
  },
  "input": {
    "parameters": [
      {
        "name": "pagination_cursor",
        "required": false,
        "description": "A string used to paginate and retrieve the next set of results. Use this from the previous response to access more data.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "after"
      },
      {
        "name": "device_list_limit",
        "required": false,
        "description": "Maximum number of devices to return. It's recommended to set this at 20.",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A limit on the number of objects to return (recommend `20`)"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "limit"
      },
      {
        "name": "scim_filter_expression",
        "required": false,
        "description": "A SCIM filter expression to filter devices based on profile, id, status, or lastUpdated properties. Supports 'co' operator with specific attributes like profile.displayName, profile.serialNumber, etc.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A SCIM filter expression that filters the results. Searches include all device `profile` properties and the device `id`, `status`, and `lastUpdated` properties.\n\nSearches for devices can be filtered by the contains (`co`) operator. You can only use `co` with these select device profile attributes: `profile.displayName`, `profile.serialNumber`, `profile.imei`, `profile.meid`, `profile.udid`, and `profile.sid`. See [Operators](https://developer.okta.com/docs/api/#operators)."
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "search"
      },
      {
        "name": "include_user_details_and_management_status",
        "required": false,
        "description": "Specify whether to include associated user details and management status in the `_embedded` attribute. Options are 'user' or 'userSummary'.",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "user",
            "userSummary"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Includes associated user details and management status for the device in the `_embedded` attribute"
        },
        "inferrable": true,
        "http_endpoint_parameter_name": "expand"
      }
    ]
  },
  "output": {
    "description": "Response from the API endpoint 'listDevices'.",
    "available_modes": [
      "value",
      "error",
      "null"
    ],
    "value_schema": {
      "val_type": "json",
      "inner_val_type": null,
      "enum": null,
      "properties": null,
      "inner_properties": null,
      "description": null
    }
  },
  "requirements": {
    "authorization": {
      "provider_id": "arcade-okta",
      "provider_type": "oauth2",
      "id": null,
      "oauth2": {
        "scopes": [
          "okta.devices.read"
        ]
      }
    },
    "secrets": null,
    "metadata": null
  },
  "deprecation_message": null,
  "metadata": {
    "object_type": "api_wrapper_tool",
    "version": "1.0.0",
    "description": "Tools that enable LLMs to interact directly with the okta API."
  },
  "http_endpoint": {
    "metadata": {
      "object_type": "http_endpoint",
      "version": "1.0.0",
      "description": ""
    },
    "url": "https://{yourOktaDomain}/api/v1/devices",
    "http_method": "GET",
    "headers": {},
    "parameters": [
      {
        "name": "after",
        "tool_parameter_name": "pagination_cursor",
        "description": "",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": ""
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "limit",
        "tool_parameter_name": "device_list_limit",
        "description": "A limit on the number of objects to return (recommend `20`)",
        "value_schema": {
          "val_type": "integer",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A limit on the number of objects to return (recommend `20`)"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "search",
        "tool_parameter_name": "scim_filter_expression",
        "description": "A SCIM filter expression that filters the results. Searches include all device `profile` properties and the device `id`, `status`, and `lastUpdated` properties.\n\nSearches for devices can be filtered by the contains (`co`) operator. You can only use `co` with these select device profile attributes: `profile.displayName`, `profile.serialNumber`, `profile.imei`, `profile.meid`, `profile.udid`, and `profile.sid`. See [Operators](https://developer.okta.com/docs/api/#operators).",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": null,
          "properties": null,
          "inner_properties": null,
          "description": "A SCIM filter expression that filters the results. Searches include all device `profile` properties and the device `id`, `status`, and `lastUpdated` properties.\n\nSearches for devices can be filtered by the contains (`co`) operator. You can only use `co` with these select device profile attributes: `profile.displayName`, `profile.serialNumber`, `profile.imei`, `profile.meid`, `profile.udid`, and `profile.sid`. See [Operators](https://developer.okta.com/docs/api/#operators)."
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      },
      {
        "name": "expand",
        "tool_parameter_name": "include_user_details_and_management_status",
        "description": "Includes associated user details and management status for the device in the `_embedded` attribute",
        "value_schema": {
          "val_type": "string",
          "inner_val_type": null,
          "enum": [
            "user",
            "userSummary"
          ],
          "properties": null,
          "inner_properties": null,
          "description": "Includes associated user details and management status for the device in the `_embedded` attribute"
        },
        "accepted_as": "query",
        "required": false,
        "deprecated": false,
        "documentation_urls": []
      }
    ],
    "documentation_urls": [],
    "secrets": [
      {
        "arcade_key": "auth_token",
        "parameter_name": "Authorization",
        "accepted_as": "header",
        "formatted_value": "Bearer {authorization}",
        "description": "The OAuth token to use for authentication.",
        "is_auth_token": true
      }
    ]
  }
}
